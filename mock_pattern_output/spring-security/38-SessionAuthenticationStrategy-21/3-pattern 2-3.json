[
  {
    "variableName": "strategy",
    "variableType": "SessionAuthenticationStrategy",
    "mockedClass": "SessionAuthenticationStrategy",
    "isReuseableMock": false,
    "mockPattern": "Creation:\n\u2014 Local Mock Creation in Test Case\n\nStubbing:\n\u2014 None\n\nVerification:\n\u2014 None",
    "classContext": {
      "packageName": "org.springframework.security.web.session",
      "filePath": "C:\\java tool\\Spring\\spring-security\\web\\src\\test\\java\\org\\springframework\\security\\web\\session\\SessionManagementFilterTests.java",
      "className": "SessionManagementFilterTests"
    },
    "statements": [
      {
        "type": "DECLARATION",
        "code": "// repo will return false to containsContext()\r\nSessionAuthenticationStrategy strategy = mock(SessionAuthenticationStrategy.class);",
        "line": 117,
        "locate": "Test Case",
        "locationContext": {
          "methodName": "strategyFailureInvokesFailureHandler",
          "methodAnnotations": [
            "@Test"
          ]
        }
      }
    ],
    "pattern_id": 2
  },
  {
    "variableName": "strategy",
    "variableType": "SessionAuthenticationStrategy",
    "mockedClass": "SessionAuthenticationStrategy",
    "isReuseableMock": false,
    "mockPattern": "Creation:\n\u2014 Local Mock Creation in Test Case\n\nStubbing:\n\u2014 None\n\nVerification:\n\u2014 None",
    "classContext": {
      "packageName": "org.springframework.security.web.session",
      "filePath": "C:\\java tool\\Spring\\spring-security\\web\\src\\test\\java\\org\\springframework\\security\\web\\session\\SessionManagementFilterTests.java",
      "className": "SessionManagementFilterTests"
    },
    "statements": [
      {
        "type": "DECLARATION",
        "code": "// repo will return false to containsContext()\r\nSessionAuthenticationStrategy strategy = mock(SessionAuthenticationStrategy.class);",
        "line": 137,
        "locate": "Test Case",
        "locationContext": {
          "methodName": "responseIsRedirectedToTimeoutUrlIfSetAndSessionIsInvalid",
          "methodAnnotations": [
            "@Test"
          ]
        }
      }
    ],
    "pattern_id": 2
  },
  {
    "variableName": "strategy",
    "variableType": "SessionAuthenticationStrategy",
    "mockedClass": "SessionAuthenticationStrategy",
    "isReuseableMock": false,
    "mockPattern": "Creation:\n\u2014 Local Mock Creation in Test Case\n\nStubbing:\n\u2014 None\n\nVerification:\n\u2014 None",
    "classContext": {
      "packageName": "org.springframework.security.web.session",
      "filePath": "C:\\java tool\\Spring\\spring-security\\web\\src\\test\\java\\org\\springframework\\security\\web\\session\\SessionManagementFilterTests.java",
      "className": "SessionManagementFilterTests"
    },
    "statements": [
      {
        "type": "DECLARATION",
        "code": "// repo will return false to containsContext()\r\nSessionAuthenticationStrategy strategy = mock(SessionAuthenticationStrategy.class);",
        "line": 162,
        "locate": "Test Case",
        "locationContext": {
          "methodName": "responseIsRedirectedToRequestedUrlIfSetAndSessionIsInvalid",
          "methodAnnotations": [
            "@Test"
          ]
        }
      }
    ],
    "pattern_id": 2
  }
]