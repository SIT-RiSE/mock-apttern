[
  {
    "variableName": "sessionAuthenticationStrategy",
    "variableType": "SessionAuthenticationStrategy",
    "mockedClass": "SessionAuthenticationStrategy",
    "isReuseableMock": false,
    "mockPattern": "Creation:\n\u2014 Local Mock Creation in Test Case\n\nStubbing:\n\u2014 None\n\nVerification:\n\u2014 Test Case",
    "classContext": {
      "packageName": "org.springframework.security.web.authentication.rememberme",
      "filePath": "C:\\java tool\\Spring\\spring-security\\web\\src\\test\\java\\org\\springframework\\security\\web\\authentication\\rememberme\\RememberMeAuthenticationFilterTests.java",
      "className": "RememberMeAuthenticationFilterTests"
    },
    "statements": [
      {
        "type": "DECLARATION",
        "code": "SessionAuthenticationStrategy sessionAuthenticationStrategy = mock(SessionAuthenticationStrategy.class);",
        "line": 176,
        "locate": "Test Case",
        "locationContext": {
          "methodName": "sessionAuthenticationStrategyInvokedIfSet",
          "methodAnnotations": [
            "@Test"
          ]
        }
      },
      {
        "type": "VERIFICATION",
        "code": "verify(sessionAuthenticationStrategy).onAuthentication(any(), eq(request), eq(response));",
        "line": 188,
        "locate": "Test Case",
        "locationContext": {
          "methodName": "sessionAuthenticationStrategyInvokedIfSet",
          "methodAnnotations": [
            "@Test"
          ]
        }
      }
    ],
    "pattern_id": 5
  },
  {
    "variableName": "strategy",
    "variableType": "SessionAuthenticationStrategy",
    "mockedClass": "SessionAuthenticationStrategy",
    "isReuseableMock": false,
    "mockPattern": "Creation:\n\u2014 Local Mock Creation in Test Case\n\nStubbing:\n\u2014 None\n\nVerification:\n\u2014 Test Case",
    "classContext": {
      "packageName": "org.springframework.security.web.session",
      "filePath": "C:\\java tool\\Spring\\spring-security\\web\\src\\test\\java\\org\\springframework\\security\\web\\session\\SessionManagementFilterTests.java",
      "className": "SessionManagementFilterTests"
    },
    "statements": [
      {
        "type": "DECLARATION",
        "code": "SessionAuthenticationStrategy strategy = mock(SessionAuthenticationStrategy.class);",
        "line": 77,
        "locate": "Test Case",
        "locationContext": {
          "methodName": "strategyIsNotInvokedIfSecurityContextAlreadyExistsForRequest",
          "methodAnnotations": [
            "@Test"
          ]
        }
      },
      {
        "type": "VERIFICATION",
        "code": "verifyNoMoreInteractions(strategy);",
        "line": 84,
        "locate": "Test Case",
        "locationContext": {
          "methodName": "strategyIsNotInvokedIfSecurityContextAlreadyExistsForRequest",
          "methodAnnotations": [
            "@Test"
          ]
        }
      }
    ],
    "pattern_id": 5
  },
  {
    "variableName": "strategy",
    "variableType": "SessionAuthenticationStrategy",
    "mockedClass": "SessionAuthenticationStrategy",
    "isReuseableMock": false,
    "mockPattern": "Creation:\n\u2014 Local Mock Creation in Test Case\n\nStubbing:\n\u2014 None\n\nVerification:\n\u2014 Test Case",
    "classContext": {
      "packageName": "org.springframework.security.web.session",
      "filePath": "C:\\java tool\\Spring\\spring-security\\web\\src\\test\\java\\org\\springframework\\security\\web\\session\\SessionManagementFilterTests.java",
      "className": "SessionManagementFilterTests"
    },
    "statements": [
      {
        "type": "DECLARATION",
        "code": "SessionAuthenticationStrategy strategy = mock(SessionAuthenticationStrategy.class);",
        "line": 90,
        "locate": "Test Case",
        "locationContext": {
          "methodName": "strategyIsNotInvokedIfAuthenticationIsNull",
          "methodAnnotations": [
            "@Test"
          ]
        }
      },
      {
        "type": "VERIFICATION",
        "code": "verifyNoMoreInteractions(strategy);",
        "line": 94,
        "locate": "Test Case",
        "locationContext": {
          "methodName": "strategyIsNotInvokedIfAuthenticationIsNull",
          "methodAnnotations": [
            "@Test"
          ]
        }
      }
    ],
    "pattern_id": 5
  },
  {
    "variableName": "strategy",
    "variableType": "SessionAuthenticationStrategy",
    "mockedClass": "SessionAuthenticationStrategy",
    "isReuseableMock": false,
    "mockPattern": "Creation:\n\u2014 Local Mock Creation in Test Case\n\nStubbing:\n\u2014 None\n\nVerification:\n\u2014 Test Case",
    "classContext": {
      "packageName": "org.springframework.security.web.session",
      "filePath": "C:\\java tool\\Spring\\spring-security\\web\\src\\test\\java\\org\\springframework\\security\\web\\session\\SessionManagementFilterTests.java",
      "className": "SessionManagementFilterTests"
    },
    "statements": [
      {
        "type": "DECLARATION",
        "code": "// repo will return false to containsContext()\r\nSessionAuthenticationStrategy strategy = mock(SessionAuthenticationStrategy.class);",
        "line": 101,
        "locate": "Test Case",
        "locationContext": {
          "methodName": "strategyIsInvokedIfUserIsNewlyAuthenticated",
          "methodAnnotations": [
            "@Test"
          ]
        }
      },
      {
        "type": "VERIFICATION",
        "code": "verify(strategy).onAuthentication(any(Authentication.class), any(HttpServletRequest.class), any(HttpServletResponse.class));",
        "line": 106,
        "locate": "Test Case",
        "locationContext": {
          "methodName": "strategyIsInvokedIfUserIsNewlyAuthenticated",
          "methodAnnotations": [
            "@Test"
          ]
        }
      },
      {
        "type": "VERIFICATION",
        "code": "verifyNoMoreInteractions(strategy);",
        "line": 110,
        "locate": "Test Case",
        "locationContext": {
          "methodName": "strategyIsInvokedIfUserIsNewlyAuthenticated",
          "methodAnnotations": [
            "@Test"
          ]
        }
      }
    ],
    "pattern_id": 5
  },
  {
    "variableName": "sessionAuthenticationStrategy",
    "variableType": "SessionAuthenticationStrategy",
    "mockedClass": "SessionAuthenticationStrategy",
    "isReuseableMock": false,
    "mockPattern": "Creation:\n\u2014 Local Mock Creation in Test Case\n\nStubbing:\n\u2014 None\n\nVerification:\n\u2014 Test Case",
    "classContext": {
      "packageName": "org.springframework.security.web.session",
      "filePath": "C:\\java tool\\Spring\\spring-security\\web\\src\\test\\java\\org\\springframework\\security\\web\\session\\SessionManagementFilterTests.java",
      "className": "SessionManagementFilterTests"
    },
    "statements": [
      {
        "type": "DECLARATION",
        "code": "SessionAuthenticationStrategy sessionAuthenticationStrategy = mock(SessionAuthenticationStrategy.class);",
        "line": 193,
        "locate": "Test Case",
        "locationContext": {
          "methodName": "responseIsRedirectedToRequestedUrlIfContextPathIsSetAndSessionIsInvalid",
          "methodAnnotations": [
            "@Test"
          ]
        }
      },
      {
        "type": "VERIFICATION",
        "code": "verifyNoMoreInteractions(securityContextRepository, sessionAuthenticationStrategy, chain);",
        "line": 210,
        "locate": "Test Case",
        "locationContext": {
          "methodName": "responseIsRedirectedToRequestedUrlIfContextPathIsSetAndSessionIsInvalid",
          "methodAnnotations": [
            "@Test"
          ]
        }
      }
    ],
    "pattern_id": 5
  },
  {
    "variableName": "sessionAuthenticationStrategy",
    "variableType": "SessionAuthenticationStrategy",
    "mockedClass": "SessionAuthenticationStrategy",
    "isReuseableMock": false,
    "mockPattern": "Creation:\n\u2014 Local Mock Creation in Test Case\n\nStubbing:\n\u2014 None\n\nVerification:\n\u2014 Test Case",
    "classContext": {
      "packageName": "org.springframework.security.web.session",
      "filePath": "C:\\java tool\\Spring\\spring-security\\web\\src\\test\\java\\org\\springframework\\security\\web\\session\\SessionManagementFilterTests.java",
      "className": "SessionManagementFilterTests"
    },
    "statements": [
      {
        "type": "DECLARATION",
        "code": "SessionAuthenticationStrategy sessionAuthenticationStrategy = mock(SessionAuthenticationStrategy.class);",
        "line": 225,
        "locate": "Test Case",
        "locationContext": {
          "methodName": "responseIsRedirectedToRequestedUrlIfStatusCodeIsSetAndSessionIsInvalid",
          "methodAnnotations": [
            "@Test"
          ]
        }
      },
      {
        "type": "VERIFICATION",
        "code": "verifyNoMoreInteractions(securityContextRepository, sessionAuthenticationStrategy, chain);",
        "line": 241,
        "locate": "Test Case",
        "locationContext": {
          "methodName": "responseIsRedirectedToRequestedUrlIfStatusCodeIsSetAndSessionIsInvalid",
          "methodAnnotations": [
            "@Test"
          ]
        }
      }
    ],
    "pattern_id": 5
  }
]