[
  {
    "variableName": "customClaimTypeConverterFactory",
    "variableType": "Function<ClientRegistration,Converter<Map<String,Object>,Map<String,Object>>>",
    "mockedClass": "Function",
    "isReuseableMock": false,
    "mockPattern": "Creation:\n\u2014 Local Mock Creation in Test Case\n\nStubbing:\n\u2014 Test Case\n\nVerification:\n\u2014 Test Case",
    "classContext": {
      "packageName": "org.springframework.security.oauth2.client.oidc.authentication",
      "filePath": "C:\\java tool\\Spring\\spring-security\\oauth2\\oauth2-client\\src\\test\\java\\org\\springframework\\security\\oauth2\\client\\oidc\\authentication\\OidcIdTokenDecoderFactoryTests.java",
      "className": "OidcIdTokenDecoderFactoryTests"
    },
    "statements": [
      {
        "type": "DECLARATION",
        "code": "Function<ClientRegistration, Converter<Map<String, Object>, Map<String, Object>>> customClaimTypeConverterFactory = mock(Function.class);",
        "line": 170,
        "locate": "Test Case",
        "locationContext": {
          "methodName": "createDecoderWhenCustomClaimTypeConverterFactorySetThenApplied",
          "methodAnnotations": [
            "@Test"
          ]
        }
      },
      {
        "type": "STUBBING",
        "code": "given(customClaimTypeConverterFactory.apply(same(clientRegistration))).willReturn(new ClaimTypeConverter(OidcIdTokenDecoderFactory.createDefaultClaimTypeConverters()));",
        "line": 174,
        "locate": "Test Case",
        "locationContext": {
          "methodName": "createDecoderWhenCustomClaimTypeConverterFactorySetThenApplied",
          "methodAnnotations": [
            "@Test"
          ]
        }
      },
      {
        "type": "VERIFICATION",
        "code": "verify(customClaimTypeConverterFactory).apply(same(clientRegistration));",
        "line": 177,
        "locate": "Test Case",
        "locationContext": {
          "methodName": "createDecoderWhenCustomClaimTypeConverterFactorySetThenApplied",
          "methodAnnotations": [
            "@Test"
          ]
        }
      }
    ],
    "pattern_id": 6
  },
  {
    "variableName": "customClaimTypeConverterFactory",
    "variableType": "Function<ClientRegistration,Converter<Map<String,Object>,Map<String,Object>>>",
    "mockedClass": "Function",
    "isReuseableMock": false,
    "mockPattern": "Creation:\n\u2014 Local Mock Creation in Test Case\n\nStubbing:\n\u2014 Test Case\n\nVerification:\n\u2014 Test Case",
    "classContext": {
      "packageName": "org.springframework.security.oauth2.client.oidc.authentication",
      "filePath": "C:\\java tool\\Spring\\spring-security\\oauth2\\oauth2-client\\src\\test\\java\\org\\springframework\\security\\oauth2\\client\\oidc\\authentication\\ReactiveOidcIdTokenDecoderFactoryTests.java",
      "className": "ReactiveOidcIdTokenDecoderFactoryTests"
    },
    "statements": [
      {
        "type": "DECLARATION",
        "code": "Function<ClientRegistration, Converter<Map<String, Object>, Map<String, Object>>> customClaimTypeConverterFactory = mock(Function.class);",
        "line": 170,
        "locate": "Test Case",
        "locationContext": {
          "methodName": "createDecoderWhenCustomClaimTypeConverterFactorySetThenApplied",
          "methodAnnotations": [
            "@Test"
          ]
        }
      },
      {
        "type": "STUBBING",
        "code": "given(customClaimTypeConverterFactory.apply(same(clientRegistration))).willReturn(new ClaimTypeConverter(OidcIdTokenDecoderFactory.createDefaultClaimTypeConverters()));",
        "line": 174,
        "locate": "Test Case",
        "locationContext": {
          "methodName": "createDecoderWhenCustomClaimTypeConverterFactorySetThenApplied",
          "methodAnnotations": [
            "@Test"
          ]
        }
      },
      {
        "type": "VERIFICATION",
        "code": "verify(customClaimTypeConverterFactory).apply(same(clientRegistration));",
        "line": 177,
        "locate": "Test Case",
        "locationContext": {
          "methodName": "createDecoderWhenCustomClaimTypeConverterFactorySetThenApplied",
          "methodAnnotations": [
            "@Test"
          ]
        }
      }
    ],
    "pattern_id": 6
  },
  {
    "variableName": "customClaimTypeConverterFactory",
    "variableType": "Function<ClientRegistration,Converter<Map<String,Object>,Map<String,Object>>>",
    "mockedClass": "Function",
    "isReuseableMock": false,
    "mockPattern": "Creation:\n\u2014 Local Mock Creation in Test Case\n\nStubbing:\n\u2014 Test Case\n\nVerification:\n\u2014 Test Case",
    "classContext": {
      "packageName": "org.springframework.security.oauth2.client.oidc.userinfo",
      "filePath": "C:\\java tool\\Spring\\spring-security\\oauth2\\oauth2-client\\src\\test\\java\\org\\springframework\\security\\oauth2\\client\\oidc\\userinfo\\OidcReactiveOAuth2UserServiceTests.java",
      "className": "OidcReactiveOAuth2UserServiceTests"
    },
    "statements": [
      {
        "type": "DECLARATION",
        "code": "Function<ClientRegistration, Converter<Map<String, Object>, Map<String, Object>>> customClaimTypeConverterFactory = mock(Function.class);",
        "line": 193,
        "locate": "Test Case",
        "locationContext": {
          "methodName": "loadUserWhenCustomClaimTypeConverterFactorySetThenApplied",
          "methodAnnotations": [
            "@Test"
          ]
        }
      },
      {
        "type": "STUBBING",
        "code": "given(customClaimTypeConverterFactory.apply(same(userRequest.getClientRegistration()))).willReturn(new ClaimTypeConverter(OidcReactiveOAuth2UserService.createDefaultClaimTypeConverters()));",
        "line": 196,
        "locate": "Test Case",
        "locationContext": {
          "methodName": "loadUserWhenCustomClaimTypeConverterFactorySetThenApplied",
          "methodAnnotations": [
            "@Test"
          ]
        }
      },
      {
        "type": "VERIFICATION",
        "code": "verify(customClaimTypeConverterFactory).apply(same(userRequest.getClientRegistration()));",
        "line": 199,
        "locate": "Test Case",
        "locationContext": {
          "methodName": "loadUserWhenCustomClaimTypeConverterFactorySetThenApplied",
          "methodAnnotations": [
            "@Test"
          ]
        }
      }
    ],
    "pattern_id": 6
  },
  {
    "variableName": "customClaimTypeConverterFactory",
    "variableType": "Function<ClientRegistration,Converter<Map<String,Object>,Map<String,Object>>>",
    "mockedClass": "Function",
    "isReuseableMock": false,
    "mockPattern": "Creation:\n\u2014 Local Mock Creation in Test Case\n\nStubbing:\n\u2014 Test Case\n\nVerification:\n\u2014 Test Case",
    "classContext": {
      "packageName": "org.springframework.security.oauth2.client.oidc.userinfo",
      "filePath": "C:\\java tool\\Spring\\spring-security\\oauth2\\oauth2-client\\src\\test\\java\\org\\springframework\\security\\oauth2\\client\\oidc\\userinfo\\OidcUserServiceTests.java",
      "className": "OidcUserServiceTests"
    },
    "statements": [
      {
        "type": "DECLARATION",
        "code": "Function<ClientRegistration, Converter<Map<String, Object>, Map<String, Object>>> customClaimTypeConverterFactory = mock(Function.class);",
        "line": 523,
        "locate": "Test Case",
        "locationContext": {
          "methodName": "loadUserWhenCustomClaimTypeConverterFactorySetThenApplied",
          "methodAnnotations": [
            "@Test"
          ]
        }
      },
      {
        "type": "STUBBING",
        "code": "given(customClaimTypeConverterFactory.apply(same(clientRegistration))).willReturn(new ClaimTypeConverter(OidcUserService.createDefaultClaimTypeConverters()));",
        "line": 526,
        "locate": "Test Case",
        "locationContext": {
          "methodName": "loadUserWhenCustomClaimTypeConverterFactorySetThenApplied",
          "methodAnnotations": [
            "@Test"
          ]
        }
      },
      {
        "type": "VERIFICATION",
        "code": "verify(customClaimTypeConverterFactory).apply(same(clientRegistration));",
        "line": 529,
        "locate": "Test Case",
        "locationContext": {
          "methodName": "loadUserWhenCustomClaimTypeConverterFactorySetThenApplied",
          "methodAnnotations": [
            "@Test"
          ]
        }
      }
    ],
    "pattern_id": 6
  }
]