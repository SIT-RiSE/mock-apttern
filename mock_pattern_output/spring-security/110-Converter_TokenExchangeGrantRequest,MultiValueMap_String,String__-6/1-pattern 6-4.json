[
  {
    "variableName": "parametersConverter",
    "variableType": "Converter<TokenExchangeGrantRequest,MultiValueMap<String,String>>",
    "mockedClass": "Converter<TokenExchangeGrantRequest,MultiValueMap<String,String>>",
    "isReuseableMock": false,
    "mockPattern": "Creation:\n\u2014 Local Mock Creation in Test Case\n\nStubbing:\n\u2014 Test Case\n\nVerification:\n\u2014 Test Case",
    "classContext": {
      "packageName": "org.springframework.security.oauth2.client.endpoint",
      "filePath": "C:\\java tool\\Spring\\spring-security\\oauth2\\oauth2-client\\src\\test\\java\\org\\springframework\\security\\oauth2\\client\\endpoint\\RestClientTokenExchangeTokenResponseClientTests.java",
      "className": "RestClientTokenExchangeTokenResponseClientTests"
    },
    "statements": [
      {
        "type": "DECLARATION",
        "code": "Converter<TokenExchangeGrantRequest, MultiValueMap<String, String>> parametersConverter = mock();",
        "line": 484,
        "locate": "Test Case",
        "locationContext": {
          "methodName": "getTokenResponseWhenParametersConverterSetThenCalled",
          "methodAnnotations": [
            "@Test"
          ]
        }
      },
      {
        "type": "STUBBING",
        "code": "given(parametersConverter.convert(grantRequest)).willReturn(parameters);",
        "line": 487,
        "locate": "Test Case",
        "locationContext": {
          "methodName": "getTokenResponseWhenParametersConverterSetThenCalled",
          "methodAnnotations": [
            "@Test"
          ]
        }
      },
      {
        "type": "VERIFICATION",
        "code": "verify(parametersConverter).convert(grantRequest);",
        "line": 490,
        "locate": "Test Case",
        "locationContext": {
          "methodName": "getTokenResponseWhenParametersConverterSetThenCalled",
          "methodAnnotations": [
            "@Test"
          ]
        }
      }
    ],
    "pattern_id": 6
  },
  {
    "variableName": "parametersConverter",
    "variableType": "Converter<TokenExchangeGrantRequest,MultiValueMap<String,String>>",
    "mockedClass": "Converter<TokenExchangeGrantRequest,MultiValueMap<String,String>>",
    "isReuseableMock": false,
    "mockPattern": "Creation:\n\u2014 Local Mock Creation in Test Case\n\nStubbing:\n\u2014 Test Case\n\nVerification:\n\u2014 Test Case",
    "classContext": {
      "packageName": "org.springframework.security.oauth2.client.endpoint",
      "filePath": "C:\\java tool\\Spring\\spring-security\\oauth2\\oauth2-client\\src\\test\\java\\org\\springframework\\security\\oauth2\\client\\endpoint\\RestClientTokenExchangeTokenResponseClientTests.java",
      "className": "RestClientTokenExchangeTokenResponseClientTests"
    },
    "statements": [
      {
        "type": "DECLARATION",
        "code": "Converter<TokenExchangeGrantRequest, MultiValueMap<String, String>> parametersConverter = mock();",
        "line": 529,
        "locate": "Test Case",
        "locationContext": {
          "methodName": "getTokenResponseWhenParametersConverterAddedThenCalled",
          "methodAnnotations": [
            "@Test"
          ]
        }
      },
      {
        "type": "STUBBING",
        "code": "given(parametersConverter.convert(grantRequest)).willReturn(parameters);",
        "line": 532,
        "locate": "Test Case",
        "locationContext": {
          "methodName": "getTokenResponseWhenParametersConverterAddedThenCalled",
          "methodAnnotations": [
            "@Test"
          ]
        }
      },
      {
        "type": "VERIFICATION",
        "code": "verify(parametersConverter).convert(grantRequest);",
        "line": 535,
        "locate": "Test Case",
        "locationContext": {
          "methodName": "getTokenResponseWhenParametersConverterAddedThenCalled",
          "methodAnnotations": [
            "@Test"
          ]
        }
      }
    ],
    "pattern_id": 6
  },
  {
    "variableName": "parametersConverter",
    "variableType": "Converter<TokenExchangeGrantRequest,MultiValueMap<String,String>>",
    "mockedClass": "Converter<TokenExchangeGrantRequest,MultiValueMap<String,String>>",
    "isReuseableMock": false,
    "mockPattern": "Creation:\n\u2014 Local Mock Creation in Test Case\n\nStubbing:\n\u2014 Test Case\n\nVerification:\n\u2014 Test Case",
    "classContext": {
      "packageName": "org.springframework.security.oauth2.client.endpoint",
      "filePath": "C:\\java tool\\Spring\\spring-security\\oauth2\\oauth2-client\\src\\test\\java\\org\\springframework\\security\\oauth2\\client\\endpoint\\WebClientReactiveTokenExchangeTokenResponseClientTests.java",
      "className": "WebClientReactiveTokenExchangeTokenResponseClientTests"
    },
    "statements": [
      {
        "type": "DECLARATION",
        "code": "Converter<TokenExchangeGrantRequest, MultiValueMap<String, String>> parametersConverter = mock();",
        "line": 472,
        "locate": "Test Case",
        "locationContext": {
          "methodName": "getTokenResponseWhenParametersConverterSetThenCalled",
          "methodAnnotations": [
            "@Test"
          ]
        }
      },
      {
        "type": "STUBBING",
        "code": "given(parametersConverter.convert(grantRequest)).willReturn(parameters);",
        "line": 475,
        "locate": "Test Case",
        "locationContext": {
          "methodName": "getTokenResponseWhenParametersConverterSetThenCalled",
          "methodAnnotations": [
            "@Test"
          ]
        }
      },
      {
        "type": "VERIFICATION",
        "code": "verify(parametersConverter).convert(grantRequest);",
        "line": 478,
        "locate": "Test Case",
        "locationContext": {
          "methodName": "getTokenResponseWhenParametersConverterSetThenCalled",
          "methodAnnotations": [
            "@Test"
          ]
        }
      }
    ],
    "pattern_id": 6
  },
  {
    "variableName": "parametersConverter",
    "variableType": "Converter<TokenExchangeGrantRequest,MultiValueMap<String,String>>",
    "mockedClass": "Converter<TokenExchangeGrantRequest,MultiValueMap<String,String>>",
    "isReuseableMock": false,
    "mockPattern": "Creation:\n\u2014 Local Mock Creation in Test Case\n\nStubbing:\n\u2014 Test Case\n\nVerification:\n\u2014 Test Case",
    "classContext": {
      "packageName": "org.springframework.security.oauth2.client.endpoint",
      "filePath": "C:\\java tool\\Spring\\spring-security\\oauth2\\oauth2-client\\src\\test\\java\\org\\springframework\\security\\oauth2\\client\\endpoint\\WebClientReactiveTokenExchangeTokenResponseClientTests.java",
      "className": "WebClientReactiveTokenExchangeTokenResponseClientTests"
    },
    "statements": [
      {
        "type": "DECLARATION",
        "code": "Converter<TokenExchangeGrantRequest, MultiValueMap<String, String>> parametersConverter = mock();",
        "line": 512,
        "locate": "Test Case",
        "locationContext": {
          "methodName": "getTokenResponseWhenParametersConverterAddedThenCalled",
          "methodAnnotations": [
            "@Test"
          ]
        }
      },
      {
        "type": "STUBBING",
        "code": "given(parametersConverter.convert(grantRequest)).willReturn(parameters);",
        "line": 515,
        "locate": "Test Case",
        "locationContext": {
          "methodName": "getTokenResponseWhenParametersConverterAddedThenCalled",
          "methodAnnotations": [
            "@Test"
          ]
        }
      },
      {
        "type": "VERIFICATION",
        "code": "verify(parametersConverter).convert(grantRequest);",
        "line": 518,
        "locate": "Test Case",
        "locationContext": {
          "methodName": "getTokenResponseWhenParametersConverterAddedThenCalled",
          "methodAnnotations": [
            "@Test"
          ]
        }
      }
    ],
    "pattern_id": 6
  }
]