[
  {
    "variableName": "codeSig",
    "variableType": "CodeSignature",
    "mockedClass": "CodeSignature",
    "isReuseableMock": false,
    "mockPattern": "Creation:\n\u2014 Local Mock Creation in @Before\n\nStubbing:\n\u2014 @Before\n\nVerification:\n\u2014 None",
    "classContext": {
      "packageName": "org.springframework.security.access.intercept.aspectj",
      "filePath": "C:\\java tool\\Spring\\spring-security\\core\\src\\test\\java\\org\\springframework\\security\\access\\intercept\\aspectj\\AspectJMethodSecurityInterceptorTests.java",
      "className": "AspectJMethodSecurityInterceptorTests"
    },
    "statements": [
      {
        "type": "DECLARATION",
        "code": "CodeSignature codeSig = mock(CodeSignature.class);",
        "line": 102,
        "locate": "@Before",
        "locationContext": {
          "methodName": "setUp",
          "methodAnnotations": [
            "@BeforeEach"
          ]
        }
      },
      {
        "type": "STUBBING",
        "code": "given(codeSig.getName()).willReturn(\"countLength\");",
        "line": 103,
        "locate": "@Before",
        "locationContext": {
          "methodName": "setUp",
          "methodAnnotations": [
            "@BeforeEach"
          ]
        }
      },
      {
        "type": "STUBBING",
        "code": "given(codeSig.getDeclaringType()).willReturn(TargetObject.class);",
        "line": 104,
        "locate": "@Before",
        "locationContext": {
          "methodName": "setUp",
          "methodAnnotations": [
            "@BeforeEach"
          ]
        }
      },
      {
        "type": "STUBBING",
        "code": "given(codeSig.getParameterTypes()).willReturn(new Class[] { String.class });",
        "line": 105,
        "locate": "@Before",
        "locationContext": {
          "methodName": "setUp",
          "methodAnnotations": [
            "@BeforeEach"
          ]
        }
      }
    ],
    "pattern_id": 13
  }
]