[
  {
    "variableName": "authenticationRequestRepository",
    "variableType": "Saml2AuthenticationRequestRepository<AbstractSaml2AuthenticationRequest>",
    "mockedClass": "Saml2AuthenticationRequestRepository",
    "isReuseableMock": "Fully Localized",
    "mockPattern": "Creation:\n\u2014 Local Mock Creation in Test Case\n\nStubbing:\n\u2014 Test Case\n\nVerification:\n\u2014 None",
    "classContext": {
      "packageName": "org.springframework.security.saml2.provider.service.web",
      "filePath": "C:\\java tool\\Spring\\spring-security\\saml2\\saml2-service-provider\\src\\opensaml4Test\\java\\org\\springframework\\security\\saml2\\provider\\service\\web\\OpenSaml4AuthenticationTokenConverterTests.java",
      "className": "OpenSaml4AuthenticationTokenConverterTests"
    },
    "statements": [
      {
        "type": "DECLARATION",
        "code": "Saml2AuthenticationRequestRepository<AbstractSaml2AuthenticationRequest> authenticationRequestRepository = mock(Saml2AuthenticationRequestRepository.class);",
        "line": 160,
        "locate": "Test Case",
        "locationContext": {
          "methodName": "convertWhenSavedAuthenticationRequestThenToken",
          "methodAnnotations": [
            "@Test"
          ]
        }
      },
      {
        "type": "STUBBING",
        "code": "given(authenticationRequestRepository.loadAuthenticationRequest(any(HttpServletRequest.class))).willReturn(authenticationRequest);",
        "line": 167,
        "locate": "Test Case",
        "locationContext": {
          "methodName": "convertWhenSavedAuthenticationRequestThenToken",
          "methodAnnotations": [
            "@Test"
          ]
        }
      }
    ],
    "pattern_id": 1
  },
  {
    "variableName": "authenticationRequestRepository",
    "variableType": "Saml2AuthenticationRequestRepository<AbstractSaml2AuthenticationRequest>",
    "mockedClass": "Saml2AuthenticationRequestRepository",
    "isReuseableMock": "Fully Localized",
    "mockPattern": "Creation:\n\u2014 Local Mock Creation in Test Case\n\nStubbing:\n\u2014 Test Case\n\nVerification:\n\u2014 None",
    "classContext": {
      "packageName": "org.springframework.security.saml2.provider.service.web",
      "filePath": "C:\\java tool\\Spring\\spring-security\\saml2\\saml2-service-provider\\src\\opensaml4Test\\java\\org\\springframework\\security\\saml2\\provider\\service\\web\\OpenSamlAuthenticationTokenConverterTests.java",
      "className": "OpenSamlAuthenticationTokenConverterTests"
    },
    "statements": [
      {
        "type": "DECLARATION",
        "code": "Saml2AuthenticationRequestRepository<AbstractSaml2AuthenticationRequest> authenticationRequestRepository = mock(Saml2AuthenticationRequestRepository.class);",
        "line": 160,
        "locate": "Test Case",
        "locationContext": {
          "methodName": "convertWhenSavedAuthenticationRequestThenToken",
          "methodAnnotations": [
            "@Test"
          ]
        }
      },
      {
        "type": "STUBBING",
        "code": "given(authenticationRequestRepository.loadAuthenticationRequest(any(HttpServletRequest.class))).willReturn(authenticationRequest);",
        "line": 167,
        "locate": "Test Case",
        "locationContext": {
          "methodName": "convertWhenSavedAuthenticationRequestThenToken",
          "methodAnnotations": [
            "@Test"
          ]
        }
      }
    ],
    "pattern_id": 1
  },
  {
    "variableName": "authenticationRequestRepository",
    "variableType": "Saml2AuthenticationRequestRepository<AbstractSaml2AuthenticationRequest>",
    "mockedClass": "Saml2AuthenticationRequestRepository",
    "isReuseableMock": "Fully Localized",
    "mockPattern": "Creation:\n\u2014 Local Mock Creation in Test Case\n\nStubbing:\n\u2014 Test Case\n\nVerification:\n\u2014 None",
    "classContext": {
      "packageName": "org.springframework.security.saml2.provider.service.web",
      "filePath": "C:\\java tool\\Spring\\spring-security\\saml2\\saml2-service-provider\\src\\opensaml5Test\\java\\org\\springframework\\security\\saml2\\provider\\service\\web\\OpenSaml5AuthenticationTokenConverterTests.java",
      "className": "OpenSaml5AuthenticationTokenConverterTests"
    },
    "statements": [
      {
        "type": "DECLARATION",
        "code": "Saml2AuthenticationRequestRepository<AbstractSaml2AuthenticationRequest> authenticationRequestRepository = mock(Saml2AuthenticationRequestRepository.class);",
        "line": 160,
        "locate": "Test Case",
        "locationContext": {
          "methodName": "convertWhenSavedAuthenticationRequestThenToken",
          "methodAnnotations": [
            "@Test"
          ]
        }
      },
      {
        "type": "STUBBING",
        "code": "given(authenticationRequestRepository.loadAuthenticationRequest(any(HttpServletRequest.class))).willReturn(authenticationRequest);",
        "line": 167,
        "locate": "Test Case",
        "locationContext": {
          "methodName": "convertWhenSavedAuthenticationRequestThenToken",
          "methodAnnotations": [
            "@Test"
          ]
        }
      }
    ],
    "pattern_id": 1
  },
  {
    "variableName": "authenticationRequestRepository",
    "variableType": "Saml2AuthenticationRequestRepository<AbstractSaml2AuthenticationRequest>",
    "mockedClass": "Saml2AuthenticationRequestRepository",
    "isReuseableMock": "Fully Localized",
    "mockPattern": "Creation:\n\u2014 Local Mock Creation in Test Case\n\nStubbing:\n\u2014 Test Case\n\nVerification:\n\u2014 None",
    "classContext": {
      "packageName": "org.springframework.security.saml2.provider.service.web",
      "filePath": "C:\\java tool\\Spring\\spring-security\\saml2\\saml2-service-provider\\src\\test\\java\\org\\springframework\\security\\saml2\\provider\\service\\web\\Saml2AuthenticationTokenConverterTests.java",
      "className": "Saml2AuthenticationTokenConverterTests"
    },
    "statements": [
      {
        "type": "DECLARATION",
        "code": "Saml2AuthenticationRequestRepository<AbstractSaml2AuthenticationRequest> authenticationRequestRepository = mock(Saml2AuthenticationRequestRepository.class);",
        "line": 174,
        "locate": "Test Case",
        "locationContext": {
          "methodName": "convertWhenSavedAuthenticationRequestThenToken",
          "methodAnnotations": [
            "@Test"
          ]
        }
      },
      {
        "type": "STUBBING",
        "code": "given(authenticationRequestRepository.loadAuthenticationRequest(any(HttpServletRequest.class))).willReturn(authenticationRequest);",
        "line": 184,
        "locate": "Test Case",
        "locationContext": {
          "methodName": "convertWhenSavedAuthenticationRequestThenToken",
          "methodAnnotations": [
            "@Test"
          ]
        }
      }
    ],
    "pattern_id": 1
  },
  {
    "variableName": "authenticationRequestRepository",
    "variableType": "Saml2AuthenticationRequestRepository<AbstractSaml2AuthenticationRequest>",
    "mockedClass": "Saml2AuthenticationRequestRepository",
    "isReuseableMock": "Fully Localized",
    "mockPattern": "Creation:\n\u2014 Local Mock Creation in Test Case\n\nStubbing:\n\u2014 Test Case\n\nVerification:\n\u2014 None",
    "classContext": {
      "packageName": "org.springframework.security.saml2.provider.service.web",
      "filePath": "C:\\java tool\\Spring\\spring-security\\saml2\\saml2-service-provider\\src\\test\\java\\org\\springframework\\security\\saml2\\provider\\service\\web\\Saml2AuthenticationTokenConverterTests.java",
      "className": "Saml2AuthenticationTokenConverterTests"
    },
    "statements": [
      {
        "type": "DECLARATION",
        "code": "Saml2AuthenticationRequestRepository<AbstractSaml2AuthenticationRequest> authenticationRequestRepository = mock(Saml2AuthenticationRequestRepository.class);",
        "line": 199,
        "locate": "Test Case",
        "locationContext": {
          "methodName": "convertWhenSavedAuthenticationRequestThenTokenWithRelyingPartyRegistrationResolver",
          "methodAnnotations": [
            "@Test"
          ]
        }
      },
      {
        "type": "STUBBING",
        "code": "given(authenticationRequestRepository.loadAuthenticationRequest(any(HttpServletRequest.class))).willReturn(authenticationRequest);",
        "line": 207,
        "locate": "Test Case",
        "locationContext": {
          "methodName": "convertWhenSavedAuthenticationRequestThenTokenWithRelyingPartyRegistrationResolver",
          "methodAnnotations": [
            "@Test"
          ]
        }
      }
    ],
    "pattern_id": 1
  }
]