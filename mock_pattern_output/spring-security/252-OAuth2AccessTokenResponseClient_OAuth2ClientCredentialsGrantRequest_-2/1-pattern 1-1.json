[
  {
    "variableName": "clientCredentialsTokenResponseClient",
    "variableType": "OAuth2AccessTokenResponseClient<OAuth2ClientCredentialsGrantRequest>",
    "mockedClass": "OAuth2AccessTokenResponseClient",
    "isReuseableMock": false,
    "mockPattern": "Creation:\n\u2014 Local Mock Creation in Test Case\n\nStubbing:\n\u2014 Test Case\n\nVerification:\n\u2014 None",
    "classContext": {
      "packageName": "org.springframework.security.oauth2.client.web.method.annotation",
      "filePath": "C:\\java tool\\Spring\\spring-security\\oauth2\\oauth2-client\\src\\test\\java\\org\\springframework\\security\\oauth2\\client\\web\\method\\annotation\\OAuth2AuthorizedClientArgumentResolverTests.java",
      "className": "OAuth2AuthorizedClientArgumentResolverTests"
    },
    "statements": [
      {
        "type": "DECLARATION",
        "code": "OAuth2AccessTokenResponseClient<OAuth2ClientCredentialsGrantRequest> clientCredentialsTokenResponseClient = mock(OAuth2AccessTokenResponseClient.class);",
        "line": 283,
        "locate": "Test Case",
        "locationContext": {
          "methodName": "resolveArgumentWhenAuthorizedClientNotFoundForClientCredentialsClientThenResolvesFromTokenResponseClient",
          "methodAnnotations": [
            "@SuppressWarnings",
            "@Test"
          ]
        }
      },
      {
        "type": "STUBBING",
        "code": "given(clientCredentialsTokenResponseClient.getTokenResponse(any())).willReturn(accessTokenResponse);",
        "line": 295,
        "locate": "Test Case",
        "locationContext": {
          "methodName": "resolveArgumentWhenAuthorizedClientNotFoundForClientCredentialsClientThenResolvesFromTokenResponseClient",
          "methodAnnotations": [
            "@SuppressWarnings",
            "@Test"
          ]
        }
      }
    ],
    "pattern_id": 1
  }
]