[
  {
    "variableName": "provider",
    "variableType": "AclEntryAfterInvocationCollectionFilteringProvider",
    "mockedClass": "AclEntryAfterInvocationCollectionFilteringProvider",
    "isReuseableMock": false,
    "mockPattern": "Creation:\n\u2014 Local Mock Creation in Test Case\n\nStubbing:\n\u2014 None\n\nVerification:\n\u2014 None",
    "classContext": {
      "packageName": "org.springframework.security.acls.afterinvocation",
      "filePath": "C:\\java tool\\Spring\\spring-security\\acl\\src\\test\\java\\org\\springframework\\security\\acls\\afterinvocation\\AclEntryAfterInvocationCollectionFilteringProviderTests.java",
      "className": "AclEntryAfterInvocationCollectionFilteringProviderTests"
    },
    "statements": [
      {
        "type": "DECLARATION",
        "code": "AclEntryAfterInvocationCollectionFilteringProvider provider = new AclEntryAfterInvocationCollectionFilteringProvider(service, Arrays.asList(mock(Permission.class)));",
        "line": 56,
        "locate": "Test Case",
        "locationContext": {
          "methodName": "objectsAreRemovedIfPermissionDenied",
          "methodAnnotations": [
            "@Test"
          ]
        }
      }
    ],
    "pattern_id": 2
  },
  {
    "variableName": "provider",
    "variableType": "AclEntryAfterInvocationCollectionFilteringProvider",
    "mockedClass": "AclEntryAfterInvocationCollectionFilteringProvider",
    "isReuseableMock": false,
    "mockPattern": "Creation:\n\u2014 Local Mock Creation in Test Case\n\nStubbing:\n\u2014 None\n\nVerification:\n\u2014 None",
    "classContext": {
      "packageName": "org.springframework.security.acls.afterinvocation",
      "filePath": "C:\\java tool\\Spring\\spring-security\\acl\\src\\test\\java\\org\\springframework\\security\\acls\\afterinvocation\\AclEntryAfterInvocationCollectionFilteringProviderTests.java",
      "className": "AclEntryAfterInvocationCollectionFilteringProviderTests"
    },
    "statements": [
      {
        "type": "DECLARATION",
        "code": "AclEntryAfterInvocationCollectionFilteringProvider provider = new AclEntryAfterInvocationCollectionFilteringProvider(mock(AclService.class), Arrays.asList(mock(Permission.class)));",
        "line": 75,
        "locate": "Test Case",
        "locationContext": {
          "methodName": "accessIsGrantedIfNoAttributesDefined",
          "methodAnnotations": [
            "@Test"
          ]
        }
      }
    ],
    "pattern_id": 2
  },
  {
    "variableName": "provider",
    "variableType": "AclEntryAfterInvocationCollectionFilteringProvider",
    "mockedClass": "AclEntryAfterInvocationCollectionFilteringProvider",
    "isReuseableMock": false,
    "mockPattern": "Creation:\n\u2014 Local Mock Creation in Test Case\n\nStubbing:\n\u2014 None\n\nVerification:\n\u2014 None",
    "classContext": {
      "packageName": "org.springframework.security.acls.afterinvocation",
      "filePath": "C:\\java tool\\Spring\\spring-security\\acl\\src\\test\\java\\org\\springframework\\security\\acls\\afterinvocation\\AclEntryAfterInvocationCollectionFilteringProviderTests.java",
      "className": "AclEntryAfterInvocationCollectionFilteringProviderTests"
    },
    "statements": [
      {
        "type": "DECLARATION",
        "code": "AclEntryAfterInvocationCollectionFilteringProvider provider = new AclEntryAfterInvocationCollectionFilteringProvider(service, Arrays.asList(mock(Permission.class)));",
        "line": 85,
        "locate": "Test Case",
        "locationContext": {
          "methodName": "nullReturnObjectIsIgnored",
          "methodAnnotations": [
            "@Test"
          ]
        }
      }
    ],
    "pattern_id": 2
  }
]