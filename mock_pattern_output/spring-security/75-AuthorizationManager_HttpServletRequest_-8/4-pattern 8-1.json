[
  {
    "variableName": "authorizationManager",
    "variableType": "AuthorizationManager<HttpServletRequest>",
    "mockedClass": "AuthorizationManager<HttpServletRequest>",
    "isReuseableMock": false,
    "mockPattern": "Creation:\n\u2014 Attribute Mock Creation\n\nStubbing:\n\u2014 Test Case\n\nVerification:\n\u2014 Test Case",
    "classContext": {
      "packageName": "org.springframework.security.web.access",
      "filePath": "C:\\java tool\\Spring\\spring-security\\web\\src\\test\\java\\org\\springframework\\security\\web\\access\\AuthorizationManagerWebInvocationPrivilegeEvaluatorTests.java",
      "className": "AuthorizationManagerWebInvocationPrivilegeEvaluatorTests"
    },
    "statements": [
      {
        "type": "FIELD_MOCK_CREATION",
        "code": "@Mock\r\nprivate AuthorizationManager<HttpServletRequest> authorizationManager;",
        "line": 48,
        "locate": "Attribute",
        "locationContext": {
          "methodName": "[FieldDeclaration]",
          "methodAnnotations": [
            "@Mock"
          ]
        }
      },
      {
        "type": "STUBBING",
        "code": "given(this.authorizationManager.check(any(), any())).willReturn(new AuthorizationDecision(true));",
        "line": 63,
        "locate": "Test Case",
        "locationContext": {
          "methodName": "isAllowedWhenAuthorizationManagerAllowsThenAllowedTrue",
          "methodAnnotations": [
            "@Test"
          ]
        }
      },
      {
        "type": "STUBBING",
        "code": "given(this.authorizationManager.authorize(any(), any())).willCallRealMethod();",
        "line": 64,
        "locate": "Test Case",
        "locationContext": {
          "methodName": "isAllowedWhenAuthorizationManagerAllowsThenAllowedTrue",
          "methodAnnotations": [
            "@Test"
          ]
        }
      },
      {
        "type": "VERIFICATION",
        "code": "verify(this.authorizationManager).check(any(), any());",
        "line": 67,
        "locate": "Test Case",
        "locationContext": {
          "methodName": "isAllowedWhenAuthorizationManagerAllowsThenAllowedTrue",
          "methodAnnotations": [
            "@Test"
          ]
        }
      },
      {
        "type": "STUBBING",
        "code": "given(this.authorizationManager.check(any(), any())).willReturn(new AuthorizationDecision(false));",
        "line": 72,
        "locate": "Test Case",
        "locationContext": {
          "methodName": "isAllowedWhenAuthorizationManagerDeniesAllowedFalse",
          "methodAnnotations": [
            "@Test"
          ]
        }
      },
      {
        "type": "STUBBING",
        "code": "given(this.authorizationManager.authorize(any(), any())).willCallRealMethod();",
        "line": 73,
        "locate": "Test Case",
        "locationContext": {
          "methodName": "isAllowedWhenAuthorizationManagerDeniesAllowedFalse",
          "methodAnnotations": [
            "@Test"
          ]
        }
      },
      {
        "type": "STUBBING",
        "code": "given(this.authorizationManager.check(any(), any())).willReturn(null);",
        "line": 80,
        "locate": "Test Case",
        "locationContext": {
          "methodName": "isAllowedWhenAuthorizationManagerAbstainsThenAllowedTrue",
          "methodAnnotations": [
            "@Test"
          ]
        }
      },
      {
        "type": "STUBBING",
        "code": "given(this.authorizationManager.authorize(any(), any())).willCallRealMethod();",
        "line": 81,
        "locate": "Test Case",
        "locationContext": {
          "methodName": "isAllowedWhenAuthorizationManagerAbstainsThenAllowedTrue",
          "methodAnnotations": [
            "@Test"
          ]
        }
      },
      {
        "type": "STUBBING",
        "code": "given(this.authorizationManager.authorize(any(), any())).willCallRealMethod();",
        "line": 89,
        "locate": "Test Case",
        "locationContext": {
          "methodName": "isAllowedWhenServletContextExistsThenFilterInvocationHasServletContext",
          "methodAnnotations": [
            "@Test"
          ]
        }
      },
      {
        "type": "VERIFICATION",
        "code": "verify(this.authorizationManager).check(any(), captor.capture());",
        "line": 93,
        "locate": "Test Case",
        "locationContext": {
          "methodName": "isAllowedWhenServletContextExistsThenFilterInvocationHasServletContext",
          "methodAnnotations": [
            "@Test"
          ]
        }
      },
      {
        "type": "STUBBING",
        "code": "given(this.authorizationManager.authorize(any(), any())).willCallRealMethod();",
        "line": 106,
        "locate": "Test Case",
        "locationContext": {
          "methodName": "isAllowedWhenRequestTransformerThenUsesRequestTransformerResult",
          "methodAnnotations": [
            "@Test"
          ]
        }
      },
      {
        "type": "VERIFICATION",
        "code": "verify(this.authorizationManager).check(any(), eq(request));",
        "line": 111,
        "locate": "Test Case",
        "locationContext": {
          "methodName": "isAllowedWhenRequestTransformerThenUsesRequestTransformerResult",
          "methodAnnotations": [
            "@Test"
          ]
        }
      }
    ],
    "pattern_id": 8
  }
]