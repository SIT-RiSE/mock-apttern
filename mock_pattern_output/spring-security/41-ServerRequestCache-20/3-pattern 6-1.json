[
  {
    "variableName": "requestCache",
    "variableType": "ServerRequestCache",
    "mockedClass": "ServerRequestCache",
    "isReuseableMock": false,
    "mockPattern": "Creation:\n\u2014 Local Mock Creation in Test Case\n\nStubbing:\n\u2014 Test Case\n\nVerification:\n\u2014 Test Case",
    "classContext": {
      "packageName": "org.springframework.security.oauth2.client.web.server",
      "filePath": "C:\\java tool\\Spring\\spring-security\\oauth2\\oauth2-client\\src\\test\\java\\org\\springframework\\security\\oauth2\\client\\web\\server\\OAuth2AuthorizationCodeGrantWebFilterTests.java",
      "className": "OAuth2AuthorizationCodeGrantWebFilterTests"
    },
    "statements": [
      {
        "type": "DECLARATION",
        "code": "ServerRequestCache requestCache = mock(ServerRequestCache.class);",
        "line": 245,
        "locate": "Test Case",
        "locationContext": {
          "methodName": "filterWhenAuthorizationSucceedsAndRequestCacheConfiguredThenRequestCacheUsed",
          "methodAnnotations": [
            "@Test"
          ]
        }
      },
      {
        "type": "STUBBING",
        "code": "given(requestCache.getRedirectUri(any(ServerWebExchange.class))).willReturn(Mono.just(URI.create(\"/saved-request\")));",
        "line": 246,
        "locate": "Test Case",
        "locationContext": {
          "methodName": "filterWhenAuthorizationSucceedsAndRequestCacheConfiguredThenRequestCacheUsed",
          "methodAnnotations": [
            "@Test"
          ]
        }
      },
      {
        "type": "VERIFICATION",
        "code": "verify(requestCache).getRedirectUri(exchange);",
        "line": 250,
        "locate": "Test Case",
        "locationContext": {
          "methodName": "filterWhenAuthorizationSucceedsAndRequestCacheConfiguredThenRequestCacheUsed",
          "methodAnnotations": [
            "@Test"
          ]
        }
      }
    ],
    "pattern_id": 6
  }
]