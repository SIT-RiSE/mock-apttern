[
  {
    "variableName": "requestCache",
    "variableType": "ServerRequestCache",
    "mockedClass": "ServerRequestCache",
    "isReuseableMock": false,
    "mockPattern": "Creation:\n\u2014 Attribute Mock Creation\n\nStubbing:\n\u2014 Test Case\n\nVerification:\n\u2014 None",
    "classContext": {
      "packageName": "org.springframework.security.web.server.savedrequest",
      "filePath": "C:\\java tool\\Spring\\spring-security\\web\\src\\test\\java\\org\\springframework\\security\\web\\server\\savedrequest\\ServerRequestCacheWebFilterTests.java",
      "className": "ServerRequestCacheWebFilterTests"
    },
    "statements": [
      {
        "type": "FIELD_MOCK_CREATION",
        "code": "@Mock\r\nprivate ServerRequestCache requestCache;",
        "line": 54,
        "locate": "Attribute",
        "locationContext": {
          "methodName": "[FieldDeclaration]",
          "methodAnnotations": [
            "@Mock"
          ]
        }
      },
      {
        "type": "STUBBING",
        "code": "given(this.requestCache.removeMatchingRequest(any())).willReturn(Mono.just(savedRequest));",
        "line": 73,
        "locate": "Test Case",
        "locationContext": {
          "methodName": "filterWhenRequestMatchesThenRequestUpdated",
          "methodAnnotations": [
            "@Test"
          ]
        }
      },
      {
        "type": "STUBBING",
        "code": "given(this.requestCache.removeMatchingRequest(any())).willReturn(Mono.empty());",
        "line": 84,
        "locate": "Test Case",
        "locationContext": {
          "methodName": "filterWhenRequestDoesNotMatchThenRequestDoesNotChange",
          "methodAnnotations": [
            "@Test"
          ]
        }
      }
    ],
    "pattern_id": 4
  }
]