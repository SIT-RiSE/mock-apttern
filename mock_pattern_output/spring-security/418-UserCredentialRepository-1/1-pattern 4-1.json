[
  {
    "variableName": "userCredentials",
    "variableType": "UserCredentialRepository",
    "mockedClass": "UserCredentialRepository",
    "isReuseableMock": false,
    "mockPattern": "Creation:\n\u2014 Attribute Mock Creation\n\nStubbing:\n\u2014 Test Case\n\nVerification:\n\u2014 None",
    "classContext": {
      "packageName": "org.springframework.security.web.webauthn.management",
      "filePath": "C:\\java tool\\Spring\\spring-security\\web\\src\\test\\java\\org\\springframework\\security\\web\\webauthn\\management\\Webauthn4jRelyingPartyOperationsTests.java",
      "className": "Webauthn4jRelyingPartyOperationsTests"
    },
    "statements": [
      {
        "type": "FIELD_MOCK_CREATION",
        "code": "@Mock\r\nprivate UserCredentialRepository userCredentials;",
        "line": 75,
        "locate": "Attribute",
        "locationContext": {
          "methodName": "[FieldDeclaration]",
          "methodAnnotations": [
            "@Mock"
          ]
        }
      },
      {
        "type": "STUBBING",
        "code": "given(this.userCredentials.findByUserId(userEntity.getId())).willReturn(Arrays.asList(credentialRecord));",
        "line": 211,
        "locate": "Test Case",
        "locationContext": {
          "methodName": "createPublicKeyCredentialCreationOptionsWhenExcludesThenSuccess",
          "methodAnnotations": [
            "@Test"
          ]
        }
      },
      {
        "type": "STUBBING",
        "code": "given(this.userCredentials.findByCredentialId(publicKeyCredential.getRawId())).willReturn(TestCredentialRecord.userCredential().build());",
        "line": 239,
        "locate": "Test Case",
        "locationContext": {
          "methodName": "registerCredentialWhenExistsThenException",
          "methodAnnotations": [
            "@Test"
          ]
        }
      }
    ],
    "pattern_id": 4
  }
]