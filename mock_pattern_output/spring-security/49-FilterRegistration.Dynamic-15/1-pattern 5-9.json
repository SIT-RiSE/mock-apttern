[
  {
    "variableName": "registration",
    "variableType": "FilterRegistration.Dynamic",
    "mockedClass": "FilterRegistration.Dynamic",
    "isReuseableMock": "Fully Localized",
    "mockPattern": "Creation:\n\u2014 Local Mock Creation in Test Case\n\nStubbing:\n\u2014 None\n\nVerification:\n\u2014 Test Case",
    "classContext": {
      "packageName": "org.springframework.security.web.context",
      "filePath": "C:\\java tool\\Spring\\spring-security\\web\\src\\test\\java\\org\\springframework\\security\\web\\context\\AbstractSecurityWebApplicationInitializerTests.java",
      "className": "AbstractSecurityWebApplicationInitializerTests"
    },
    "statements": [
      {
        "type": "DECLARATION",
        "code": "FilterRegistration.Dynamic registration = mock(FilterRegistration.Dynamic.class);",
        "line": 61,
        "locate": "Test Case",
        "locationContext": {
          "methodName": "onStartupWhenDefaultContextThenRegistersSpringSecurityFilterChain",
          "methodAnnotations": [
            "@Test"
          ]
        }
      },
      {
        "type": "VERIFICATION",
        "code": "verify(registration).addMappingForUrlPatterns(DEFAULT_DISPATCH, false, \"/*\");",
        "line": 67,
        "locate": "Test Case",
        "locationContext": {
          "methodName": "onStartupWhenDefaultContextThenRegistersSpringSecurityFilterChain",
          "methodAnnotations": [
            "@Test"
          ]
        }
      },
      {
        "type": "VERIFICATION",
        "code": "verify(registration).setAsyncSupported(true);",
        "line": 68,
        "locate": "Test Case",
        "locationContext": {
          "methodName": "onStartupWhenDefaultContextThenRegistersSpringSecurityFilterChain",
          "methodAnnotations": [
            "@Test"
          ]
        }
      }
    ],
    "pattern_id": 5
  },
  {
    "variableName": "registration",
    "variableType": "FilterRegistration.Dynamic",
    "mockedClass": "FilterRegistration.Dynamic",
    "isReuseableMock": "Fully Localized",
    "mockPattern": "Creation:\n\u2014 Local Mock Creation in Test Case\n\nStubbing:\n\u2014 None\n\nVerification:\n\u2014 Test Case",
    "classContext": {
      "packageName": "org.springframework.security.web.context",
      "filePath": "C:\\java tool\\Spring\\spring-security\\web\\src\\test\\java\\org\\springframework\\security\\web\\context\\AbstractSecurityWebApplicationInitializerTests.java",
      "className": "AbstractSecurityWebApplicationInitializerTests"
    },
    "statements": [
      {
        "type": "DECLARATION",
        "code": "FilterRegistration.Dynamic registration = mock(FilterRegistration.Dynamic.class);",
        "line": 75,
        "locate": "Test Case",
        "locationContext": {
          "methodName": "onStartupWhenConfigurationClassThenAddsContextLoaderListener",
          "methodAnnotations": [
            "@Test"
          ]
        }
      },
      {
        "type": "VERIFICATION",
        "code": "verify(registration).addMappingForUrlPatterns(DEFAULT_DISPATCH, false, \"/*\");",
        "line": 81,
        "locate": "Test Case",
        "locationContext": {
          "methodName": "onStartupWhenConfigurationClassThenAddsContextLoaderListener",
          "methodAnnotations": [
            "@Test"
          ]
        }
      },
      {
        "type": "VERIFICATION",
        "code": "verify(registration).setAsyncSupported(true);",
        "line": 82,
        "locate": "Test Case",
        "locationContext": {
          "methodName": "onStartupWhenConfigurationClassThenAddsContextLoaderListener",
          "methodAnnotations": [
            "@Test"
          ]
        }
      }
    ],
    "pattern_id": 5
  },
  {
    "variableName": "registration",
    "variableType": "FilterRegistration.Dynamic",
    "mockedClass": "FilterRegistration.Dynamic",
    "isReuseableMock": "Fully Localized",
    "mockPattern": "Creation:\n\u2014 Local Mock Creation in Test Case\n\nStubbing:\n\u2014 None\n\nVerification:\n\u2014 Test Case",
    "classContext": {
      "packageName": "org.springframework.security.web.context",
      "filePath": "C:\\java tool\\Spring\\spring-security\\web\\src\\test\\java\\org\\springframework\\security\\web\\context\\AbstractSecurityWebApplicationInitializerTests.java",
      "className": "AbstractSecurityWebApplicationInitializerTests"
    },
    "statements": [
      {
        "type": "DECLARATION",
        "code": "FilterRegistration.Dynamic registration = mock(FilterRegistration.Dynamic.class);",
        "line": 89,
        "locate": "Test Case",
        "locationContext": {
          "methodName": "onStartupWhenEnableHttpSessionEventPublisherIsTrueThenAddsHttpSessionEventPublisher",
          "methodAnnotations": [
            "@Test"
          ]
        }
      },
      {
        "type": "VERIFICATION",
        "code": "verify(registration).addMappingForUrlPatterns(DEFAULT_DISPATCH, false, \"/*\");",
        "line": 99,
        "locate": "Test Case",
        "locationContext": {
          "methodName": "onStartupWhenEnableHttpSessionEventPublisherIsTrueThenAddsHttpSessionEventPublisher",
          "methodAnnotations": [
            "@Test"
          ]
        }
      },
      {
        "type": "VERIFICATION",
        "code": "verify(registration).setAsyncSupported(true);",
        "line": 100,
        "locate": "Test Case",
        "locationContext": {
          "methodName": "onStartupWhenEnableHttpSessionEventPublisherIsTrueThenAddsHttpSessionEventPublisher",
          "methodAnnotations": [
            "@Test"
          ]
        }
      }
    ],
    "pattern_id": 5
  },
  {
    "variableName": "registration",
    "variableType": "FilterRegistration.Dynamic",
    "mockedClass": "FilterRegistration.Dynamic",
    "isReuseableMock": "Fully Localized",
    "mockPattern": "Creation:\n\u2014 Local Mock Creation in Test Case\n\nStubbing:\n\u2014 None\n\nVerification:\n\u2014 Test Case",
    "classContext": {
      "packageName": "org.springframework.security.web.context",
      "filePath": "C:\\java tool\\Spring\\spring-security\\web\\src\\test\\java\\org\\springframework\\security\\web\\context\\AbstractSecurityWebApplicationInitializerTests.java",
      "className": "AbstractSecurityWebApplicationInitializerTests"
    },
    "statements": [
      {
        "type": "DECLARATION",
        "code": "FilterRegistration.Dynamic registration = mock(FilterRegistration.Dynamic.class);",
        "line": 107,
        "locate": "Test Case",
        "locationContext": {
          "methodName": "onStartupWhenCustomSecurityDispatcherTypesThenUses",
          "methodAnnotations": [
            "@Test"
          ]
        }
      },
      {
        "type": "VERIFICATION",
        "code": "verify(registration).addMappingForUrlPatterns(EnumSet.of(DispatcherType.REQUEST, DispatcherType.ERROR, DispatcherType.FORWARD), false, \"/*\");",
        "line": 117,
        "locate": "Test Case",
        "locationContext": {
          "methodName": "onStartupWhenCustomSecurityDispatcherTypesThenUses",
          "methodAnnotations": [
            "@Test"
          ]
        }
      },
      {
        "type": "VERIFICATION",
        "code": "verify(registration).setAsyncSupported(true);",
        "line": 119,
        "locate": "Test Case",
        "locationContext": {
          "methodName": "onStartupWhenCustomSecurityDispatcherTypesThenUses",
          "methodAnnotations": [
            "@Test"
          ]
        }
      }
    ],
    "pattern_id": 5
  },
  {
    "variableName": "registration",
    "variableType": "FilterRegistration.Dynamic",
    "mockedClass": "FilterRegistration.Dynamic",
    "isReuseableMock": "Fully Localized",
    "mockPattern": "Creation:\n\u2014 Local Mock Creation in Test Case\n\nStubbing:\n\u2014 None\n\nVerification:\n\u2014 Test Case",
    "classContext": {
      "packageName": "org.springframework.security.web.context",
      "filePath": "C:\\java tool\\Spring\\spring-security\\web\\src\\test\\java\\org\\springframework\\security\\web\\context\\AbstractSecurityWebApplicationInitializerTests.java",
      "className": "AbstractSecurityWebApplicationInitializerTests"
    },
    "statements": [
      {
        "type": "DECLARATION",
        "code": "FilterRegistration.Dynamic registration = mock(FilterRegistration.Dynamic.class);",
        "line": 126,
        "locate": "Test Case",
        "locationContext": {
          "methodName": "onStartupWhenCustomDispatcherWebApplicationContextSuffixThenUses",
          "methodAnnotations": [
            "@Test"
          ]
        }
      },
      {
        "type": "VERIFICATION",
        "code": "verify(registration).addMappingForUrlPatterns(DEFAULT_DISPATCH, false, \"/*\");",
        "line": 139,
        "locate": "Test Case",
        "locationContext": {
          "methodName": "onStartupWhenCustomDispatcherWebApplicationContextSuffixThenUses",
          "methodAnnotations": [
            "@Test"
          ]
        }
      },
      {
        "type": "VERIFICATION",
        "code": "verify(registration).setAsyncSupported(true);",
        "line": 140,
        "locate": "Test Case",
        "locationContext": {
          "methodName": "onStartupWhenCustomDispatcherWebApplicationContextSuffixThenUses",
          "methodAnnotations": [
            "@Test"
          ]
        }
      }
    ],
    "pattern_id": 5
  },
  {
    "variableName": "registration",
    "variableType": "FilterRegistration.Dynamic",
    "mockedClass": "FilterRegistration.Dynamic",
    "isReuseableMock": "Fully Localized",
    "mockPattern": "Creation:\n\u2014 Local Mock Creation in Test Case\n\nStubbing:\n\u2014 None\n\nVerification:\n\u2014 Test Case",
    "classContext": {
      "packageName": "org.springframework.security.web.context",
      "filePath": "C:\\java tool\\Spring\\spring-security\\web\\src\\test\\java\\org\\springframework\\security\\web\\context\\AbstractSecurityWebApplicationInitializerTests.java",
      "className": "AbstractSecurityWebApplicationInitializerTests"
    },
    "statements": [
      {
        "type": "DECLARATION",
        "code": "FilterRegistration.Dynamic registration = mock(FilterRegistration.Dynamic.class);",
        "line": 158,
        "locate": "Test Case",
        "locationContext": {
          "methodName": "onStartupWhenInsertFiltersThenInserted",
          "methodAnnotations": [
            "@Test"
          ]
        }
      },
      {
        "type": "VERIFICATION",
        "code": "verify(registration, times(3)).addMappingForUrlPatterns(DEFAULT_DISPATCH, false, \"/*\");",
        "line": 170,
        "locate": "Test Case",
        "locationContext": {
          "methodName": "onStartupWhenInsertFiltersThenInserted",
          "methodAnnotations": [
            "@Test"
          ]
        }
      },
      {
        "type": "VERIFICATION",
        "code": "verify(registration, times(3)).setAsyncSupported(true);",
        "line": 171,
        "locate": "Test Case",
        "locationContext": {
          "methodName": "onStartupWhenInsertFiltersThenInserted",
          "methodAnnotations": [
            "@Test"
          ]
        }
      }
    ],
    "pattern_id": 5
  },
  {
    "variableName": "registration",
    "variableType": "FilterRegistration.Dynamic",
    "mockedClass": "FilterRegistration.Dynamic",
    "isReuseableMock": "Fully Localized",
    "mockPattern": "Creation:\n\u2014 Local Mock Creation in Test Case\n\nStubbing:\n\u2014 None\n\nVerification:\n\u2014 Test Case",
    "classContext": {
      "packageName": "org.springframework.security.web.context",
      "filePath": "C:\\java tool\\Spring\\spring-security\\web\\src\\test\\java\\org\\springframework\\security\\web\\context\\AbstractSecurityWebApplicationInitializerTests.java",
      "className": "AbstractSecurityWebApplicationInitializerTests"
    },
    "statements": [
      {
        "type": "DECLARATION",
        "code": "FilterRegistration.Dynamic registration = mock(FilterRegistration.Dynamic.class);",
        "line": 181,
        "locate": "Test Case",
        "locationContext": {
          "methodName": "onStartupWhenDuplicateFilterInsertedThenException",
          "methodAnnotations": [
            "@Test"
          ]
        }
      },
      {
        "type": "VERIFICATION",
        "code": "verify(registration).addMappingForUrlPatterns(DEFAULT_DISPATCH, false, \"/*\");",
        "line": 195,
        "locate": "Test Case",
        "locationContext": {
          "methodName": "onStartupWhenDuplicateFilterInsertedThenException",
          "methodAnnotations": [
            "@Test"
          ]
        }
      }
    ],
    "pattern_id": 5
  },
  {
    "variableName": "registration",
    "variableType": "FilterRegistration.Dynamic",
    "mockedClass": "FilterRegistration.Dynamic",
    "isReuseableMock": "Fully Localized",
    "mockPattern": "Creation:\n\u2014 Local Mock Creation in Test Case\n\nStubbing:\n\u2014 None\n\nVerification:\n\u2014 Test Case",
    "classContext": {
      "packageName": "org.springframework.security.web.context",
      "filePath": "C:\\java tool\\Spring\\spring-security\\web\\src\\test\\java\\org\\springframework\\security\\web\\context\\AbstractSecurityWebApplicationInitializerTests.java",
      "className": "AbstractSecurityWebApplicationInitializerTests"
    },
    "statements": [
      {
        "type": "DECLARATION",
        "code": "FilterRegistration.Dynamic registration = mock(FilterRegistration.Dynamic.class);",
        "line": 240,
        "locate": "Test Case",
        "locationContext": {
          "methodName": "onStartupWhenAppendFiltersThenAppended",
          "methodAnnotations": [
            "@Test"
          ]
        }
      },
      {
        "type": "VERIFICATION",
        "code": "verify(registration, times(1)).addMappingForUrlPatterns(DEFAULT_DISPATCH, false, \"/*\");",
        "line": 251,
        "locate": "Test Case",
        "locationContext": {
          "methodName": "onStartupWhenAppendFiltersThenAppended",
          "methodAnnotations": [
            "@Test"
          ]
        }
      },
      {
        "type": "VERIFICATION",
        "code": "verify(registration, times(2)).addMappingForUrlPatterns(DEFAULT_DISPATCH, true, \"/*\");",
        "line": 252,
        "locate": "Test Case",
        "locationContext": {
          "methodName": "onStartupWhenAppendFiltersThenAppended",
          "methodAnnotations": [
            "@Test"
          ]
        }
      },
      {
        "type": "VERIFICATION",
        "code": "verify(registration, times(3)).setAsyncSupported(true);",
        "line": 253,
        "locate": "Test Case",
        "locationContext": {
          "methodName": "onStartupWhenAppendFiltersThenAppended",
          "methodAnnotations": [
            "@Test"
          ]
        }
      }
    ],
    "pattern_id": 5
  },
  {
    "variableName": "registration",
    "variableType": "FilterRegistration.Dynamic",
    "mockedClass": "FilterRegistration.Dynamic",
    "isReuseableMock": "Fully Localized",
    "mockPattern": "Creation:\n\u2014 Local Mock Creation in Test Case\n\nStubbing:\n\u2014 None\n\nVerification:\n\u2014 Test Case",
    "classContext": {
      "packageName": "org.springframework.security.web.context",
      "filePath": "C:\\java tool\\Spring\\spring-security\\web\\src\\test\\java\\org\\springframework\\security\\web\\context\\AbstractSecurityWebApplicationInitializerTests.java",
      "className": "AbstractSecurityWebApplicationInitializerTests"
    },
    "statements": [
      {
        "type": "DECLARATION",
        "code": "FilterRegistration.Dynamic registration = mock(FilterRegistration.Dynamic.class);",
        "line": 262,
        "locate": "Test Case",
        "locationContext": {
          "methodName": "onStartupWhenDuplicateFilterAppendedThenException",
          "methodAnnotations": [
            "@Test"
          ]
        }
      },
      {
        "type": "VERIFICATION",
        "code": "verify(registration).addMappingForUrlPatterns(DEFAULT_DISPATCH, false, \"/*\");",
        "line": 276,
        "locate": "Test Case",
        "locationContext": {
          "methodName": "onStartupWhenDuplicateFilterAppendedThenException",
          "methodAnnotations": [
            "@Test"
          ]
        }
      }
    ],
    "pattern_id": 5
  }
]