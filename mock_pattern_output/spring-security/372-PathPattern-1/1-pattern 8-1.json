[
  {
    "variableName": "pattern",
    "variableType": "PathPattern",
    "mockedClass": "PathPattern",
    "isReuseableMock": "Hybrid",
    "mockPattern": "Creation:\n\u2014 Attribute Mock Creation\n\nStubbing:\n\u2014 Test Case\n\nVerification:\n\u2014 Test Case",
    "classContext": {
      "packageName": "org.springframework.security.web.server.util.matcher",
      "filePath": "C:\\java tool\\Spring\\spring-security\\web\\src\\test\\java\\org\\springframework\\security\\web\\server\\util\\matcher\\PathMatcherServerWebExchangeMatcherTests.java",
      "className": "PathMatcherServerWebExchangeMatcherTests"
    },
    "statements": [
      {
        "type": "FIELD_MOCK_CREATION",
        "code": "@Mock\r\nPathPattern pattern;",
        "line": 47,
        "locate": "Attribute",
        "locationContext": {
          "methodName": "[FieldDeclaration]",
          "methodAnnotations": [
            "@Mock"
          ]
        }
      },
      {
        "type": "STUBBING",
        "code": "given(this.pattern.matches(any())).willReturn(true);",
        "line": 83,
        "locate": "Test Case",
        "locationContext": {
          "methodName": "matchesWhenPathMatcherTrueThenReturnTrue",
          "methodAnnotations": [
            "@Test"
          ]
        }
      },
      {
        "type": "STUBBING",
        "code": "given(this.pattern.matchAndExtract(any())).willReturn(this.pathMatchInfo);",
        "line": 84,
        "locate": "Test Case",
        "locationContext": {
          "methodName": "matchesWhenPathMatcherTrueThenReturnTrue",
          "methodAnnotations": [
            "@Test"
          ]
        }
      },
      {
        "type": "STUBBING",
        "code": "given(this.pattern.matches(any())).willReturn(false);",
        "line": 91,
        "locate": "Test Case",
        "locationContext": {
          "methodName": "matchesWhenPathMatcherFalseThenReturnFalse",
          "methodAnnotations": [
            "@Test"
          ]
        }
      },
      {
        "type": "STUBBING",
        "code": "given(this.pattern.matches(any())).willReturn(true);",
        "line": 99,
        "locate": "Test Case",
        "locationContext": {
          "methodName": "matchesWhenPathMatcherTrueAndMethodTrueThenReturnTrue",
          "methodAnnotations": [
            "@Test"
          ]
        }
      },
      {
        "type": "STUBBING",
        "code": "given(this.pattern.matchAndExtract(any())).willReturn(this.pathMatchInfo);",
        "line": 100,
        "locate": "Test Case",
        "locationContext": {
          "methodName": "matchesWhenPathMatcherTrueAndMethodTrueThenReturnTrue",
          "methodAnnotations": [
            "@Test"
          ]
        }
      },
      {
        "type": "VERIFICATION",
        "code": "verifyNoMoreInteractions(this.pattern);",
        "line": 111,
        "locate": "Test Case",
        "locationContext": {
          "methodName": "matchesWhenPathMatcherTrueAndMethodFalseThenReturnFalse",
          "methodAnnotations": [
            "@Test"
          ]
        }
      }
    ],
    "pattern_id": 8
  }
]