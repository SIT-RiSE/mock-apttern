[
  {
    "variableName": "matcher2",
    "variableType": "RequestMatcher",
    "mockedClass": "RequestMatcher",
    "isReuseableMock": "Hybrid",
    "mockPattern": "Creation:\n\u2014 Attribute Mock Creation\n\nStubbing:\n\u2014 Test Case\n\nVerification:\n\u2014 Test Case",
    "classContext": {
      "packageName": "org.springframework.security.web.authentication.logout",
      "filePath": "C:\\java tool\\Spring\\spring-security\\web\\src\\test\\java\\org\\springframework\\security\\web\\authentication\\logout\\DelegatingLogoutSuccessHandlerTests.java",
      "className": "DelegatingLogoutSuccessHandlerTests"
    },
    "statements": [
      {
        "type": "FIELD_MOCK_CREATION",
        "code": "@Mock\r\nRequestMatcher matcher2;",
        "line": 48,
        "locate": "Attribute",
        "locationContext": {
          "methodName": "[FieldDeclaration]",
          "methodAnnotations": [
            "@Mock"
          ]
        }
      },
      {
        "type": "VERIFICATION",
        "code": "verifyNoMoreInteractions(this.matcher2, this.handler2, this.defaultHandler);",
        "line": 85,
        "locate": "Test Case",
        "locationContext": {
          "methodName": "onLogoutSuccessFirstMatches",
          "methodAnnotations": [
            "@Test"
          ]
        }
      },
      {
        "type": "STUBBING",
        "code": "given(this.matcher2.matches(this.request)).willReturn(true);",
        "line": 91,
        "locate": "Test Case",
        "locationContext": {
          "methodName": "onLogoutSuccessSecondMatches",
          "methodAnnotations": [
            "@Test"
          ]
        }
      }
    ],
    "pattern_id": 8
  },
  {
    "variableName": "delegate2",
    "variableType": "RequestMatcher",
    "mockedClass": "RequestMatcher",
    "isReuseableMock": "Hybrid",
    "mockPattern": "Creation:\n\u2014 Attribute Mock Creation\n\nStubbing:\n\u2014 Test Case\n\nVerification:\n\u2014 Test Case",
    "classContext": {
      "packageName": "org.springframework.security.web.util.matcher",
      "filePath": "C:\\java tool\\Spring\\spring-security\\web\\src\\test\\java\\org\\springframework\\security\\web\\util\\matcher\\OrRequestMatcherTests.java",
      "className": "OrRequestMatcherTests"
    },
    "statements": [
      {
        "type": "FIELD_MOCK_CREATION",
        "code": "@Mock\r\nprivate RequestMatcher delegate2;",
        "line": 48,
        "locate": "Attribute",
        "locationContext": {
          "methodName": "[FieldDeclaration]",
          "methodAnnotations": [
            "@Mock"
          ]
        }
      },
      {
        "type": "STUBBING",
        "code": "given(this.delegate2.matches(this.request)).willReturn(false);",
        "line": 117,
        "locate": "Test Case",
        "locationContext": {
          "methodName": "matchesMultiBothFalse",
          "methodAnnotations": [
            "@Test"
          ]
        }
      },
      {
        "type": "STUBBING",
        "code": "given(this.delegate2.matcher(this.request)).willReturn(MatchResult.match(Map.of(\"param\", \"othervalue\")));",
        "line": 134,
        "locate": "Test Case",
        "locationContext": {
          "methodName": "matcherWhenMatchersHavePlaceholdersThenPropagatesFirstMatch",
          "methodAnnotations": [
            "@Test"
          ]
        }
      },
      {
        "type": "VERIFICATION",
        "code": "verifyNoInteractions(this.delegate2);",
        "line": 137,
        "locate": "Test Case",
        "locationContext": {
          "methodName": "matcherWhenMatchersHavePlaceholdersThenPropagatesFirstMatch",
          "methodAnnotations": [
            "@Test"
          ]
        }
      },
      {
        "type": "STUBBING",
        "code": "given(this.delegate2.matcher(this.request)).willReturn(MatchResult.match(Map.of(\"param\", \"value\")));",
        "line": 140,
        "locate": "Test Case",
        "locationContext": {
          "methodName": "matcherWhenMatchersHavePlaceholdersThenPropagatesFirstMatch",
          "methodAnnotations": [
            "@Test"
          ]
        }
      },
      {
        "type": "VERIFICATION",
        "code": "verifyNoInteractions(this.delegate2);",
        "line": 143,
        "locate": "Test Case",
        "locationContext": {
          "methodName": "matcherWhenMatchersHavePlaceholdersThenPropagatesFirstMatch",
          "methodAnnotations": [
            "@Test"
          ]
        }
      },
      {
        "type": "STUBBING",
        "code": "given(this.delegate2.matcher(this.request)).willReturn(MatchResult.match(Map.of(\"param\", \"value\")));",
        "line": 146,
        "locate": "Test Case",
        "locationContext": {
          "methodName": "matcherWhenMatchersHavePlaceholdersThenPropagatesFirstMatch",
          "methodAnnotations": [
            "@Test"
          ]
        }
      }
    ],
    "pattern_id": 8
  }
]