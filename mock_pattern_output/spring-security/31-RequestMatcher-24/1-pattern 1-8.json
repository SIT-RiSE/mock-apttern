[
  {
    "variableName": "matcher",
    "variableType": "RequestMatcher",
    "mockedClass": "RequestMatcher",
    "isReuseableMock": false,
    "mockPattern": "Creation:\n\u2014 Local Mock Creation in Test Case\n\nStubbing:\n\u2014 Test Case\n\nVerification:\n\u2014 None",
    "classContext": {
      "packageName": "org.springframework.security.web.access",
      "filePath": "C:\\java tool\\Spring\\spring-security\\web\\src\\test\\java\\org\\springframework\\security\\web\\access\\RequestMatcherDelegatingAccessDeniedHandlerTests.java",
      "className": "RequestMatcherDelegatingAccessDeniedHandlerTests"
    },
    "statements": [
      {
        "type": "DECLARATION",
        "code": "RequestMatcher matcher = mock(RequestMatcher.class);",
        "line": 56,
        "locate": "Test Case",
        "locationContext": {
          "methodName": "handleWhenNothingMatchesThenOnlyDefaultHandlerInvoked",
          "methodAnnotations": [
            "@Test"
          ]
        }
      },
      {
        "type": "STUBBING",
        "code": "given(matcher.matches(this.request)).willReturn(false);",
        "line": 57,
        "locate": "Test Case",
        "locationContext": {
          "methodName": "handleWhenNothingMatchesThenOnlyDefaultHandlerInvoked",
          "methodAnnotations": [
            "@Test"
          ]
        }
      }
    ],
    "pattern_id": 1
  },
  {
    "variableName": "firstMatcher",
    "variableType": "RequestMatcher",
    "mockedClass": "RequestMatcher",
    "isReuseableMock": false,
    "mockPattern": "Creation:\n\u2014 Local Mock Creation in Test Case\n\nStubbing:\n\u2014 Test Case\n\nVerification:\n\u2014 None",
    "classContext": {
      "packageName": "org.springframework.security.web.access",
      "filePath": "C:\\java tool\\Spring\\spring-security\\web\\src\\test\\java\\org\\springframework\\security\\web\\access\\RequestMatcherDelegatingAccessDeniedHandlerTests.java",
      "className": "RequestMatcherDelegatingAccessDeniedHandlerTests"
    },
    "statements": [
      {
        "type": "DECLARATION",
        "code": "RequestMatcher firstMatcher = mock(RequestMatcher.class);",
        "line": 68,
        "locate": "Test Case",
        "locationContext": {
          "methodName": "handleWhenFirstMatchesThenOnlyFirstInvoked",
          "methodAnnotations": [
            "@Test"
          ]
        }
      },
      {
        "type": "STUBBING",
        "code": "given(firstMatcher.matches(this.request)).willReturn(true);",
        "line": 71,
        "locate": "Test Case",
        "locationContext": {
          "methodName": "handleWhenFirstMatchesThenOnlyFirstInvoked",
          "methodAnnotations": [
            "@Test"
          ]
        }
      }
    ],
    "pattern_id": 1
  },
  {
    "variableName": "secondMatcher",
    "variableType": "RequestMatcher",
    "mockedClass": "RequestMatcher",
    "isReuseableMock": false,
    "mockPattern": "Creation:\n\u2014 Local Mock Creation in Test Case\n\nStubbing:\n\u2014 Test Case\n\nVerification:\n\u2014 None",
    "classContext": {
      "packageName": "org.springframework.security.web.access",
      "filePath": "C:\\java tool\\Spring\\spring-security\\web\\src\\test\\java\\org\\springframework\\security\\web\\access\\RequestMatcherDelegatingAccessDeniedHandlerTests.java",
      "className": "RequestMatcherDelegatingAccessDeniedHandlerTests"
    },
    "statements": [
      {
        "type": "DECLARATION",
        "code": "RequestMatcher secondMatcher = mock(RequestMatcher.class);",
        "line": 87,
        "locate": "Test Case",
        "locationContext": {
          "methodName": "handleWhenSecondMatchesThenOnlySecondInvoked",
          "methodAnnotations": [
            "@Test"
          ]
        }
      },
      {
        "type": "STUBBING",
        "code": "given(secondMatcher.matches(this.request)).willReturn(true);",
        "line": 89,
        "locate": "Test Case",
        "locationContext": {
          "methodName": "handleWhenSecondMatchesThenOnlySecondInvoked",
          "methodAnnotations": [
            "@Test"
          ]
        }
      }
    ],
    "pattern_id": 1
  },
  {
    "variableName": "firstMatcher",
    "variableType": "RequestMatcher",
    "mockedClass": "RequestMatcher",
    "isReuseableMock": false,
    "mockPattern": "Creation:\n\u2014 Local Mock Creation in Test Case\n\nStubbing:\n\u2014 Test Case\n\nVerification:\n\u2014 None",
    "classContext": {
      "packageName": "org.springframework.security.web.access",
      "filePath": "C:\\java tool\\Spring\\spring-security\\web\\src\\test\\java\\org\\springframework\\security\\web\\access\\RequestMatcherDelegatingAccessDeniedHandlerTests.java",
      "className": "RequestMatcherDelegatingAccessDeniedHandlerTests"
    },
    "statements": [
      {
        "type": "DECLARATION",
        "code": "RequestMatcher firstMatcher = mock(RequestMatcher.class);",
        "line": 85,
        "locate": "Test Case",
        "locationContext": {
          "methodName": "handleWhenSecondMatchesThenOnlySecondInvoked",
          "methodAnnotations": [
            "@Test"
          ]
        }
      },
      {
        "type": "STUBBING",
        "code": "given(firstMatcher.matches(this.request)).willReturn(false);",
        "line": 88,
        "locate": "Test Case",
        "locationContext": {
          "methodName": "handleWhenSecondMatchesThenOnlySecondInvoked",
          "methodAnnotations": [
            "@Test"
          ]
        }
      }
    ],
    "pattern_id": 1
  },
  {
    "variableName": "firstRM",
    "variableType": "RequestMatcher",
    "mockedClass": "RequestMatcher",
    "isReuseableMock": false,
    "mockPattern": "Creation:\n\u2014 Local Mock Creation in Test Case\n\nStubbing:\n\u2014 Test Case\n\nVerification:\n\u2014 None",
    "classContext": {
      "packageName": "org.springframework.security.web.authentication",
      "filePath": "C:\\java tool\\Spring\\spring-security\\web\\src\\test\\java\\org\\springframework\\security\\web\\authentication\\DelegatingAuthenticationEntryPointTests.java",
      "className": "DelegatingAuthenticationEntryPointTests"
    },
    "statements": [
      {
        "type": "DECLARATION",
        "code": "RequestMatcher firstRM = mock(RequestMatcher.class);",
        "line": 62,
        "locate": "Test Case",
        "locationContext": {
          "methodName": "testDefaultEntryPoint",
          "methodAnnotations": [
            "@Test"
          ]
        }
      },
      {
        "type": "STUBBING",
        "code": "given(firstRM.matches(this.request)).willReturn(false);",
        "line": 63,
        "locate": "Test Case",
        "locationContext": {
          "methodName": "testDefaultEntryPoint",
          "methodAnnotations": [
            "@Test"
          ]
        }
      }
    ],
    "pattern_id": 1
  },
  {
    "variableName": "firstRM",
    "variableType": "RequestMatcher",
    "mockedClass": "RequestMatcher",
    "isReuseableMock": false,
    "mockPattern": "Creation:\n\u2014 Local Mock Creation in Test Case\n\nStubbing:\n\u2014 Test Case\n\nVerification:\n\u2014 None",
    "classContext": {
      "packageName": "org.springframework.security.web.authentication",
      "filePath": "C:\\java tool\\Spring\\spring-security\\web\\src\\test\\java\\org\\springframework\\security\\web\\authentication\\DelegatingAuthenticationEntryPointTests.java",
      "className": "DelegatingAuthenticationEntryPointTests"
    },
    "statements": [
      {
        "type": "DECLARATION",
        "code": "RequestMatcher firstRM = mock(RequestMatcher.class);",
        "line": 73,
        "locate": "Test Case",
        "locationContext": {
          "methodName": "testFirstEntryPoint",
          "methodAnnotations": [
            "@Test"
          ]
        }
      },
      {
        "type": "STUBBING",
        "code": "given(firstRM.matches(this.request)).willReturn(true);",
        "line": 76,
        "locate": "Test Case",
        "locationContext": {
          "methodName": "testFirstEntryPoint",
          "methodAnnotations": [
            "@Test"
          ]
        }
      }
    ],
    "pattern_id": 1
  },
  {
    "variableName": "secondRM",
    "variableType": "RequestMatcher",
    "mockedClass": "RequestMatcher",
    "isReuseableMock": false,
    "mockPattern": "Creation:\n\u2014 Local Mock Creation in Test Case\n\nStubbing:\n\u2014 Test Case\n\nVerification:\n\u2014 None",
    "classContext": {
      "packageName": "org.springframework.security.web.authentication",
      "filePath": "C:\\java tool\\Spring\\spring-security\\web\\src\\test\\java\\org\\springframework\\security\\web\\authentication\\DelegatingAuthenticationEntryPointTests.java",
      "className": "DelegatingAuthenticationEntryPointTests"
    },
    "statements": [
      {
        "type": "DECLARATION",
        "code": "RequestMatcher secondRM = mock(RequestMatcher.class);",
        "line": 91,
        "locate": "Test Case",
        "locationContext": {
          "methodName": "testSecondEntryPoint",
          "methodAnnotations": [
            "@Test"
          ]
        }
      },
      {
        "type": "STUBBING",
        "code": "given(secondRM.matches(this.request)).willReturn(true);",
        "line": 93,
        "locate": "Test Case",
        "locationContext": {
          "methodName": "testSecondEntryPoint",
          "methodAnnotations": [
            "@Test"
          ]
        }
      }
    ],
    "pattern_id": 1
  },
  {
    "variableName": "firstRM",
    "variableType": "RequestMatcher",
    "mockedClass": "RequestMatcher",
    "isReuseableMock": false,
    "mockPattern": "Creation:\n\u2014 Local Mock Creation in Test Case\n\nStubbing:\n\u2014 Test Case\n\nVerification:\n\u2014 None",
    "classContext": {
      "packageName": "org.springframework.security.web.authentication",
      "filePath": "C:\\java tool\\Spring\\spring-security\\web\\src\\test\\java\\org\\springframework\\security\\web\\authentication\\DelegatingAuthenticationEntryPointTests.java",
      "className": "DelegatingAuthenticationEntryPointTests"
    },
    "statements": [
      {
        "type": "DECLARATION",
        "code": "RequestMatcher firstRM = mock(RequestMatcher.class);",
        "line": 89,
        "locate": "Test Case",
        "locationContext": {
          "methodName": "testSecondEntryPoint",
          "methodAnnotations": [
            "@Test"
          ]
        }
      },
      {
        "type": "STUBBING",
        "code": "given(firstRM.matches(this.request)).willReturn(false);",
        "line": 92,
        "locate": "Test Case",
        "locationContext": {
          "methodName": "testSecondEntryPoint",
          "methodAnnotations": [
            "@Test"
          ]
        }
      }
    ],
    "pattern_id": 1
  }
]