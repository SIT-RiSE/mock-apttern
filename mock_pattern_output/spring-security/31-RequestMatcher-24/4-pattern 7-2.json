[
  {
    "variableName": "alwaysDeny",
    "variableType": "RequestMatcher",
    "mockedClass": "RequestMatcher",
    "isReuseableMock": "Fully Shared",
    "mockPattern": "Creation:\n\u2014 Attribute Mock Creation\n\nStubbing:\n\u2014 @Before\n\nVerification:\n\u2014 None",
    "classContext": {
      "packageName": "org.springframework.security.web.access",
      "filePath": "C:\\java tool\\Spring\\spring-security\\web\\src\\test\\java\\org\\springframework\\security\\web\\access\\RequestMatcherDelegatingWebInvocationPrivilegeEvaluatorTests.java",
      "className": "RequestMatcherDelegatingWebInvocationPrivilegeEvaluatorTests"
    },
    "statements": [
      {
        "type": "FIELD_MOCK_CREATION",
        "code": "private final RequestMatcher alwaysDeny = mock(RequestMatcher.class);",
        "line": 55,
        "locate": "Attribute",
        "locationContext": {
          "methodName": "[FieldDeclaration]",
          "methodAnnotations": []
        }
      },
      {
        "type": "STUBBING",
        "code": "given(this.alwaysDeny.matches(any())).willReturn(false);",
        "line": 64,
        "locate": "@Before",
        "locationContext": {
          "methodName": "setup",
          "methodAnnotations": [
            "@BeforeEach"
          ]
        }
      }
    ],
    "pattern_id": 7
  },
  {
    "variableName": "alwaysMatch",
    "variableType": "RequestMatcher",
    "mockedClass": "RequestMatcher",
    "isReuseableMock": "Fully Shared",
    "mockPattern": "Creation:\n\u2014 Attribute Mock Creation\n\nStubbing:\n\u2014 @Before\n\nVerification:\n\u2014 None",
    "classContext": {
      "packageName": "org.springframework.security.web.access",
      "filePath": "C:\\java tool\\Spring\\spring-security\\web\\src\\test\\java\\org\\springframework\\security\\web\\access\\RequestMatcherDelegatingWebInvocationPrivilegeEvaluatorTests.java",
      "className": "RequestMatcherDelegatingWebInvocationPrivilegeEvaluatorTests"
    },
    "statements": [
      {
        "type": "FIELD_MOCK_CREATION",
        "code": "private final RequestMatcher alwaysMatch = mock(RequestMatcher.class);",
        "line": 53,
        "locate": "Attribute",
        "locationContext": {
          "methodName": "[FieldDeclaration]",
          "methodAnnotations": []
        }
      },
      {
        "type": "STUBBING",
        "code": "given(this.alwaysMatch.matches(any())).willReturn(true);",
        "line": 63,
        "locate": "@Before",
        "locationContext": {
          "methodName": "setup",
          "methodAnnotations": [
            "@BeforeEach"
          ]
        }
      }
    ],
    "pattern_id": 7
  }
]