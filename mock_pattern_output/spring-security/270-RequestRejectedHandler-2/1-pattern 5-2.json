[
  {
    "variableName": "rjh",
    "variableType": "RequestRejectedHandler",
    "mockedClass": "RequestRejectedHandler",
    "isReuseableMock": false,
    "mockPattern": "Creation:\n\u2014 Local Mock Creation in Test Case\n\nStubbing:\n\u2014 None\n\nVerification:\n\u2014 Test Case",
    "classContext": {
      "packageName": "org.springframework.security.web",
      "filePath": "C:\\java tool\\Spring\\spring-security\\web\\src\\test\\java\\org\\springframework\\security\\web\\FilterChainProxyTests.java",
      "className": "FilterChainProxyTests"
    },
    "statements": [
      {
        "type": "DECLARATION",
        "code": "RequestRejectedHandler rjh = mock(RequestRejectedHandler.class);",
        "line": 266,
        "locate": "Test Case",
        "locationContext": {
          "methodName": "requestRejectedHandlerIsCalledIfFirewallThrowsRequestRejectedException",
          "methodAnnotations": [
            "@Test"
          ]
        }
      },
      {
        "type": "VERIFICATION",
        "code": "verify(rjh).handle(eq(this.request), eq(this.response), eq((requestRejectedException)));",
        "line": 272,
        "locate": "Test Case",
        "locationContext": {
          "methodName": "requestRejectedHandlerIsCalledIfFirewallThrowsRequestRejectedException",
          "methodAnnotations": [
            "@Test"
          ]
        }
      }
    ],
    "pattern_id": 5
  },
  {
    "variableName": "rjh",
    "variableType": "RequestRejectedHandler",
    "mockedClass": "RequestRejectedHandler",
    "isReuseableMock": false,
    "mockPattern": "Creation:\n\u2014 Local Mock Creation in Test Case\n\nStubbing:\n\u2014 None\n\nVerification:\n\u2014 Test Case",
    "classContext": {
      "packageName": "org.springframework.security.web",
      "filePath": "C:\\java tool\\Spring\\spring-security\\web\\src\\test\\java\\org\\springframework\\security\\web\\FilterChainProxyTests.java",
      "className": "FilterChainProxyTests"
    },
    "statements": [
      {
        "type": "DECLARATION",
        "code": "RequestRejectedHandler rjh = mock(RequestRejectedHandler.class);",
        "line": 278,
        "locate": "Test Case",
        "locationContext": {
          "methodName": "requestRejectedHandlerIsCalledIfFirewallThrowsWrappedRequestRejectedException",
          "methodAnnotations": [
            "@Test"
          ]
        }
      },
      {
        "type": "VERIFICATION",
        "code": "verify(rjh).handle(eq(this.request), eq(this.response), eq((requestRejectedException)));",
        "line": 286,
        "locate": "Test Case",
        "locationContext": {
          "methodName": "requestRejectedHandlerIsCalledIfFirewallThrowsWrappedRequestRejectedException",
          "methodAnnotations": [
            "@Test"
          ]
        }
      }
    ],
    "pattern_id": 5
  }
]