[
  {
    "variableName": "jwtAssertionResolver",
    "variableType": "Function<OAuth2AuthorizationContext,Mono<Jwt>>",
    "mockedClass": "Function",
    "isReuseableMock": false,
    "mockPattern": "Creation:\n\u2014 Local Mock Creation in Test Case\n\nStubbing:\n\u2014 Test Case\n\nVerification:\n\u2014 Test Case",
    "classContext": {
      "packageName": "org.springframework.security.oauth2.client",
      "filePath": "C:\\java tool\\Spring\\spring-security\\oauth2\\oauth2-client\\src\\test\\java\\org\\springframework\\security\\oauth2\\client\\JwtBearerReactiveOAuth2AuthorizedClientProviderTests.java",
      "className": "JwtBearerReactiveOAuth2AuthorizedClientProviderTests"
    },
    "statements": [
      {
        "type": "DECLARATION",
        "code": "Function<OAuth2AuthorizationContext, Mono<Jwt>> jwtAssertionResolver = mock(Function.class);",
        "line": 279,
        "locate": "Test Case",
        "locationContext": {
          "methodName": "authorizeWhenCustomJwtAssertionResolverSetThenUsed",
          "methodAnnotations": [
            "@Test"
          ]
        }
      },
      {
        "type": "STUBBING",
        "code": "given(jwtAssertionResolver.apply(any())).willReturn(Mono.just(this.jwtAssertion));",
        "line": 280,
        "locate": "Test Case",
        "locationContext": {
          "methodName": "authorizeWhenCustomJwtAssertionResolverSetThenUsed",
          "methodAnnotations": [
            "@Test"
          ]
        }
      },
      {
        "type": "VERIFICATION",
        "code": "verify(jwtAssertionResolver).apply(any());",
        "line": 292,
        "locate": "Test Case",
        "locationContext": {
          "methodName": "authorizeWhenCustomJwtAssertionResolverSetThenUsed",
          "methodAnnotations": [
            "@Test"
          ]
        }
      }
    ],
    "pattern_id": 6
  }
]