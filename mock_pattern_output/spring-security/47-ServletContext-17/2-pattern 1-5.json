[
  {
    "variableName": "context",
    "variableType": "ServletContext",
    "mockedClass": "ServletContext",
    "isReuseableMock": "Fully Localized",
    "mockPattern": "Creation:\n\u2014 Local Mock Creation in Test Case\n\nStubbing:\n\u2014 Test Case\n\nVerification:\n\u2014 None",
    "classContext": {
      "packageName": "org.springframework.security.web.context",
      "filePath": "C:\\java tool\\Spring\\spring-security\\web\\src\\test\\java\\org\\springframework\\security\\web\\context\\AbstractSecurityWebApplicationInitializerTests.java",
      "className": "AbstractSecurityWebApplicationInitializerTests"
    },
    "statements": [
      {
        "type": "DECLARATION",
        "code": "ServletContext context = mock(ServletContext.class);",
        "line": 60,
        "locate": "Test Case",
        "locationContext": {
          "methodName": "onStartupWhenDefaultContextThenRegistersSpringSecurityFilterChain",
          "methodAnnotations": [
            "@Test"
          ]
        }
      },
      {
        "type": "STUBBING",
        "code": "given(context.addFilter(eq(\"springSecurityFilterChain\"), proxyCaptor.capture())).willReturn(registration);",
        "line": 63,
        "locate": "Test Case",
        "locationContext": {
          "methodName": "onStartupWhenDefaultContextThenRegistersSpringSecurityFilterChain",
          "methodAnnotations": [
            "@Test"
          ]
        }
      }
    ],
    "pattern_id": 1
  },
  {
    "variableName": "context",
    "variableType": "ServletContext",
    "mockedClass": "ServletContext",
    "isReuseableMock": "Fully Localized",
    "mockPattern": "Creation:\n\u2014 Local Mock Creation in Test Case\n\nStubbing:\n\u2014 Test Case\n\nVerification:\n\u2014 None",
    "classContext": {
      "packageName": "org.springframework.security.web.context",
      "filePath": "C:\\java tool\\Spring\\spring-security\\web\\src\\test\\java\\org\\springframework\\security\\web\\context\\AbstractSecurityWebApplicationInitializerTests.java",
      "className": "AbstractSecurityWebApplicationInitializerTests"
    },
    "statements": [
      {
        "type": "DECLARATION",
        "code": "ServletContext context = mock(ServletContext.class);",
        "line": 106,
        "locate": "Test Case",
        "locationContext": {
          "methodName": "onStartupWhenCustomSecurityDispatcherTypesThenUses",
          "methodAnnotations": [
            "@Test"
          ]
        }
      },
      {
        "type": "STUBBING",
        "code": "given(context.addFilter(eq(\"springSecurityFilterChain\"), proxyCaptor.capture())).willReturn(registration);",
        "line": 109,
        "locate": "Test Case",
        "locationContext": {
          "methodName": "onStartupWhenCustomSecurityDispatcherTypesThenUses",
          "methodAnnotations": [
            "@Test"
          ]
        }
      }
    ],
    "pattern_id": 1
  },
  {
    "variableName": "context",
    "variableType": "ServletContext",
    "mockedClass": "ServletContext",
    "isReuseableMock": "Fully Localized",
    "mockPattern": "Creation:\n\u2014 Local Mock Creation in Test Case\n\nStubbing:\n\u2014 Test Case\n\nVerification:\n\u2014 None",
    "classContext": {
      "packageName": "org.springframework.security.web.context",
      "filePath": "C:\\java tool\\Spring\\spring-security\\web\\src\\test\\java\\org\\springframework\\security\\web\\context\\AbstractSecurityWebApplicationInitializerTests.java",
      "className": "AbstractSecurityWebApplicationInitializerTests"
    },
    "statements": [
      {
        "type": "DECLARATION",
        "code": "ServletContext context = mock(ServletContext.class);",
        "line": 125,
        "locate": "Test Case",
        "locationContext": {
          "methodName": "onStartupWhenCustomDispatcherWebApplicationContextSuffixThenUses",
          "methodAnnotations": [
            "@Test"
          ]
        }
      },
      {
        "type": "STUBBING",
        "code": "given(context.addFilter(eq(\"springSecurityFilterChain\"), proxyCaptor.capture())).willReturn(registration);",
        "line": 128,
        "locate": "Test Case",
        "locationContext": {
          "methodName": "onStartupWhenCustomDispatcherWebApplicationContextSuffixThenUses",
          "methodAnnotations": [
            "@Test"
          ]
        }
      }
    ],
    "pattern_id": 1
  },
  {
    "variableName": "context",
    "variableType": "ServletContext",
    "mockedClass": "ServletContext",
    "isReuseableMock": "Fully Localized",
    "mockPattern": "Creation:\n\u2014 Local Mock Creation in Test Case\n\nStubbing:\n\u2014 Test Case\n\nVerification:\n\u2014 None",
    "classContext": {
      "packageName": "org.springframework.security.web.context",
      "filePath": "C:\\java tool\\Spring\\spring-security\\web\\src\\test\\java\\org\\springframework\\security\\web\\context\\AbstractSecurityWebApplicationInitializerTests.java",
      "className": "AbstractSecurityWebApplicationInitializerTests"
    },
    "statements": [
      {
        "type": "DECLARATION",
        "code": "ServletContext context = mock(ServletContext.class);",
        "line": 201,
        "locate": "Test Case",
        "locationContext": {
          "methodName": "onStartupWhenInsertFiltersEmptyThenException",
          "methodAnnotations": [
            "@Test"
          ]
        }
      },
      {
        "type": "STUBBING",
        "code": "given(context.addFilter(eq(\"springSecurityFilterChain\"), proxyCaptor.capture())).willReturn(registration);",
        "line": 204,
        "locate": "Test Case",
        "locationContext": {
          "methodName": "onStartupWhenInsertFiltersEmptyThenException",
          "methodAnnotations": [
            "@Test"
          ]
        }
      }
    ],
    "pattern_id": 1
  },
  {
    "variableName": "context",
    "variableType": "ServletContext",
    "mockedClass": "ServletContext",
    "isReuseableMock": "Fully Localized",
    "mockPattern": "Creation:\n\u2014 Local Mock Creation in Test Case\n\nStubbing:\n\u2014 Test Case\n\nVerification:\n\u2014 None",
    "classContext": {
      "packageName": "org.springframework.security.web.context",
      "filePath": "C:\\java tool\\Spring\\spring-security\\web\\src\\test\\java\\org\\springframework\\security\\web\\context\\AbstractSecurityWebApplicationInitializerTests.java",
      "className": "AbstractSecurityWebApplicationInitializerTests"
    },
    "statements": [
      {
        "type": "DECLARATION",
        "code": "ServletContext context = mock(ServletContext.class);",
        "line": 282,
        "locate": "Test Case",
        "locationContext": {
          "methodName": "onStartupWhenAppendFiltersEmptyThenException",
          "methodAnnotations": [
            "@Test"
          ]
        }
      },
      {
        "type": "STUBBING",
        "code": "given(context.addFilter(eq(\"springSecurityFilterChain\"), proxyCaptor.capture())).willReturn(registration);",
        "line": 285,
        "locate": "Test Case",
        "locationContext": {
          "methodName": "onStartupWhenAppendFiltersEmptyThenException",
          "methodAnnotations": [
            "@Test"
          ]
        }
      }
    ],
    "pattern_id": 1
  }
]