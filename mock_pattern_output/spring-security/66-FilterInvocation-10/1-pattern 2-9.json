[
  {
    "variableName": "fi",
    "variableType": "FilterInvocation",
    "mockedClass": "FilterInvocation",
    "isReuseableMock": "Fully Localized",
    "mockPattern": "Creation:\n\u2014 Local Mock Creation in Test Case\n\nStubbing:\n\u2014 None\n\nVerification:\n\u2014 None",
    "classContext": {
      "packageName": "org.springframework.security.web.access.channel",
      "filePath": "C:\\java tool\\Spring\\spring-security\\web\\src\\test\\java\\org\\springframework\\security\\web\\access\\channel\\ChannelDecisionManagerImplTests.java",
      "className": "ChannelDecisionManagerImplTests"
    },
    "statements": [
      {
        "type": "DECLARATION",
        "code": "FilterInvocation fi = new FilterInvocation(request, response, mock(FilterChain.class));",
        "line": 85,
        "locate": "Test Case",
        "locationContext": {
          "methodName": "testDecideIsOperational",
          "methodAnnotations": [
            "@Test"
          ]
        }
      }
    ],
    "pattern_id": 2
  },
  {
    "variableName": "fi",
    "variableType": "FilterInvocation",
    "mockedClass": "FilterInvocation",
    "isReuseableMock": "Fully Localized",
    "mockPattern": "Creation:\n\u2014 Local Mock Creation in Test Case\n\nStubbing:\n\u2014 None\n\nVerification:\n\u2014 None",
    "classContext": {
      "packageName": "org.springframework.security.web.access.channel",
      "filePath": "C:\\java tool\\Spring\\spring-security\\web\\src\\test\\java\\org\\springframework\\security\\web\\access\\channel\\ChannelDecisionManagerImplTests.java",
      "className": "ChannelDecisionManagerImplTests"
    },
    "statements": [
      {
        "type": "DECLARATION",
        "code": "FilterInvocation fi = new FilterInvocation(request, response, mock(FilterChain.class));",
        "line": 101,
        "locate": "Test Case",
        "locationContext": {
          "methodName": "testAnyChannelAttributeCausesProcessorsToBeSkipped",
          "methodAnnotations": [
            "@Test"
          ]
        }
      }
    ],
    "pattern_id": 2
  },
  {
    "variableName": "fi",
    "variableType": "FilterInvocation",
    "mockedClass": "FilterInvocation",
    "isReuseableMock": "Fully Localized",
    "mockPattern": "Creation:\n\u2014 Local Mock Creation in Test Case\n\nStubbing:\n\u2014 None\n\nVerification:\n\u2014 None",
    "classContext": {
      "packageName": "org.springframework.security.web.access.channel",
      "filePath": "C:\\java tool\\Spring\\spring-security\\web\\src\\test\\java\\org\\springframework\\security\\web\\access\\channel\\ChannelDecisionManagerImplTests.java",
      "className": "ChannelDecisionManagerImplTests"
    },
    "statements": [
      {
        "type": "DECLARATION",
        "code": "FilterInvocation fi = new FilterInvocation(request, response, mock(FilterChain.class));",
        "line": 118,
        "locate": "Test Case",
        "locationContext": {
          "methodName": "testDecideIteratesAllProcessorsIfNoneCommitAResponse",
          "methodAnnotations": [
            "@Test"
          ]
        }
      }
    ],
    "pattern_id": 2
  },
  {
    "variableName": "fi",
    "variableType": "FilterInvocation",
    "mockedClass": "FilterInvocation",
    "isReuseableMock": "Fully Localized",
    "mockPattern": "Creation:\n\u2014 Local Mock Creation in Test Case\n\nStubbing:\n\u2014 None\n\nVerification:\n\u2014 None",
    "classContext": {
      "packageName": "org.springframework.security.web.access.channel",
      "filePath": "C:\\java tool\\Spring\\spring-security\\web\\src\\test\\java\\org\\springframework\\security\\web\\access\\channel\\InsecureChannelProcessorTests.java",
      "className": "InsecureChannelProcessorTests"
    },
    "statements": [
      {
        "type": "DECLARATION",
        "code": "FilterInvocation fi = new FilterInvocation(request, response, mock(FilterChain.class));",
        "line": 48,
        "locate": "Test Case",
        "locationContext": {
          "methodName": "testDecideDetectsAcceptableChannel",
          "methodAnnotations": [
            "@Test"
          ]
        }
      }
    ],
    "pattern_id": 2
  },
  {
    "variableName": "fi",
    "variableType": "FilterInvocation",
    "mockedClass": "FilterInvocation",
    "isReuseableMock": "Fully Localized",
    "mockPattern": "Creation:\n\u2014 Local Mock Creation in Test Case\n\nStubbing:\n\u2014 None\n\nVerification:\n\u2014 None",
    "classContext": {
      "packageName": "org.springframework.security.web.access.channel",
      "filePath": "C:\\java tool\\Spring\\spring-security\\web\\src\\test\\java\\org\\springframework\\security\\web\\access\\channel\\InsecureChannelProcessorTests.java",
      "className": "InsecureChannelProcessorTests"
    },
    "statements": [
      {
        "type": "DECLARATION",
        "code": "FilterInvocation fi = new FilterInvocation(request, response, mock(FilterChain.class));",
        "line": 65,
        "locate": "Test Case",
        "locationContext": {
          "methodName": "testDecideDetectsUnacceptableChannel",
          "methodAnnotations": [
            "@Test"
          ]
        }
      }
    ],
    "pattern_id": 2
  },
  {
    "variableName": "fi",
    "variableType": "FilterInvocation",
    "mockedClass": "FilterInvocation",
    "isReuseableMock": "Fully Localized",
    "mockPattern": "Creation:\n\u2014 Local Mock Creation in Test Case\n\nStubbing:\n\u2014 None\n\nVerification:\n\u2014 None",
    "classContext": {
      "packageName": "org.springframework.security.web.access.channel",
      "filePath": "C:\\java tool\\Spring\\spring-security\\web\\src\\test\\java\\org\\springframework\\security\\web\\access\\channel\\SecureChannelProcessorTests.java",
      "className": "SecureChannelProcessorTests"
    },
    "statements": [
      {
        "type": "DECLARATION",
        "code": "FilterInvocation fi = new FilterInvocation(request, response, mock(FilterChain.class));",
        "line": 49,
        "locate": "Test Case",
        "locationContext": {
          "methodName": "testDecideDetectsAcceptableChannel",
          "methodAnnotations": [
            "@Test"
          ]
        }
      }
    ],
    "pattern_id": 2
  },
  {
    "variableName": "fi",
    "variableType": "FilterInvocation",
    "mockedClass": "FilterInvocation",
    "isReuseableMock": "Fully Localized",
    "mockPattern": "Creation:\n\u2014 Local Mock Creation in Test Case\n\nStubbing:\n\u2014 None\n\nVerification:\n\u2014 None",
    "classContext": {
      "packageName": "org.springframework.security.web.access.channel",
      "filePath": "C:\\java tool\\Spring\\spring-security\\web\\src\\test\\java\\org\\springframework\\security\\web\\access\\channel\\SecureChannelProcessorTests.java",
      "className": "SecureChannelProcessorTests"
    },
    "statements": [
      {
        "type": "DECLARATION",
        "code": "FilterInvocation fi = new FilterInvocation(request, response, mock(FilterChain.class));",
        "line": 65,
        "locate": "Test Case",
        "locationContext": {
          "methodName": "testDecideDetectsUnacceptableChannel",
          "methodAnnotations": [
            "@Test"
          ]
        }
      }
    ],
    "pattern_id": 2
  },
  {
    "variableName": "fi",
    "variableType": "FilterInvocation",
    "mockedClass": "FilterInvocation",
    "isReuseableMock": "Fully Localized",
    "mockPattern": "Creation:\n\u2014 Local Mock Creation in Test Case\n\nStubbing:\n\u2014 None\n\nVerification:\n\u2014 None",
    "classContext": {
      "packageName": "org.springframework.security.web",
      "filePath": "C:\\java tool\\Spring\\spring-security\\web\\src\\test\\java\\org\\springframework\\security\\web\\FilterInvocationTests.java",
      "className": "FilterInvocationTests"
    },
    "statements": [
      {
        "type": "DECLARATION",
        "code": "FilterInvocation fi = new FilterInvocation(request, response, mock(FilterChain.class));",
        "line": 101,
        "locate": "Test Case",
        "locationContext": {
          "methodName": "testStringMethodsWithAQueryString",
          "methodAnnotations": [
            "@Test"
          ]
        }
      }
    ],
    "pattern_id": 2
  },
  {
    "variableName": "fi",
    "variableType": "FilterInvocation",
    "mockedClass": "FilterInvocation",
    "isReuseableMock": "Fully Localized",
    "mockPattern": "Creation:\n\u2014 Local Mock Creation in Test Case\n\nStubbing:\n\u2014 None\n\nVerification:\n\u2014 None",
    "classContext": {
      "packageName": "org.springframework.security.web",
      "filePath": "C:\\java tool\\Spring\\spring-security\\web\\src\\test\\java\\org\\springframework\\security\\web\\FilterInvocationTests.java",
      "className": "FilterInvocationTests"
    },
    "statements": [
      {
        "type": "DECLARATION",
        "code": "FilterInvocation fi = new FilterInvocation(request, response, mock(FilterChain.class));",
        "line": 117,
        "locate": "Test Case",
        "locationContext": {
          "methodName": "testStringMethodsWithoutAnyQueryString",
          "methodAnnotations": [
            "@Test"
          ]
        }
      }
    ],
    "pattern_id": 2
  }
]