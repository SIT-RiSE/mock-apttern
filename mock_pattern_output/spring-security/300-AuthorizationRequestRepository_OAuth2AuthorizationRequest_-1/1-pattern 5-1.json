[
  {
    "variableName": "authorizationRequestRepository",
    "variableType": "AuthorizationRequestRepository<OAuth2AuthorizationRequest>",
    "mockedClass": "AuthorizationRequestRepository",
    "isReuseableMock": false,
    "mockPattern": "Creation:\n\u2014 Local Mock Creation in Test Case\n\nStubbing:\n\u2014 None\n\nVerification:\n\u2014 Test Case",
    "classContext": {
      "packageName": "org.springframework.security.oauth2.client.web",
      "filePath": "C:\\java tool\\Spring\\spring-security\\oauth2\\oauth2-client\\src\\test\\java\\org\\springframework\\security\\oauth2\\client\\web\\OAuth2AuthorizationRequestRedirectFilterTests.java",
      "className": "OAuth2AuthorizationRequestRedirectFilterTests"
    },
    "statements": [
      {
        "type": "DECLARATION",
        "code": "AuthorizationRequestRepository<OAuth2AuthorizationRequest> authorizationRequestRepository = mock(AuthorizationRequestRepository.class);",
        "line": 200,
        "locate": "Test Case",
        "locationContext": {
          "methodName": "doFilterWhenAuthorizationRequestOAuth2LoginThenAuthorizationRequestSaved",
          "methodAnnotations": [
            "@Test"
          ]
        }
      },
      {
        "type": "VERIFICATION",
        "code": "verify(authorizationRequestRepository).saveAuthorizationRequest(any(OAuth2AuthorizationRequest.class), any(HttpServletRequest.class), any(HttpServletResponse.class));",
        "line": 205,
        "locate": "Test Case",
        "locationContext": {
          "methodName": "doFilterWhenAuthorizationRequestOAuth2LoginThenAuthorizationRequestSaved",
          "methodAnnotations": [
            "@Test"
          ]
        }
      }
    ],
    "pattern_id": 5
  }
]