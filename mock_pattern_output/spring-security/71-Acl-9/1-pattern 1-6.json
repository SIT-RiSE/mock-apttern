[
  {
    "variableName": "acl",
    "variableType": "Acl",
    "mockedClass": "Acl",
    "isReuseableMock": "Fully Localized",
    "mockPattern": "Creation:\n\u2014 Local Mock Creation in Test Case\n\nStubbing:\n\u2014 Test Case\n\nVerification:\n\u2014 None",
    "classContext": {
      "packageName": "org.springframework.security.acls",
      "filePath": "C:\\java tool\\Spring\\spring-security\\acl\\src\\test\\java\\org\\springframework\\security\\acls\\AclPermissionEvaluatorTests.java",
      "className": "AclPermissionEvaluatorTests"
    },
    "statements": [
      {
        "type": "DECLARATION",
        "code": "Acl acl = mock(Acl.class);",
        "line": 52,
        "locate": "Test Case",
        "locationContext": {
          "methodName": "hasPermissionReturnsTrueIfAclGrantsPermission",
          "methodAnnotations": [
            "@Test"
          ]
        }
      },
      {
        "type": "STUBBING",
        "code": "given(acl.isGranted(anyList(), anyList(), eq(false))).willReturn(true);",
        "line": 54,
        "locate": "Test Case",
        "locationContext": {
          "methodName": "hasPermissionReturnsTrueIfAclGrantsPermission",
          "methodAnnotations": [
            "@Test"
          ]
        }
      }
    ],
    "pattern_id": 1
  },
  {
    "variableName": "acl",
    "variableType": "Acl",
    "mockedClass": "Acl",
    "isReuseableMock": "Fully Localized",
    "mockPattern": "Creation:\n\u2014 Local Mock Creation in Test Case\n\nStubbing:\n\u2014 Test Case\n\nVerification:\n\u2014 None",
    "classContext": {
      "packageName": "org.springframework.security.acls",
      "filePath": "C:\\java tool\\Spring\\spring-security\\acl\\src\\test\\java\\org\\springframework\\security\\acls\\AclPermissionEvaluatorTests.java",
      "className": "AclPermissionEvaluatorTests"
    },
    "statements": [
      {
        "type": "DECLARATION",
        "code": "Acl acl = mock(Acl.class);",
        "line": 69,
        "locate": "Test Case",
        "locationContext": {
          "methodName": "resolvePermissionNonEnglishLocale",
          "methodAnnotations": [
            "@Test"
          ]
        }
      },
      {
        "type": "STUBBING",
        "code": "given(acl.isGranted(anyList(), anyList(), eq(false))).willReturn(true);",
        "line": 71,
        "locate": "Test Case",
        "locationContext": {
          "methodName": "resolvePermissionNonEnglishLocale",
          "methodAnnotations": [
            "@Test"
          ]
        }
      }
    ],
    "pattern_id": 1
  },
  {
    "variableName": "acl",
    "variableType": "Acl",
    "mockedClass": "Acl",
    "isReuseableMock": "Fully Localized",
    "mockPattern": "Creation:\n\u2014 Local Mock Creation in Test Case\n\nStubbing:\n\u2014 Test Case\n\nVerification:\n\u2014 None",
    "classContext": {
      "packageName": "org.springframework.security.acls.afterinvocation",
      "filePath": "C:\\java tool\\Spring\\spring-security\\acl\\src\\test\\java\\org\\springframework\\security\\acls\\afterinvocation\\AclEntryAfterInvocationCollectionFilteringProviderTests.java",
      "className": "AclEntryAfterInvocationCollectionFilteringProviderTests"
    },
    "statements": [
      {
        "type": "DECLARATION",
        "code": "Acl acl = mock(Acl.class);",
        "line": 53,
        "locate": "Test Case",
        "locationContext": {
          "methodName": "objectsAreRemovedIfPermissionDenied",
          "methodAnnotations": [
            "@Test"
          ]
        }
      },
      {
        "type": "STUBBING",
        "code": "given(acl.isGranted(any(), any(), anyBoolean())).willReturn(false);",
        "line": 54,
        "locate": "Test Case",
        "locationContext": {
          "methodName": "objectsAreRemovedIfPermissionDenied",
          "methodAnnotations": [
            "@Test"
          ]
        }
      }
    ],
    "pattern_id": 1
  },
  {
    "variableName": "acl",
    "variableType": "Acl",
    "mockedClass": "Acl",
    "isReuseableMock": "Fully Localized",
    "mockPattern": "Creation:\n\u2014 Local Mock Creation in Test Case\n\nStubbing:\n\u2014 Test Case\n\nVerification:\n\u2014 None",
    "classContext": {
      "packageName": "org.springframework.security.acls.afterinvocation",
      "filePath": "C:\\java tool\\Spring\\spring-security\\acl\\src\\test\\java\\org\\springframework\\security\\acls\\afterinvocation\\AclEntryAfterInvocationProviderTests.java",
      "className": "AclEntryAfterInvocationProviderTests"
    },
    "statements": [
      {
        "type": "DECLARATION",
        "code": "Acl acl = mock(Acl.class);",
        "line": 65,
        "locate": "Test Case",
        "locationContext": {
          "methodName": "accessIsAllowedIfPermissionIsGranted",
          "methodAnnotations": [
            "@Test"
          ]
        }
      },
      {
        "type": "STUBBING",
        "code": "given(acl.isGranted(any(List.class), any(List.class), anyBoolean())).willReturn(true);",
        "line": 66,
        "locate": "Test Case",
        "locationContext": {
          "methodName": "accessIsAllowedIfPermissionIsGranted",
          "methodAnnotations": [
            "@Test"
          ]
        }
      }
    ],
    "pattern_id": 1
  },
  {
    "variableName": "acl",
    "variableType": "Acl",
    "mockedClass": "Acl",
    "isReuseableMock": "Fully Localized",
    "mockPattern": "Creation:\n\u2014 Local Mock Creation in Test Case\n\nStubbing:\n\u2014 Test Case\n\nVerification:\n\u2014 None",
    "classContext": {
      "packageName": "org.springframework.security.acls.afterinvocation",
      "filePath": "C:\\java tool\\Spring\\spring-security\\acl\\src\\test\\java\\org\\springframework\\security\\acls\\afterinvocation\\AclEntryAfterInvocationProviderTests.java",
      "className": "AclEntryAfterInvocationProviderTests"
    },
    "statements": [
      {
        "type": "DECLARATION",
        "code": "Acl acl = mock(Acl.class);",
        "line": 102,
        "locate": "Test Case",
        "locationContext": {
          "methodName": "accessIsDeniedIfPermissionIsNotGranted",
          "methodAnnotations": [
            "@Test"
          ]
        }
      },
      {
        "type": "STUBBING",
        "code": "given(acl.isGranted(any(List.class), any(List.class), anyBoolean())).willReturn(false);",
        "line": 103,
        "locate": "Test Case",
        "locationContext": {
          "methodName": "accessIsDeniedIfPermissionIsNotGranted",
          "methodAnnotations": [
            "@Test"
          ]
        }
      },
      {
        "type": "STUBBING",
        "code": "// Try a second time with no permissions found\r\ngiven(acl.isGranted(any(), any(List.class), anyBoolean())).willThrow(new NotFoundException(\"\"));",
        "line": 105,
        "locate": "Test Case",
        "locationContext": {
          "methodName": "accessIsDeniedIfPermissionIsNotGranted",
          "methodAnnotations": [
            "@Test"
          ]
        }
      }
    ],
    "pattern_id": 1
  },
  {
    "variableName": "mockAcl",
    "variableType": "Acl",
    "mockedClass": "Acl",
    "isReuseableMock": "Fully Localized",
    "mockPattern": "Creation:\n\u2014 Local Mock Creation in Test Case\n\nStubbing:\n\u2014 Test Case\n\nVerification:\n\u2014 None",
    "classContext": {
      "packageName": "org.springframework.security.acls.domain",
      "filePath": "C:\\java tool\\Spring\\spring-security\\acl\\src\\test\\java\\org\\springframework\\security\\acls\\domain\\AccessControlImplEntryTests.java",
      "className": "AccessControlImplEntryTests"
    },
    "statements": [
      {
        "type": "DECLARATION",
        "code": "final Acl mockAcl = mock(Acl.class);",
        "line": 71,
        "locate": "Test Case",
        "locationContext": {
          "methodName": "testEquals",
          "methodAnnotations": [
            "@Test"
          ]
        }
      },
      {
        "type": "STUBBING",
        "code": "given(mockAcl.getObjectIdentity()).willReturn(oid);",
        "line": 73,
        "locate": "Test Case",
        "locationContext": {
          "methodName": "testEquals",
          "methodAnnotations": [
            "@Test"
          ]
        }
      }
    ],
    "pattern_id": 1
  }
]