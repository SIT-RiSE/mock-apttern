[
  {
    "variableName": "deferredContext",
    "variableType": "Supplier<SecurityContext>",
    "mockedClass": "Supplier",
    "isReuseableMock": false,
    "mockPattern": "Creation:\n\u2014 Local Mock Creation in Test Case\n\nStubbing:\n\u2014 None\n\nVerification:\n\u2014 Test Case",
    "classContext": {
      "packageName": "org.springframework.security.core.context",
      "filePath": "C:\\java tool\\Spring\\spring-security\\core\\src\\test\\java\\org\\springframework\\security\\core\\context\\InheritableThreadLocalSecurityContextHolderStrategyTests.java",
      "className": "InheritableThreadLocalSecurityContextHolderStrategyTests"
    },
    "statements": [
      {
        "type": "DECLARATION",
        "code": "Supplier<SecurityContext> deferredContext = mock(Supplier.class);",
        "line": 42,
        "locate": "Test Case",
        "locationContext": {
          "methodName": "deferredNotInvoked",
          "methodAnnotations": [
            "@Test"
          ]
        }
      },
      {
        "type": "VERIFICATION",
        "code": "verifyNoInteractions(deferredContext);",
        "line": 44,
        "locate": "Test Case",
        "locationContext": {
          "methodName": "deferredNotInvoked",
          "methodAnnotations": [
            "@Test"
          ]
        }
      }
    ],
    "pattern_id": 5
  },
  {
    "variableName": "context",
    "variableType": "Supplier<SecurityContext>",
    "mockedClass": "Supplier",
    "isReuseableMock": false,
    "mockPattern": "Creation:\n\u2014 Local Mock Creation in Test Case\n\nStubbing:\n\u2014 None\n\nVerification:\n\u2014 Test Case",
    "classContext": {
      "packageName": "org.springframework.security.core.context",
      "filePath": "C:\\java tool\\Spring\\spring-security\\core\\src\\test\\java\\org\\springframework\\security\\core\\context\\ListeningSecurityContextHolderStrategyTests.java",
      "className": "ListeningSecurityContextHolderStrategyTests"
    },
    "statements": [
      {
        "type": "DECLARATION",
        "code": "Supplier<SecurityContext> context = mock(Supplier.class);",
        "line": 70,
        "locate": "Test Case",
        "locationContext": {
          "methodName": "clearContextWhenNoGetContextThenContextIsNotRead",
          "methodAnnotations": [
            "@Test"
          ]
        }
      },
      {
        "type": "VERIFICATION",
        "code": "verifyNoInteractions(context);",
        "line": 75,
        "locate": "Test Case",
        "locationContext": {
          "methodName": "clearContextWhenNoGetContextThenContextIsNotRead",
          "methodAnnotations": [
            "@Test"
          ]
        }
      },
      {
        "type": "VERIFICATION",
        "code": "verify(context).get();",
        "line": 79,
        "locate": "Test Case",
        "locationContext": {
          "methodName": "clearContextWhenNoGetContextThenContextIsNotRead",
          "methodAnnotations": [
            "@Test"
          ]
        }
      },
      {
        "type": "VERIFICATION",
        "code": "verifyNoMoreInteractions(context);",
        "line": 81,
        "locate": "Test Case",
        "locationContext": {
          "methodName": "clearContextWhenNoGetContextThenContextIsNotRead",
          "methodAnnotations": [
            "@Test"
          ]
        }
      }
    ],
    "pattern_id": 5
  },
  {
    "variableName": "one",
    "variableType": "Supplier<SecurityContext>",
    "mockedClass": "Supplier",
    "isReuseableMock": false,
    "mockPattern": "Creation:\n\u2014 Local Mock Creation in Test Case\n\nStubbing:\n\u2014 None\n\nVerification:\n\u2014 Test Case",
    "classContext": {
      "packageName": "org.springframework.security.core.context",
      "filePath": "C:\\java tool\\Spring\\spring-security\\core\\src\\test\\java\\org\\springframework\\security\\core\\context\\ObservationSecurityContextChangedListenerTests.java",
      "className": "ObservationSecurityContextChangedListenerTests"
    },
    "statements": [
      {
        "type": "DECLARATION",
        "code": "Supplier<SecurityContext> one = mock(Supplier.class);",
        "line": 64,
        "locate": "Test Case",
        "locationContext": {
          "methodName": "securityContextChangedWhenClearedEventThenAddsClearEventToObservation",
          "methodAnnotations": [
            "@Test"
          ]
        }
      },
      {
        "type": "VERIFICATION",
        "code": "verifyNoInteractions(one);",
        "line": 71,
        "locate": "Test Case",
        "locationContext": {
          "methodName": "securityContextChangedWhenClearedEventThenAddsClearEventToObservation",
          "methodAnnotations": [
            "@Test"
          ]
        }
      }
    ],
    "pattern_id": 5
  },
  {
    "variableName": "deferredContext",
    "variableType": "Supplier<SecurityContext>",
    "mockedClass": "Supplier",
    "isReuseableMock": false,
    "mockPattern": "Creation:\n\u2014 Local Mock Creation in Test Case\n\nStubbing:\n\u2014 None\n\nVerification:\n\u2014 Test Case",
    "classContext": {
      "packageName": "org.springframework.security.core.context",
      "filePath": "C:\\java tool\\Spring\\spring-security\\core\\src\\test\\java\\org\\springframework\\security\\core\\context\\ThreadLocalSecurityContextHolderStrategyTests.java",
      "className": "ThreadLocalSecurityContextHolderStrategyTests"
    },
    "statements": [
      {
        "type": "DECLARATION",
        "code": "Supplier<SecurityContext> deferredContext = mock(Supplier.class);",
        "line": 42,
        "locate": "Test Case",
        "locationContext": {
          "methodName": "deferredNotInvoked",
          "methodAnnotations": [
            "@Test"
          ]
        }
      },
      {
        "type": "VERIFICATION",
        "code": "verifyNoInteractions(deferredContext);",
        "line": 44,
        "locate": "Test Case",
        "locationContext": {
          "methodName": "deferredNotInvoked",
          "methodAnnotations": [
            "@Test"
          ]
        }
      }
    ],
    "pattern_id": 5
  },
  {
    "variableName": "originalSupplier",
    "variableType": "Supplier<SecurityContext>",
    "mockedClass": "Supplier",
    "isReuseableMock": false,
    "mockPattern": "Creation:\n\u2014 Local Mock Creation in Test Case\n\nStubbing:\n\u2014 None\n\nVerification:\n\u2014 Test Case",
    "classContext": {
      "packageName": "org.springframework.security.web.authentication",
      "filePath": "C:\\java tool\\Spring\\spring-security\\web\\src\\test\\java\\org\\springframework\\security\\web\\authentication\\AnonymousAuthenticationFilterTests.java",
      "className": "AnonymousAuthenticationFilterTests"
    },
    "statements": [
      {
        "type": "DECLARATION",
        "code": "Supplier<SecurityContext> originalSupplier = mock(Supplier.class);",
        "line": 116,
        "locate": "Test Case",
        "locationContext": {
          "methodName": "doFilterDoesNotGetContext",
          "methodAnnotations": [
            "@Test"
          ]
        }
      },
      {
        "type": "VERIFICATION",
        "code": "verify(originalSupplier, never()).get();",
        "line": 130,
        "locate": "Test Case",
        "locationContext": {
          "methodName": "doFilterDoesNotGetContext",
          "methodAnnotations": [
            "@Test"
          ]
        }
      }
    ],
    "pattern_id": 5
  }
]