[
  {
    "variableName": "i",
    "variableType": "int",
    "mockedClass": "int",
    "isReuseableMock": "Fully Localized",
    "mockPattern": "Creation:\n\u2014 Local Mock Creation in Test Case\n\nStubbing:\n\u2014 None\n\nVerification:\n\u2014 None",
    "classContext": {
      "packageName": "org.springframework.security.web.context",
      "filePath": "C:\\java tool\\Spring\\spring-security\\web\\src\\test\\java\\org\\springframework\\security\\web\\context\\DelegatingSecurityContextRepositoryTests.java",
      "className": "DelegatingSecurityContextRepositoryTests"
    },
    "statements": [
      {
        "type": "DECLARATION",
        "code": "for (int i = 0; i < 3; i++) {\r\n    SecurityContext context = (i == expectedIndex) ? actualSecurityContext : null;\r\n    SecurityContextRepository repository = mock(SecurityContextRepository.class);\r\n    SupplierDeferredSecurityContext supplier = new SupplierDeferredSecurityContext(() -> context, this.strategy);\r\n    given(repository.loadDeferredContext(this.request)).willReturn(supplier);\r\n    delegates.add(repository);\r\n}",
        "line": 74,
        "locate": "Test Case",
        "locationContext": {
          "methodName": "loadDeferredContextWhenIsGeneratedThenReturnsSecurityContext",
          "methodAnnotations": [
            "@ParameterizedTest",
            "@CsvSource"
          ]
        }
      }
    ],
    "pattern_id": 2
  },
  {
    "variableName": "i",
    "variableType": "int",
    "mockedClass": "int",
    "isReuseableMock": "Fully Localized",
    "mockPattern": "Creation:\n\u2014 Local Mock Creation in Test Case\n\nStubbing:\n\u2014 None\n\nVerification:\n\u2014 None",
    "classContext": {
      "packageName": "org.springframework.security.web.context",
      "filePath": "C:\\java tool\\Spring\\spring-security\\web\\src\\test\\java\\org\\springframework\\security\\web\\context\\DelegatingSecurityContextRepositoryTests.java",
      "className": "DelegatingSecurityContextRepositoryTests"
    },
    "statements": [
      {
        "type": "DECLARATION",
        "code": "for (int i = 0; i < 3; i++) {\r\n    SecurityContextRepository repository = mock(SecurityContextRepository.class);\r\n    delegates.add(repository);\r\n}",
        "line": 98,
        "locate": "Test Case",
        "locationContext": {
          "methodName": "saveContextAlwaysCallsDelegates",
          "methodAnnotations": [
            "@Test"
          ]
        }
      }
    ],
    "pattern_id": 2
  },
  {
    "variableName": "i",
    "variableType": "int",
    "mockedClass": "int",
    "isReuseableMock": "Fully Localized",
    "mockPattern": "Creation:\n\u2014 Local Mock Creation in Test Case\n\nStubbing:\n\u2014 None\n\nVerification:\n\u2014 None",
    "classContext": {
      "packageName": "org.springframework.security.web.context",
      "filePath": "C:\\java tool\\Spring\\spring-security\\web\\src\\test\\java\\org\\springframework\\security\\web\\context\\DelegatingSecurityContextRepositoryTests.java",
      "className": "DelegatingSecurityContextRepositoryTests"
    },
    "statements": [
      {
        "type": "DECLARATION",
        "code": "for (int i = 0; i < 3; i++) {\r\n    SecurityContextRepository repository = mock(SecurityContextRepository.class);\r\n    given(repository.containsContext(this.request)).willReturn(false);\r\n    delegates.add(repository);\r\n}",
        "line": 114,
        "locate": "Test Case",
        "locationContext": {
          "methodName": "containsContextWhenAllDelegatesReturnFalseThenReturnsFalse",
          "methodAnnotations": [
            "@Test"
          ]
        }
      }
    ],
    "pattern_id": 2
  },
  {
    "variableName": "i",
    "variableType": "int",
    "mockedClass": "int",
    "isReuseableMock": "Fully Localized",
    "mockPattern": "Creation:\n\u2014 Local Mock Creation in Test Case\n\nStubbing:\n\u2014 None\n\nVerification:\n\u2014 None",
    "classContext": {
      "packageName": "org.springframework.security.web.context",
      "filePath": "C:\\java tool\\Spring\\spring-security\\web\\src\\test\\java\\org\\springframework\\security\\web\\context\\DelegatingSecurityContextRepositoryTests.java",
      "className": "DelegatingSecurityContextRepositoryTests"
    },
    "statements": [
      {
        "type": "DECLARATION",
        "code": "for (int i = 0; i < 3; i++) {\r\n    SecurityContextRepository repository = mock(SecurityContextRepository.class);\r\n    given(repository.containsContext(this.request)).willReturn(true);\r\n    delegates.add(repository);\r\n}",
        "line": 131,
        "locate": "Test Case",
        "locationContext": {
          "methodName": "containsContextWhenFirstDelegatesReturnTrueThenReturnsTrue",
          "methodAnnotations": [
            "@Test"
          ]
        }
      }
    ],
    "pattern_id": 2
  }
]