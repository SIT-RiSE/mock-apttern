[
  {
    "variableName": "encoder",
    "variableType": "PasswordEncoder",
    "mockedClass": "PasswordEncoder",
    "isReuseableMock": false,
    "mockPattern": "Creation:\n\u2014 Local Mock Creation in Test Case\n\nStubbing:\n\u2014 Test Case\n\nVerification:\n\u2014 Test Case",
    "classContext": {
      "packageName": "org.springframework.security.authentication.dao",
      "filePath": "C:\\java tool\\Spring\\spring-security\\core\\src\\test\\java\\org\\springframework\\security\\authentication\\dao\\DaoAuthenticationProviderTests.java",
      "className": "DaoAuthenticationProviderTests"
    },
    "statements": [
      {
        "type": "DECLARATION",
        "code": "PasswordEncoder encoder = mock(PasswordEncoder.class);",
        "line": 276,
        "locate": "Test Case",
        "locationContext": {
          "methodName": "authenticateWhenSuccessAndPasswordManagerThenUpdates",
          "methodAnnotations": [
            "@Test"
          ]
        }
      },
      {
        "type": "STUBBING",
        "code": "given(encoder.matches(any(), any())).willReturn(true);",
        "line": 284,
        "locate": "Test Case",
        "locationContext": {
          "methodName": "authenticateWhenSuccessAndPasswordManagerThenUpdates",
          "methodAnnotations": [
            "@Test"
          ]
        }
      },
      {
        "type": "STUBBING",
        "code": "given(encoder.upgradeEncoding(any())).willReturn(true);",
        "line": 285,
        "locate": "Test Case",
        "locationContext": {
          "methodName": "authenticateWhenSuccessAndPasswordManagerThenUpdates",
          "methodAnnotations": [
            "@Test"
          ]
        }
      },
      {
        "type": "STUBBING",
        "code": "given(encoder.encode(any())).willReturn(encodedPassword);",
        "line": 286,
        "locate": "Test Case",
        "locationContext": {
          "methodName": "authenticateWhenSuccessAndPasswordManagerThenUpdates",
          "methodAnnotations": [
            "@Test"
          ]
        }
      },
      {
        "type": "VERIFICATION",
        "code": "verify(encoder).encode(password);",
        "line": 290,
        "locate": "Test Case",
        "locationContext": {
          "methodName": "authenticateWhenSuccessAndPasswordManagerThenUpdates",
          "methodAnnotations": [
            "@Test"
          ]
        }
      }
    ],
    "pattern_id": 6
  },
  {
    "variableName": "encoder",
    "variableType": "PasswordEncoder",
    "mockedClass": "PasswordEncoder",
    "isReuseableMock": false,
    "mockPattern": "Creation:\n\u2014 Local Mock Creation in Test Case\n\nStubbing:\n\u2014 Test Case\n\nVerification:\n\u2014 Test Case",
    "classContext": {
      "packageName": "org.springframework.security.authentication.dao",
      "filePath": "C:\\java tool\\Spring\\spring-security\\core\\src\\test\\java\\org\\springframework\\security\\authentication\\dao\\DaoAuthenticationProviderTests.java",
      "className": "DaoAuthenticationProviderTests"
    },
    "statements": [
      {
        "type": "DECLARATION",
        "code": "PasswordEncoder encoder = mock(PasswordEncoder.class);",
        "line": 411,
        "locate": "Test Case",
        "locationContext": {
          "methodName": "testUserNotFoundEncodesPassword",
          "methodAnnotations": [
            "@Test"
          ]
        }
      },
      {
        "type": "STUBBING",
        "code": "given(encoder.encode(anyString())).willReturn(\"koala\");",
        "line": 412,
        "locate": "Test Case",
        "locationContext": {
          "methodName": "testUserNotFoundEncodesPassword",
          "methodAnnotations": [
            "@Test"
          ]
        }
      },
      {
        "type": "VERIFICATION",
        "code": "// ensure encoder invoked w/ non-null strings since PasswordEncoder impls may fail\r\n// if encoded password is null\r\nverify(encoder).matches(isA(String.class), isA(String.class));",
        "line": 421,
        "locate": "Test Case",
        "locationContext": {
          "methodName": "testUserNotFoundEncodesPassword",
          "methodAnnotations": [
            "@Test"
          ]
        }
      }
    ],
    "pattern_id": 6
  }
]