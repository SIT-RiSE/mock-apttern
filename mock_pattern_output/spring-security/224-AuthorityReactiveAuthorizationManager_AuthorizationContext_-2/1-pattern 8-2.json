[
  {
    "variableName": "delegate2",
    "variableType": "AuthorityReactiveAuthorizationManager<AuthorizationContext>",
    "mockedClass": "AuthorityReactiveAuthorizationManager<AuthorizationContext>",
    "isReuseableMock": false,
    "mockPattern": "Creation:\n\u2014 Attribute Mock Creation\n\nStubbing:\n\u2014 Test Case\n\nVerification:\n\u2014 Test Case",
    "classContext": {
      "packageName": "org.springframework.security.web.server.authorization",
      "filePath": "C:\\java tool\\Spring\\spring-security\\web\\src\\test\\java\\org\\springframework\\security\\web\\server\\authorization\\DelegatingReactiveAuthorizationManagerTests.java",
      "className": "DelegatingReactiveAuthorizationManagerTests"
    },
    "statements": [
      {
        "type": "FIELD_MOCK_CREATION",
        "code": "@Mock\r\nAuthorityReactiveAuthorizationManager<AuthorizationContext> delegate2;",
        "line": 55,
        "locate": "Attribute",
        "locationContext": {
          "methodName": "[FieldDeclaration]",
          "methodAnnotations": [
            "@Mock"
          ]
        }
      },
      {
        "type": "VERIFICATION",
        "code": "verifyNoMoreInteractions(this.match2, this.delegate2);",
        "line": 85,
        "locate": "Test Case",
        "locationContext": {
          "methodName": "checkWhenFirstMatchesThenNoMoreMatchersAndNoMoreDelegatesInvoked",
          "methodAnnotations": [
            "@Test"
          ]
        }
      },
      {
        "type": "STUBBING",
        "code": "given(this.delegate2.check(eq(this.authentication), any(AuthorizationContext.class))).willReturn(Mono.just(this.decision));",
        "line": 92,
        "locate": "Test Case",
        "locationContext": {
          "methodName": "checkWhenSecondMatchesThenNoMoreMatchersAndNoMoreDelegatesInvoked",
          "methodAnnotations": [
            "@Test"
          ]
        }
      }
    ],
    "pattern_id": 8
  },
  {
    "variableName": "delegate1",
    "variableType": "AuthorityReactiveAuthorizationManager<AuthorizationContext>",
    "mockedClass": "AuthorityReactiveAuthorizationManager<AuthorizationContext>",
    "isReuseableMock": false,
    "mockPattern": "Creation:\n\u2014 Attribute Mock Creation\n\nStubbing:\n\u2014 Test Case\n\nVerification:\n\u2014 Test Case",
    "classContext": {
      "packageName": "org.springframework.security.web.server.authorization",
      "filePath": "C:\\java tool\\Spring\\spring-security\\web\\src\\test\\java\\org\\springframework\\security\\web\\server\\authorization\\DelegatingReactiveAuthorizationManagerTests.java",
      "className": "DelegatingReactiveAuthorizationManagerTests"
    },
    "statements": [
      {
        "type": "FIELD_MOCK_CREATION",
        "code": "@Mock\r\nAuthorityReactiveAuthorizationManager<AuthorizationContext> delegate1;",
        "line": 52,
        "locate": "Attribute",
        "locationContext": {
          "methodName": "[FieldDeclaration]",
          "methodAnnotations": [
            "@Mock"
          ]
        }
      },
      {
        "type": "STUBBING",
        "code": "given(this.delegate1.check(eq(this.authentication), any(AuthorizationContext.class))).willReturn(Mono.just(this.decision));",
        "line": 82,
        "locate": "Test Case",
        "locationContext": {
          "methodName": "checkWhenFirstMatchesThenNoMoreMatchersAndNoMoreDelegatesInvoked",
          "methodAnnotations": [
            "@Test"
          ]
        }
      },
      {
        "type": "VERIFICATION",
        "code": "verifyNoMoreInteractions(this.delegate1);",
        "line": 95,
        "locate": "Test Case",
        "locationContext": {
          "methodName": "checkWhenSecondMatchesThenNoMoreMatchersAndNoMoreDelegatesInvoked",
          "methodAnnotations": [
            "@Test"
          ]
        }
      }
    ],
    "pattern_id": 8
  }
]