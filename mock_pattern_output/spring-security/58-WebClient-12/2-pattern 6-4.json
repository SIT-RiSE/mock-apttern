[
  {
    "variableName": "customClient",
    "variableType": "WebClient",
    "mockedClass": "WebClient",
    "isReuseableMock": false,
    "mockPattern": "Creation:\n\u2014 Local Mock Creation in Test Case\n\nStubbing:\n\u2014 Test Case\n\nVerification:\n\u2014 Test Case",
    "classContext": {
      "packageName": "org.springframework.security.oauth2.client.endpoint",
      "filePath": "C:\\java tool\\Spring\\spring-security\\oauth2\\oauth2-client\\src\\test\\java\\org\\springframework\\security\\oauth2\\client\\endpoint\\WebClientReactiveAuthorizationCodeTokenResponseClientTests.java",
      "className": "WebClientReactiveAuthorizationCodeTokenResponseClientTests"
    },
    "statements": [
      {
        "type": "DECLARATION",
        "code": "WebClient customClient = mock();",
        "line": 245,
        "locate": "Test Case",
        "locationContext": {
          "methodName": "setCustomWebClientThenCustomWebClientIsUsed",
          "methodAnnotations": [
            "@Test"
          ]
        }
      },
      {
        "type": "STUBBING",
        "code": "given(customClient.post()).willReturn(WebClient.builder().build().post());",
        "line": 246,
        "locate": "Test Case",
        "locationContext": {
          "methodName": "setCustomWebClientThenCustomWebClientIsUsed",
          "methodAnnotations": [
            "@Test"
          ]
        }
      },
      {
        "type": "VERIFICATION",
        "code": "verify(customClient, atLeastOnce()).post();",
        "line": 252,
        "locate": "Test Case",
        "locationContext": {
          "methodName": "setCustomWebClientThenCustomWebClientIsUsed",
          "methodAnnotations": [
            "@Test"
          ]
        }
      }
    ],
    "pattern_id": 6
  },
  {
    "variableName": "customClient",
    "variableType": "WebClient",
    "mockedClass": "WebClient",
    "isReuseableMock": false,
    "mockPattern": "Creation:\n\u2014 Local Mock Creation in Test Case\n\nStubbing:\n\u2014 Test Case\n\nVerification:\n\u2014 Test Case",
    "classContext": {
      "packageName": "org.springframework.security.oauth2.client.endpoint",
      "filePath": "C:\\java tool\\Spring\\spring-security\\oauth2\\oauth2-client\\src\\test\\java\\org\\springframework\\security\\oauth2\\client\\endpoint\\WebClientReactiveClientCredentialsTokenResponseClientTests.java",
      "className": "WebClientReactiveClientCredentialsTokenResponseClientTests"
    },
    "statements": [
      {
        "type": "DECLARATION",
        "code": "WebClient customClient = mock();",
        "line": 220,
        "locate": "Test Case",
        "locationContext": {
          "methodName": "setWebClientCustomThenCustomClientIsUsed",
          "methodAnnotations": [
            "@Test"
          ]
        }
      },
      {
        "type": "STUBBING",
        "code": "given(customClient.post()).willReturn(WebClient.builder().build().post());",
        "line": 221,
        "locate": "Test Case",
        "locationContext": {
          "methodName": "setWebClientCustomThenCustomClientIsUsed",
          "methodAnnotations": [
            "@Test"
          ]
        }
      },
      {
        "type": "VERIFICATION",
        "code": "verify(customClient, atLeastOnce()).post();",
        "line": 227,
        "locate": "Test Case",
        "locationContext": {
          "methodName": "setWebClientCustomThenCustomClientIsUsed",
          "methodAnnotations": [
            "@Test"
          ]
        }
      }
    ],
    "pattern_id": 6
  },
  {
    "variableName": "customClient",
    "variableType": "WebClient",
    "mockedClass": "WebClient",
    "isReuseableMock": false,
    "mockPattern": "Creation:\n\u2014 Local Mock Creation in Test Case\n\nStubbing:\n\u2014 Test Case\n\nVerification:\n\u2014 Test Case",
    "classContext": {
      "packageName": "org.springframework.security.oauth2.client.endpoint",
      "filePath": "C:\\java tool\\Spring\\spring-security\\oauth2\\oauth2-client\\src\\test\\java\\org\\springframework\\security\\oauth2\\client\\endpoint\\WebClientReactiveJwtBearerTokenResponseClientTests.java",
      "className": "WebClientReactiveJwtBearerTokenResponseClientTests"
    },
    "statements": [
      {
        "type": "DECLARATION",
        "code": "WebClient customClient = mock();",
        "line": 179,
        "locate": "Test Case",
        "locationContext": {
          "methodName": "getTokenResponseWhenWebClientSetThenCalled",
          "methodAnnotations": [
            "@Test"
          ]
        }
      },
      {
        "type": "STUBBING",
        "code": "given(customClient.post()).willReturn(WebClient.builder().build().post());",
        "line": 180,
        "locate": "Test Case",
        "locationContext": {
          "methodName": "getTokenResponseWhenWebClientSetThenCalled",
          "methodAnnotations": [
            "@Test"
          ]
        }
      },
      {
        "type": "VERIFICATION",
        "code": "verify(customClient).post();",
        "line": 186,
        "locate": "Test Case",
        "locationContext": {
          "methodName": "getTokenResponseWhenWebClientSetThenCalled",
          "methodAnnotations": [
            "@Test"
          ]
        }
      }
    ],
    "pattern_id": 6
  },
  {
    "variableName": "customClient",
    "variableType": "WebClient",
    "mockedClass": "WebClient",
    "isReuseableMock": false,
    "mockPattern": "Creation:\n\u2014 Local Mock Creation in Test Case\n\nStubbing:\n\u2014 Test Case\n\nVerification:\n\u2014 Test Case",
    "classContext": {
      "packageName": "org.springframework.security.oauth2.client.endpoint",
      "filePath": "C:\\java tool\\Spring\\spring-security\\oauth2\\oauth2-client\\src\\test\\java\\org\\springframework\\security\\oauth2\\client\\endpoint\\WebClientReactiveTokenExchangeTokenResponseClientTests.java",
      "className": "WebClientReactiveTokenExchangeTokenResponseClientTests"
    },
    "statements": [
      {
        "type": "DECLARATION",
        "code": "WebClient customClient = mock();",
        "line": 562,
        "locate": "Test Case",
        "locationContext": {
          "methodName": "getTokenResponseWhenWebClientSetThenCalled",
          "methodAnnotations": [
            "@Test"
          ]
        }
      },
      {
        "type": "STUBBING",
        "code": "given(customClient.post()).willReturn(WebClient.builder().build().post());",
        "line": 563,
        "locate": "Test Case",
        "locationContext": {
          "methodName": "getTokenResponseWhenWebClientSetThenCalled",
          "methodAnnotations": [
            "@Test"
          ]
        }
      },
      {
        "type": "VERIFICATION",
        "code": "verify(customClient).post();",
        "line": 569,
        "locate": "Test Case",
        "locationContext": {
          "methodName": "getTokenResponseWhenWebClientSetThenCalled",
          "methodAnnotations": [
            "@Test"
          ]
        }
      }
    ],
    "pattern_id": 6
  }
]