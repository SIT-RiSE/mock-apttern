[
  {
    "variableName": "logoutHandler",
    "variableType": "LogoutHandler",
    "mockedClass": "LogoutHandler",
    "isReuseableMock": "Hybrid",
    "mockPattern": "Creation:\n\u2014 Attribute Mock Creation\n\nStubbing:\n\u2014 None\n\nVerification:\n\u2014 Test Case",
    "classContext": {
      "packageName": "org.springframework.security.saml2.provider.service.web.authentication.logout",
      "filePath": "C:\\java tool\\Spring\\spring-security\\saml2\\saml2-service-provider\\src\\test\\java\\org\\springframework\\security\\saml2\\provider\\service\\web\\authentication\\logout\\Saml2LogoutRequestFilterTests.java",
      "className": "Saml2LogoutRequestFilterTests"
    },
    "statements": [
      {
        "type": "FIELD_MOCK_CREATION",
        "code": "LogoutHandler logoutHandler = mock(LogoutHandler.class);",
        "line": 59,
        "locate": "Attribute",
        "locationContext": {
          "methodName": "[FieldDeclaration]",
          "methodAnnotations": []
        }
      },
      {
        "type": "VERIFICATION",
        "code": "verify(this.logoutHandler).logout(any(), any(), any());",
        "line": 89,
        "locate": "Test Case",
        "locationContext": {
          "methodName": "doFilterWhenSamlRequestThenRedirects",
          "methodAnnotations": [
            "@Test"
          ]
        }
      },
      {
        "type": "VERIFICATION",
        "code": "verify(this.logoutHandler).logout(any(), any(), any());",
        "line": 118,
        "locate": "Test Case",
        "locationContext": {
          "methodName": "doFilterWhenSamlRequestThenPosts",
          "methodAnnotations": [
            "@Test"
          ]
        }
      },
      {
        "type": "VERIFICATION",
        "code": "verifyNoInteractions(this.logoutRequestValidator, this.logoutHandler);",
        "line": 138,
        "locate": "Test Case",
        "locationContext": {
          "methodName": "doFilterWhenRequestMismatchesThenNoLogout",
          "methodAnnotations": [
            "@Test"
          ]
        }
      },
      {
        "type": "VERIFICATION",
        "code": "verifyNoInteractions(this.logoutRequestValidator, this.logoutHandler);",
        "line": 149,
        "locate": "Test Case",
        "locationContext": {
          "methodName": "doFilterWhenNoSamlRequestOrResponseThenNoLogout",
          "methodAnnotations": [
            "@Test"
          ]
        }
      },
      {
        "type": "VERIFICATION",
        "code": "verifyNoInteractions(this.logoutHandler);",
        "line": 166,
        "locate": "Test Case",
        "locationContext": {
          "methodName": "doFilterWhenValidationFailsThen401",
          "methodAnnotations": [
            "@Test"
          ]
        }
      },
      {
        "type": "VERIFICATION",
        "code": "verifyNoInteractions(this.logoutHandler);",
        "line": 183,
        "locate": "Test Case",
        "locationContext": {
          "methodName": "doFilterWhenNoRelyingPartyLogoutThen401",
          "methodAnnotations": [
            "@Test"
          ]
        }
      }
    ],
    "pattern_id": 9
  },
  {
    "variableName": "logoutHandler",
    "variableType": "LogoutHandler",
    "mockedClass": "LogoutHandler",
    "isReuseableMock": "Hybrid",
    "mockPattern": "Creation:\n\u2014 Attribute Mock Creation\n\nStubbing:\n\u2014 None\n\nVerification:\n\u2014 Test Case",
    "classContext": {
      "packageName": "org.springframework.security.web.servletapi",
      "filePath": "C:\\java tool\\Spring\\spring-security\\web\\src\\test\\java\\org\\springframework\\security\\web\\servletapi\\SecurityContextHolderAwareRequestFilterTests.java",
      "className": "SecurityContextHolderAwareRequestFilterTests"
    },
    "statements": [
      {
        "type": "FIELD_MOCK_CREATION",
        "code": "@Mock\r\nprivate LogoutHandler logoutHandler;",
        "line": 84,
        "locate": "Attribute",
        "locationContext": {
          "methodName": "[FieldDeclaration]",
          "methodAnnotations": [
            "@Mock"
          ]
        }
      },
      {
        "type": "VERIFICATION",
        "code": "verifyNoMoreInteractions(this.authenticationManager, this.logoutHandler);",
        "line": 131,
        "locate": "Test Case",
        "locationContext": {
          "methodName": "authenticateFalse",
          "methodAnnotations": [
            "@Test"
          ]
        }
      },
      {
        "type": "VERIFICATION",
        "code": "verifyNoMoreInteractions(this.authenticationEntryPoint, this.authenticationManager, this.logoutHandler);",
        "line": 140,
        "locate": "Test Case",
        "locationContext": {
          "methodName": "authenticateTrue",
          "methodAnnotations": [
            "@Test"
          ]
        }
      },
      {
        "type": "VERIFICATION",
        "code": "verifyNoMoreInteractions(this.authenticationEntryPoint, this.authenticationManager, this.logoutHandler);",
        "line": 150,
        "locate": "Test Case",
        "locationContext": {
          "methodName": "authenticateNullEntryPointFalse",
          "methodAnnotations": [
            "@Test"
          ]
        }
      },
      {
        "type": "VERIFICATION",
        "code": "verifyNoMoreInteractions(this.authenticationEntryPoint, this.authenticationManager, this.logoutHandler);",
        "line": 160,
        "locate": "Test Case",
        "locationContext": {
          "methodName": "authenticateNullEntryPointTrue",
          "methodAnnotations": [
            "@Test"
          ]
        }
      },
      {
        "type": "VERIFICATION",
        "code": "verifyNoMoreInteractions(this.authenticationEntryPoint, this.logoutHandler);",
        "line": 170,
        "locate": "Test Case",
        "locationContext": {
          "methodName": "login",
          "methodAnnotations": [
            "@Test"
          ]
        }
      },
      {
        "type": "VERIFICATION",
        "code": "verifyNoMoreInteractions(this.authenticationEntryPoint, this.logoutHandler);",
        "line": 182,
        "locate": "Test Case",
        "locationContext": {
          "methodName": "loginWithExistingUser",
          "methodAnnotations": [
            "@Test"
          ]
        }
      },
      {
        "type": "VERIFICATION",
        "code": "verifyNoMoreInteractions(this.authenticationEntryPoint, this.logoutHandler);",
        "line": 195,
        "locate": "Test Case",
        "locationContext": {
          "methodName": "loginFail",
          "methodAnnotations": [
            "@Test"
          ]
        }
      },
      {
        "type": "VERIFICATION",
        "code": "verifyNoMoreInteractions(this.authenticationEntryPoint, this.authenticationManager, this.logoutHandler);",
        "line": 207,
        "locate": "Test Case",
        "locationContext": {
          "methodName": "loginNullAuthenticationManager",
          "methodAnnotations": [
            "@Test"
          ]
        }
      },
      {
        "type": "VERIFICATION",
        "code": "verifyNoMoreInteractions(this.authenticationEntryPoint, this.authenticationManager, this.logoutHandler);",
        "line": 220,
        "locate": "Test Case",
        "locationContext": {
          "methodName": "loginNullAuthenticationManagerFail",
          "methodAnnotations": [
            "@Test"
          ]
        }
      },
      {
        "type": "VERIFICATION",
        "code": "verify(this.logoutHandler).logout(wrappedRequest, this.response, expectedAuth);",
        "line": 250,
        "locate": "Test Case",
        "locationContext": {
          "methodName": "logout",
          "methodAnnotations": [
            "@Test"
          ]
        }
      },
      {
        "type": "VERIFICATION",
        "code": "verifyNoMoreInteractions(this.authenticationManager, this.logoutHandler);",
        "line": 251,
        "locate": "Test Case",
        "locationContext": {
          "methodName": "logout",
          "methodAnnotations": [
            "@Test"
          ]
        }
      },
      {
        "type": "VERIFICATION",
        "code": "verifyNoMoreInteractions(this.authenticationEntryPoint, this.authenticationManager, this.logoutHandler);",
        "line": 261,
        "locate": "Test Case",
        "locationContext": {
          "methodName": "logoutNullLogoutHandler",
          "methodAnnotations": [
            "@Test"
          ]
        }
      },
      {
        "type": "VERIFICATION",
        "code": "verifyNoMoreInteractions(this.authenticationManager, this.logoutHandler);",
        "line": 282,
        "locate": "Test Case",
        "locationContext": {
          "methodName": "getAsyncContextStart",
          "methodAnnotations": [
            "@Test"
          ]
        }
      },
      {
        "type": "VERIFICATION",
        "code": "verifyNoMoreInteractions(this.authenticationManager, this.logoutHandler);",
        "line": 302,
        "locate": "Test Case",
        "locationContext": {
          "methodName": "startAsyncStart",
          "methodAnnotations": [
            "@Test"
          ]
        }
      },
      {
        "type": "VERIFICATION",
        "code": "verifyNoMoreInteractions(this.authenticationManager, this.logoutHandler);",
        "line": 322,
        "locate": "Test Case",
        "locationContext": {
          "methodName": "startAsyncWithRequestResponseStart",
          "methodAnnotations": [
            "@Test"
          ]
        }
      }
    ],
    "pattern_id": 9
  }
]