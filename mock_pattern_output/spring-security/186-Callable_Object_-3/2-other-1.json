[
  {
    "variableName": "delegate",
    "variableType": "Callable<Object>",
    "mockedClass": "Callable<Object>",
    "isReuseableMock": false,
    "mockPattern": "Creation:\n\u2014 Attribute Mock Creation\n\nStubbing:\n\u2014 Other Methods\n\nVerification:\n\u2014 Other Methods",
    "classContext": {
      "packageName": "org.springframework.security.concurrent",
      "filePath": "C:\\java tool\\Spring\\spring-security\\core\\src\\test\\java\\org\\springframework\\security\\concurrent\\DelegatingSecurityContextCallableTests.java",
      "className": "DelegatingSecurityContextCallableTests"
    },
    "statements": [
      {
        "type": "FIELD_MOCK_CREATION",
        "code": "@Mock\r\nprivate Callable<Object> delegate;",
        "line": 52,
        "locate": "Attribute",
        "locationContext": {
          "methodName": "[FieldDeclaration]",
          "methodAnnotations": [
            "@Mock"
          ]
        }
      },
      {
        "type": "STUBBING",
        "code": "given(this.delegate.call()).willAnswer(new Returns(this.callableResult) {\r\n\r\n    @Override\r\n    public Object answer(InvocationOnMock invocation) throws Throwable {\r\n        assertThat(strategy.getContext()).isEqualTo(DelegatingSecurityContextCallableTests.this.securityContext);\r\n        return super.answer(invocation);\r\n    }\r\n});",
        "line": 80,
        "locate": "Other Methods",
        "locationContext": {
          "methodName": "givenDelegateCallWillAnswerWithCurrentSecurityContext",
          "methodAnnotations": []
        }
      },
      {
        "type": "VERIFICATION",
        "code": "verify(this.delegate).call();",
        "line": 199,
        "locate": "Other Methods",
        "locationContext": {
          "methodName": "assertWrapped",
          "methodAnnotations": []
        }
      }
    ],
    "pattern_id": 47
  }
]