[
  {
    "variableName": "authoritiesMapper",
    "variableType": "GrantedAuthoritiesMapper",
    "mockedClass": "GrantedAuthoritiesMapper",
    "isReuseableMock": "Fully Localized",
    "mockPattern": "Creation:\n\u2014 Local Mock Creation in Test Case\n\nStubbing:\n\u2014 Test Case\n\nVerification:\n\u2014 None",
    "classContext": {
      "packageName": "org.springframework.security.oauth2.client.authentication",
      "filePath": "C:\\java tool\\Spring\\spring-security\\oauth2\\oauth2-client\\src\\test\\java\\org\\springframework\\security\\oauth2\\client\\authentication\\OAuth2LoginAuthenticationProviderTests.java",
      "className": "OAuth2LoginAuthenticationProviderTests"
    },
    "statements": [
      {
        "type": "DECLARATION",
        "code": "GrantedAuthoritiesMapper authoritiesMapper = mock(GrantedAuthoritiesMapper.class);",
        "line": 184,
        "locate": "Test Case",
        "locationContext": {
          "methodName": "authenticateWhenAuthoritiesMapperSetThenReturnMappedAuthorities",
          "methodAnnotations": [
            "@Test"
          ]
        }
      },
      {
        "type": "STUBBING",
        "code": "given(authoritiesMapper.mapAuthorities(anyCollection())).willAnswer((Answer<List<GrantedAuthority>>) (invocation) -> mappedAuthorities);",
        "line": 185,
        "locate": "Test Case",
        "locationContext": {
          "methodName": "authenticateWhenAuthoritiesMapperSetThenReturnMappedAuthorities",
          "methodAnnotations": [
            "@Test"
          ]
        }
      }
    ],
    "pattern_id": 1
  },
  {
    "variableName": "authoritiesMapper",
    "variableType": "GrantedAuthoritiesMapper",
    "mockedClass": "GrantedAuthoritiesMapper",
    "isReuseableMock": "Fully Localized",
    "mockPattern": "Creation:\n\u2014 Local Mock Creation in Test Case\n\nStubbing:\n\u2014 Test Case\n\nVerification:\n\u2014 None",
    "classContext": {
      "packageName": "org.springframework.security.oauth2.client.authentication",
      "filePath": "C:\\java tool\\Spring\\spring-security\\oauth2\\oauth2-client\\src\\test\\java\\org\\springframework\\security\\oauth2\\client\\authentication\\OAuth2LoginReactiveAuthenticationManagerTests.java",
      "className": "OAuth2LoginReactiveAuthenticationManagerTests"
    },
    "statements": [
      {
        "type": "DECLARATION",
        "code": "GrantedAuthoritiesMapper authoritiesMapper = mock(GrantedAuthoritiesMapper.class);",
        "line": 199,
        "locate": "Test Case",
        "locationContext": {
          "methodName": "authenticateWhenAuthoritiesMapperSetThenReturnMappedAuthorities",
          "methodAnnotations": [
            "@Test"
          ]
        }
      },
      {
        "type": "STUBBING",
        "code": "given(authoritiesMapper.mapAuthorities(anyCollection())).willAnswer((Answer<List<GrantedAuthority>>) (invocation) -> mappedAuthorities);",
        "line": 200,
        "locate": "Test Case",
        "locationContext": {
          "methodName": "authenticateWhenAuthoritiesMapperSetThenReturnMappedAuthorities",
          "methodAnnotations": [
            "@Test"
          ]
        }
      }
    ],
    "pattern_id": 1
  },
  {
    "variableName": "authoritiesMapper",
    "variableType": "GrantedAuthoritiesMapper",
    "mockedClass": "GrantedAuthoritiesMapper",
    "isReuseableMock": "Fully Localized",
    "mockPattern": "Creation:\n\u2014 Local Mock Creation in Test Case\n\nStubbing:\n\u2014 Test Case\n\nVerification:\n\u2014 None",
    "classContext": {
      "packageName": "org.springframework.security.oauth2.client.oidc.authentication",
      "filePath": "C:\\java tool\\Spring\\spring-security\\oauth2\\oauth2-client\\src\\test\\java\\org\\springframework\\security\\oauth2\\client\\oidc\\authentication\\OidcAuthorizationCodeAuthenticationProviderTests.java",
      "className": "OidcAuthorizationCodeAuthenticationProviderTests"
    },
    "statements": [
      {
        "type": "DECLARATION",
        "code": "GrantedAuthoritiesMapper authoritiesMapper = mock(GrantedAuthoritiesMapper.class);",
        "line": 299,
        "locate": "Test Case",
        "locationContext": {
          "methodName": "authenticateWhenAuthoritiesMapperSetThenReturnMappedAuthorities",
          "methodAnnotations": [
            "@Test"
          ]
        }
      },
      {
        "type": "STUBBING",
        "code": "given(authoritiesMapper.mapAuthorities(anyCollection())).willAnswer((Answer<List<GrantedAuthority>>) (invocation) -> mappedAuthorities);",
        "line": 300,
        "locate": "Test Case",
        "locationContext": {
          "methodName": "authenticateWhenAuthoritiesMapperSetThenReturnMappedAuthorities",
          "methodAnnotations": [
            "@Test"
          ]
        }
      }
    ],
    "pattern_id": 1
  },
  {
    "variableName": "authoritiesMapper",
    "variableType": "GrantedAuthoritiesMapper",
    "mockedClass": "GrantedAuthoritiesMapper",
    "isReuseableMock": "Fully Localized",
    "mockPattern": "Creation:\n\u2014 Local Mock Creation in Test Case\n\nStubbing:\n\u2014 Test Case\n\nVerification:\n\u2014 None",
    "classContext": {
      "packageName": "org.springframework.security.oauth2.client.oidc.authentication",
      "filePath": "C:\\java tool\\Spring\\spring-security\\oauth2\\oauth2-client\\src\\test\\java\\org\\springframework\\security\\oauth2\\client\\oidc\\authentication\\OidcAuthorizationCodeReactiveAuthenticationManagerTests.java",
      "className": "OidcAuthorizationCodeReactiveAuthenticationManagerTests"
    },
    "statements": [
      {
        "type": "DECLARATION",
        "code": "GrantedAuthoritiesMapper authoritiesMapper = mock(GrantedAuthoritiesMapper.class);",
        "line": 356,
        "locate": "Test Case",
        "locationContext": {
          "methodName": "authenticateWhenAuthoritiesMapperSetThenReturnMappedAuthorities",
          "methodAnnotations": [
            "@Test"
          ]
        }
      },
      {
        "type": "STUBBING",
        "code": "given(authoritiesMapper.mapAuthorities(anyCollection())).willAnswer((Answer<List<GrantedAuthority>>) (invocation) -> mappedAuthorities);",
        "line": 357,
        "locate": "Test Case",
        "locationContext": {
          "methodName": "authenticateWhenAuthoritiesMapperSetThenReturnMappedAuthorities",
          "methodAnnotations": [
            "@Test"
          ]
        }
      }
    ],
    "pattern_id": 1
  }
]