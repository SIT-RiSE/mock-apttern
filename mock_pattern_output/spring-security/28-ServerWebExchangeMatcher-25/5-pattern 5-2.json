[
  {
    "variableName": "secondMatcher",
    "variableType": "ServerWebExchangeMatcher",
    "mockedClass": "ServerWebExchangeMatcher",
    "isReuseableMock": false,
    "mockPattern": "Creation:\n\u2014 Local Mock Creation in Test Case\n\nStubbing:\n\u2014 None\n\nVerification:\n\u2014 Test Case",
    "classContext": {
      "packageName": "org.springframework.security.web.server.authorization",
      "filePath": "C:\\java tool\\Spring\\spring-security\\web\\src\\test\\java\\org\\springframework\\security\\web\\server\\authorization\\ServerWebExchangeDelegatingServerAccessDeniedHandlerTests.java",
      "className": "ServerWebExchangeDelegatingServerAccessDeniedHandlerTests"
    },
    "statements": [
      {
        "type": "DECLARATION",
        "code": "ServerWebExchangeMatcher secondMatcher = mock(ServerWebExchangeMatcher.class);",
        "line": 73,
        "locate": "Test Case",
        "locationContext": {
          "methodName": "handleWhenFirstMatchesThenOnlyFirstInvoked",
          "methodAnnotations": [
            "@Test"
          ]
        }
      },
      {
        "type": "VERIFICATION",
        "code": "verify(secondMatcher, never()).matches(this.exchange);",
        "line": 85,
        "locate": "Test Case",
        "locationContext": {
          "methodName": "handleWhenFirstMatchesThenOnlyFirstInvoked",
          "methodAnnotations": [
            "@Test"
          ]
        }
      }
    ],
    "pattern_id": 5
  },
  {
    "variableName": "matcher",
    "variableType": "ServerWebExchangeMatcher",
    "mockedClass": "ServerWebExchangeMatcher",
    "isReuseableMock": false,
    "mockPattern": "Creation:\n\u2014 Local Mock Creation in Test Case\n\nStubbing:\n\u2014 None\n\nVerification:\n\u2014 Test Case",
    "classContext": {
      "packageName": "org.springframework.security.web.server.csrf",
      "filePath": "C:\\java tool\\Spring\\spring-security\\web\\src\\test\\java\\org\\springframework\\security\\web\\server\\csrf\\CsrfWebFilterTests.java",
      "className": "CsrfWebFilterTests"
    },
    "statements": [
      {
        "type": "DECLARATION",
        "code": "ServerWebExchangeMatcher matcher = mock(ServerWebExchangeMatcher.class);",
        "line": 229,
        "locate": "Test Case",
        "locationContext": {
          "methodName": "doFilterWhenSkipExchangeInvokedThenSkips",
          "methodAnnotations": [
            "@Test"
          ]
        }
      },
      {
        "type": "VERIFICATION",
        "code": "verifyNoMoreInteractions(matcher);",
        "line": 234,
        "locate": "Test Case",
        "locationContext": {
          "methodName": "doFilterWhenSkipExchangeInvokedThenSkips",
          "methodAnnotations": [
            "@Test"
          ]
        }
      }
    ],
    "pattern_id": 5
  }
]