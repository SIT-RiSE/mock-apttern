[
  {
    "variableName": "a",
    "variableType": "Authentication",
    "mockedClass": "Authentication",
    "isReuseableMock": "Fully Localized",
    "mockPattern": "Creation:\n\u2014 Local Mock Creation in Test Case\n\nStubbing:\n\u2014 None\n\nVerification:\n\u2014 None",
    "classContext": {
      "packageName": "org.springframework.security.authentication",
      "filePath": "C:\\java tool\\Spring\\spring-security\\core\\src\\test\\java\\org\\springframework\\security\\authentication\\DefaultAuthenticationEventPublisherTests.java",
      "className": "DefaultAuthenticationEventPublisherTests"
    },
    "statements": [
      {
        "type": "DECLARATION",
        "code": "Authentication a = mock(Authentication.class);",
        "line": 60,
        "locate": "Test Case",
        "locationContext": {
          "methodName": "expectedDefaultMappingsAreSatisfied",
          "methodAnnotations": [
            "@Test"
          ]
        }
      }
    ],
    "pattern_id": 2
  },
  {
    "variableName": "a",
    "variableType": "Authentication",
    "mockedClass": "Authentication",
    "isReuseableMock": "Fully Localized",
    "mockPattern": "Creation:\n\u2014 Local Mock Creation in Test Case\n\nStubbing:\n\u2014 None\n\nVerification:\n\u2014 None",
    "classContext": {
      "packageName": "org.springframework.security.authentication",
      "filePath": "C:\\java tool\\Spring\\spring-security\\core\\src\\test\\java\\org\\springframework\\security\\authentication\\ProviderManagerTests.java",
      "className": "ProviderManagerTests"
    },
    "statements": [
      {
        "type": "DECLARATION",
        "code": "final Authentication a = mock(Authentication.class);",
        "line": 82,
        "locate": "Test Case",
        "locationContext": {
          "methodName": "authenticationSucceedsWithSupportedTokenAndReturnsExpectedObject",
          "methodAnnotations": [
            "@Test"
          ]
        }
      }
    ],
    "pattern_id": 2
  },
  {
    "variableName": "a",
    "variableType": "Authentication",
    "mockedClass": "Authentication",
    "isReuseableMock": "Fully Localized",
    "mockPattern": "Creation:\n\u2014 Local Mock Creation in Test Case\n\nStubbing:\n\u2014 None\n\nVerification:\n\u2014 None",
    "classContext": {
      "packageName": "org.springframework.security.authentication",
      "filePath": "C:\\java tool\\Spring\\spring-security\\core\\src\\test\\java\\org\\springframework\\security\\authentication\\ProviderManagerTests.java",
      "className": "ProviderManagerTests"
    },
    "statements": [
      {
        "type": "DECLARATION",
        "code": "final Authentication a = mock(Authentication.class);",
        "line": 93,
        "locate": "Test Case",
        "locationContext": {
          "methodName": "authenticationSucceedsWhenFirstProviderReturnsNullButSecondAuthenticates",
          "methodAnnotations": [
            "@Test"
          ]
        }
      }
    ],
    "pattern_id": 2
  },
  {
    "variableName": "authReq",
    "variableType": "Authentication",
    "mockedClass": "Authentication",
    "isReuseableMock": "Fully Localized",
    "mockPattern": "Creation:\n\u2014 Local Mock Creation in Test Case\n\nStubbing:\n\u2014 None\n\nVerification:\n\u2014 None",
    "classContext": {
      "packageName": "org.springframework.security.authentication",
      "filePath": "C:\\java tool\\Spring\\spring-security\\core\\src\\test\\java\\org\\springframework\\security\\authentication\\ProviderManagerTests.java",
      "className": "ProviderManagerTests"
    },
    "statements": [
      {
        "type": "DECLARATION",
        "code": "final Authentication authReq = mock(Authentication.class);",
        "line": 166,
        "locate": "Test Case",
        "locationContext": {
          "methodName": "authenticationExceptionIsIgnoredIfLaterProviderAuthenticates",
          "methodAnnotations": [
            "@Test"
          ]
        }
      }
    ],
    "pattern_id": 2
  },
  {
    "variableName": "authReq",
    "variableType": "Authentication",
    "mockedClass": "Authentication",
    "isReuseableMock": "Fully Localized",
    "mockPattern": "Creation:\n\u2014 Local Mock Creation in Test Case\n\nStubbing:\n\u2014 None\n\nVerification:\n\u2014 None",
    "classContext": {
      "packageName": "org.springframework.security.authentication",
      "filePath": "C:\\java tool\\Spring\\spring-security\\core\\src\\test\\java\\org\\springframework\\security\\authentication\\ProviderManagerTests.java",
      "className": "ProviderManagerTests"
    },
    "statements": [
      {
        "type": "DECLARATION",
        "code": "Authentication authReq = mock(Authentication.class);",
        "line": 196,
        "locate": "Test Case",
        "locationContext": {
          "methodName": "parentAuthenticationIsUsedIfProvidersDontAuthenticate",
          "methodAnnotations": [
            "@Test"
          ]
        }
      }
    ],
    "pattern_id": 2
  },
  {
    "variableName": "authReq",
    "variableType": "Authentication",
    "mockedClass": "Authentication",
    "isReuseableMock": "Fully Localized",
    "mockPattern": "Creation:\n\u2014 Local Mock Creation in Test Case\n\nStubbing:\n\u2014 None\n\nVerification:\n\u2014 None",
    "classContext": {
      "packageName": "org.springframework.security.authentication",
      "filePath": "C:\\java tool\\Spring\\spring-security\\core\\src\\test\\java\\org\\springframework\\security\\authentication\\ProviderManagerTests.java",
      "className": "ProviderManagerTests"
    },
    "statements": [
      {
        "type": "DECLARATION",
        "code": "final Authentication authReq = mock(Authentication.class);",
        "line": 217,
        "locate": "Test Case",
        "locationContext": {
          "methodName": "providerNotFoundFromParentIsIgnored",
          "methodAnnotations": [
            "@Test"
          ]
        }
      }
    ],
    "pattern_id": 2
  },
  {
    "variableName": "authReq",
    "variableType": "Authentication",
    "mockedClass": "Authentication",
    "isReuseableMock": "Fully Localized",
    "mockPattern": "Creation:\n\u2014 Local Mock Creation in Test Case\n\nStubbing:\n\u2014 None\n\nVerification:\n\u2014 None",
    "classContext": {
      "packageName": "org.springframework.security.authentication",
      "filePath": "C:\\java tool\\Spring\\spring-security\\core\\src\\test\\java\\org\\springframework\\security\\authentication\\ProviderManagerTests.java",
      "className": "ProviderManagerTests"
    },
    "statements": [
      {
        "type": "DECLARATION",
        "code": "final Authentication authReq = mock(Authentication.class);",
        "line": 235,
        "locate": "Test Case",
        "locationContext": {
          "methodName": "authenticationExceptionFromParentOverridesPreviousOnes",
          "methodAnnotations": [
            "@Test"
          ]
        }
      }
    ],
    "pattern_id": 2
  },
  {
    "variableName": "authReq",
    "variableType": "Authentication",
    "mockedClass": "Authentication",
    "isReuseableMock": "Fully Localized",
    "mockPattern": "Creation:\n\u2014 Local Mock Creation in Test Case\n\nStubbing:\n\u2014 None\n\nVerification:\n\u2014 None",
    "classContext": {
      "packageName": "org.springframework.security.authentication",
      "filePath": "C:\\java tool\\Spring\\spring-security\\core\\src\\test\\java\\org\\springframework\\security\\authentication\\ProviderManagerTests.java",
      "className": "ProviderManagerTests"
    },
    "statements": [
      {
        "type": "DECLARATION",
        "code": "final Authentication authReq = mock(Authentication.class);",
        "line": 252,
        "locate": "Test Case",
        "locationContext": {
          "methodName": "statusExceptionIsPublished",
          "methodAnnotations": [
            "@Test"
          ]
        }
      }
    ],
    "pattern_id": 2
  },
  {
    "variableName": "authReq",
    "variableType": "Authentication",
    "mockedClass": "Authentication",
    "isReuseableMock": "Fully Localized",
    "mockPattern": "Creation:\n\u2014 Local Mock Creation in Test Case\n\nStubbing:\n\u2014 None\n\nVerification:\n\u2014 None",
    "classContext": {
      "packageName": "org.springframework.security.authentication",
      "filePath": "C:\\java tool\\Spring\\spring-security\\core\\src\\test\\java\\org\\springframework\\security\\authentication\\ProviderManagerTests.java",
      "className": "ProviderManagerTests"
    },
    "statements": [
      {
        "type": "DECLARATION",
        "code": "Authentication authReq = mock(Authentication.class);",
        "line": 265,
        "locate": "Test Case",
        "locationContext": {
          "methodName": "providerThrowsInternalAuthenticationServiceException",
          "methodAnnotations": [
            "@Test"
          ]
        }
      }
    ],
    "pattern_id": 2
  },
  {
    "variableName": "authReq",
    "variableType": "Authentication",
    "mockedClass": "Authentication",
    "isReuseableMock": "Fully Localized",
    "mockPattern": "Creation:\n\u2014 Local Mock Creation in Test Case\n\nStubbing:\n\u2014 None\n\nVerification:\n\u2014 None",
    "classContext": {
      "packageName": "org.springframework.security.authentication",
      "filePath": "C:\\java tool\\Spring\\spring-security\\core\\src\\test\\java\\org\\springframework\\security\\authentication\\ProviderManagerTests.java",
      "className": "ProviderManagerTests"
    },
    "statements": [
      {
        "type": "DECLARATION",
        "code": "final Authentication authReq = mock(Authentication.class);",
        "line": 280,
        "locate": "Test Case",
        "locationContext": {
          "methodName": "authenticateWhenFailsInParentAndPublishesThenChildDoesNotPublish",
          "methodAnnotations": [
            "@Test"
          ]
        }
      }
    ],
    "pattern_id": 2
  },
  {
    "variableName": "authentication",
    "variableType": "Authentication",
    "mockedClass": "Authentication",
    "isReuseableMock": "Fully Localized",
    "mockPattern": "Creation:\n\u2014 Local Mock Creation in Test Case\n\nStubbing:\n\u2014 None\n\nVerification:\n\u2014 None",
    "classContext": {
      "packageName": "org.springframework.security.core.context",
      "filePath": "C:\\java tool\\Spring\\spring-security\\core\\src\\test\\java\\org\\springframework\\security\\core\\context\\InheritableThreadLocalSecurityContextHolderStrategyTests.java",
      "className": "InheritableThreadLocalSecurityContextHolderStrategyTests"
    },
    "statements": [
      {
        "type": "DECLARATION",
        "code": "Authentication authentication = mock(Authentication.class);",
        "line": 49,
        "locate": "Test Case",
        "locationContext": {
          "methodName": "deferredContext",
          "methodAnnotations": [
            "@Test"
          ]
        }
      }
    ],
    "pattern_id": 2
  },
  {
    "variableName": "authentication",
    "variableType": "Authentication",
    "mockedClass": "Authentication",
    "isReuseableMock": "Fully Localized",
    "mockPattern": "Creation:\n\u2014 Local Mock Creation in Test Case\n\nStubbing:\n\u2014 None\n\nVerification:\n\u2014 None",
    "classContext": {
      "packageName": "org.springframework.security.core.context",
      "filePath": "C:\\java tool\\Spring\\spring-security\\core\\src\\test\\java\\org\\springframework\\security\\core\\context\\InheritableThreadLocalSecurityContextHolderStrategyTests.java",
      "className": "InheritableThreadLocalSecurityContextHolderStrategyTests"
    },
    "statements": [
      {
        "type": "DECLARATION",
        "code": "Authentication authentication = mock(Authentication.class);",
        "line": 65,
        "locate": "Test Case",
        "locationContext": {
          "methodName": "context",
          "methodAnnotations": [
            "@Test"
          ]
        }
      }
    ],
    "pattern_id": 2
  },
  {
    "variableName": "authentication",
    "variableType": "Authentication",
    "mockedClass": "Authentication",
    "isReuseableMock": "Fully Localized",
    "mockPattern": "Creation:\n\u2014 Local Mock Creation in Test Case\n\nStubbing:\n\u2014 None\n\nVerification:\n\u2014 None",
    "classContext": {
      "packageName": "org.springframework.security.core.context",
      "filePath": "C:\\java tool\\Spring\\spring-security\\core\\src\\test\\java\\org\\springframework\\security\\core\\context\\InheritableThreadLocalSecurityContextHolderStrategyTests.java",
      "className": "InheritableThreadLocalSecurityContextHolderStrategyTests"
    },
    "statements": [
      {
        "type": "DECLARATION",
        "code": "Authentication authentication = mock(Authentication.class);",
        "line": 79,
        "locate": "Test Case",
        "locationContext": {
          "methodName": "getContextWhenEmptyThenReturnsSameInstance",
          "methodAnnotations": [
            "@Test"
          ]
        }
      }
    ],
    "pattern_id": 2
  },
  {
    "variableName": "authentication",
    "variableType": "Authentication",
    "mockedClass": "Authentication",
    "isReuseableMock": "Fully Localized",
    "mockPattern": "Creation:\n\u2014 Local Mock Creation in Test Case\n\nStubbing:\n\u2014 None\n\nVerification:\n\u2014 None",
    "classContext": {
      "packageName": "org.springframework.security.core.context",
      "filePath": "C:\\java tool\\Spring\\spring-security\\core\\src\\test\\java\\org\\springframework\\security\\core\\context\\ThreadLocalSecurityContextHolderStrategyTests.java",
      "className": "ThreadLocalSecurityContextHolderStrategyTests"
    },
    "statements": [
      {
        "type": "DECLARATION",
        "code": "Authentication authentication = mock(Authentication.class);",
        "line": 49,
        "locate": "Test Case",
        "locationContext": {
          "methodName": "deferredContext",
          "methodAnnotations": [
            "@Test"
          ]
        }
      }
    ],
    "pattern_id": 2
  },
  {
    "variableName": "authentication",
    "variableType": "Authentication",
    "mockedClass": "Authentication",
    "isReuseableMock": "Fully Localized",
    "mockPattern": "Creation:\n\u2014 Local Mock Creation in Test Case\n\nStubbing:\n\u2014 None\n\nVerification:\n\u2014 None",
    "classContext": {
      "packageName": "org.springframework.security.core.context",
      "filePath": "C:\\java tool\\Spring\\spring-security\\core\\src\\test\\java\\org\\springframework\\security\\core\\context\\ThreadLocalSecurityContextHolderStrategyTests.java",
      "className": "ThreadLocalSecurityContextHolderStrategyTests"
    },
    "statements": [
      {
        "type": "DECLARATION",
        "code": "Authentication authentication = mock(Authentication.class);",
        "line": 65,
        "locate": "Test Case",
        "locationContext": {
          "methodName": "context",
          "methodAnnotations": [
            "@Test"
          ]
        }
      }
    ],
    "pattern_id": 2
  },
  {
    "variableName": "authentication",
    "variableType": "Authentication",
    "mockedClass": "Authentication",
    "isReuseableMock": "Fully Localized",
    "mockPattern": "Creation:\n\u2014 Local Mock Creation in Test Case\n\nStubbing:\n\u2014 None\n\nVerification:\n\u2014 None",
    "classContext": {
      "packageName": "org.springframework.security.core.context",
      "filePath": "C:\\java tool\\Spring\\spring-security\\core\\src\\test\\java\\org\\springframework\\security\\core\\context\\ThreadLocalSecurityContextHolderStrategyTests.java",
      "className": "ThreadLocalSecurityContextHolderStrategyTests"
    },
    "statements": [
      {
        "type": "DECLARATION",
        "code": "Authentication authentication = mock(Authentication.class);",
        "line": 79,
        "locate": "Test Case",
        "locationContext": {
          "methodName": "getContextWhenEmptyThenReturnsSameInstance",
          "methodAnnotations": [
            "@Test"
          ]
        }
      }
    ],
    "pattern_id": 2
  },
  {
    "variableName": "token",
    "variableType": "Authentication",
    "mockedClass": "Authentication",
    "isReuseableMock": "Fully Localized",
    "mockPattern": "Creation:\n\u2014 Local Mock Creation in Test Case\n\nStubbing:\n\u2014 None\n\nVerification:\n\u2014 None",
    "classContext": {
      "packageName": "org.springframework.security.oauth2.client.oidc.web.logout",
      "filePath": "C:\\java tool\\Spring\\spring-security\\oauth2\\oauth2-client\\src\\test\\java\\org\\springframework\\security\\oauth2\\client\\oidc\\web\\logout\\OidcClientInitiatedLogoutSuccessHandlerTests.java",
      "className": "OidcClientInitiatedLogoutSuccessHandlerTests"
    },
    "statements": [
      {
        "type": "DECLARATION",
        "code": "Authentication token = mock(Authentication.class);",
        "line": 83,
        "locate": "Test Case",
        "locationContext": {
          "methodName": "logoutWhenNotOAuth2AuthenticationThenDefaults",
          "methodAnnotations": [
            "@Test"
          ]
        }
      }
    ],
    "pattern_id": 2
  },
  {
    "variableName": "token",
    "variableType": "Authentication",
    "mockedClass": "Authentication",
    "isReuseableMock": "Fully Localized",
    "mockPattern": "Creation:\n\u2014 Local Mock Creation in Test Case\n\nStubbing:\n\u2014 None\n\nVerification:\n\u2014 None",
    "classContext": {
      "packageName": "org.springframework.security.oauth2.client.oidc.web.server.logout",
      "filePath": "C:\\java tool\\Spring\\spring-security\\oauth2\\oauth2-client\\src\\test\\java\\org\\springframework\\security\\oauth2\\client\\oidc\\web\\server\\logout\\OidcClientInitiatedServerLogoutSuccessHandlerTests.java",
      "className": "OidcClientInitiatedServerLogoutSuccessHandlerTests"
    },
    "statements": [
      {
        "type": "DECLARATION",
        "code": "Authentication token = mock(Authentication.class);",
        "line": 90,
        "locate": "Test Case",
        "locationContext": {
          "methodName": "logoutWhenNotOAuth2AuthenticationThenDefaults",
          "methodAnnotations": [
            "@Test"
          ]
        }
      }
    ],
    "pattern_id": 2
  },
  {
    "variableName": "authenticationWithoutDetails",
    "variableType": "Authentication",
    "mockedClass": "Authentication",
    "isReuseableMock": "Fully Localized",
    "mockPattern": "Creation:\n\u2014 Local Mock Creation in Test Case\n\nStubbing:\n\u2014 None\n\nVerification:\n\u2014 None",
    "classContext": {
      "packageName": "org.springframework.security.saml2.provider.service.web.authentication",
      "filePath": "C:\\java tool\\Spring\\spring-security\\saml2\\saml2-service-provider\\src\\test\\java\\org\\springframework\\security\\saml2\\provider\\service\\web\\authentication\\Saml2WebSsoAuthenticationFilterTests.java",
      "className": "Saml2WebSsoAuthenticationFilterTests"
    },
    "statements": [
      {
        "type": "DECLARATION",
        "code": "final Authentication authenticationWithoutDetails = mock(Authentication.class);",
        "line": 151,
        "locate": "Test Case",
        "locationContext": {
          "methodName": "attemptAuthenticationWhenAuthenticationNotAbstractAuthenticationTokenDoesNotAddDetails",
          "methodAnnotations": [
            "@Test"
          ]
        }
      }
    ],
    "pattern_id": 2
  },
  {
    "variableName": "authentication",
    "variableType": "Authentication",
    "mockedClass": "Authentication",
    "isReuseableMock": "Fully Localized",
    "mockPattern": "Creation:\n\u2014 Local Mock Creation in Test Case\n\nStubbing:\n\u2014 None\n\nVerification:\n\u2014 None",
    "classContext": {
      "packageName": "org.springframework.security.test.context",
      "filePath": "C:\\java tool\\Spring\\spring-security\\test\\src\\test\\java\\org\\springframework\\security\\test\\context\\TestSecurityContextHolderTests.java",
      "className": "TestSecurityContextHolderTests"
    },
    "statements": [
      {
        "type": "DECLARATION",
        "code": "Authentication authentication = mock(Authentication.class);",
        "line": 68,
        "locate": "Test Case",
        "locationContext": {
          "methodName": "setContextWithAuthentication",
          "methodAnnotations": [
            "@Test"
          ]
        }
      }
    ],
    "pattern_id": 2
  },
  {
    "variableName": "authentication",
    "variableType": "Authentication",
    "mockedClass": "Authentication",
    "isReuseableMock": "Fully Localized",
    "mockPattern": "Creation:\n\u2014 Local Mock Creation in Test Case\n\nStubbing:\n\u2014 None\n\nVerification:\n\u2014 None",
    "classContext": {
      "packageName": "org.springframework.security.web.authentication",
      "filePath": "C:\\java tool\\Spring\\spring-security\\web\\src\\test\\java\\org\\springframework\\security\\web\\authentication\\ForwardAuthenticaionSuccessHandlerTests.java",
      "className": "ForwardAuthenticaionSuccessHandlerTests"
    },
    "statements": [
      {
        "type": "DECLARATION",
        "code": "Authentication authentication = mock(Authentication.class);",
        "line": 54,
        "locate": "Test Case",
        "locationContext": {
          "methodName": "responseIsForwarded",
          "methodAnnotations": [
            "@Test"
          ]
        }
      }
    ],
    "pattern_id": 2
  },
  {
    "variableName": "authentication",
    "variableType": "Authentication",
    "mockedClass": "Authentication",
    "isReuseableMock": "Fully Localized",
    "mockPattern": "Creation:\n\u2014 Local Mock Creation in Test Case\n\nStubbing:\n\u2014 None\n\nVerification:\n\u2014 None",
    "classContext": {
      "packageName": "org.springframework.security.web.authentication.logout",
      "filePath": "C:\\java tool\\Spring\\spring-security\\web\\src\\test\\java\\org\\springframework\\security\\web\\authentication\\logout\\ForwardLogoutSuccessHandlerTests.java",
      "className": "ForwardLogoutSuccessHandlerTests"
    },
    "statements": [
      {
        "type": "DECLARATION",
        "code": "Authentication authentication = mock(Authentication.class);",
        "line": 56,
        "locate": "Test Case",
        "locationContext": {
          "methodName": "logoutSuccessIsHandled",
          "methodAnnotations": [
            "@Test"
          ]
        }
      }
    ],
    "pattern_id": 2
  },
  {
    "variableName": "authentication",
    "variableType": "Authentication",
    "mockedClass": "Authentication",
    "isReuseableMock": "Fully Localized",
    "mockPattern": "Creation:\n\u2014 Local Mock Creation in Test Case\n\nStubbing:\n\u2014 None\n\nVerification:\n\u2014 None",
    "classContext": {
      "packageName": "org.springframework.security.web.server.authentication.logout",
      "filePath": "C:\\java tool\\Spring\\spring-security\\web\\src\\test\\java\\org\\springframework\\security\\web\\server\\authentication\\logout\\HeaderWriterServerLogoutHandlerTests.java",
      "className": "HeaderWriterServerLogoutHandlerTests"
    },
    "statements": [
      {
        "type": "DECLARATION",
        "code": "Authentication authentication = mock(Authentication.class);",
        "line": 50,
        "locate": "Test Case",
        "locationContext": {
          "methodName": "logoutWhenInvokedThenWritesResponseHeaders",
          "methodAnnotations": [
            "@Test"
          ]
        }
      }
    ],
    "pattern_id": 2
  },
  {
    "variableName": "mockAuthentication",
    "variableType": "Authentication",
    "mockedClass": "Authentication",
    "isReuseableMock": "Fully Localized",
    "mockPattern": "Creation:\n\u2014 Local Mock Creation in Test Case\n\nStubbing:\n\u2014 None\n\nVerification:\n\u2014 None",
    "classContext": {
      "packageName": "org.springframework.security.web.session",
      "filePath": "C:\\java tool\\Spring\\spring-security\\web\\src\\test\\java\\org\\springframework\\security\\web\\session\\DefaultSessionAuthenticationStrategyTests.java",
      "className": "DefaultSessionAuthenticationStrategyTests"
    },
    "statements": [
      {
        "type": "DECLARATION",
        "code": "Authentication mockAuthentication = mock(Authentication.class);",
        "line": 69,
        "locate": "Test Case",
        "locationContext": {
          "methodName": "newSessionIsCreatedIfSessionAlreadyExistsWithEventPublisher",
          "methodAnnotations": [
            "@Test"
          ]
        }
      }
    ],
    "pattern_id": 2
  },
  {
    "variableName": "mockAuthentication",
    "variableType": "Authentication",
    "mockedClass": "Authentication",
    "isReuseableMock": "Fully Localized",
    "mockPattern": "Creation:\n\u2014 Local Mock Creation in Test Case\n\nStubbing:\n\u2014 None\n\nVerification:\n\u2014 None",
    "classContext": {
      "packageName": "org.springframework.security.web.session",
      "filePath": "C:\\java tool\\Spring\\spring-security\\web\\src\\test\\java\\org\\springframework\\security\\web\\session\\DefaultSessionAuthenticationStrategyTests.java",
      "className": "DefaultSessionAuthenticationStrategyTests"
    },
    "statements": [
      {
        "type": "DECLARATION",
        "code": "Authentication mockAuthentication = mock(Authentication.class);",
        "line": 110,
        "locate": "Test Case",
        "locationContext": {
          "methodName": "onlySavedRequestAttributeIsMigratedIfMigrateAttributesIsFalseWithEventPublisher",
          "methodAnnotations": [
            "@Test"
          ]
        }
      }
    ],
    "pattern_id": 2
  },
  {
    "variableName": "mockAuthentication",
    "variableType": "Authentication",
    "mockedClass": "Authentication",
    "isReuseableMock": "Fully Localized",
    "mockPattern": "Creation:\n\u2014 Local Mock Creation in Test Case\n\nStubbing:\n\u2014 None\n\nVerification:\n\u2014 None",
    "classContext": {
      "packageName": "org.springframework.security.web.session",
      "filePath": "C:\\java tool\\Spring\\spring-security\\web\\src\\test\\java\\org\\springframework\\security\\web\\session\\DefaultSessionAuthenticationStrategyTests.java",
      "className": "DefaultSessionAuthenticationStrategyTests"
    },
    "statements": [
      {
        "type": "DECLARATION",
        "code": "Authentication mockAuthentication = mock(Authentication.class);",
        "line": 139,
        "locate": "Test Case",
        "locationContext": {
          "methodName": "onAuthenticationWhenMigrateSessionAttributesTrueThenMaxInactiveIntervalIsMigrated",
          "methodAnnotations": [
            "@Test"
          ]
        }
      }
    ],
    "pattern_id": 2
  },
  {
    "variableName": "mockAuthentication",
    "variableType": "Authentication",
    "mockedClass": "Authentication",
    "isReuseableMock": "Fully Localized",
    "mockPattern": "Creation:\n\u2014 Local Mock Creation in Test Case\n\nStubbing:\n\u2014 None\n\nVerification:\n\u2014 None",
    "classContext": {
      "packageName": "org.springframework.security.web.session",
      "filePath": "C:\\java tool\\Spring\\spring-security\\web\\src\\test\\java\\org\\springframework\\security\\web\\session\\DefaultSessionAuthenticationStrategyTests.java",
      "className": "DefaultSessionAuthenticationStrategyTests"
    },
    "statements": [
      {
        "type": "DECLARATION",
        "code": "Authentication mockAuthentication = mock(Authentication.class);",
        "line": 151,
        "locate": "Test Case",
        "locationContext": {
          "methodName": "onAuthenticationWhenMigrateSessionAttributesFalseThenMaxInactiveIntervalIsNotMigrated",
          "methodAnnotations": [
            "@Test"
          ]
        }
      }
    ],
    "pattern_id": 2
  }
]