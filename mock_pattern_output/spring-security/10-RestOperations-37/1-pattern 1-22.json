[
  {
    "variableName": "restOperations",
    "variableType": "RestOperations",
    "mockedClass": "RestOperations",
    "isReuseableMock": false,
    "mockPattern": "Creation:\n\u2014 Local Mock Creation in Test Case\n\nStubbing:\n\u2014 Test Case\n\nVerification:\n\u2014 None",
    "classContext": {
      "packageName": "org.springframework.security.oauth2.jwt",
      "filePath": "C:\\java tool\\Spring\\spring-security\\oauth2\\oauth2-jose\\src\\test\\java\\org\\springframework\\security\\oauth2\\jwt\\NimbusJwtDecoderTests.java",
      "className": "NimbusJwtDecoderTests"
    },
    "statements": [
      {
        "type": "DECLARATION",
        "code": "RestOperations restOperations = mock(RestOperations.class);",
        "line": 327,
        "locate": "Test Case",
        "locationContext": {
          "methodName": "decodeWhenIssuerLocationThenOk",
          "methodAnnotations": [
            "@Test"
          ]
        }
      },
      {
        "type": "STUBBING",
        "code": "given(restOperations.exchange(any(RequestEntity.class), any(ParameterizedTypeReference.class))).willReturn(new ResponseEntity<>(Map.of(\"issuer\", issuer, \"jwks_uri\", issuer + \"/jwks\"), HttpStatus.OK));",
        "line": 328,
        "locate": "Test Case",
        "locationContext": {
          "methodName": "decodeWhenIssuerLocationThenOk",
          "methodAnnotations": [
            "@Test"
          ]
        }
      },
      {
        "type": "STUBBING",
        "code": "given(restOperations.exchange(any(RequestEntity.class), eq(String.class))).willReturn(new ResponseEntity<>(JWK_SET, HttpStatus.OK));",
        "line": 330,
        "locate": "Test Case",
        "locationContext": {
          "methodName": "decodeWhenIssuerLocationThenOk",
          "methodAnnotations": [
            "@Test"
          ]
        }
      }
    ],
    "pattern_id": 1
  },
  {
    "variableName": "restOperations",
    "variableType": "RestOperations",
    "mockedClass": "RestOperations",
    "isReuseableMock": false,
    "mockPattern": "Creation:\n\u2014 Local Mock Creation in Test Case\n\nStubbing:\n\u2014 Test Case\n\nVerification:\n\u2014 None",
    "classContext": {
      "packageName": "org.springframework.security.oauth2.jwt",
      "filePath": "C:\\java tool\\Spring\\spring-security\\oauth2\\oauth2-jose\\src\\test\\java\\org\\springframework\\security\\oauth2\\jwt\\NimbusJwtDecoderTests.java",
      "className": "NimbusJwtDecoderTests"
    },
    "statements": [
      {
        "type": "DECLARATION",
        "code": "RestOperations restOperations = mock(RestOperations.class);",
        "line": 778,
        "locate": "Test Case",
        "locationContext": {
          "methodName": "decodeWhenCacheIsConfiguredAndValueLoaderErrorsThenThrowsJwtException",
          "methodAnnotations": [
            "@Test"
          ]
        }
      },
      {
        "type": "STUBBING",
        "code": "given(restOperations.exchange(any(RequestEntity.class), eq(String.class))).willThrow(new RestClientException(\"Cannot retrieve JWK Set\"));",
        "line": 779,
        "locate": "Test Case",
        "locationContext": {
          "methodName": "decodeWhenCacheIsConfiguredAndValueLoaderErrorsThenThrowsJwtException",
          "methodAnnotations": [
            "@Test"
          ]
        }
      }
    ],
    "pattern_id": 1
  },
  {
    "variableName": "restOperations",
    "variableType": "RestOperations",
    "mockedClass": "RestOperations",
    "isReuseableMock": false,
    "mockPattern": "Creation:\n\u2014 Local Mock Creation in Test Case\n\nStubbing:\n\u2014 Test Case\n\nVerification:\n\u2014 None",
    "classContext": {
      "packageName": "org.springframework.security.oauth2.jwt",
      "filePath": "C:\\java tool\\Spring\\spring-security\\oauth2\\oauth2-jose\\src\\test\\java\\org\\springframework\\security\\oauth2\\jwt\\NimbusJwtDecoderTests.java",
      "className": "NimbusJwtDecoderTests"
    },
    "statements": [
      {
        "type": "DECLARATION",
        "code": "RestOperations restOperations = mock(RestOperations.class);",
        "line": 817,
        "locate": "Test Case",
        "locationContext": {
          "methodName": "withJwkSetUriWhenUsingCustomTypeHeaderThenRefuseOmittedType",
          "methodAnnotations": [
            "@Test"
          ]
        }
      },
      {
        "type": "STUBBING",
        "code": "given(restOperations.exchange(any(RequestEntity.class), eq(String.class))).willReturn(new ResponseEntity<>(JWK_SET, HttpStatus.OK));",
        "line": 818,
        "locate": "Test Case",
        "locationContext": {
          "methodName": "withJwkSetUriWhenUsingCustomTypeHeaderThenRefuseOmittedType",
          "methodAnnotations": [
            "@Test"
          ]
        }
      }
    ],
    "pattern_id": 1
  },
  {
    "variableName": "restOperations",
    "variableType": "RestOperations",
    "mockedClass": "RestOperations",
    "isReuseableMock": false,
    "mockPattern": "Creation:\n\u2014 Local Mock Creation in Test Case\n\nStubbing:\n\u2014 Test Case\n\nVerification:\n\u2014 None",
    "classContext": {
      "packageName": "org.springframework.security.oauth2.server.resource.introspection",
      "filePath": "C:\\java tool\\Spring\\spring-security\\oauth2\\oauth2-resource-server\\src\\test\\java\\org\\springframework\\security\\oauth2\\server\\resource\\introspection\\NimbusOpaqueTokenIntrospectorTests.java",
      "className": "NimbusOpaqueTokenIntrospectorTests"
    },
    "statements": [
      {
        "type": "DECLARATION",
        "code": "RestOperations restOperations = mock(RestOperations.class);",
        "line": 174,
        "locate": "Test Case",
        "locationContext": {
          "methodName": "introspectWhenInactiveTokenThenInvalidToken",
          "methodAnnotations": [
            "@Test"
          ]
        }
      },
      {
        "type": "STUBBING",
        "code": "given(restOperations.exchange(any(RequestEntity.class), eq(String.class))).willReturn(INACTIVE);",
        "line": 177,
        "locate": "Test Case",
        "locationContext": {
          "methodName": "introspectWhenInactiveTokenThenInvalidToken",
          "methodAnnotations": [
            "@Test"
          ]
        }
      }
    ],
    "pattern_id": 1
  },
  {
    "variableName": "restOperations",
    "variableType": "RestOperations",
    "mockedClass": "RestOperations",
    "isReuseableMock": false,
    "mockPattern": "Creation:\n\u2014 Local Mock Creation in Test Case\n\nStubbing:\n\u2014 Test Case\n\nVerification:\n\u2014 None",
    "classContext": {
      "packageName": "org.springframework.security.oauth2.server.resource.introspection",
      "filePath": "C:\\java tool\\Spring\\spring-security\\oauth2\\oauth2-resource-server\\src\\test\\java\\org\\springframework\\security\\oauth2\\server\\resource\\introspection\\NimbusOpaqueTokenIntrospectorTests.java",
      "className": "NimbusOpaqueTokenIntrospectorTests"
    },
    "statements": [
      {
        "type": "DECLARATION",
        "code": "RestOperations restOperations = mock(RestOperations.class);",
        "line": 191,
        "locate": "Test Case",
        "locationContext": {
          "methodName": "introspectWhenActiveTokenThenParsesValuesInResponse",
          "methodAnnotations": [
            "@Test"
          ]
        }
      },
      {
        "type": "STUBBING",
        "code": "given(restOperations.exchange(any(RequestEntity.class), eq(String.class))).willReturn(response(new JSONObject(introspectedValues).toJSONString()));",
        "line": 194,
        "locate": "Test Case",
        "locationContext": {
          "methodName": "introspectWhenActiveTokenThenParsesValuesInResponse",
          "methodAnnotations": [
            "@Test"
          ]
        }
      }
    ],
    "pattern_id": 1
  },
  {
    "variableName": "restOperations",
    "variableType": "RestOperations",
    "mockedClass": "RestOperations",
    "isReuseableMock": false,
    "mockPattern": "Creation:\n\u2014 Local Mock Creation in Test Case\n\nStubbing:\n\u2014 Test Case\n\nVerification:\n\u2014 None",
    "classContext": {
      "packageName": "org.springframework.security.oauth2.server.resource.introspection",
      "filePath": "C:\\java tool\\Spring\\spring-security\\oauth2\\oauth2-resource-server\\src\\test\\java\\org\\springframework\\security\\oauth2\\server\\resource\\introspection\\NimbusOpaqueTokenIntrospectorTests.java",
      "className": "NimbusOpaqueTokenIntrospectorTests"
    },
    "statements": [
      {
        "type": "DECLARATION",
        "code": "RestOperations restOperations = mock(RestOperations.class);",
        "line": 210,
        "locate": "Test Case",
        "locationContext": {
          "methodName": "introspectWhenIntrospectionEndpointThrowsExceptionThenInvalidToken",
          "methodAnnotations": [
            "@Test"
          ]
        }
      },
      {
        "type": "STUBBING",
        "code": "given(restOperations.exchange(any(RequestEntity.class), eq(String.class))).willThrow(new IllegalStateException(\"server was unresponsive\"));",
        "line": 213,
        "locate": "Test Case",
        "locationContext": {
          "methodName": "introspectWhenIntrospectionEndpointThrowsExceptionThenInvalidToken",
          "methodAnnotations": [
            "@Test"
          ]
        }
      }
    ],
    "pattern_id": 1
  },
  {
    "variableName": "restOperations",
    "variableType": "RestOperations",
    "mockedClass": "RestOperations",
    "isReuseableMock": false,
    "mockPattern": "Creation:\n\u2014 Local Mock Creation in Test Case\n\nStubbing:\n\u2014 Test Case\n\nVerification:\n\u2014 None",
    "classContext": {
      "packageName": "org.springframework.security.oauth2.server.resource.introspection",
      "filePath": "C:\\java tool\\Spring\\spring-security\\oauth2\\oauth2-resource-server\\src\\test\\java\\org\\springframework\\security\\oauth2\\server\\resource\\introspection\\NimbusOpaqueTokenIntrospectorTests.java",
      "className": "NimbusOpaqueTokenIntrospectorTests"
    },
    "statements": [
      {
        "type": "DECLARATION",
        "code": "RestOperations restOperations = mock(RestOperations.class);",
        "line": 224,
        "locate": "Test Case",
        "locationContext": {
          "methodName": "introspectWhenIntrospectionEndpointReturnsMalformedResponseThenInvalidToken",
          "methodAnnotations": [
            "@Test"
          ]
        }
      },
      {
        "type": "STUBBING",
        "code": "given(restOperations.exchange(any(RequestEntity.class), eq(String.class))).willReturn(response(\"malformed\"));",
        "line": 227,
        "locate": "Test Case",
        "locationContext": {
          "methodName": "introspectWhenIntrospectionEndpointReturnsMalformedResponseThenInvalidToken",
          "methodAnnotations": [
            "@Test"
          ]
        }
      }
    ],
    "pattern_id": 1
  },
  {
    "variableName": "restOperations",
    "variableType": "RestOperations",
    "mockedClass": "RestOperations",
    "isReuseableMock": false,
    "mockPattern": "Creation:\n\u2014 Local Mock Creation in Test Case\n\nStubbing:\n\u2014 Test Case\n\nVerification:\n\u2014 None",
    "classContext": {
      "packageName": "org.springframework.security.oauth2.server.resource.introspection",
      "filePath": "C:\\java tool\\Spring\\spring-security\\oauth2\\oauth2-resource-server\\src\\test\\java\\org\\springframework\\security\\oauth2\\server\\resource\\introspection\\NimbusOpaqueTokenIntrospectorTests.java",
      "className": "NimbusOpaqueTokenIntrospectorTests"
    },
    "statements": [
      {
        "type": "DECLARATION",
        "code": "RestOperations restOperations = mock(RestOperations.class);",
        "line": 234,
        "locate": "Test Case",
        "locationContext": {
          "methodName": "introspectWhenIntrospectionTokenReturnsInvalidResponseThenInvalidToken",
          "methodAnnotations": [
            "@Test"
          ]
        }
      },
      {
        "type": "STUBBING",
        "code": "given(restOperations.exchange(any(RequestEntity.class), eq(String.class))).willReturn(INVALID);",
        "line": 237,
        "locate": "Test Case",
        "locationContext": {
          "methodName": "introspectWhenIntrospectionTokenReturnsInvalidResponseThenInvalidToken",
          "methodAnnotations": [
            "@Test"
          ]
        }
      }
    ],
    "pattern_id": 1
  },
  {
    "variableName": "restOperations",
    "variableType": "RestOperations",
    "mockedClass": "RestOperations",
    "isReuseableMock": false,
    "mockPattern": "Creation:\n\u2014 Local Mock Creation in Test Case\n\nStubbing:\n\u2014 Test Case\n\nVerification:\n\u2014 None",
    "classContext": {
      "packageName": "org.springframework.security.oauth2.server.resource.introspection",
      "filePath": "C:\\java tool\\Spring\\spring-security\\oauth2\\oauth2-resource-server\\src\\test\\java\\org\\springframework\\security\\oauth2\\server\\resource\\introspection\\NimbusOpaqueTokenIntrospectorTests.java",
      "className": "NimbusOpaqueTokenIntrospectorTests"
    },
    "statements": [
      {
        "type": "DECLARATION",
        "code": "RestOperations restOperations = mock(RestOperations.class);",
        "line": 244,
        "locate": "Test Case",
        "locationContext": {
          "methodName": "introspectWhenIntrospectionTokenReturnsMalformedIssuerResponseThenInvalidToken",
          "methodAnnotations": [
            "@Test"
          ]
        }
      },
      {
        "type": "STUBBING",
        "code": "given(restOperations.exchange(any(RequestEntity.class), eq(String.class))).willReturn(MALFORMED_ISSUER);",
        "line": 247,
        "locate": "Test Case",
        "locationContext": {
          "methodName": "introspectWhenIntrospectionTokenReturnsMalformedIssuerResponseThenInvalidToken",
          "methodAnnotations": [
            "@Test"
          ]
        }
      }
    ],
    "pattern_id": 1
  },
  {
    "variableName": "restOperations",
    "variableType": "RestOperations",
    "mockedClass": "RestOperations",
    "isReuseableMock": false,
    "mockPattern": "Creation:\n\u2014 Local Mock Creation in Test Case\n\nStubbing:\n\u2014 Test Case\n\nVerification:\n\u2014 None",
    "classContext": {
      "packageName": "org.springframework.security.oauth2.server.resource.introspection",
      "filePath": "C:\\java tool\\Spring\\spring-security\\oauth2\\oauth2-resource-server\\src\\test\\java\\org\\springframework\\security\\oauth2\\server\\resource\\introspection\\NimbusOpaqueTokenIntrospectorTests.java",
      "className": "NimbusOpaqueTokenIntrospectorTests"
    },
    "statements": [
      {
        "type": "DECLARATION",
        "code": "RestOperations restOperations = mock(RestOperations.class);",
        "line": 255,
        "locate": "Test Case",
        "locationContext": {
          "methodName": "introspectWhenIntrospectionTokenReturnsMalformedScopeThenEmptyAuthorities",
          "methodAnnotations": [
            "@Test"
          ]
        }
      },
      {
        "type": "STUBBING",
        "code": "given(restOperations.exchange(any(RequestEntity.class), eq(String.class))).willReturn(MALFORMED_SCOPE);",
        "line": 258,
        "locate": "Test Case",
        "locationContext": {
          "methodName": "introspectWhenIntrospectionTokenReturnsMalformedScopeThenEmptyAuthorities",
          "methodAnnotations": [
            "@Test"
          ]
        }
      }
    ],
    "pattern_id": 1
  },
  {
    "variableName": "restOperations",
    "variableType": "RestOperations",
    "mockedClass": "RestOperations",
    "isReuseableMock": false,
    "mockPattern": "Creation:\n\u2014 Local Mock Creation in Test Case\n\nStubbing:\n\u2014 Test Case\n\nVerification:\n\u2014 None",
    "classContext": {
      "packageName": "org.springframework.security.oauth2.server.resource.introspection",
      "filePath": "C:\\java tool\\Spring\\spring-security\\oauth2\\oauth2-resource-server\\src\\test\\java\\org\\springframework\\security\\oauth2\\server\\resource\\introspection\\NimbusOpaqueTokenIntrospectorTests.java",
      "className": "NimbusOpaqueTokenIntrospectorTests"
    },
    "statements": [
      {
        "type": "DECLARATION",
        "code": "RestOperations restOperations = mock(RestOperations.class);",
        "line": 301,
        "locate": "Test Case",
        "locationContext": {
          "methodName": "setRequestEntityConverterWhenNonNullConverterGivenThenConverterUsed",
          "methodAnnotations": [
            "@SuppressWarnings",
            "@Test"
          ]
        }
      },
      {
        "type": "STUBBING",
        "code": "given(restOperations.exchange(requestEntity, String.class)).willReturn(ACTIVE);",
        "line": 306,
        "locate": "Test Case",
        "locationContext": {
          "methodName": "setRequestEntityConverterWhenNonNullConverterGivenThenConverterUsed",
          "methodAnnotations": [
            "@SuppressWarnings",
            "@Test"
          ]
        }
      }
    ],
    "pattern_id": 1
  },
  {
    "variableName": "restOperations",
    "variableType": "RestOperations",
    "mockedClass": "RestOperations",
    "isReuseableMock": false,
    "mockPattern": "Creation:\n\u2014 Local Mock Creation in Test Case\n\nStubbing:\n\u2014 Test Case\n\nVerification:\n\u2014 None",
    "classContext": {
      "packageName": "org.springframework.security.oauth2.server.resource.introspection",
      "filePath": "C:\\java tool\\Spring\\spring-security\\oauth2\\oauth2-resource-server\\src\\test\\java\\org\\springframework\\security\\oauth2\\server\\resource\\introspection\\NimbusOpaqueTokenIntrospectorTests.java",
      "className": "NimbusOpaqueTokenIntrospectorTests"
    },
    "statements": [
      {
        "type": "DECLARATION",
        "code": "RestOperations restOperations = mock(RestOperations.class);",
        "line": 316,
        "locate": "Test Case",
        "locationContext": {
          "methodName": "handleMissingContentType",
          "methodAnnotations": [
            "@Test"
          ]
        }
      },
      {
        "type": "STUBBING",
        "code": "given(restOperations.exchange(any(RequestEntity.class), eq(String.class))).willReturn(stubResponse);",
        "line": 318,
        "locate": "Test Case",
        "locationContext": {
          "methodName": "handleMissingContentType",
          "methodAnnotations": [
            "@Test"
          ]
        }
      }
    ],
    "pattern_id": 1
  },
  {
    "variableName": "restOperations",
    "variableType": "RestOperations",
    "mockedClass": "RestOperations",
    "isReuseableMock": false,
    "mockPattern": "Creation:\n\u2014 Local Mock Creation in Test Case\n\nStubbing:\n\u2014 Test Case\n\nVerification:\n\u2014 None",
    "classContext": {
      "packageName": "org.springframework.security.oauth2.server.resource.introspection",
      "filePath": "C:\\java tool\\Spring\\spring-security\\oauth2\\oauth2-resource-server\\src\\test\\java\\org\\springframework\\security\\oauth2\\server\\resource\\introspection\\NimbusOpaqueTokenIntrospectorTests.java",
      "className": "NimbusOpaqueTokenIntrospectorTests"
    },
    "statements": [
      {
        "type": "DECLARATION",
        "code": "RestOperations restOperations = mock(RestOperations.class);",
        "line": 334,
        "locate": "Test Case",
        "locationContext": {
          "methodName": "handleNonJsonContentType",
          "methodAnnotations": [
            "@ParameterizedTest",
            "@ValueSource"
          ]
        }
      },
      {
        "type": "STUBBING",
        "code": "given(restOperations.exchange(any(RequestEntity.class), eq(String.class))).willReturn(stubResponse);",
        "line": 338,
        "locate": "Test Case",
        "locationContext": {
          "methodName": "handleNonJsonContentType",
          "methodAnnotations": [
            "@ParameterizedTest",
            "@ValueSource"
          ]
        }
      }
    ],
    "pattern_id": 1
  },
  {
    "variableName": "restOperations",
    "variableType": "RestOperations",
    "mockedClass": "RestOperations",
    "isReuseableMock": false,
    "mockPattern": "Creation:\n\u2014 Local Mock Creation in Test Case\n\nStubbing:\n\u2014 Test Case\n\nVerification:\n\u2014 None",
    "classContext": {
      "packageName": "org.springframework.security.oauth2.server.resource.introspection",
      "filePath": "C:\\java tool\\Spring\\spring-security\\oauth2\\oauth2-resource-server\\src\\test\\java\\org\\springframework\\security\\oauth2\\server\\resource\\introspection\\SpringOpaqueTokenIntrospectorTests.java",
      "className": "SpringOpaqueTokenIntrospectorTests"
    },
    "statements": [
      {
        "type": "DECLARATION",
        "code": "RestOperations restOperations = mock(RestOperations.class);",
        "line": 168,
        "locate": "Test Case",
        "locationContext": {
          "methodName": "introspectWhenInactiveTokenThenInvalidToken",
          "methodAnnotations": [
            "@Test"
          ]
        }
      },
      {
        "type": "STUBBING",
        "code": "given(restOperations.exchange(any(RequestEntity.class), eq(STRING_OBJECT_MAP))).willReturn(INACTIVE);",
        "line": 171,
        "locate": "Test Case",
        "locationContext": {
          "methodName": "introspectWhenInactiveTokenThenInvalidToken",
          "methodAnnotations": [
            "@Test"
          ]
        }
      }
    ],
    "pattern_id": 1
  },
  {
    "variableName": "restOperations",
    "variableType": "RestOperations",
    "mockedClass": "RestOperations",
    "isReuseableMock": false,
    "mockPattern": "Creation:\n\u2014 Local Mock Creation in Test Case\n\nStubbing:\n\u2014 Test Case\n\nVerification:\n\u2014 None",
    "classContext": {
      "packageName": "org.springframework.security.oauth2.server.resource.introspection",
      "filePath": "C:\\java tool\\Spring\\spring-security\\oauth2\\oauth2-resource-server\\src\\test\\java\\org\\springframework\\security\\oauth2\\server\\resource\\introspection\\SpringOpaqueTokenIntrospectorTests.java",
      "className": "SpringOpaqueTokenIntrospectorTests"
    },
    "statements": [
      {
        "type": "DECLARATION",
        "code": "RestOperations restOperations = mock(RestOperations.class);",
        "line": 185,
        "locate": "Test Case",
        "locationContext": {
          "methodName": "introspectWhenActiveTokenThenParsesValuesInResponse",
          "methodAnnotations": [
            "@Test"
          ]
        }
      },
      {
        "type": "STUBBING",
        "code": "given(restOperations.exchange(any(RequestEntity.class), eq(STRING_OBJECT_MAP))).willReturn(response(introspectedValues));",
        "line": 188,
        "locate": "Test Case",
        "locationContext": {
          "methodName": "introspectWhenActiveTokenThenParsesValuesInResponse",
          "methodAnnotations": [
            "@Test"
          ]
        }
      }
    ],
    "pattern_id": 1
  },
  {
    "variableName": "restOperations",
    "variableType": "RestOperations",
    "mockedClass": "RestOperations",
    "isReuseableMock": false,
    "mockPattern": "Creation:\n\u2014 Local Mock Creation in Test Case\n\nStubbing:\n\u2014 Test Case\n\nVerification:\n\u2014 None",
    "classContext": {
      "packageName": "org.springframework.security.oauth2.server.resource.introspection",
      "filePath": "C:\\java tool\\Spring\\spring-security\\oauth2\\oauth2-resource-server\\src\\test\\java\\org\\springframework\\security\\oauth2\\server\\resource\\introspection\\SpringOpaqueTokenIntrospectorTests.java",
      "className": "SpringOpaqueTokenIntrospectorTests"
    },
    "statements": [
      {
        "type": "DECLARATION",
        "code": "RestOperations restOperations = mock(RestOperations.class);",
        "line": 204,
        "locate": "Test Case",
        "locationContext": {
          "methodName": "introspectWhenIntrospectionEndpointThrowsExceptionThenInvalidToken",
          "methodAnnotations": [
            "@Test"
          ]
        }
      },
      {
        "type": "STUBBING",
        "code": "given(restOperations.exchange(any(RequestEntity.class), eq(STRING_OBJECT_MAP))).willThrow(new IllegalStateException(\"server was unresponsive\"));",
        "line": 207,
        "locate": "Test Case",
        "locationContext": {
          "methodName": "introspectWhenIntrospectionEndpointThrowsExceptionThenInvalidToken",
          "methodAnnotations": [
            "@Test"
          ]
        }
      }
    ],
    "pattern_id": 1
  },
  {
    "variableName": "restOperations",
    "variableType": "RestOperations",
    "mockedClass": "RestOperations",
    "isReuseableMock": false,
    "mockPattern": "Creation:\n\u2014 Local Mock Creation in Test Case\n\nStubbing:\n\u2014 Test Case\n\nVerification:\n\u2014 None",
    "classContext": {
      "packageName": "org.springframework.security.oauth2.server.resource.introspection",
      "filePath": "C:\\java tool\\Spring\\spring-security\\oauth2\\oauth2-resource-server\\src\\test\\java\\org\\springframework\\security\\oauth2\\server\\resource\\introspection\\SpringOpaqueTokenIntrospectorTests.java",
      "className": "SpringOpaqueTokenIntrospectorTests"
    },
    "statements": [
      {
        "type": "DECLARATION",
        "code": "RestOperations restOperations = mock(RestOperations.class);",
        "line": 218,
        "locate": "Test Case",
        "locationContext": {
          "methodName": "introspectWhenIntrospectionEndpointReturnsMalformedResponseThenInvalidToken",
          "methodAnnotations": [
            "@Test"
          ]
        }
      },
      {
        "type": "STUBBING",
        "code": "given(restOperations.exchange(any(RequestEntity.class), eq(STRING_OBJECT_MAP))).willReturn(response(\"{}\"));",
        "line": 221,
        "locate": "Test Case",
        "locationContext": {
          "methodName": "introspectWhenIntrospectionEndpointReturnsMalformedResponseThenInvalidToken",
          "methodAnnotations": [
            "@Test"
          ]
        }
      }
    ],
    "pattern_id": 1
  },
  {
    "variableName": "restOperations",
    "variableType": "RestOperations",
    "mockedClass": "RestOperations",
    "isReuseableMock": false,
    "mockPattern": "Creation:\n\u2014 Local Mock Creation in Test Case\n\nStubbing:\n\u2014 Test Case\n\nVerification:\n\u2014 None",
    "classContext": {
      "packageName": "org.springframework.security.oauth2.server.resource.introspection",
      "filePath": "C:\\java tool\\Spring\\spring-security\\oauth2\\oauth2-resource-server\\src\\test\\java\\org\\springframework\\security\\oauth2\\server\\resource\\introspection\\SpringOpaqueTokenIntrospectorTests.java",
      "className": "SpringOpaqueTokenIntrospectorTests"
    },
    "statements": [
      {
        "type": "DECLARATION",
        "code": "RestOperations restOperations = mock(RestOperations.class);",
        "line": 228,
        "locate": "Test Case",
        "locationContext": {
          "methodName": "introspectWhenIntrospectionTokenReturnsInvalidResponseThenInvalidToken",
          "methodAnnotations": [
            "@Test"
          ]
        }
      },
      {
        "type": "STUBBING",
        "code": "given(restOperations.exchange(any(RequestEntity.class), eq(STRING_OBJECT_MAP))).willReturn(INVALID);",
        "line": 231,
        "locate": "Test Case",
        "locationContext": {
          "methodName": "introspectWhenIntrospectionTokenReturnsInvalidResponseThenInvalidToken",
          "methodAnnotations": [
            "@Test"
          ]
        }
      }
    ],
    "pattern_id": 1
  },
  {
    "variableName": "restOperations",
    "variableType": "RestOperations",
    "mockedClass": "RestOperations",
    "isReuseableMock": false,
    "mockPattern": "Creation:\n\u2014 Local Mock Creation in Test Case\n\nStubbing:\n\u2014 Test Case\n\nVerification:\n\u2014 None",
    "classContext": {
      "packageName": "org.springframework.security.oauth2.server.resource.introspection",
      "filePath": "C:\\java tool\\Spring\\spring-security\\oauth2\\oauth2-resource-server\\src\\test\\java\\org\\springframework\\security\\oauth2\\server\\resource\\introspection\\SpringOpaqueTokenIntrospectorTests.java",
      "className": "SpringOpaqueTokenIntrospectorTests"
    },
    "statements": [
      {
        "type": "DECLARATION",
        "code": "RestOperations restOperations = mock(RestOperations.class);",
        "line": 239,
        "locate": "Test Case",
        "locationContext": {
          "methodName": "introspectWhenIntrospectionTokenReturnsMalformedScopeThenEmptyAuthorities",
          "methodAnnotations": [
            "@Test"
          ]
        }
      },
      {
        "type": "STUBBING",
        "code": "given(restOperations.exchange(any(RequestEntity.class), eq(STRING_OBJECT_MAP))).willReturn(MALFORMED_SCOPE);",
        "line": 242,
        "locate": "Test Case",
        "locationContext": {
          "methodName": "introspectWhenIntrospectionTokenReturnsMalformedScopeThenEmptyAuthorities",
          "methodAnnotations": [
            "@Test"
          ]
        }
      }
    ],
    "pattern_id": 1
  },
  {
    "variableName": "restOperations",
    "variableType": "RestOperations",
    "mockedClass": "RestOperations",
    "isReuseableMock": false,
    "mockPattern": "Creation:\n\u2014 Local Mock Creation in Test Case\n\nStubbing:\n\u2014 Test Case\n\nVerification:\n\u2014 None",
    "classContext": {
      "packageName": "org.springframework.security.oauth2.server.resource.introspection",
      "filePath": "C:\\java tool\\Spring\\spring-security\\oauth2\\oauth2-resource-server\\src\\test\\java\\org\\springframework\\security\\oauth2\\server\\resource\\introspection\\SpringOpaqueTokenIntrospectorTests.java",
      "className": "SpringOpaqueTokenIntrospectorTests"
    },
    "statements": [
      {
        "type": "DECLARATION",
        "code": "RestOperations restOperations = mock(RestOperations.class);",
        "line": 252,
        "locate": "Test Case",
        "locationContext": {
          "methodName": "introspectWhenActiveThenMapsAuthorities",
          "methodAnnotations": [
            "@Test"
          ]
        }
      },
      {
        "type": "STUBBING",
        "code": "given(restOperations.exchange(any(RequestEntity.class), eq(STRING_OBJECT_MAP))).willReturn(ACTIVE);",
        "line": 255,
        "locate": "Test Case",
        "locationContext": {
          "methodName": "introspectWhenActiveThenMapsAuthorities",
          "methodAnnotations": [
            "@Test"
          ]
        }
      }
    ],
    "pattern_id": 1
  },
  {
    "variableName": "restOperations",
    "variableType": "RestOperations",
    "mockedClass": "RestOperations",
    "isReuseableMock": false,
    "mockPattern": "Creation:\n\u2014 Local Mock Creation in Test Case\n\nStubbing:\n\u2014 Test Case\n\nVerification:\n\u2014 None",
    "classContext": {
      "packageName": "org.springframework.security.oauth2.server.resource.introspection",
      "filePath": "C:\\java tool\\Spring\\spring-security\\oauth2\\oauth2-resource-server\\src\\test\\java\\org\\springframework\\security\\oauth2\\server\\resource\\introspection\\SpringOpaqueTokenIntrospectorTests.java",
      "className": "SpringOpaqueTokenIntrospectorTests"
    },
    "statements": [
      {
        "type": "DECLARATION",
        "code": "RestOperations restOperations = mock(RestOperations.class);",
        "line": 300,
        "locate": "Test Case",
        "locationContext": {
          "methodName": "setRequestEntityConverterWhenNonNullConverterGivenThenConverterUsed",
          "methodAnnotations": [
            "@SuppressWarnings",
            "@Test"
          ]
        }
      },
      {
        "type": "STUBBING",
        "code": "given(restOperations.exchange(requestEntity, STRING_OBJECT_MAP)).willReturn(ACTIVE);",
        "line": 305,
        "locate": "Test Case",
        "locationContext": {
          "methodName": "setRequestEntityConverterWhenNonNullConverterGivenThenConverterUsed",
          "methodAnnotations": [
            "@SuppressWarnings",
            "@Test"
          ]
        }
      }
    ],
    "pattern_id": 1
  },
  {
    "variableName": "restOperations",
    "variableType": "RestOperations",
    "mockedClass": "RestOperations",
    "isReuseableMock": false,
    "mockPattern": "Creation:\n\u2014 Local Mock Creation in Test Case\n\nStubbing:\n\u2014 Test Case\n\nVerification:\n\u2014 None",
    "classContext": {
      "packageName": "org.springframework.security.oauth2.server.resource.introspection",
      "filePath": "C:\\java tool\\Spring\\spring-security\\oauth2\\oauth2-resource-server\\src\\test\\java\\org\\springframework\\security\\oauth2\\server\\resource\\introspection\\SpringOpaqueTokenIntrospectorTests.java",
      "className": "SpringOpaqueTokenIntrospectorTests"
    },
    "statements": [
      {
        "type": "DECLARATION",
        "code": "RestOperations restOperations = mock(RestOperations.class);",
        "line": 324,
        "locate": "Test Case",
        "locationContext": {
          "methodName": "setAuthenticationConverterWhenNonNullConverterGivenThenConverterUsed",
          "methodAnnotations": [
            "@Test"
          ]
        }
      },
      {
        "type": "STUBBING",
        "code": "given(restOperations.exchange(requestEntity, STRING_OBJECT_MAP)).willReturn(response(ACTIVE_RESPONSE));",
        "line": 332,
        "locate": "Test Case",
        "locationContext": {
          "methodName": "setAuthenticationConverterWhenNonNullConverterGivenThenConverterUsed",
          "methodAnnotations": [
            "@Test"
          ]
        }
      }
    ],
    "pattern_id": 1
  }
]