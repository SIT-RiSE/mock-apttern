[
  {
    "variableName": "service",
    "variableType": "AclService",
    "mockedClass": "AclService",
    "isReuseableMock": "Fully Localized",
    "mockPattern": "Creation:\n\u2014 Local Mock Creation in Test Case\n\nStubbing:\n\u2014 Test Case\n\nVerification:\n\u2014 None",
    "classContext": {
      "packageName": "org.springframework.security.acls",
      "filePath": "C:\\java tool\\Spring\\spring-security\\acl\\src\\test\\java\\org\\springframework\\security\\acls\\AclPermissionEvaluatorTests.java",
      "className": "AclPermissionEvaluatorTests"
    },
    "statements": [
      {
        "type": "DECLARATION",
        "code": "AclService service = mock(AclService.class);",
        "line": 45,
        "locate": "Test Case",
        "locationContext": {
          "methodName": "hasPermissionReturnsTrueIfAclGrantsPermission",
          "methodAnnotations": [
            "@Test"
          ]
        }
      },
      {
        "type": "STUBBING",
        "code": "given(service.readAclById(any(ObjectIdentity.class), anyList())).willReturn(acl);",
        "line": 53,
        "locate": "Test Case",
        "locationContext": {
          "methodName": "hasPermissionReturnsTrueIfAclGrantsPermission",
          "methodAnnotations": [
            "@Test"
          ]
        }
      }
    ],
    "pattern_id": 1
  },
  {
    "variableName": "service",
    "variableType": "AclService",
    "mockedClass": "AclService",
    "isReuseableMock": "Fully Localized",
    "mockPattern": "Creation:\n\u2014 Local Mock Creation in Test Case\n\nStubbing:\n\u2014 Test Case\n\nVerification:\n\u2014 None",
    "classContext": {
      "packageName": "org.springframework.security.acls",
      "filePath": "C:\\java tool\\Spring\\spring-security\\acl\\src\\test\\java\\org\\springframework\\security\\acls\\AclPermissionEvaluatorTests.java",
      "className": "AclPermissionEvaluatorTests"
    },
    "statements": [
      {
        "type": "DECLARATION",
        "code": "AclService service = mock(AclService.class);",
        "line": 62,
        "locate": "Test Case",
        "locationContext": {
          "methodName": "resolvePermissionNonEnglishLocale",
          "methodAnnotations": [
            "@Test"
          ]
        }
      },
      {
        "type": "STUBBING",
        "code": "given(service.readAclById(any(ObjectIdentity.class), anyList())).willReturn(acl);",
        "line": 70,
        "locate": "Test Case",
        "locationContext": {
          "methodName": "resolvePermissionNonEnglishLocale",
          "methodAnnotations": [
            "@Test"
          ]
        }
      }
    ],
    "pattern_id": 1
  },
  {
    "variableName": "service",
    "variableType": "AclService",
    "mockedClass": "AclService",
    "isReuseableMock": "Fully Localized",
    "mockPattern": "Creation:\n\u2014 Local Mock Creation in Test Case\n\nStubbing:\n\u2014 Test Case\n\nVerification:\n\u2014 None",
    "classContext": {
      "packageName": "org.springframework.security.acls.afterinvocation",
      "filePath": "C:\\java tool\\Spring\\spring-security\\acl\\src\\test\\java\\org\\springframework\\security\\acls\\afterinvocation\\AclEntryAfterInvocationCollectionFilteringProviderTests.java",
      "className": "AclEntryAfterInvocationCollectionFilteringProviderTests"
    },
    "statements": [
      {
        "type": "DECLARATION",
        "code": "AclService service = mock(AclService.class);",
        "line": 52,
        "locate": "Test Case",
        "locationContext": {
          "methodName": "objectsAreRemovedIfPermissionDenied",
          "methodAnnotations": [
            "@Test"
          ]
        }
      },
      {
        "type": "STUBBING",
        "code": "given(service.readAclById(any(), any())).willReturn(acl);",
        "line": 55,
        "locate": "Test Case",
        "locationContext": {
          "methodName": "objectsAreRemovedIfPermissionDenied",
          "methodAnnotations": [
            "@Test"
          ]
        }
      }
    ],
    "pattern_id": 1
  },
  {
    "variableName": "service",
    "variableType": "AclService",
    "mockedClass": "AclService",
    "isReuseableMock": "Fully Localized",
    "mockPattern": "Creation:\n\u2014 Local Mock Creation in Test Case\n\nStubbing:\n\u2014 Test Case\n\nVerification:\n\u2014 None",
    "classContext": {
      "packageName": "org.springframework.security.acls.afterinvocation",
      "filePath": "C:\\java tool\\Spring\\spring-security\\acl\\src\\test\\java\\org\\springframework\\security\\acls\\afterinvocation\\AclEntryAfterInvocationProviderTests.java",
      "className": "AclEntryAfterInvocationProviderTests"
    },
    "statements": [
      {
        "type": "DECLARATION",
        "code": "AclService service = mock(AclService.class);",
        "line": 64,
        "locate": "Test Case",
        "locationContext": {
          "methodName": "accessIsAllowedIfPermissionIsGranted",
          "methodAnnotations": [
            "@Test"
          ]
        }
      },
      {
        "type": "STUBBING",
        "code": "given(service.readAclById(any(), any())).willReturn(acl);",
        "line": 67,
        "locate": "Test Case",
        "locationContext": {
          "methodName": "accessIsAllowedIfPermissionIsGranted",
          "methodAnnotations": [
            "@Test"
          ]
        }
      }
    ],
    "pattern_id": 1
  },
  {
    "variableName": "service",
    "variableType": "AclService",
    "mockedClass": "AclService",
    "isReuseableMock": "Fully Localized",
    "mockPattern": "Creation:\n\u2014 Local Mock Creation in Test Case\n\nStubbing:\n\u2014 Test Case\n\nVerification:\n\u2014 None",
    "classContext": {
      "packageName": "org.springframework.security.acls.afterinvocation",
      "filePath": "C:\\java tool\\Spring\\spring-security\\acl\\src\\test\\java\\org\\springframework\\security\\acls\\afterinvocation\\AclEntryAfterInvocationProviderTests.java",
      "className": "AclEntryAfterInvocationProviderTests"
    },
    "statements": [
      {
        "type": "DECLARATION",
        "code": "AclService service = mock(AclService.class);",
        "line": 101,
        "locate": "Test Case",
        "locationContext": {
          "methodName": "accessIsDeniedIfPermissionIsNotGranted",
          "methodAnnotations": [
            "@Test"
          ]
        }
      },
      {
        "type": "STUBBING",
        "code": "given(service.readAclById(any(), any())).willReturn(acl);",
        "line": 106,
        "locate": "Test Case",
        "locationContext": {
          "methodName": "accessIsDeniedIfPermissionIsNotGranted",
          "methodAnnotations": [
            "@Test"
          ]
        }
      }
    ],
    "pattern_id": 1
  }
]