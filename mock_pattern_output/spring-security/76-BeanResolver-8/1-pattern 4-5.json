[
  {
    "variableName": "beanResolver",
    "variableType": "BeanResolver",
    "mockedClass": "BeanResolver",
    "isReuseableMock": "Hybrid",
    "mockPattern": "Creation:\n\u2014 Attribute Mock Creation\n\nStubbing:\n\u2014 Test Case\n\nVerification:\n\u2014 None",
    "classContext": {
      "packageName": "org.springframework.security.web.reactive.result.method.annotation",
      "filePath": "C:\\java tool\\Spring\\spring-security\\web\\src\\test\\java\\org\\springframework\\security\\web\\reactive\\result\\method\\annotation\\AuthenticationPrincipalArgumentResolverTests.java",
      "className": "AuthenticationPrincipalArgumentResolverTests"
    },
    "statements": [
      {
        "type": "FIELD_MOCK_CREATION",
        "code": "@Mock\r\nBeanResolver beanResolver;",
        "line": 67,
        "locate": "Attribute",
        "locationContext": {
          "methodName": "[FieldDeclaration]",
          "methodAnnotations": [
            "@Mock"
          ]
        }
      },
      {
        "type": "STUBBING",
        "code": "given(this.beanResolver.resolve(any(), eq(\"beanName\"))).willReturn(new Bean());",
        "line": 161,
        "locate": "Test Case",
        "locationContext": {
          "methodName": "resolveArgumentWhenBeanThenObtainsPrincipal",
          "methodAnnotations": [
            "@Test"
          ]
        }
      }
    ],
    "pattern_id": 4
  },
  {
    "variableName": "beanResolver",
    "variableType": "BeanResolver",
    "mockedClass": "BeanResolver",
    "isReuseableMock": "Hybrid",
    "mockPattern": "Creation:\n\u2014 Attribute Mock Creation\n\nStubbing:\n\u2014 Test Case\n\nVerification:\n\u2014 None",
    "classContext": {
      "packageName": "org.springframework.security.web.reactive.result.method.annotation",
      "filePath": "C:\\java tool\\Spring\\spring-security\\web\\src\\test\\java\\org\\springframework\\security\\web\\reactive\\result\\method\\annotation\\AuthenticationPrincipalArgumentResolverTests.java",
      "className": "AuthenticationPrincipalArgumentResolverTests"
    },
    "statements": [
      {
        "type": "FIELD_MOCK_CREATION",
        "code": "@Mock\r\nBeanResolver beanResolver;",
        "line": 67,
        "locate": "Attribute",
        "locationContext": {
          "methodName": "[FieldDeclaration]",
          "methodAnnotations": [
            "@Mock"
          ]
        }
      },
      {
        "type": "STUBBING",
        "code": "given(this.beanResolver.resolve(any(), eq(\"beanName\"))).willReturn(new Bean());",
        "line": 161,
        "locate": "Test Case",
        "locationContext": {
          "methodName": "resolveArgumentWhenBeanThenObtainsPrincipal",
          "methodAnnotations": [
            "@Test"
          ]
        }
      }
    ],
    "pattern_id": 4
  },
  {
    "variableName": "beanResolver",
    "variableType": "BeanResolver",
    "mockedClass": "BeanResolver",
    "isReuseableMock": "Hybrid",
    "mockPattern": "Creation:\n\u2014 Attribute Mock Creation\n\nStubbing:\n\u2014 Test Case\n\nVerification:\n\u2014 None",
    "classContext": {
      "packageName": "org.springframework.security.web.reactive.result.method.annotation",
      "filePath": "C:\\java tool\\Spring\\spring-security\\web\\src\\test\\java\\org\\springframework\\security\\web\\reactive\\result\\method\\annotation\\AuthenticationPrincipalArgumentResolverTests.java",
      "className": "AuthenticationPrincipalArgumentResolverTests"
    },
    "statements": [
      {
        "type": "FIELD_MOCK_CREATION",
        "code": "@Mock\r\nBeanResolver beanResolver;",
        "line": 67,
        "locate": "Attribute",
        "locationContext": {
          "methodName": "[FieldDeclaration]",
          "methodAnnotations": [
            "@Mock"
          ]
        }
      },
      {
        "type": "STUBBING",
        "code": "given(this.beanResolver.resolve(any(), eq(\"beanName\"))).willReturn(new Bean());",
        "line": 161,
        "locate": "Test Case",
        "locationContext": {
          "methodName": "resolveArgumentWhenBeanThenObtainsPrincipal",
          "methodAnnotations": [
            "@Test"
          ]
        }
      }
    ],
    "pattern_id": 4
  },
  {
    "variableName": "beanResolver",
    "variableType": "BeanResolver",
    "mockedClass": "BeanResolver",
    "isReuseableMock": "Hybrid",
    "mockPattern": "Creation:\n\u2014 Attribute Mock Creation\n\nStubbing:\n\u2014 Test Case\n\nVerification:\n\u2014 None",
    "classContext": {
      "packageName": "org.springframework.security.web.reactive.result.method.annotation",
      "filePath": "C:\\java tool\\Spring\\spring-security\\web\\src\\test\\java\\org\\springframework\\security\\web\\reactive\\result\\method\\annotation\\AuthenticationPrincipalArgumentResolverTests.java",
      "className": "AuthenticationPrincipalArgumentResolverTests"
    },
    "statements": [
      {
        "type": "FIELD_MOCK_CREATION",
        "code": "@Mock\r\nBeanResolver beanResolver;",
        "line": 67,
        "locate": "Attribute",
        "locationContext": {
          "methodName": "[FieldDeclaration]",
          "methodAnnotations": [
            "@Mock"
          ]
        }
      },
      {
        "type": "STUBBING",
        "code": "given(this.beanResolver.resolve(any(), eq(\"beanName\"))).willReturn(new Bean());",
        "line": 161,
        "locate": "Test Case",
        "locationContext": {
          "methodName": "resolveArgumentWhenBeanThenObtainsPrincipal",
          "methodAnnotations": [
            "@Test"
          ]
        }
      }
    ],
    "pattern_id": 4
  },
  {
    "variableName": "beanResolver",
    "variableType": "BeanResolver",
    "mockedClass": "BeanResolver",
    "isReuseableMock": "Hybrid",
    "mockPattern": "Creation:\n\u2014 Attribute Mock Creation\n\nStubbing:\n\u2014 Test Case\n\nVerification:\n\u2014 None",
    "classContext": {
      "packageName": "org.springframework.security.web.reactive.result.method.annotation",
      "filePath": "C:\\java tool\\Spring\\spring-security\\web\\src\\test\\java\\org\\springframework\\security\\web\\reactive\\result\\method\\annotation\\AuthenticationPrincipalArgumentResolverTests.java",
      "className": "AuthenticationPrincipalArgumentResolverTests"
    },
    "statements": [
      {
        "type": "FIELD_MOCK_CREATION",
        "code": "@Mock\r\nBeanResolver beanResolver;",
        "line": 67,
        "locate": "Attribute",
        "locationContext": {
          "methodName": "[FieldDeclaration]",
          "methodAnnotations": [
            "@Mock"
          ]
        }
      },
      {
        "type": "STUBBING",
        "code": "given(this.beanResolver.resolve(any(), eq(\"beanName\"))).willReturn(new Bean());",
        "line": 161,
        "locate": "Test Case",
        "locationContext": {
          "methodName": "resolveArgumentWhenBeanThenObtainsPrincipal",
          "methodAnnotations": [
            "@Test"
          ]
        }
      }
    ],
    "pattern_id": 4
  }
]