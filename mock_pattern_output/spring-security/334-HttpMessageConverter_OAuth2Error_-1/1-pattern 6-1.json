[
  {
    "variableName": "oauth2ErrorConverter",
    "variableType": "HttpMessageConverter<OAuth2Error>",
    "mockedClass": "HttpMessageConverter",
    "isReuseableMock": false,
    "mockPattern": "Creation:\n\u2014 Local Mock Creation in Test Case\n\nStubbing:\n\u2014 Test Case\n\nVerification:\n\u2014 Test Case",
    "classContext": {
      "packageName": "org.springframework.security.oauth2.client.http",
      "filePath": "C:\\java tool\\Spring\\spring-security\\oauth2\\oauth2-client\\src\\test\\java\\org\\springframework\\security\\oauth2\\client\\http\\OAuth2ErrorResponseErrorHandlerTests.java",
      "className": "OAuth2ErrorResponseErrorHandlerTests"
    },
    "statements": [
      {
        "type": "DECLARATION",
        "code": "HttpMessageConverter<OAuth2Error> oauth2ErrorConverter = mock(HttpMessageConverter.class);",
        "line": 64,
        "locate": "Test Case",
        "locationContext": {
          "methodName": "handleErrorWhenOAuth2ErrorConverterSetThenCalled",
          "methodAnnotations": [
            "@Test"
          ]
        }
      },
      {
        "type": "STUBBING",
        "code": "given(oauth2ErrorConverter.read(any(), any())).willReturn(new OAuth2Error(\"unauthorized_client\", \"The client is not authorized\", null));",
        "line": 73,
        "locate": "Test Case",
        "locationContext": {
          "methodName": "handleErrorWhenOAuth2ErrorConverterSetThenCalled",
          "methodAnnotations": [
            "@Test"
          ]
        }
      },
      {
        "type": "VERIFICATION",
        "code": "verify(oauth2ErrorConverter).read(eq(OAuth2Error.class), eq(response));",
        "line": 79,
        "locate": "Test Case",
        "locationContext": {
          "methodName": "handleErrorWhenOAuth2ErrorConverterSetThenCalled",
          "methodAnnotations": [
            "@Test"
          ]
        }
      }
    ],
    "pattern_id": 6
  }
]