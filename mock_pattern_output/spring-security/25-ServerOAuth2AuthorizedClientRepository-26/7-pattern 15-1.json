[
  {
    "variableName": "authorizedClientRepository",
    "variableType": "ServerOAuth2AuthorizedClientRepository",
    "mockedClass": "ServerOAuth2AuthorizedClientRepository",
    "isReuseableMock": "Hybrid",
    "mockPattern": "Creation:\n\u2014 Attribute Mock Creation\n\nStubbing:\n\u2014 @Before\n\nVerification:\n\u2014 Test Case",
    "classContext": {
      "packageName": "org.springframework.security.oauth2.client.web.server.authentication",
      "filePath": "C:\\java tool\\Spring\\spring-security\\oauth2\\oauth2-client\\src\\test\\java\\org\\springframework\\security\\oauth2\\client\\web\\server\\authentication\\OAuth2LoginAuthenticationWebFilterTests.java",
      "className": "OAuth2LoginAuthenticationWebFilterTests"
    },
    "statements": [
      {
        "type": "FIELD_MOCK_CREATION",
        "code": "@Mock\r\nprivate ServerOAuth2AuthorizedClientRepository authorizedClientRepository;",
        "line": 60,
        "locate": "Attribute",
        "locationContext": {
          "methodName": "[FieldDeclaration]",
          "methodAnnotations": [
            "@Mock"
          ]
        }
      },
      {
        "type": "STUBBING",
        "code": "given(this.authorizedClientRepository.saveAuthorizedClient(any(), any(), any())).willReturn(Mono.empty());",
        "line": 78,
        "locate": "@Before",
        "locationContext": {
          "methodName": "setup",
          "methodAnnotations": [
            "@BeforeEach"
          ]
        }
      },
      {
        "type": "VERIFICATION",
        "code": "verify(this.authorizedClientRepository).saveAuthorizedClient(any(), any(), any());",
        "line": 84,
        "locate": "Test Case",
        "locationContext": {
          "methodName": "onAuthenticationSuccessWhenOAuth2LoginAuthenticationTokenThenSavesAuthorizedClient",
          "methodAnnotations": [
            "@Test"
          ]
        }
      }
    ],
    "pattern_id": 15
  }
]