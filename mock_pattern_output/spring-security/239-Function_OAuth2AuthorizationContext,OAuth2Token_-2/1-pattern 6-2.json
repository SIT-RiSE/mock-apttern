[
  {
    "variableName": "subjectTokenResolver",
    "variableType": "Function<OAuth2AuthorizationContext,OAuth2Token>",
    "mockedClass": "Function",
    "isReuseableMock": "Fully Localized",
    "mockPattern": "Creation:\n\u2014 Local Mock Creation in Test Case\n\nStubbing:\n\u2014 Test Case\n\nVerification:\n\u2014 Test Case",
    "classContext": {
      "packageName": "org.springframework.security.oauth2.client",
      "filePath": "C:\\java tool\\Spring\\spring-security\\oauth2\\oauth2-client\\src\\test\\java\\org\\springframework\\security\\oauth2\\client\\TokenExchangeOAuth2AuthorizedClientProviderTests.java",
      "className": "TokenExchangeOAuth2AuthorizedClientProviderTests"
    },
    "statements": [
      {
        "type": "DECLARATION",
        "code": "Function<OAuth2AuthorizationContext, OAuth2Token> subjectTokenResolver = mock(Function.class);",
        "line": 321,
        "locate": "Test Case",
        "locationContext": {
          "methodName": "authorizeWhenCustomSubjectTokenResolverSetThenCalled",
          "methodAnnotations": [
            "@Test"
          ]
        }
      },
      {
        "type": "STUBBING",
        "code": "given(subjectTokenResolver.apply(any(OAuth2AuthorizationContext.class))).willReturn(this.subjectToken);",
        "line": 322,
        "locate": "Test Case",
        "locationContext": {
          "methodName": "authorizeWhenCustomSubjectTokenResolverSetThenCalled",
          "methodAnnotations": [
            "@Test"
          ]
        }
      },
      {
        "type": "VERIFICATION",
        "code": "verify(subjectTokenResolver).apply(authorizationContext);",
        "line": 342,
        "locate": "Test Case",
        "locationContext": {
          "methodName": "authorizeWhenCustomSubjectTokenResolverSetThenCalled",
          "methodAnnotations": [
            "@Test"
          ]
        }
      }
    ],
    "pattern_id": 6
  },
  {
    "variableName": "actorTokenResolver",
    "variableType": "Function<OAuth2AuthorizationContext,OAuth2Token>",
    "mockedClass": "Function",
    "isReuseableMock": "Fully Localized",
    "mockPattern": "Creation:\n\u2014 Local Mock Creation in Test Case\n\nStubbing:\n\u2014 Test Case\n\nVerification:\n\u2014 Test Case",
    "classContext": {
      "packageName": "org.springframework.security.oauth2.client",
      "filePath": "C:\\java tool\\Spring\\spring-security\\oauth2\\oauth2-client\\src\\test\\java\\org\\springframework\\security\\oauth2\\client\\TokenExchangeOAuth2AuthorizedClientProviderTests.java",
      "className": "TokenExchangeOAuth2AuthorizedClientProviderTests"
    },
    "statements": [
      {
        "type": "DECLARATION",
        "code": "Function<OAuth2AuthorizationContext, OAuth2Token> actorTokenResolver = mock(Function.class);",
        "line": 353,
        "locate": "Test Case",
        "locationContext": {
          "methodName": "authorizeWhenCustomActorTokenResolverSetThenCalled",
          "methodAnnotations": [
            "@Test"
          ]
        }
      },
      {
        "type": "STUBBING",
        "code": "given(actorTokenResolver.apply(any(OAuth2AuthorizationContext.class))).willReturn(this.actorToken);",
        "line": 354,
        "locate": "Test Case",
        "locationContext": {
          "methodName": "authorizeWhenCustomActorTokenResolverSetThenCalled",
          "methodAnnotations": [
            "@Test"
          ]
        }
      },
      {
        "type": "VERIFICATION",
        "code": "verify(actorTokenResolver).apply(authorizationContext);",
        "line": 373,
        "locate": "Test Case",
        "locationContext": {
          "methodName": "authorizeWhenCustomActorTokenResolverSetThenCalled",
          "methodAnnotations": [
            "@Test"
          ]
        }
      }
    ],
    "pattern_id": 6
  }
]