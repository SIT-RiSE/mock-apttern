[
  {
    "variableName": "introspector",
    "variableType": "HandlerMappingIntrospector",
    "mockedClass": "HandlerMappingIntrospector",
    "isReuseableMock": false,
    "mockPattern": "Creation:\n\u2014 Attribute Mock Creation\n\nStubbing:\n\u2014 Test Case\n\nVerification:\n\u2014 Test Case",
    "classContext": {
      "packageName": "org.springframework.security.web.servlet.util.matcher",
      "filePath": "C:\\java tool\\Spring\\spring-security\\web\\src\\test\\java\\org\\springframework\\security\\web\\servlet\\util\\matcher\\MvcRequestMatcherTests.java",
      "className": "MvcRequestMatcherTests"
    },
    "statements": [
      {
        "type": "FIELD_MOCK_CREATION",
        "code": "@Mock\r\nHandlerMappingIntrospector introspector;",
        "line": 50,
        "locate": "Attribute",
        "locationContext": {
          "methodName": "[FieldDeclaration]",
          "methodAnnotations": [
            "@Mock"
          ]
        }
      },
      {
        "type": "STUBBING",
        "code": "given(this.introspector.getMatchableHandlerMapping(this.request)).willReturn(null);",
        "line": 77,
        "locate": "Test Case",
        "locationContext": {
          "methodName": "extractUriTemplateVariablesSuccess",
          "methodAnnotations": [
            "@Test"
          ]
        }
      },
      {
        "type": "STUBBING",
        "code": "given(this.introspector.getMatchableHandlerMapping(this.request)).willReturn(this.mapping);",
        "line": 85,
        "locate": "Test Case",
        "locationContext": {
          "methodName": "extractUriTemplateVariablesFail",
          "methodAnnotations": [
            "@Test"
          ]
        }
      },
      {
        "type": "STUBBING",
        "code": "given(this.introspector.getMatchableHandlerMapping(this.request)).willReturn(null);",
        "line": 94,
        "locate": "Test Case",
        "locationContext": {
          "methodName": "extractUriTemplateVariablesDefaultSuccess",
          "methodAnnotations": [
            "@Test"
          ]
        }
      },
      {
        "type": "STUBBING",
        "code": "given(this.introspector.getMatchableHandlerMapping(this.request)).willReturn(null);",
        "line": 102,
        "locate": "Test Case",
        "locationContext": {
          "methodName": "extractUriTemplateVariablesDefaultFail",
          "methodAnnotations": [
            "@Test"
          ]
        }
      },
      {
        "type": "STUBBING",
        "code": "given(this.introspector.getMatchableHandlerMapping(this.request)).willReturn(this.mapping);",
        "line": 109,
        "locate": "Test Case",
        "locationContext": {
          "methodName": "matchesServletPathTrue",
          "methodAnnotations": [
            "@Test"
          ]
        }
      },
      {
        "type": "STUBBING",
        "code": "given(this.introspector.getMatchableHandlerMapping(this.request)).willReturn(this.mapping);",
        "line": 126,
        "locate": "Test Case",
        "locationContext": {
          "methodName": "matchesPathOnlyTrue",
          "methodAnnotations": [
            "@Test"
          ]
        }
      },
      {
        "type": "STUBBING",
        "code": "given(this.introspector.getMatchableHandlerMapping(this.request)).willReturn(null);",
        "line": 134,
        "locate": "Test Case",
        "locationContext": {
          "methodName": "matchesDefaultMatches",
          "methodAnnotations": [
            "@Test"
          ]
        }
      },
      {
        "type": "STUBBING",
        "code": "given(this.introspector.getMatchableHandlerMapping(this.request)).willReturn(null);",
        "line": 141,
        "locate": "Test Case",
        "locationContext": {
          "methodName": "matchesDefaultDoesNotMatch",
          "methodAnnotations": [
            "@Test"
          ]
        }
      },
      {
        "type": "STUBBING",
        "code": "given(this.introspector.getMatchableHandlerMapping(this.request)).willReturn(this.mapping);",
        "line": 147,
        "locate": "Test Case",
        "locationContext": {
          "methodName": "matchesPathOnlyFalse",
          "methodAnnotations": [
            "@Test"
          ]
        }
      },
      {
        "type": "STUBBING",
        "code": "given(this.introspector.getMatchableHandlerMapping(this.request)).willReturn(this.mapping);",
        "line": 154,
        "locate": "Test Case",
        "locationContext": {
          "methodName": "matchesMethodAndPathTrue",
          "methodAnnotations": [
            "@Test"
          ]
        }
      },
      {
        "type": "VERIFICATION",
        "code": "// method compare should be done first since faster\r\nverifyNoMoreInteractions(this.introspector);",
        "line": 165,
        "locate": "Test Case",
        "locationContext": {
          "methodName": "matchesMethodAndPathFalseMethod",
          "methodAnnotations": [
            "@Test"
          ]
        }
      },
      {
        "type": "VERIFICATION",
        "code": "// method compare should be done first since faster\r\nverifyNoMoreInteractions(this.introspector);",
        "line": 179,
        "locate": "Test Case",
        "locationContext": {
          "methodName": "matchesInvalidMethodOnRequest",
          "methodAnnotations": [
            "@Test"
          ]
        }
      },
      {
        "type": "STUBBING",
        "code": "given(this.introspector.getMatchableHandlerMapping(this.request)).willReturn(this.mapping);",
        "line": 185,
        "locate": "Test Case",
        "locationContext": {
          "methodName": "matchesMethodAndPathFalsePath",
          "methodAnnotations": [
            "@Test"
          ]
        }
      },
      {
        "type": "STUBBING",
        "code": "given(this.introspector.getMatchableHandlerMapping(this.request)).willThrow(new HttpRequestMethodNotSupportedException(this.request.getMethod()));",
        "line": 196,
        "locate": "Test Case",
        "locationContext": {
          "methodName": "matchesGetMatchableHandlerMappingThrows",
          "methodAnnotations": [
            "@Test"
          ]
        }
      }
    ],
    "pattern_id": 8
  }
]