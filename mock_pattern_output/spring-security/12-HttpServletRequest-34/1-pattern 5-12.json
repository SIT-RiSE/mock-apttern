[
  {
    "variableName": "spyRequest",
    "variableType": "HttpServletRequest",
    "mockedClass": "HttpServletRequest",
    "isReuseableMock": "Fully Localized",
    "mockPattern": "Creation:\n\u2014 Local Mock Creation in Test Case\n\nStubbing:\n\u2014 None\n\nVerification:\n\u2014 Test Case",
    "classContext": {
      "packageName": "org.springframework.security.oauth2.client.web",
      "filePath": "C:\\java tool\\Spring\\spring-security\\oauth2\\oauth2-client\\src\\test\\java\\org\\springframework\\security\\oauth2\\client\\web\\DefaultOAuth2AuthorizationRequestResolverTests.java",
      "className": "DefaultOAuth2AuthorizationRequestResolverTests"
    },
    "statements": [
      {
        "type": "DECLARATION",
        "code": "HttpServletRequest spyRequest = Mockito.spy(request);",
        "line": 128,
        "locate": "Test Case",
        "locationContext": {
          "methodName": "resolveWhenNotAuthorizationRequestThenRequestBodyNotConsumed",
          "methodAnnotations": [
            "@Test"
          ]
        }
      },
      {
        "type": "VERIFICATION",
        "code": "Mockito.verify(spyRequest, Mockito.never()).getReader();",
        "line": 130,
        "locate": "Test Case",
        "locationContext": {
          "methodName": "resolveWhenNotAuthorizationRequestThenRequestBodyNotConsumed",
          "methodAnnotations": [
            "@Test"
          ]
        }
      },
      {
        "type": "VERIFICATION",
        "code": "Mockito.verify(spyRequest, Mockito.never()).getInputStream();",
        "line": 131,
        "locate": "Test Case",
        "locationContext": {
          "methodName": "resolveWhenNotAuthorizationRequestThenRequestBodyNotConsumed",
          "methodAnnotations": [
            "@Test"
          ]
        }
      },
      {
        "type": "VERIFICATION",
        "code": "Mockito.verify(spyRequest, Mockito.never()).getParameter(ArgumentMatchers.anyString());",
        "line": 132,
        "locate": "Test Case",
        "locationContext": {
          "methodName": "resolveWhenNotAuthorizationRequestThenRequestBodyNotConsumed",
          "methodAnnotations": [
            "@Test"
          ]
        }
      },
      {
        "type": "VERIFICATION",
        "code": "Mockito.verify(spyRequest, Mockito.never()).getParameterMap();",
        "line": 133,
        "locate": "Test Case",
        "locationContext": {
          "methodName": "resolveWhenNotAuthorizationRequestThenRequestBodyNotConsumed",
          "methodAnnotations": [
            "@Test"
          ]
        }
      },
      {
        "type": "VERIFICATION",
        "code": "Mockito.verify(spyRequest, Mockito.never()).getParameterNames();",
        "line": 134,
        "locate": "Test Case",
        "locationContext": {
          "methodName": "resolveWhenNotAuthorizationRequestThenRequestBodyNotConsumed",
          "methodAnnotations": [
            "@Test"
          ]
        }
      },
      {
        "type": "VERIFICATION",
        "code": "Mockito.verify(spyRequest, Mockito.never()).getParameterValues(ArgumentMatchers.anyString());",
        "line": 135,
        "locate": "Test Case",
        "locationContext": {
          "methodName": "resolveWhenNotAuthorizationRequestThenRequestBodyNotConsumed",
          "methodAnnotations": [
            "@Test"
          ]
        }
      }
    ],
    "pattern_id": 5
  },
  {
    "variableName": "request",
    "variableType": "HttpServletRequest",
    "mockedClass": "HttpServletRequest",
    "isReuseableMock": "Fully Localized",
    "mockPattern": "Creation:\n\u2014 Local Mock Creation in Test Case\n\nStubbing:\n\u2014 None\n\nVerification:\n\u2014 Test Case",
    "classContext": {
      "packageName": "org.springframework.security.web.access",
      "filePath": "C:\\java tool\\Spring\\spring-security\\web\\src\\test\\java\\org\\springframework\\security\\web\\access\\HandlerMappingIntrospectorRequestTransformerTests.java",
      "className": "HandlerMappingIntrospectorRequestTransformerTests"
    },
    "statements": [
      {
        "type": "DECLARATION",
        "code": "HttpServletRequest request = mock(HttpServletRequest.class);",
        "line": 90,
        "locate": "Test Case",
        "locationContext": {
          "methodName": "transformThenResultDoesNotDelegateToSetAttribute",
          "methodAnnotations": [
            "@Test"
          ]
        }
      },
      {
        "type": "VERIFICATION",
        "code": "verifyNoInteractions(request);",
        "line": 100,
        "locate": "Test Case",
        "locationContext": {
          "methodName": "transformThenResultDoesNotDelegateToSetAttribute",
          "methodAnnotations": [
            "@Test"
          ]
        }
      }
    ],
    "pattern_id": 5
  },
  {
    "variableName": "request",
    "variableType": "HttpServletRequest",
    "mockedClass": "HttpServletRequest",
    "isReuseableMock": "Fully Localized",
    "mockPattern": "Creation:\n\u2014 Local Mock Creation in Test Case\n\nStubbing:\n\u2014 None\n\nVerification:\n\u2014 Test Case",
    "classContext": {
      "packageName": "org.springframework.security.web.access",
      "filePath": "C:\\java tool\\Spring\\spring-security\\web\\src\\test\\java\\org\\springframework\\security\\web\\access\\HandlerMappingIntrospectorRequestTransformerTests.java",
      "className": "HandlerMappingIntrospectorRequestTransformerTests"
    },
    "statements": [
      {
        "type": "DECLARATION",
        "code": "HttpServletRequest request = mock(HttpServletRequest.class);",
        "line": 126,
        "locate": "Test Case",
        "locationContext": {
          "methodName": "transformThenResultDoesNotDelegateToGetAttribute",
          "methodAnnotations": [
            "@Test"
          ]
        }
      },
      {
        "type": "VERIFICATION",
        "code": "verifyNoInteractions(request);",
        "line": 134,
        "locate": "Test Case",
        "locationContext": {
          "methodName": "transformThenResultDoesNotDelegateToGetAttribute",
          "methodAnnotations": [
            "@Test"
          ]
        }
      }
    ],
    "pattern_id": 5
  },
  {
    "variableName": "request",
    "variableType": "HttpServletRequest",
    "mockedClass": "HttpServletRequest",
    "isReuseableMock": "Fully Localized",
    "mockPattern": "Creation:\n\u2014 Local Mock Creation in Test Case\n\nStubbing:\n\u2014 None\n\nVerification:\n\u2014 Test Case",
    "classContext": {
      "packageName": "org.springframework.security.web.access",
      "filePath": "C:\\java tool\\Spring\\spring-security\\web\\src\\test\\java\\org\\springframework\\security\\web\\access\\HandlerMappingIntrospectorRequestTransformerTests.java",
      "className": "HandlerMappingIntrospectorRequestTransformerTests"
    },
    "statements": [
      {
        "type": "DECLARATION",
        "code": "HttpServletRequest request = mock(HttpServletRequest.class);",
        "line": 144,
        "locate": "Test Case",
        "locationContext": {
          "methodName": "transformThenResultDoesNotDelegateToGetAttributeNames",
          "methodAnnotations": [
            "@Test"
          ]
        }
      },
      {
        "type": "VERIFICATION",
        "code": "verifyNoInteractions(request);",
        "line": 152,
        "locate": "Test Case",
        "locationContext": {
          "methodName": "transformThenResultDoesNotDelegateToGetAttributeNames",
          "methodAnnotations": [
            "@Test"
          ]
        }
      }
    ],
    "pattern_id": 5
  },
  {
    "variableName": "request",
    "variableType": "HttpServletRequest",
    "mockedClass": "HttpServletRequest",
    "isReuseableMock": "Fully Localized",
    "mockPattern": "Creation:\n\u2014 Local Mock Creation in Test Case\n\nStubbing:\n\u2014 None\n\nVerification:\n\u2014 Test Case",
    "classContext": {
      "packageName": "org.springframework.security.web.access",
      "filePath": "C:\\java tool\\Spring\\spring-security\\web\\src\\test\\java\\org\\springframework\\security\\web\\access\\HandlerMappingIntrospectorRequestTransformerTests.java",
      "className": "HandlerMappingIntrospectorRequestTransformerTests"
    },
    "statements": [
      {
        "type": "DECLARATION",
        "code": "HttpServletRequest request = mock(HttpServletRequest.class);",
        "line": 177,
        "locate": "Test Case",
        "locationContext": {
          "methodName": "transformThenResultDoesNotDelegateToRemoveAttribute",
          "methodAnnotations": [
            "@Test"
          ]
        }
      },
      {
        "type": "VERIFICATION",
        "code": "verifyNoInteractions(request);",
        "line": 185,
        "locate": "Test Case",
        "locationContext": {
          "methodName": "transformThenResultDoesNotDelegateToRemoveAttribute",
          "methodAnnotations": [
            "@Test"
          ]
        }
      }
    ],
    "pattern_id": 5
  },
  {
    "variableName": "request",
    "variableType": "HttpServletRequest",
    "mockedClass": "HttpServletRequest",
    "isReuseableMock": "Fully Localized",
    "mockPattern": "Creation:\n\u2014 Local Mock Creation in Test Case\n\nStubbing:\n\u2014 None\n\nVerification:\n\u2014 Test Case",
    "classContext": {
      "packageName": "org.springframework.security.web.access",
      "filePath": "C:\\java tool\\Spring\\spring-security\\web\\src\\test\\java\\org\\springframework\\security\\web\\access\\HandlerMappingIntrospectorRequestTransformerTests.java",
      "className": "HandlerMappingIntrospectorRequestTransformerTests"
    },
    "statements": [
      {
        "type": "DECLARATION",
        "code": "HttpServletRequest request = mock(HttpServletRequest.class);",
        "line": 195,
        "locate": "Test Case",
        "locationContext": {
          "methodName": "transformThenResultDoesNotDelegateToGetDispatcherType",
          "methodAnnotations": [
            "@Test"
          ]
        }
      },
      {
        "type": "VERIFICATION",
        "code": "verifyNoInteractions(request);",
        "line": 203,
        "locate": "Test Case",
        "locationContext": {
          "methodName": "transformThenResultDoesNotDelegateToGetDispatcherType",
          "methodAnnotations": [
            "@Test"
          ]
        }
      }
    ],
    "pattern_id": 5
  },
  {
    "variableName": "request",
    "variableType": "HttpServletRequest",
    "mockedClass": "HttpServletRequest",
    "isReuseableMock": "Fully Localized",
    "mockPattern": "Creation:\n\u2014 Local Mock Creation in Test Case\n\nStubbing:\n\u2014 None\n\nVerification:\n\u2014 Test Case",
    "classContext": {
      "packageName": "org.springframework.security.web.access",
      "filePath": "C:\\java tool\\Spring\\spring-security\\web\\src\\test\\java\\org\\springframework\\security\\web\\access\\NoOpAccessDeniedHandlerTests.java",
      "className": "NoOpAccessDeniedHandlerTests"
    },
    "statements": [
      {
        "type": "DECLARATION",
        "code": "HttpServletRequest request = mock(HttpServletRequest.class);",
        "line": 34,
        "locate": "Test Case",
        "locationContext": {
          "methodName": "handleWhenInvokedThenDoesNothing",
          "methodAnnotations": [
            "@Test"
          ]
        }
      },
      {
        "type": "VERIFICATION",
        "code": "verifyNoInteractions(request, response, exception);",
        "line": 38,
        "locate": "Test Case",
        "locationContext": {
          "methodName": "handleWhenInvokedThenDoesNothing",
          "methodAnnotations": [
            "@Test"
          ]
        }
      }
    ],
    "pattern_id": 5
  },
  {
    "variableName": "request",
    "variableType": "HttpServletRequest",
    "mockedClass": "HttpServletRequest",
    "isReuseableMock": "Fully Localized",
    "mockPattern": "Creation:\n\u2014 Local Mock Creation in Test Case\n\nStubbing:\n\u2014 None\n\nVerification:\n\u2014 Test Case",
    "classContext": {
      "packageName": "org.springframework.security.web.authentication",
      "filePath": "C:\\java tool\\Spring\\spring-security\\web\\src\\test\\java\\org\\springframework\\security\\web\\authentication\\NoOpAuthenticationEntryPointTests.java",
      "className": "NoOpAuthenticationEntryPointTests"
    },
    "statements": [
      {
        "type": "DECLARATION",
        "code": "HttpServletRequest request = mock(HttpServletRequest.class);",
        "line": 34,
        "locate": "Test Case",
        "locationContext": {
          "methodName": "commenceWhenInvokedThenDoesNothing",
          "methodAnnotations": [
            "@Test"
          ]
        }
      },
      {
        "type": "VERIFICATION",
        "code": "verifyNoInteractions(request, response, exception);",
        "line": 38,
        "locate": "Test Case",
        "locationContext": {
          "methodName": "commenceWhenInvokedThenDoesNothing",
          "methodAnnotations": [
            "@Test"
          ]
        }
      }
    ],
    "pattern_id": 5
  },
  {
    "variableName": "request",
    "variableType": "HttpServletRequest",
    "mockedClass": "HttpServletRequest",
    "isReuseableMock": "Fully Localized",
    "mockPattern": "Creation:\n\u2014 Local Mock Creation in Test Case\n\nStubbing:\n\u2014 None\n\nVerification:\n\u2014 Test Case",
    "classContext": {
      "packageName": "org.springframework.security.web.context",
      "filePath": "C:\\java tool\\Spring\\spring-security\\web\\src\\test\\java\\org\\springframework\\security\\web\\context\\HttpSessionSecurityContextRepositoryTests.java",
      "className": "HttpSessionSecurityContextRepositoryTests"
    },
    "statements": [
      {
        "type": "DECLARATION",
        "code": "HttpServletRequest request = mock(HttpServletRequest.class);",
        "line": 85,
        "locate": "Test Case",
        "locationContext": {
          "methodName": "startAsyncDisablesSaveOnCommit",
          "methodAnnotations": [
            "@Test"
          ]
        }
      },
      {
        "type": "VERIFICATION",
        "code": "// ensure that sendError did cause interaction with the HttpSession\r\nverify(request, never()).getSession(anyBoolean());",
        "line": 93,
        "locate": "Test Case",
        "locationContext": {
          "methodName": "startAsyncDisablesSaveOnCommit",
          "methodAnnotations": [
            "@Test"
          ]
        }
      },
      {
        "type": "VERIFICATION",
        "code": "verify(request, never()).getSession();",
        "line": 94,
        "locate": "Test Case",
        "locationContext": {
          "methodName": "startAsyncDisablesSaveOnCommit",
          "methodAnnotations": [
            "@Test"
          ]
        }
      }
    ],
    "pattern_id": 5
  },
  {
    "variableName": "request",
    "variableType": "HttpServletRequest",
    "mockedClass": "HttpServletRequest",
    "isReuseableMock": "Fully Localized",
    "mockPattern": "Creation:\n\u2014 Local Mock Creation in Test Case\n\nStubbing:\n\u2014 None\n\nVerification:\n\u2014 Test Case",
    "classContext": {
      "packageName": "org.springframework.security.web.context",
      "filePath": "C:\\java tool\\Spring\\spring-security\\web\\src\\test\\java\\org\\springframework\\security\\web\\context\\HttpSessionSecurityContextRepositoryTests.java",
      "className": "HttpSessionSecurityContextRepositoryTests"
    },
    "statements": [
      {
        "type": "DECLARATION",
        "code": "HttpServletRequest request = mock(HttpServletRequest.class);",
        "line": 100,
        "locate": "Test Case",
        "locationContext": {
          "methodName": "startAsyncRequestResponseDisablesSaveOnCommit",
          "methodAnnotations": [
            "@Test"
          ]
        }
      },
      {
        "type": "VERIFICATION",
        "code": "// ensure that sendError did cause interaction with the HttpSession\r\nverify(request, never()).getSession(anyBoolean());",
        "line": 108,
        "locate": "Test Case",
        "locationContext": {
          "methodName": "startAsyncRequestResponseDisablesSaveOnCommit",
          "methodAnnotations": [
            "@Test"
          ]
        }
      },
      {
        "type": "VERIFICATION",
        "code": "verify(request, never()).getSession();",
        "line": 109,
        "locate": "Test Case",
        "locationContext": {
          "methodName": "startAsyncRequestResponseDisablesSaveOnCommit",
          "methodAnnotations": [
            "@Test"
          ]
        }
      }
    ],
    "pattern_id": 5
  },
  {
    "variableName": "request",
    "variableType": "HttpServletRequest",
    "mockedClass": "HttpServletRequest",
    "isReuseableMock": "Fully Localized",
    "mockPattern": "Creation:\n\u2014 Local Mock Creation in Test Case\n\nStubbing:\n\u2014 None\n\nVerification:\n\u2014 Test Case",
    "classContext": {
      "packageName": "org.springframework.security.web.savedrequest",
      "filePath": "C:\\java tool\\Spring\\spring-security\\web\\src\\test\\java\\org\\springframework\\security\\web\\savedrequest\\HttpSessionRequestCacheTests.java",
      "className": "HttpSessionRequestCacheTests"
    },
    "statements": [
      {
        "type": "DECLARATION",
        "code": "HttpServletRequest request = spy(new MockHttpServletRequest());",
        "line": 105,
        "locate": "Test Case",
        "locationContext": {
          "methodName": "getMatchingRequestWhenMatchingRequestParameterNameSetThenSessionNotAccessed",
          "methodAnnotations": [
            "@Test"
          ]
        }
      },
      {
        "type": "VERIFICATION",
        "code": "verify(request, never()).getSession();",
        "line": 108,
        "locate": "Test Case",
        "locationContext": {
          "methodName": "getMatchingRequestWhenMatchingRequestParameterNameSetThenSessionNotAccessed",
          "methodAnnotations": [
            "@Test"
          ]
        }
      },
      {
        "type": "VERIFICATION",
        "code": "verify(request, never()).getSession(anyBoolean());",
        "line": 109,
        "locate": "Test Case",
        "locationContext": {
          "methodName": "getMatchingRequestWhenMatchingRequestParameterNameSetThenSessionNotAccessed",
          "methodAnnotations": [
            "@Test"
          ]
        }
      }
    ],
    "pattern_id": 5
  },
  {
    "variableName": "request",
    "variableType": "HttpServletRequest",
    "mockedClass": "HttpServletRequest",
    "isReuseableMock": "Fully Localized",
    "mockPattern": "Creation:\n\u2014 Local Mock Creation in Test Case\n\nStubbing:\n\u2014 None\n\nVerification:\n\u2014 Test Case",
    "classContext": {
      "packageName": "org.springframework.security.web.savedrequest",
      "filePath": "C:\\java tool\\Spring\\spring-security\\web\\src\\test\\java\\org\\springframework\\security\\web\\savedrequest\\HttpSessionRequestCacheTests.java",
      "className": "HttpSessionRequestCacheTests"
    },
    "statements": [
      {
        "type": "DECLARATION",
        "code": "HttpServletRequest request = spy(mockRequest);",
        "line": 162,
        "locate": "Test Case",
        "locationContext": {
          "methodName": "getMatchingRequestWhenMatchingRequestParameterNameSetThenDoesNotInvokeGetParameterMethods",
          "methodAnnotations": [
            "@Test"
          ]
        }
      },
      {
        "type": "VERIFICATION",
        "code": "verify(request, never()).getParameter(anyString());",
        "line": 165,
        "locate": "Test Case",
        "locationContext": {
          "methodName": "getMatchingRequestWhenMatchingRequestParameterNameSetThenDoesNotInvokeGetParameterMethods",
          "methodAnnotations": [
            "@Test"
          ]
        }
      },
      {
        "type": "VERIFICATION",
        "code": "verify(request, never()).getParameterValues(anyString());",
        "line": 166,
        "locate": "Test Case",
        "locationContext": {
          "methodName": "getMatchingRequestWhenMatchingRequestParameterNameSetThenDoesNotInvokeGetParameterMethods",
          "methodAnnotations": [
            "@Test"
          ]
        }
      },
      {
        "type": "VERIFICATION",
        "code": "verify(request, never()).getParameterNames();",
        "line": 167,
        "locate": "Test Case",
        "locationContext": {
          "methodName": "getMatchingRequestWhenMatchingRequestParameterNameSetThenDoesNotInvokeGetParameterMethods",
          "methodAnnotations": [
            "@Test"
          ]
        }
      },
      {
        "type": "VERIFICATION",
        "code": "verify(request, never()).getParameterMap();",
        "line": 168,
        "locate": "Test Case",
        "locationContext": {
          "methodName": "getMatchingRequestWhenMatchingRequestParameterNameSetThenDoesNotInvokeGetParameterMethods",
          "methodAnnotations": [
            "@Test"
          ]
        }
      }
    ],
    "pattern_id": 5
  }
]