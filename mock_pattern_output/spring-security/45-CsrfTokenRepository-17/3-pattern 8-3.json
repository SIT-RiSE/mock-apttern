[
  {
    "variableName": "csrfTokenRepository",
    "variableType": "CsrfTokenRepository",
    "mockedClass": "CsrfTokenRepository",
    "isReuseableMock": "Hybrid",
    "mockPattern": "Creation:\n\u2014 Attribute Mock Creation\n\nStubbing:\n\u2014 Test Case\n\nVerification:\n\u2014 Test Case",
    "classContext": {
      "packageName": "org.springframework.security.web.csrf",
      "filePath": "C:\\java tool\\Spring\\spring-security\\web\\src\\test\\java\\org\\springframework\\security\\web\\csrf\\CsrfAuthenticationStrategyTests.java",
      "className": "CsrfAuthenticationStrategyTests"
    },
    "statements": [
      {
        "type": "FIELD_MOCK_CREATION",
        "code": "@Mock\r\nprivate CsrfTokenRepository csrfTokenRepository;",
        "line": 49,
        "locate": "Attribute",
        "locationContext": {
          "methodName": "[FieldDeclaration]",
          "methodAnnotations": [
            "@Mock"
          ]
        }
      },
      {
        "type": "STUBBING",
        "code": "given(this.csrfTokenRepository.loadToken(this.request)).willReturn(this.existingToken);",
        "line": 85,
        "locate": "Test Case",
        "locationContext": {
          "methodName": "onAuthenticationWhenCustomRequestHandlerThenUsed",
          "methodAnnotations": [
            "@Test"
          ]
        }
      },
      {
        "type": "STUBBING",
        "code": "given(this.csrfTokenRepository.loadDeferredToken(this.request, this.response)).willReturn(new TestDeferredCsrfToken(this.existingToken, false));",
        "line": 86,
        "locate": "Test Case",
        "locationContext": {
          "methodName": "onAuthenticationWhenCustomRequestHandlerThenUsed",
          "methodAnnotations": [
            "@Test"
          ]
        }
      },
      {
        "type": "VERIFICATION",
        "code": "verify(this.csrfTokenRepository).loadToken(this.request);",
        "line": 93,
        "locate": "Test Case",
        "locationContext": {
          "methodName": "onAuthenticationWhenCustomRequestHandlerThenUsed",
          "methodAnnotations": [
            "@Test"
          ]
        }
      },
      {
        "type": "VERIFICATION",
        "code": "verify(this.csrfTokenRepository).loadDeferredToken(this.request, this.response);",
        "line": 94,
        "locate": "Test Case",
        "locationContext": {
          "methodName": "onAuthenticationWhenCustomRequestHandlerThenUsed",
          "methodAnnotations": [
            "@Test"
          ]
        }
      },
      {
        "type": "STUBBING",
        "code": "given(this.csrfTokenRepository.loadToken(this.request)).willReturn(this.existingToken);",
        "line": 101,
        "locate": "Test Case",
        "locationContext": {
          "methodName": "logoutRemovesCsrfTokenAndLoadsNewDeferredCsrfToken",
          "methodAnnotations": [
            "@Test"
          ]
        }
      },
      {
        "type": "STUBBING",
        "code": "given(this.csrfTokenRepository.loadDeferredToken(this.request, this.response)).willReturn(new TestDeferredCsrfToken(this.generatedToken, false));",
        "line": 102,
        "locate": "Test Case",
        "locationContext": {
          "methodName": "logoutRemovesCsrfTokenAndLoadsNewDeferredCsrfToken",
          "methodAnnotations": [
            "@Test"
          ]
        }
      },
      {
        "type": "VERIFICATION",
        "code": "verify(this.csrfTokenRepository).loadToken(this.request);",
        "line": 106,
        "locate": "Test Case",
        "locationContext": {
          "methodName": "logoutRemovesCsrfTokenAndLoadsNewDeferredCsrfToken",
          "methodAnnotations": [
            "@Test"
          ]
        }
      },
      {
        "type": "VERIFICATION",
        "code": "verify(this.csrfTokenRepository).saveToken(null, this.request, this.response);",
        "line": 107,
        "locate": "Test Case",
        "locationContext": {
          "methodName": "logoutRemovesCsrfTokenAndLoadsNewDeferredCsrfToken",
          "methodAnnotations": [
            "@Test"
          ]
        }
      },
      {
        "type": "VERIFICATION",
        "code": "verify(this.csrfTokenRepository).loadDeferredToken(this.request, this.response);",
        "line": 108,
        "locate": "Test Case",
        "locationContext": {
          "methodName": "logoutRemovesCsrfTokenAndLoadsNewDeferredCsrfToken",
          "methodAnnotations": [
            "@Test"
          ]
        }
      },
      {
        "type": "STUBBING",
        "code": "given(this.csrfTokenRepository.loadToken(this.request)).willReturn(this.existingToken, (CsrfToken) null);",
        "line": 122,
        "locate": "Test Case",
        "locationContext": {
          "methodName": "delaySavingCsrf",
          "methodAnnotations": [
            "@Test"
          ]
        }
      },
      {
        "type": "STUBBING",
        "code": "given(this.csrfTokenRepository.generateToken(this.request)).willReturn(this.generatedToken);",
        "line": 123,
        "locate": "Test Case",
        "locationContext": {
          "methodName": "delaySavingCsrf",
          "methodAnnotations": [
            "@Test"
          ]
        }
      },
      {
        "type": "VERIFICATION",
        "code": "verify(this.csrfTokenRepository).saveToken(null, this.request, this.response);",
        "line": 126,
        "locate": "Test Case",
        "locationContext": {
          "methodName": "delaySavingCsrf",
          "methodAnnotations": [
            "@Test"
          ]
        }
      },
      {
        "type": "VERIFICATION",
        "code": "verify(this.csrfTokenRepository, never()).saveToken(eq(this.generatedToken), any(HttpServletRequest.class), any(HttpServletResponse.class));",
        "line": 127,
        "locate": "Test Case",
        "locationContext": {
          "methodName": "delaySavingCsrf",
          "methodAnnotations": [
            "@Test"
          ]
        }
      },
      {
        "type": "VERIFICATION",
        "code": "verify(this.csrfTokenRepository, times(2)).loadToken(this.request);",
        "line": 131,
        "locate": "Test Case",
        "locationContext": {
          "methodName": "delaySavingCsrf",
          "methodAnnotations": [
            "@Test"
          ]
        }
      },
      {
        "type": "VERIFICATION",
        "code": "verify(this.csrfTokenRepository).generateToken(this.request);",
        "line": 132,
        "locate": "Test Case",
        "locationContext": {
          "methodName": "delaySavingCsrf",
          "methodAnnotations": [
            "@Test"
          ]
        }
      },
      {
        "type": "VERIFICATION",
        "code": "verify(this.csrfTokenRepository).saveToken(eq(this.generatedToken), any(HttpServletRequest.class), any(HttpServletResponse.class));",
        "line": 133,
        "locate": "Test Case",
        "locationContext": {
          "methodName": "delaySavingCsrf",
          "methodAnnotations": [
            "@Test"
          ]
        }
      }
    ],
    "pattern_id": 8
  },
  {
    "variableName": "tokenRepository",
    "variableType": "CsrfTokenRepository",
    "mockedClass": "CsrfTokenRepository",
    "isReuseableMock": "Hybrid",
    "mockPattern": "Creation:\n\u2014 Attribute Mock Creation\n\nStubbing:\n\u2014 Test Case\n\nVerification:\n\u2014 Test Case",
    "classContext": {
      "packageName": "org.springframework.security.web.csrf",
      "filePath": "C:\\java tool\\Spring\\spring-security\\web\\src\\test\\java\\org\\springframework\\security\\web\\csrf\\CsrfFilterTests.java",
      "className": "CsrfFilterTests"
    },
    "statements": [
      {
        "type": "FIELD_MOCK_CREATION",
        "code": "@Mock\r\nprivate CsrfTokenRepository tokenRepository;",
        "line": 65,
        "locate": "Attribute",
        "locationContext": {
          "methodName": "[FieldDeclaration]",
          "methodAnnotations": [
            "@Mock"
          ]
        }
      },
      {
        "type": "STUBBING",
        "code": "given(this.tokenRepository.generateToken(this.request)).willReturn(this.token);",
        "line": 113,
        "locate": "Test Case",
        "locationContext": {
          "methodName": "doFilterDoesNotSaveCsrfTokenUntilAccessed",
          "methodAnnotations": [
            "@Test"
          ]
        }
      },
      {
        "type": "VERIFICATION",
        "code": "// no CsrfToken should have been saved yet\r\nverify(this.tokenRepository, times(0)).saveToken(any(CsrfToken.class), any(HttpServletRequest.class), any(HttpServletResponse.class));",
        "line": 117,
        "locate": "Test Case",
        "locationContext": {
          "methodName": "doFilterDoesNotSaveCsrfTokenUntilAccessed",
          "methodAnnotations": [
            "@Test"
          ]
        }
      },
      {
        "type": "VERIFICATION",
        "code": "// now the CsrfToken should have been saved\r\nverify(this.tokenRepository).saveToken(eq(this.token), any(HttpServletRequest.class), any(HttpServletResponse.class));",
        "line": 123,
        "locate": "Test Case",
        "locationContext": {
          "methodName": "doFilterDoesNotSaveCsrfTokenUntilAccessed",
          "methodAnnotations": [
            "@Test"
          ]
        }
      },
      {
        "type": "STUBBING",
        "code": "given(this.tokenRepository.loadDeferredToken(this.request, this.response)).willReturn(deferredCsrfToken);",
        "line": 131,
        "locate": "Test Case",
        "locationContext": {
          "methodName": "doFilterAccessDeniedNoTokenPresent",
          "methodAnnotations": [
            "@Test"
          ]
        }
      },
      {
        "type": "STUBBING",
        "code": "given(this.tokenRepository.loadDeferredToken(this.request, this.response)).willReturn(deferredCsrfToken);",
        "line": 144,
        "locate": "Test Case",
        "locationContext": {
          "methodName": "doFilterAccessDeniedIncorrectTokenPresent",
          "methodAnnotations": [
            "@Test"
          ]
        }
      },
      {
        "type": "STUBBING",
        "code": "given(this.tokenRepository.loadDeferredToken(this.request, this.response)).willReturn(deferredCsrfToken);",
        "line": 158,
        "locate": "Test Case",
        "locationContext": {
          "methodName": "doFilterAccessDeniedIncorrectTokenPresentHeader",
          "methodAnnotations": [
            "@Test"
          ]
        }
      },
      {
        "type": "STUBBING",
        "code": "given(this.tokenRepository.loadDeferredToken(this.request, this.response)).willReturn(deferredCsrfToken);",
        "line": 173,
        "locate": "Test Case",
        "locationContext": {
          "methodName": "doFilterAccessDeniedIncorrectTokenPresentHeaderPreferredOverParameter",
          "methodAnnotations": [
            "@Test"
          ]
        }
      },
      {
        "type": "STUBBING",
        "code": "given(this.tokenRepository.loadDeferredToken(this.request, this.response)).willReturn(deferredCsrfToken);",
        "line": 191,
        "locate": "Test Case",
        "locationContext": {
          "methodName": "doFilterNotCsrfRequestExistingToken",
          "methodAnnotations": [
            "@Test"
          ]
        }
      },
      {
        "type": "STUBBING",
        "code": "given(this.tokenRepository.loadDeferredToken(this.request, this.response)).willReturn(deferredCsrfToken);",
        "line": 204,
        "locate": "Test Case",
        "locationContext": {
          "methodName": "doFilterNotCsrfRequestGenerateToken",
          "methodAnnotations": [
            "@Test"
          ]
        }
      },
      {
        "type": "STUBBING",
        "code": "given(this.tokenRepository.loadDeferredToken(this.request, this.response)).willReturn(deferredCsrfToken);",
        "line": 217,
        "locate": "Test Case",
        "locationContext": {
          "methodName": "doFilterIsCsrfRequestExistingTokenHeader",
          "methodAnnotations": [
            "@Test"
          ]
        }
      },
      {
        "type": "STUBBING",
        "code": "given(this.tokenRepository.loadDeferredToken(this.request, this.response)).willReturn(deferredCsrfToken);",
        "line": 235,
        "locate": "Test Case",
        "locationContext": {
          "methodName": "doFilterIsCsrfRequestExistingTokenHeaderPreferredOverInvalidParam",
          "methodAnnotations": [
            "@Test"
          ]
        }
      },
      {
        "type": "STUBBING",
        "code": "given(this.tokenRepository.loadDeferredToken(this.request, this.response)).willReturn(deferredCsrfToken);",
        "line": 253,
        "locate": "Test Case",
        "locationContext": {
          "methodName": "doFilterIsCsrfRequestExistingToken",
          "methodAnnotations": [
            "@Test"
          ]
        }
      },
      {
        "type": "VERIFICATION",
        "code": "verify(this.tokenRepository, never()).saveToken(any(CsrfToken.class), any(HttpServletRequest.class), any(HttpServletResponse.class));",
        "line": 264,
        "locate": "Test Case",
        "locationContext": {
          "methodName": "doFilterIsCsrfRequestExistingToken",
          "methodAnnotations": [
            "@Test"
          ]
        }
      },
      {
        "type": "STUBBING",
        "code": "given(this.tokenRepository.loadDeferredToken(this.request, this.response)).willReturn(deferredCsrfToken);",
        "line": 272,
        "locate": "Test Case",
        "locationContext": {
          "methodName": "doFilterIsCsrfRequestGenerateToken",
          "methodAnnotations": [
            "@Test"
          ]
        }
      },
      {
        "type": "STUBBING",
        "code": "given(this.tokenRepository.loadDeferredToken(this.request, this.response)).willReturn(new TestDeferredCsrfToken(this.token, false));",
        "line": 293,
        "locate": "Test Case",
        "locationContext": {
          "methodName": "doFilterDefaultRequireCsrfProtectionMatcherAllowedMethods",
          "methodAnnotations": [
            "@Test"
          ]
        }
      },
      {
        "type": "STUBBING",
        "code": "given(this.tokenRepository.loadDeferredToken(this.request, this.response)).willReturn(new TestDeferredCsrfToken(this.token, false));",
        "line": 314,
        "locate": "Test Case",
        "locationContext": {
          "methodName": "doFilterDefaultRequireCsrfProtectionMatcherAllowedMethodsCaseSensitive",
          "methodAnnotations": [
            "@Test"
          ]
        }
      },
      {
        "type": "STUBBING",
        "code": "given(this.tokenRepository.loadDeferredToken(this.request, this.response)).willReturn(new TestDeferredCsrfToken(this.token, false));",
        "line": 330,
        "locate": "Test Case",
        "locationContext": {
          "methodName": "doFilterDefaultRequireCsrfProtectionMatcherDeniedMethods",
          "methodAnnotations": [
            "@Test"
          ]
        }
      },
      {
        "type": "STUBBING",
        "code": "given(this.tokenRepository.loadDeferredToken(this.request, this.response)).willReturn(deferredCsrfToken);",
        "line": 346,
        "locate": "Test Case",
        "locationContext": {
          "methodName": "doFilterDefaultAccessDenied",
          "methodAnnotations": [
            "@Test"
          ]
        }
      },
      {
        "type": "STUBBING",
        "code": "given(this.tokenRepository.loadDeferredToken(this.request, this.response)).willReturn(deferredCsrfToken);",
        "line": 375,
        "locate": "Test Case",
        "locationContext": {
          "methodName": "doFilterWhenTokenIsNullThenNoNullPointer",
          "methodAnnotations": [
            "@Test"
          ]
        }
      },
      {
        "type": "STUBBING",
        "code": "given(this.tokenRepository.loadDeferredToken(this.request, this.response)).willReturn(deferredCsrfToken);",
        "line": 385,
        "locate": "Test Case",
        "locationContext": {
          "methodName": "doFilterWhenRequestHandlerThenUsed",
          "methodAnnotations": [
            "@Test"
          ]
        }
      },
      {
        "type": "VERIFICATION",
        "code": "verify(this.tokenRepository).loadDeferredToken(this.request, this.response);",
        "line": 392,
        "locate": "Test Case",
        "locationContext": {
          "methodName": "doFilterWhenRequestHandlerThenUsed",
          "methodAnnotations": [
            "@Test"
          ]
        }
      },
      {
        "type": "STUBBING",
        "code": "given(this.tokenRepository.loadDeferredToken(this.request, this.response)).willReturn(deferredCsrfToken);",
        "line": 401,
        "locate": "Test Case",
        "locationContext": {
          "methodName": "doFilterWhenXorCsrfTokenRequestAttributeHandlerAndValidTokenThenSuccess",
          "methodAnnotations": [
            "@Test"
          ]
        }
      },
      {
        "type": "STUBBING",
        "code": "given(this.tokenRepository.loadDeferredToken(this.request, this.response)).willReturn(deferredCsrfToken);",
        "line": 425,
        "locate": "Test Case",
        "locationContext": {
          "methodName": "doFilterWhenXorCsrfTokenRequestAttributeHandlerAndRawTokenThenAccessDeniedException",
          "methodAnnotations": [
            "@Test"
          ]
        }
      },
      {
        "type": "STUBBING",
        "code": "given(this.tokenRepository.loadDeferredToken(this.request, this.response)).willReturn(deferredCsrfToken);",
        "line": 454,
        "locate": "Test Case",
        "locationContext": {
          "methodName": "doFilterWhenCsrfRequestAttributeNameThenNoCsrfTokenMethodInvokedOnGet",
          "methodAnnotations": [
            "@Test"
          ]
        }
      }
    ],
    "pattern_id": 8
  },
  {
    "variableName": "delegate",
    "variableType": "CsrfTokenRepository",
    "mockedClass": "CsrfTokenRepository",
    "isReuseableMock": "Hybrid",
    "mockPattern": "Creation:\n\u2014 Attribute Mock Creation\n\nStubbing:\n\u2014 Test Case\n\nVerification:\n\u2014 Test Case",
    "classContext": {
      "packageName": "org.springframework.security.web.csrf",
      "filePath": "C:\\java tool\\Spring\\spring-security\\web\\src\\test\\java\\org\\springframework\\security\\web\\csrf\\LazyCsrfTokenRepositoryTests.java",
      "className": "LazyCsrfTokenRepositoryTests"
    },
    "statements": [
      {
        "type": "FIELD_MOCK_CREATION",
        "code": "@Mock\r\nCsrfTokenRepository delegate;",
        "line": 42,
        "locate": "Attribute",
        "locationContext": {
          "methodName": "[FieldDeclaration]",
          "methodAnnotations": [
            "@Mock"
          ]
        }
      },
      {
        "type": "STUBBING",
        "code": "given(this.delegate.generateToken(this.request)).willReturn(this.token);",
        "line": 74,
        "locate": "Test Case",
        "locationContext": {
          "methodName": "generateTokenGetTokenSavesToken",
          "methodAnnotations": [
            "@Test"
          ]
        }
      },
      {
        "type": "VERIFICATION",
        "code": "verify(this.delegate).saveToken(this.token, this.request, this.response);",
        "line": 78,
        "locate": "Test Case",
        "locationContext": {
          "methodName": "generateTokenGetTokenSavesToken",
          "methodAnnotations": [
            "@Test"
          ]
        }
      },
      {
        "type": "VERIFICATION",
        "code": "verifyNoMoreInteractions(this.delegate);",
        "line": 84,
        "locate": "Test Case",
        "locationContext": {
          "methodName": "saveNonNullDoesNothing",
          "methodAnnotations": [
            "@Test"
          ]
        }
      },
      {
        "type": "VERIFICATION",
        "code": "verify(this.delegate).saveToken(null, this.request, this.response);",
        "line": 90,
        "locate": "Test Case",
        "locationContext": {
          "methodName": "saveNullDelegates",
          "methodAnnotations": [
            "@Test"
          ]
        }
      },
      {
        "type": "STUBBING",
        "code": "given(this.delegate.loadToken(this.request)).willReturn(this.token);",
        "line": 95,
        "locate": "Test Case",
        "locationContext": {
          "methodName": "loadTokenDelegates",
          "methodAnnotations": [
            "@Test"
          ]
        }
      },
      {
        "type": "VERIFICATION",
        "code": "verify(this.delegate).loadToken(this.request);",
        "line": 98,
        "locate": "Test Case",
        "locationContext": {
          "methodName": "loadTokenDelegates",
          "methodAnnotations": [
            "@Test"
          ]
        }
      },
      {
        "type": "STUBBING",
        "code": "given(this.delegate.loadToken(this.request)).willReturn(this.token);",
        "line": 103,
        "locate": "Test Case",
        "locationContext": {
          "methodName": "loadTokenWhenDeferLoadToken",
          "methodAnnotations": [
            "@Test"
          ]
        }
      },
      {
        "type": "VERIFICATION",
        "code": "verifyNoInteractions(this.delegate);",
        "line": 106,
        "locate": "Test Case",
        "locationContext": {
          "methodName": "loadTokenWhenDeferLoadToken",
          "methodAnnotations": [
            "@Test"
          ]
        }
      }
    ],
    "pattern_id": 8
  }
]