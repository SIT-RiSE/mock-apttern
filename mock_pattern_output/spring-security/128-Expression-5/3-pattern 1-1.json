[
  {
    "variableName": "ex",
    "variableType": "Expression",
    "mockedClass": "Expression",
    "isReuseableMock": false,
    "mockPattern": "Creation:\n\u2014 Local Mock Creation in Test Case\n\nStubbing:\n\u2014 Test Case\n\nVerification:\n\u2014 None",
    "classContext": {
      "packageName": "org.springframework.security.web.access.expression",
      "filePath": "C:\\java tool\\Spring\\spring-security\\web\\src\\test\\java\\org\\springframework\\security\\web\\access\\expression\\WebExpressionVoterTests.java",
      "className": "WebExpressionVoterTests"
    },
    "statements": [
      {
        "type": "DECLARATION",
        "code": "Expression ex = mock(Expression.class);",
        "line": 70,
        "locate": "Test Case",
        "locationContext": {
          "methodName": "grantsAccessIfExpressionIsTrueDeniesIfFalse",
          "methodAnnotations": [
            "@Test"
          ]
        }
      },
      {
        "type": "STUBBING",
        "code": "given(ex.getValue(ctx, Boolean.class)).willReturn(Boolean.TRUE, Boolean.FALSE);",
        "line": 80,
        "locate": "Test Case",
        "locationContext": {
          "methodName": "grantsAccessIfExpressionIsTrueDeniesIfFalse",
          "methodAnnotations": [
            "@Test"
          ]
        }
      }
    ],
    "pattern_id": 1
  }
]