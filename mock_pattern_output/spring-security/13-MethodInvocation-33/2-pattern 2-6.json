[
  {
    "variableName": "invocation",
    "variableType": "MethodInvocation",
    "mockedClass": "MethodInvocation",
    "isReuseableMock": false,
    "mockPattern": "Creation:\n\u2014 Local Mock Creation in Test Case\n\nStubbing:\n\u2014 None\n\nVerification:\n\u2014 None",
    "classContext": {
      "packageName": "org.springframework.security.authorization.method",
      "filePath": "C:\\java tool\\Spring\\spring-security\\core\\src\\test\\java\\org\\springframework\\security\\authorization\\method\\AuthorizationManagerAfterMethodInterceptorTests.java",
      "className": "AuthorizationManagerAfterMethodInterceptorTests"
    },
    "statements": [
      {
        "type": "DECLARATION",
        "code": "MethodInvocation invocation = mock(MethodInvocation.class);",
        "line": 91,
        "locate": "Test Case",
        "locationContext": {
          "methodName": "afterWhenMockSecurityContextHolderStrategyThenUses",
          "methodAnnotations": [
            "@Test"
          ]
        }
      }
    ],
    "pattern_id": 2
  },
  {
    "variableName": "invocation",
    "variableType": "MethodInvocation",
    "mockedClass": "MethodInvocation",
    "isReuseableMock": false,
    "mockPattern": "Creation:\n\u2014 Local Mock Creation in Test Case\n\nStubbing:\n\u2014 None\n\nVerification:\n\u2014 None",
    "classContext": {
      "packageName": "org.springframework.security.authorization.method",
      "filePath": "C:\\java tool\\Spring\\spring-security\\core\\src\\test\\java\\org\\springframework\\security\\authorization\\method\\AuthorizationManagerAfterMethodInterceptorTests.java",
      "className": "AuthorizationManagerAfterMethodInterceptorTests"
    },
    "statements": [
      {
        "type": "DECLARATION",
        "code": "MethodInvocation invocation = mock(MethodInvocation.class);",
        "line": 108,
        "locate": "Test Case",
        "locationContext": {
          "methodName": "afterWhenStaticSecurityContextHolderStrategyAfterConstructorThenUses",
          "methodAnnotations": [
            "@Test"
          ]
        }
      }
    ],
    "pattern_id": 2
  },
  {
    "variableName": "mockMethodInvocation",
    "variableType": "MethodInvocation",
    "mockedClass": "MethodInvocation",
    "isReuseableMock": false,
    "mockPattern": "Creation:\n\u2014 Local Mock Creation in Test Case\n\nStubbing:\n\u2014 None\n\nVerification:\n\u2014 None",
    "classContext": {
      "packageName": "org.springframework.security.authorization.method",
      "filePath": "C:\\java tool\\Spring\\spring-security\\core\\src\\test\\java\\org\\springframework\\security\\authorization\\method\\AuthorizationManagerBeforeMethodInterceptorTests.java",
      "className": "AuthorizationManagerBeforeMethodInterceptorTests"
    },
    "statements": [
      {
        "type": "DECLARATION",
        "code": "MethodInvocation mockMethodInvocation = mock(MethodInvocation.class);",
        "line": 72,
        "locate": "Test Case",
        "locationContext": {
          "methodName": "beforeWhenMockAuthorizationManagerThenCheck",
          "methodAnnotations": [
            "@Test"
          ]
        }
      }
    ],
    "pattern_id": 2
  },
  {
    "variableName": "invocation",
    "variableType": "MethodInvocation",
    "mockedClass": "MethodInvocation",
    "isReuseableMock": false,
    "mockPattern": "Creation:\n\u2014 Local Mock Creation in Test Case\n\nStubbing:\n\u2014 None\n\nVerification:\n\u2014 None",
    "classContext": {
      "packageName": "org.springframework.security.authorization.method",
      "filePath": "C:\\java tool\\Spring\\spring-security\\core\\src\\test\\java\\org\\springframework\\security\\authorization\\method\\AuthorizationManagerBeforeMethodInterceptorTests.java",
      "className": "AuthorizationManagerBeforeMethodInterceptorTests"
    },
    "statements": [
      {
        "type": "DECLARATION",
        "code": "MethodInvocation invocation = mock(MethodInvocation.class);",
        "line": 87,
        "locate": "Test Case",
        "locationContext": {
          "methodName": "beforeWhenMockSecurityContextHolderStrategyThenUses",
          "methodAnnotations": [
            "@Test"
          ]
        }
      }
    ],
    "pattern_id": 2
  },
  {
    "variableName": "invocation",
    "variableType": "MethodInvocation",
    "mockedClass": "MethodInvocation",
    "isReuseableMock": false,
    "mockPattern": "Creation:\n\u2014 Local Mock Creation in Test Case\n\nStubbing:\n\u2014 None\n\nVerification:\n\u2014 None",
    "classContext": {
      "packageName": "org.springframework.security.authorization.method",
      "filePath": "C:\\java tool\\Spring\\spring-security\\core\\src\\test\\java\\org\\springframework\\security\\authorization\\method\\AuthorizationManagerBeforeMethodInterceptorTests.java",
      "className": "AuthorizationManagerBeforeMethodInterceptorTests"
    },
    "statements": [
      {
        "type": "DECLARATION",
        "code": "MethodInvocation invocation = mock(MethodInvocation.class);",
        "line": 104,
        "locate": "Test Case",
        "locationContext": {
          "methodName": "beforeWhenStaticSecurityContextHolderStrategyAfterConstructorThenUses",
          "methodAnnotations": [
            "@Test"
          ]
        }
      }
    ],
    "pattern_id": 2
  },
  {
    "variableName": "mockMethodInvocation",
    "variableType": "MethodInvocation",
    "mockedClass": "MethodInvocation",
    "isReuseableMock": false,
    "mockPattern": "Creation:\n\u2014 Local Mock Creation in Test Case\n\nStubbing:\n\u2014 None\n\nVerification:\n\u2014 None",
    "classContext": {
      "packageName": "org.springframework.security.authorization.method",
      "filePath": "C:\\java tool\\Spring\\spring-security\\core\\src\\test\\java\\org\\springframework\\security\\authorization\\method\\AuthorizationManagerBeforeReactiveMethodInterceptorTests.java",
      "className": "AuthorizationManagerBeforeReactiveMethodInterceptorTests"
    },
    "statements": [
      {
        "type": "DECLARATION",
        "code": "MethodInvocation mockMethodInvocation = spy(new MockMethodInvocation(new Sample(), Sample.class.getDeclaredMethod(\"flux\")));",
        "line": 226,
        "locate": "Test Case",
        "locationContext": {
          "methodName": "invokeWhenCustomAuthorizationDeniedExceptionThenThrows",
          "methodAnnotations": [
            "@Test"
          ]
        }
      }
    ],
    "pattern_id": 2
  }
]