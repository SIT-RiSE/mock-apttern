[
  {
    "variableName": "extractor",
    "variableType": "BodyExtractor<Mono<OAuth2AccessTokenResponse>,ReactiveHttpInputMessage>",
    "mockedClass": "BodyExtractor<Mono<OAuth2AccessTokenResponse>,ReactiveHttpInputMessage>",
    "isReuseableMock": false,
    "mockPattern": "Creation:\n\u2014 Local Mock Creation in Test Case\n\nStubbing:\n\u2014 Test Case\n\nVerification:\n\u2014 None",
    "classContext": {
      "packageName": "org.springframework.security.oauth2.client.endpoint",
      "filePath": "C:\\java tool\\Spring\\spring-security\\oauth2\\oauth2-client\\src\\test\\java\\org\\springframework\\security\\oauth2\\client\\endpoint\\WebClientReactiveAuthorizationCodeTokenResponseClientTests.java",
      "className": "WebClientReactiveAuthorizationCodeTokenResponseClientTests"
    },
    "statements": [
      {
        "type": "DECLARATION",
        "code": "BodyExtractor<Mono<OAuth2AccessTokenResponse>, ReactiveHttpInputMessage> extractor = mock();",
        "line": 426,
        "locate": "Test Case",
        "locationContext": {
          "methodName": "getTokenResponseWhenSuccessCustomResponseThenReturnAccessTokenResponse",
          "methodAnnotations": [
            "@Test"
          ]
        }
      },
      {
        "type": "STUBBING",
        "code": "given(extractor.extract(any(), any())).willReturn(Mono.just(response));",
        "line": 428,
        "locate": "Test Case",
        "locationContext": {
          "methodName": "getTokenResponseWhenSuccessCustomResponseThenReturnAccessTokenResponse",
          "methodAnnotations": [
            "@Test"
          ]
        }
      }
    ],
    "pattern_id": 1
  },
  {
    "variableName": "extractor",
    "variableType": "BodyExtractor<Mono<OAuth2AccessTokenResponse>,ReactiveHttpInputMessage>",
    "mockedClass": "BodyExtractor<Mono<OAuth2AccessTokenResponse>,ReactiveHttpInputMessage>",
    "isReuseableMock": false,
    "mockPattern": "Creation:\n\u2014 Local Mock Creation in Test Case\n\nStubbing:\n\u2014 Test Case\n\nVerification:\n\u2014 None",
    "classContext": {
      "packageName": "org.springframework.security.oauth2.client.endpoint",
      "filePath": "C:\\java tool\\Spring\\spring-security\\oauth2\\oauth2-client\\src\\test\\java\\org\\springframework\\security\\oauth2\\client\\endpoint\\WebClientReactiveClientCredentialsTokenResponseClientTests.java",
      "className": "WebClientReactiveClientCredentialsTokenResponseClientTests"
    },
    "statements": [
      {
        "type": "DECLARATION",
        "code": "BodyExtractor<Mono<OAuth2AccessTokenResponse>, ReactiveHttpInputMessage> extractor = mock();",
        "line": 388,
        "locate": "Test Case",
        "locationContext": {
          "methodName": "getTokenResponseWhenSuccessCustomResponseThenReturnAccessTokenResponse",
          "methodAnnotations": [
            "@Test"
          ]
        }
      },
      {
        "type": "STUBBING",
        "code": "given(extractor.extract(any(), any())).willReturn(Mono.just(response));",
        "line": 390,
        "locate": "Test Case",
        "locationContext": {
          "methodName": "getTokenResponseWhenSuccessCustomResponseThenReturnAccessTokenResponse",
          "methodAnnotations": [
            "@Test"
          ]
        }
      }
    ],
    "pattern_id": 1
  },
  {
    "variableName": "extractor",
    "variableType": "BodyExtractor<Mono<OAuth2AccessTokenResponse>,ReactiveHttpInputMessage>",
    "mockedClass": "BodyExtractor<Mono<OAuth2AccessTokenResponse>,ReactiveHttpInputMessage>",
    "isReuseableMock": false,
    "mockPattern": "Creation:\n\u2014 Local Mock Creation in Test Case\n\nStubbing:\n\u2014 Test Case\n\nVerification:\n\u2014 None",
    "classContext": {
      "packageName": "org.springframework.security.oauth2.client.endpoint",
      "filePath": "C:\\java tool\\Spring\\spring-security\\oauth2\\oauth2-client\\src\\test\\java\\org\\springframework\\security\\oauth2\\client\\endpoint\\WebClientReactivePasswordTokenResponseClientTests.java",
      "className": "WebClientReactivePasswordTokenResponseClientTests"
    },
    "statements": [
      {
        "type": "DECLARATION",
        "code": "BodyExtractor<Mono<OAuth2AccessTokenResponse>, ReactiveHttpInputMessage> extractor = mock();",
        "line": 429,
        "locate": "Test Case",
        "locationContext": {
          "methodName": "getTokenResponseWhenSuccessCustomResponseThenReturnAccessTokenResponse",
          "methodAnnotations": [
            "@Test"
          ]
        }
      },
      {
        "type": "STUBBING",
        "code": "given(extractor.extract(any(), any())).willReturn(Mono.just(response));",
        "line": 431,
        "locate": "Test Case",
        "locationContext": {
          "methodName": "getTokenResponseWhenSuccessCustomResponseThenReturnAccessTokenResponse",
          "methodAnnotations": [
            "@Test"
          ]
        }
      }
    ],
    "pattern_id": 1
  },
  {
    "variableName": "extractor",
    "variableType": "BodyExtractor<Mono<OAuth2AccessTokenResponse>,ReactiveHttpInputMessage>",
    "mockedClass": "BodyExtractor<Mono<OAuth2AccessTokenResponse>,ReactiveHttpInputMessage>",
    "isReuseableMock": false,
    "mockPattern": "Creation:\n\u2014 Local Mock Creation in Test Case\n\nStubbing:\n\u2014 Test Case\n\nVerification:\n\u2014 None",
    "classContext": {
      "packageName": "org.springframework.security.oauth2.client.endpoint",
      "filePath": "C:\\java tool\\Spring\\spring-security\\oauth2\\oauth2-client\\src\\test\\java\\org\\springframework\\security\\oauth2\\client\\endpoint\\WebClientReactiveRefreshTokenTokenResponseClientTests.java",
      "className": "WebClientReactiveRefreshTokenTokenResponseClientTests"
    },
    "statements": [
      {
        "type": "DECLARATION",
        "code": "BodyExtractor<Mono<OAuth2AccessTokenResponse>, ReactiveHttpInputMessage> extractor = mock();",
        "line": 399,
        "locate": "Test Case",
        "locationContext": {
          "methodName": "getTokenResponseWhenSuccessCustomResponseThenReturnAccessTokenResponse",
          "methodAnnotations": [
            "@Test"
          ]
        }
      },
      {
        "type": "STUBBING",
        "code": "given(extractor.extract(any(), any())).willReturn(Mono.just(response));",
        "line": 401,
        "locate": "Test Case",
        "locationContext": {
          "methodName": "getTokenResponseWhenSuccessCustomResponseThenReturnAccessTokenResponse",
          "methodAnnotations": [
            "@Test"
          ]
        }
      }
    ],
    "pattern_id": 1
  }
]