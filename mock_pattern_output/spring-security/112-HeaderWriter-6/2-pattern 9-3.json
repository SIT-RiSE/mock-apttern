[
  {
    "variableName": "writer2",
    "variableType": "HeaderWriter",
    "mockedClass": "HeaderWriter",
    "isReuseableMock": "Hybrid",
    "mockPattern": "Creation:\n\u2014 Attribute Mock Creation\n\nStubbing:\n\u2014 None\n\nVerification:\n\u2014 Test Case",
    "classContext": {
      "packageName": "org.springframework.security.web.header",
      "filePath": "C:\\java tool\\Spring\\spring-security\\web\\src\\test\\java\\org\\springframework\\security\\web\\header\\HeaderWriterFilterTests.java",
      "className": "HeaderWriterFilterTests"
    },
    "statements": [
      {
        "type": "FIELD_MOCK_CREATION",
        "code": "@Mock\r\nprivate HeaderWriter writer2;",
        "line": 54,
        "locate": "Attribute",
        "locationContext": {
          "methodName": "[FieldDeclaration]",
          "methodAnnotations": [
            "@Mock"
          ]
        }
      },
      {
        "type": "VERIFICATION",
        "code": "verify(this.writer2).writeHeaders(request, response);",
        "line": 78,
        "locate": "Test Case",
        "locationContext": {
          "methodName": "additionalHeadersShouldBeAddedToTheResponse",
          "methodAnnotations": [
            "@Test"
          ]
        }
      }
    ],
    "pattern_id": 9
  },
  {
    "variableName": "writer1",
    "variableType": "HeaderWriter",
    "mockedClass": "HeaderWriter",
    "isReuseableMock": "Hybrid",
    "mockPattern": "Creation:\n\u2014 Attribute Mock Creation\n\nStubbing:\n\u2014 None\n\nVerification:\n\u2014 Test Case",
    "classContext": {
      "packageName": "org.springframework.security.web.header",
      "filePath": "C:\\java tool\\Spring\\spring-security\\web\\src\\test\\java\\org\\springframework\\security\\web\\header\\HeaderWriterFilterTests.java",
      "className": "HeaderWriterFilterTests"
    },
    "statements": [
      {
        "type": "FIELD_MOCK_CREATION",
        "code": "@Mock\r\nprivate HeaderWriter writer1;",
        "line": 51,
        "locate": "Attribute",
        "locationContext": {
          "methodName": "[FieldDeclaration]",
          "methodAnnotations": [
            "@Mock"
          ]
        }
      },
      {
        "type": "VERIFICATION",
        "code": "verify(this.writer1).writeHeaders(request, response);",
        "line": 77,
        "locate": "Test Case",
        "locationContext": {
          "methodName": "additionalHeadersShouldBeAddedToTheResponse",
          "methodAnnotations": [
            "@Test"
          ]
        }
      },
      {
        "type": "VERIFICATION",
        "code": "verifyNoMoreInteractions(HeaderWriterFilterTests.this.writer1);",
        "line": 93,
        "locate": "Test Case",
        "locationContext": {
          "methodName": "headersDelayed",
          "methodAnnotations": [
            "@Test"
          ]
        }
      },
      {
        "type": "VERIFICATION",
        "code": "verify(HeaderWriterFilterTests.this.writer1).writeHeaders(any(HttpServletRequest.class), any(HttpServletResponse.class));",
        "line": 95,
        "locate": "Test Case",
        "locationContext": {
          "methodName": "headersDelayed",
          "methodAnnotations": [
            "@Test"
          ]
        }
      },
      {
        "type": "VERIFICATION",
        "code": "verifyNoMoreInteractions(this.writer1);",
        "line": 98,
        "locate": "Test Case",
        "locationContext": {
          "methodName": "headersDelayed",
          "methodAnnotations": [
            "@Test"
          ]
        }
      },
      {
        "type": "VERIFICATION",
        "code": "verifyNoMoreInteractions(HeaderWriterFilterTests.this.writer1);",
        "line": 108,
        "locate": "Test Case",
        "locationContext": {
          "methodName": "doFilterWhenRequestContainsIncludeThenHeadersStillWritten",
          "methodAnnotations": [
            "@Test"
          ]
        }
      },
      {
        "type": "VERIFICATION",
        "code": "verify(HeaderWriterFilterTests.this.writer1).writeHeaders(any(HttpServletRequest.class), any(HttpServletResponse.class));",
        "line": 110,
        "locate": "Test Case",
        "locationContext": {
          "methodName": "doFilterWhenRequestContainsIncludeThenHeadersStillWritten",
          "methodAnnotations": [
            "@Test"
          ]
        }
      },
      {
        "type": "VERIFICATION",
        "code": "verifyNoMoreInteractions(this.writer1);",
        "line": 113,
        "locate": "Test Case",
        "locationContext": {
          "methodName": "doFilterWhenRequestContainsIncludeThenHeadersStillWritten",
          "methodAnnotations": [
            "@Test"
          ]
        }
      },
      {
        "type": "VERIFICATION",
        "code": "verify(HeaderWriterFilterTests.this.writer1).writeHeaders(any(HttpServletRequest.class), any(HttpServletResponse.class));",
        "line": 122,
        "locate": "Test Case",
        "locationContext": {
          "methodName": "headersWrittenAtBeginningOfRequest",
          "methodAnnotations": [
            "@Test"
          ]
        }
      },
      {
        "type": "VERIFICATION",
        "code": "verifyNoMoreInteractions(this.writer1);",
        "line": 124,
        "locate": "Test Case",
        "locationContext": {
          "methodName": "headersWrittenAtBeginningOfRequest",
          "methodAnnotations": [
            "@Test"
          ]
        }
      }
    ],
    "pattern_id": 9
  },
  {
    "variableName": "delegate",
    "variableType": "HeaderWriter",
    "mockedClass": "HeaderWriter",
    "isReuseableMock": "Hybrid",
    "mockPattern": "Creation:\n\u2014 Attribute Mock Creation\n\nStubbing:\n\u2014 None\n\nVerification:\n\u2014 Test Case",
    "classContext": {
      "packageName": "org.springframework.security.web.header.writers",
      "filePath": "C:\\java tool\\Spring\\spring-security\\web\\src\\test\\java\\org\\springframework\\security\\web\\header\\writers\\DelegatingRequestMatcherHeaderWriterTests.java",
      "className": "DelegatingRequestMatcherHeaderWriterTests"
    },
    "statements": [
      {
        "type": "FIELD_MOCK_CREATION",
        "code": "@Mock\r\nprivate HeaderWriter delegate;",
        "line": 45,
        "locate": "Attribute",
        "locationContext": {
          "methodName": "[FieldDeclaration]",
          "methodAnnotations": [
            "@Mock"
          ]
        }
      },
      {
        "type": "VERIFICATION",
        "code": "verify(this.delegate).writeHeaders(this.request, this.response);",
        "line": 77,
        "locate": "Test Case",
        "locationContext": {
          "methodName": "writeHeadersOnMatch",
          "methodAnnotations": [
            "@Test"
          ]
        }
      },
      {
        "type": "VERIFICATION",
        "code": "verify(this.delegate, times(0)).writeHeaders(this.request, this.response);",
        "line": 84,
        "locate": "Test Case",
        "locationContext": {
          "methodName": "writeHeadersOnNoMatch",
          "methodAnnotations": [
            "@Test"
          ]
        }
      }
    ],
    "pattern_id": 9
  }
]