[
  {
    "variableName": "headerWriter",
    "variableType": "HeaderWriter",
    "mockedClass": "HeaderWriter",
    "isReuseableMock": "Fully Localized",
    "mockPattern": "Creation:\n\u2014 Local Mock Creation in Test Case\n\nStubbing:\n\u2014 None\n\nVerification:\n\u2014 Test Case",
    "classContext": {
      "packageName": "org.springframework.security.web.authentication.logout",
      "filePath": "C:\\java tool\\Spring\\spring-security\\web\\src\\test\\java\\org\\springframework\\security\\web\\authentication\\logout\\HeaderWriterLogoutHandlerTests.java",
      "className": "HeaderWriterLogoutHandlerTests"
    },
    "statements": [
      {
        "type": "DECLARATION",
        "code": "HeaderWriter headerWriter = mock(HeaderWriter.class);",
        "line": 56,
        "locate": "Test Case",
        "locationContext": {
          "methodName": "logoutWhenHasHeaderWriterThenInvoked",
          "methodAnnotations": [
            "@Test"
          ]
        }
      },
      {
        "type": "VERIFICATION",
        "code": "verify(headerWriter).writeHeaders(this.request, this.response);",
        "line": 59,
        "locate": "Test Case",
        "locationContext": {
          "methodName": "logoutWhenHasHeaderWriterThenInvoked",
          "methodAnnotations": [
            "@Test"
          ]
        }
      }
    ],
    "pattern_id": 5
  },
  {
    "variableName": "one",
    "variableType": "HeaderWriter",
    "mockedClass": "HeaderWriter",
    "isReuseableMock": "Fully Localized",
    "mockPattern": "Creation:\n\u2014 Local Mock Creation in Test Case\n\nStubbing:\n\u2014 None\n\nVerification:\n\u2014 Test Case",
    "classContext": {
      "packageName": "org.springframework.security.web.header.writers",
      "filePath": "C:\\java tool\\Spring\\spring-security\\web\\src\\test\\java\\org\\springframework\\security\\web\\header\\writers\\CompositeHeaderWriterTests.java",
      "className": "CompositeHeaderWriterTests"
    },
    "statements": [
      {
        "type": "DECLARATION",
        "code": "HeaderWriter one = mock(HeaderWriter.class);",
        "line": 44,
        "locate": "Test Case",
        "locationContext": {
          "methodName": "writeHeadersWhenConfiguredWithDelegatesThenInvokesEach",
          "methodAnnotations": [
            "@Test"
          ]
        }
      },
      {
        "type": "VERIFICATION",
        "code": "verify(one).writeHeaders(request, response);",
        "line": 48,
        "locate": "Test Case",
        "locationContext": {
          "methodName": "writeHeadersWhenConfiguredWithDelegatesThenInvokesEach",
          "methodAnnotations": [
            "@Test"
          ]
        }
      }
    ],
    "pattern_id": 5
  },
  {
    "variableName": "two",
    "variableType": "HeaderWriter",
    "mockedClass": "HeaderWriter",
    "isReuseableMock": "Fully Localized",
    "mockPattern": "Creation:\n\u2014 Local Mock Creation in Test Case\n\nStubbing:\n\u2014 None\n\nVerification:\n\u2014 Test Case",
    "classContext": {
      "packageName": "org.springframework.security.web.header.writers",
      "filePath": "C:\\java tool\\Spring\\spring-security\\web\\src\\test\\java\\org\\springframework\\security\\web\\header\\writers\\CompositeHeaderWriterTests.java",
      "className": "CompositeHeaderWriterTests"
    },
    "statements": [
      {
        "type": "DECLARATION",
        "code": "HeaderWriter two = mock(HeaderWriter.class);",
        "line": 45,
        "locate": "Test Case",
        "locationContext": {
          "methodName": "writeHeadersWhenConfiguredWithDelegatesThenInvokesEach",
          "methodAnnotations": [
            "@Test"
          ]
        }
      },
      {
        "type": "VERIFICATION",
        "code": "verify(two).writeHeaders(request, response);",
        "line": 49,
        "locate": "Test Case",
        "locationContext": {
          "methodName": "writeHeadersWhenConfiguredWithDelegatesThenInvokesEach",
          "methodAnnotations": [
            "@Test"
          ]
        }
      }
    ],
    "pattern_id": 5
  }
]