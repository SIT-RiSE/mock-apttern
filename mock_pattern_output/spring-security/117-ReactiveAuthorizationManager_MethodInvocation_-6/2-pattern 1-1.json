[
  {
    "variableName": "manager",
    "variableType": "ReactiveAuthorizationManager<MethodInvocation>",
    "mockedClass": "ReactiveAuthorizationManager",
    "isReuseableMock": false,
    "mockPattern": "Creation:\n\u2014 Local Mock Creation in Test Case\n\nStubbing:\n\u2014 Test Case\n\nVerification:\n\u2014 None",
    "classContext": {
      "packageName": "org.springframework.security.authorization.method",
      "filePath": "C:\\java tool\\Spring\\spring-security\\core\\src\\test\\java\\org\\springframework\\security\\authorization\\method\\AuthorizationManagerBeforeReactiveMethodInterceptorTests.java",
      "className": "AuthorizationManagerBeforeReactiveMethodInterceptorTests"
    },
    "statements": [
      {
        "type": "DECLARATION",
        "code": "ReactiveAuthorizationManager<MethodInvocation> manager = mock(ReactiveAuthorizationManager.class);",
        "line": 228,
        "locate": "Test Case",
        "locationContext": {
          "methodName": "invokeWhenCustomAuthorizationDeniedExceptionThenThrows",
          "methodAnnotations": [
            "@Test"
          ]
        }
      },
      {
        "type": "STUBBING",
        "code": "given(manager.check(any(), any())).willThrow(new MyAuthzDeniedException(\"denied\", new AuthorizationDecision(false)));",
        "line": 229,
        "locate": "Test Case",
        "locationContext": {
          "methodName": "invokeWhenCustomAuthorizationDeniedExceptionThenThrows",
          "methodAnnotations": [
            "@Test"
          ]
        }
      },
      {
        "type": "STUBBING",
        "code": "given(manager.authorize(any(), any())).willCallRealMethod();",
        "line": 231,
        "locate": "Test Case",
        "locationContext": {
          "methodName": "invokeWhenCustomAuthorizationDeniedExceptionThenThrows",
          "methodAnnotations": [
            "@Test"
          ]
        }
      }
    ],
    "pattern_id": 1
  }
]