[
  {
    "variableName": "observation",
    "variableType": "Observation",
    "mockedClass": "Observation",
    "isReuseableMock": false,
    "mockPattern": "Creation:\n\u2014 Local Mock Creation in Test Case\n\nStubbing:\n\u2014 None\n\nVerification:\n\u2014 Test Case",
    "classContext": {
      "packageName": "org.springframework.security.core.context",
      "filePath": "C:\\java tool\\Spring\\spring-security\\core\\src\\test\\java\\org\\springframework\\security\\core\\context\\ObservationSecurityContextChangedListenerTests.java",
      "className": "ObservationSecurityContextChangedListenerTests"
    },
    "statements": [
      {
        "type": "DECLARATION",
        "code": "Observation observation = mock(Observation.class);",
        "line": 62,
        "locate": "Test Case",
        "locationContext": {
          "methodName": "securityContextChangedWhenClearedEventThenAddsClearEventToObservation",
          "methodAnnotations": [
            "@Test"
          ]
        }
      },
      {
        "type": "VERIFICATION",
        "code": "verify(observation).event(event.capture());",
        "line": 68,
        "locate": "Test Case",
        "locationContext": {
          "methodName": "securityContextChangedWhenClearedEventThenAddsClearEventToObservation",
          "methodAnnotations": [
            "@Test"
          ]
        }
      }
    ],
    "pattern_id": 5
  },
  {
    "variableName": "observation",
    "variableType": "Observation",
    "mockedClass": "Observation",
    "isReuseableMock": false,
    "mockPattern": "Creation:\n\u2014 Local Mock Creation in Test Case\n\nStubbing:\n\u2014 None\n\nVerification:\n\u2014 Test Case",
    "classContext": {
      "packageName": "org.springframework.security.core.context",
      "filePath": "C:\\java tool\\Spring\\spring-security\\core\\src\\test\\java\\org\\springframework\\security\\core\\context\\ObservationSecurityContextChangedListenerTests.java",
      "className": "ObservationSecurityContextChangedListenerTests"
    },
    "statements": [
      {
        "type": "DECLARATION",
        "code": "Observation observation = mock(Observation.class);",
        "line": 76,
        "locate": "Test Case",
        "locationContext": {
          "methodName": "securityContextChangedWhenNoChangeThenNoEventAddedToObservation",
          "methodAnnotations": [
            "@Test"
          ]
        }
      },
      {
        "type": "VERIFICATION",
        "code": "verifyNoInteractions(observation);",
        "line": 79,
        "locate": "Test Case",
        "locationContext": {
          "methodName": "securityContextChangedWhenNoChangeThenNoEventAddedToObservation",
          "methodAnnotations": [
            "@Test"
          ]
        }
      }
    ],
    "pattern_id": 5
  },
  {
    "variableName": "observation",
    "variableType": "Observation",
    "mockedClass": "Observation",
    "isReuseableMock": false,
    "mockPattern": "Creation:\n\u2014 Local Mock Creation in Test Case\n\nStubbing:\n\u2014 None\n\nVerification:\n\u2014 Test Case",
    "classContext": {
      "packageName": "org.springframework.security.core.context",
      "filePath": "C:\\java tool\\Spring\\spring-security\\core\\src\\test\\java\\org\\springframework\\security\\core\\context\\ObservationSecurityContextChangedListenerTests.java",
      "className": "ObservationSecurityContextChangedListenerTests"
    },
    "statements": [
      {
        "type": "DECLARATION",
        "code": "Observation observation = mock(Observation.class);",
        "line": 84,
        "locate": "Test Case",
        "locationContext": {
          "methodName": "securityContextChangedWhenChangedEventThenAddsChangeEventToObservation",
          "methodAnnotations": [
            "@Test"
          ]
        }
      },
      {
        "type": "VERIFICATION",
        "code": "verify(observation).event(event.capture());",
        "line": 88,
        "locate": "Test Case",
        "locationContext": {
          "methodName": "securityContextChangedWhenChangedEventThenAddsChangeEventToObservation",
          "methodAnnotations": [
            "@Test"
          ]
        }
      }
    ],
    "pattern_id": 5
  },
  {
    "variableName": "observation",
    "variableType": "Observation",
    "mockedClass": "Observation",
    "isReuseableMock": false,
    "mockPattern": "Creation:\n\u2014 Local Mock Creation in Test Case\n\nStubbing:\n\u2014 None\n\nVerification:\n\u2014 Test Case",
    "classContext": {
      "packageName": "org.springframework.security.core.context",
      "filePath": "C:\\java tool\\Spring\\spring-security\\core\\src\\test\\java\\org\\springframework\\security\\core\\context\\ObservationSecurityContextChangedListenerTests.java",
      "className": "ObservationSecurityContextChangedListenerTests"
    },
    "statements": [
      {
        "type": "DECLARATION",
        "code": "Observation observation = mock(Observation.class);",
        "line": 95,
        "locate": "Test Case",
        "locationContext": {
          "methodName": "securityContextChangedWhenCreatedEventThenAddsCreatedEventToObservation",
          "methodAnnotations": [
            "@Test"
          ]
        }
      },
      {
        "type": "VERIFICATION",
        "code": "verify(observation).event(event.capture());",
        "line": 99,
        "locate": "Test Case",
        "locationContext": {
          "methodName": "securityContextChangedWhenCreatedEventThenAddsCreatedEventToObservation",
          "methodAnnotations": [
            "@Test"
          ]
        }
      }
    ],
    "pattern_id": 5
  }
]