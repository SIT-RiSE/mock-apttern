[
  {
    "variableName": "authorizedClient",
    "variableType": "OAuth2AuthorizedClient",
    "mockedClass": "OAuth2AuthorizedClient",
    "isReuseableMock": "Fully Localized",
    "mockPattern": "Creation:\n\u2014 Local Mock Creation in Test Case\n\nStubbing:\n\u2014 None\n\nVerification:\n\u2014 None",
    "classContext": {
      "packageName": "org.springframework.security.oauth2.client",
      "filePath": "C:\\java tool\\Spring\\spring-security\\oauth2\\oauth2-client\\src\\test\\java\\org\\springframework\\security\\oauth2\\client\\InMemoryOAuth2AuthorizedClientServiceTests.java",
      "className": "InMemoryOAuth2AuthorizedClientServiceTests"
    },
    "statements": [
      {
        "type": "DECLARATION",
        "code": "OAuth2AuthorizedClient authorizedClient = new OAuth2AuthorizedClient(this.registration1, this.principalName1, mock(OAuth2AccessToken.class));",
        "line": 122,
        "locate": "Test Case",
        "locationContext": {
          "methodName": "loadAuthorizedClientWhenClientRegistrationFoundAndAssociatedToPrincipalThenReturnAuthorizedClient",
          "methodAnnotations": [
            "@Test"
          ]
        }
      }
    ],
    "pattern_id": 2
  },
  {
    "variableName": "authorizedClient",
    "variableType": "OAuth2AuthorizedClient",
    "mockedClass": "OAuth2AuthorizedClient",
    "isReuseableMock": "Fully Localized",
    "mockPattern": "Creation:\n\u2014 Local Mock Creation in Test Case\n\nStubbing:\n\u2014 None\n\nVerification:\n\u2014 None",
    "classContext": {
      "packageName": "org.springframework.security.oauth2.client",
      "filePath": "C:\\java tool\\Spring\\spring-security\\oauth2\\oauth2-client\\src\\test\\java\\org\\springframework\\security\\oauth2\\client\\InMemoryOAuth2AuthorizedClientServiceTests.java",
      "className": "InMemoryOAuth2AuthorizedClientServiceTests"
    },
    "statements": [
      {
        "type": "DECLARATION",
        "code": "OAuth2AuthorizedClient authorizedClient = new OAuth2AuthorizedClient(this.registration3, this.principalName2, mock(OAuth2AccessToken.class));",
        "line": 146,
        "locate": "Test Case",
        "locationContext": {
          "methodName": "saveAuthorizedClientWhenSavedThenCanLoad",
          "methodAnnotations": [
            "@Test"
          ]
        }
      }
    ],
    "pattern_id": 2
  },
  {
    "variableName": "authorizedClient",
    "variableType": "OAuth2AuthorizedClient",
    "mockedClass": "OAuth2AuthorizedClient",
    "isReuseableMock": "Fully Localized",
    "mockPattern": "Creation:\n\u2014 Local Mock Creation in Test Case\n\nStubbing:\n\u2014 None\n\nVerification:\n\u2014 None",
    "classContext": {
      "packageName": "org.springframework.security.oauth2.client",
      "filePath": "C:\\java tool\\Spring\\spring-security\\oauth2\\oauth2-client\\src\\test\\java\\org\\springframework\\security\\oauth2\\client\\InMemoryOAuth2AuthorizedClientServiceTests.java",
      "className": "InMemoryOAuth2AuthorizedClientServiceTests"
    },
    "statements": [
      {
        "type": "DECLARATION",
        "code": "OAuth2AuthorizedClient authorizedClient = new OAuth2AuthorizedClient(this.registration2, this.principalName2, mock(OAuth2AccessToken.class));",
        "line": 170,
        "locate": "Test Case",
        "locationContext": {
          "methodName": "removeAuthorizedClientWhenSavedThenRemoved",
          "methodAnnotations": [
            "@Test"
          ]
        }
      }
    ],
    "pattern_id": 2
  },
  {
    "variableName": "authorizedClient",
    "variableType": "OAuth2AuthorizedClient",
    "mockedClass": "OAuth2AuthorizedClient",
    "isReuseableMock": "Fully Localized",
    "mockPattern": "Creation:\n\u2014 Local Mock Creation in Test Case\n\nStubbing:\n\u2014 None\n\nVerification:\n\u2014 None",
    "classContext": {
      "packageName": "org.springframework.security.oauth2.client.web",
      "filePath": "C:\\java tool\\Spring\\spring-security\\oauth2\\oauth2-client\\src\\test\\java\\org\\springframework\\security\\oauth2\\client\\web\\AuthenticatedPrincipalOAuth2AuthorizedClientRepositoryTests.java",
      "className": "AuthenticatedPrincipalOAuth2AuthorizedClientRepositoryTests"
    },
    "statements": [
      {
        "type": "DECLARATION",
        "code": "OAuth2AuthorizedClient authorizedClient = mock(OAuth2AuthorizedClient.class);",
        "line": 98,
        "locate": "Test Case",
        "locationContext": {
          "methodName": "saveAuthorizedClientWhenAuthenticatedPrincipalThenSaveToService",
          "methodAnnotations": [
            "@Test"
          ]
        }
      }
    ],
    "pattern_id": 2
  },
  {
    "variableName": "authorizedClient",
    "variableType": "OAuth2AuthorizedClient",
    "mockedClass": "OAuth2AuthorizedClient",
    "isReuseableMock": "Fully Localized",
    "mockPattern": "Creation:\n\u2014 Local Mock Creation in Test Case\n\nStubbing:\n\u2014 None\n\nVerification:\n\u2014 None",
    "classContext": {
      "packageName": "org.springframework.security.oauth2.client.web",
      "filePath": "C:\\java tool\\Spring\\spring-security\\oauth2\\oauth2-client\\src\\test\\java\\org\\springframework\\security\\oauth2\\client\\web\\AuthenticatedPrincipalOAuth2AuthorizedClientRepositoryTests.java",
      "className": "AuthenticatedPrincipalOAuth2AuthorizedClientRepositoryTests"
    },
    "statements": [
      {
        "type": "DECLARATION",
        "code": "OAuth2AuthorizedClient authorizedClient = mock(OAuth2AuthorizedClient.class);",
        "line": 107,
        "locate": "Test Case",
        "locationContext": {
          "methodName": "saveAuthorizedClientWhenAnonymousPrincipalThenSaveToAnonymousRepository",
          "methodAnnotations": [
            "@Test"
          ]
        }
      }
    ],
    "pattern_id": 2
  },
  {
    "variableName": "authorizedClient",
    "variableType": "OAuth2AuthorizedClient",
    "mockedClass": "OAuth2AuthorizedClient",
    "isReuseableMock": "Fully Localized",
    "mockPattern": "Creation:\n\u2014 Local Mock Creation in Test Case\n\nStubbing:\n\u2014 None\n\nVerification:\n\u2014 None",
    "classContext": {
      "packageName": "org.springframework.security.oauth2.client.web",
      "filePath": "C:\\java tool\\Spring\\spring-security\\oauth2\\oauth2-client\\src\\test\\java\\org\\springframework\\security\\oauth2\\client\\web\\HttpSessionOAuth2AuthorizedClientRepositoryTests.java",
      "className": "HttpSessionOAuth2AuthorizedClientRepositoryTests"
    },
    "statements": [
      {
        "type": "DECLARATION",
        "code": "OAuth2AuthorizedClient authorizedClient = new OAuth2AuthorizedClient(this.registration1, this.principalName1, mock(OAuth2AccessToken.class));",
        "line": 91,
        "locate": "Test Case",
        "locationContext": {
          "methodName": "loadAuthorizedClientWhenSavedThenReturnAuthorizedClient",
          "methodAnnotations": [
            "@Test"
          ]
        }
      }
    ],
    "pattern_id": 2
  },
  {
    "variableName": "authorizedClient",
    "variableType": "OAuth2AuthorizedClient",
    "mockedClass": "OAuth2AuthorizedClient",
    "isReuseableMock": "Fully Localized",
    "mockPattern": "Creation:\n\u2014 Local Mock Creation in Test Case\n\nStubbing:\n\u2014 None\n\nVerification:\n\u2014 None",
    "classContext": {
      "packageName": "org.springframework.security.oauth2.client.web",
      "filePath": "C:\\java tool\\Spring\\spring-security\\oauth2\\oauth2-client\\src\\test\\java\\org\\springframework\\security\\oauth2\\client\\web\\HttpSessionOAuth2AuthorizedClientRepositoryTests.java",
      "className": "HttpSessionOAuth2AuthorizedClientRepositoryTests"
    },
    "statements": [
      {
        "type": "DECLARATION",
        "code": "OAuth2AuthorizedClient authorizedClient = new OAuth2AuthorizedClient(this.registration2, this.principalName1, mock(OAuth2AccessToken.class));",
        "line": 107,
        "locate": "Test Case",
        "locationContext": {
          "methodName": "saveAuthorizedClientWhenAuthenticationIsNullThenExceptionNotThrown",
          "methodAnnotations": [
            "@Test"
          ]
        }
      }
    ],
    "pattern_id": 2
  },
  {
    "variableName": "authorizedClient",
    "variableType": "OAuth2AuthorizedClient",
    "mockedClass": "OAuth2AuthorizedClient",
    "isReuseableMock": "Fully Localized",
    "mockPattern": "Creation:\n\u2014 Local Mock Creation in Test Case\n\nStubbing:\n\u2014 None\n\nVerification:\n\u2014 None",
    "classContext": {
      "packageName": "org.springframework.security.oauth2.client.web",
      "filePath": "C:\\java tool\\Spring\\spring-security\\oauth2\\oauth2-client\\src\\test\\java\\org\\springframework\\security\\oauth2\\client\\web\\HttpSessionOAuth2AuthorizedClientRepositoryTests.java",
      "className": "HttpSessionOAuth2AuthorizedClientRepositoryTests"
    },
    "statements": [
      {
        "type": "DECLARATION",
        "code": "OAuth2AuthorizedClient authorizedClient = new OAuth2AuthorizedClient(this.registration2, this.principalName1, mock(OAuth2AccessToken.class));",
        "line": 114,
        "locate": "Test Case",
        "locationContext": {
          "methodName": "saveAuthorizedClientWhenRequestIsNullThenThrowIllegalArgumentException",
          "methodAnnotations": [
            "@Test"
          ]
        }
      }
    ],
    "pattern_id": 2
  },
  {
    "variableName": "authorizedClient",
    "variableType": "OAuth2AuthorizedClient",
    "mockedClass": "OAuth2AuthorizedClient",
    "isReuseableMock": "Fully Localized",
    "mockPattern": "Creation:\n\u2014 Local Mock Creation in Test Case\n\nStubbing:\n\u2014 None\n\nVerification:\n\u2014 None",
    "classContext": {
      "packageName": "org.springframework.security.oauth2.client.web",
      "filePath": "C:\\java tool\\Spring\\spring-security\\oauth2\\oauth2-client\\src\\test\\java\\org\\springframework\\security\\oauth2\\client\\web\\HttpSessionOAuth2AuthorizedClientRepositoryTests.java",
      "className": "HttpSessionOAuth2AuthorizedClientRepositoryTests"
    },
    "statements": [
      {
        "type": "DECLARATION",
        "code": "OAuth2AuthorizedClient authorizedClient = new OAuth2AuthorizedClient(this.registration2, this.principalName1, mock(OAuth2AccessToken.class));",
        "line": 122,
        "locate": "Test Case",
        "locationContext": {
          "methodName": "saveAuthorizedClientWhenResponseIsNullThenThrowIllegalArgumentException",
          "methodAnnotations": [
            "@Test"
          ]
        }
      }
    ],
    "pattern_id": 2
  },
  {
    "variableName": "authorizedClient",
    "variableType": "OAuth2AuthorizedClient",
    "mockedClass": "OAuth2AuthorizedClient",
    "isReuseableMock": "Fully Localized",
    "mockPattern": "Creation:\n\u2014 Local Mock Creation in Test Case\n\nStubbing:\n\u2014 None\n\nVerification:\n\u2014 None",
    "classContext": {
      "packageName": "org.springframework.security.oauth2.client.web",
      "filePath": "C:\\java tool\\Spring\\spring-security\\oauth2\\oauth2-client\\src\\test\\java\\org\\springframework\\security\\oauth2\\client\\web\\HttpSessionOAuth2AuthorizedClientRepositoryTests.java",
      "className": "HttpSessionOAuth2AuthorizedClientRepositoryTests"
    },
    "statements": [
      {
        "type": "DECLARATION",
        "code": "OAuth2AuthorizedClient authorizedClient = new OAuth2AuthorizedClient(this.registration2, this.principalName1, mock(OAuth2AccessToken.class));",
        "line": 130,
        "locate": "Test Case",
        "locationContext": {
          "methodName": "saveAuthorizedClientWhenSavedThenSavedToSession",
          "methodAnnotations": [
            "@Test"
          ]
        }
      }
    ],
    "pattern_id": 2
  },
  {
    "variableName": "authorizedClient1",
    "variableType": "OAuth2AuthorizedClient",
    "mockedClass": "OAuth2AuthorizedClient",
    "isReuseableMock": "Fully Localized",
    "mockPattern": "Creation:\n\u2014 Local Mock Creation in Test Case\n\nStubbing:\n\u2014 None\n\nVerification:\n\u2014 None",
    "classContext": {
      "packageName": "org.springframework.security.oauth2.client.web",
      "filePath": "C:\\java tool\\Spring\\spring-security\\oauth2\\oauth2-client\\src\\test\\java\\org\\springframework\\security\\oauth2\\client\\web\\HttpSessionOAuth2AuthorizedClientRepositoryTests.java",
      "className": "HttpSessionOAuth2AuthorizedClientRepositoryTests"
    },
    "statements": [
      {
        "type": "DECLARATION",
        "code": "OAuth2AuthorizedClient authorizedClient1 = new OAuth2AuthorizedClient(this.registration1, this.principalName1, mock(OAuth2AccessToken.class));",
        "line": 173,
        "locate": "Test Case",
        "locationContext": {
          "methodName": "removeAuthorizedClientWhenClient1SavedAndClient2RemovedThenClient1NotRemoved",
          "methodAnnotations": [
            "@Test"
          ]
        }
      }
    ],
    "pattern_id": 2
  },
  {
    "variableName": "authorizedClient",
    "variableType": "OAuth2AuthorizedClient",
    "mockedClass": "OAuth2AuthorizedClient",
    "isReuseableMock": "Fully Localized",
    "mockPattern": "Creation:\n\u2014 Local Mock Creation in Test Case\n\nStubbing:\n\u2014 None\n\nVerification:\n\u2014 None",
    "classContext": {
      "packageName": "org.springframework.security.oauth2.client.web",
      "filePath": "C:\\java tool\\Spring\\spring-security\\oauth2\\oauth2-client\\src\\test\\java\\org\\springframework\\security\\oauth2\\client\\web\\HttpSessionOAuth2AuthorizedClientRepositoryTests.java",
      "className": "HttpSessionOAuth2AuthorizedClientRepositoryTests"
    },
    "statements": [
      {
        "type": "DECLARATION",
        "code": "OAuth2AuthorizedClient authorizedClient = new OAuth2AuthorizedClient(this.registration2, this.principalName1, mock(OAuth2AccessToken.class));",
        "line": 186,
        "locate": "Test Case",
        "locationContext": {
          "methodName": "removeAuthorizedClientWhenSavedThenRemoved",
          "methodAnnotations": [
            "@Test"
          ]
        }
      }
    ],
    "pattern_id": 2
  },
  {
    "variableName": "authorizedClient",
    "variableType": "OAuth2AuthorizedClient",
    "mockedClass": "OAuth2AuthorizedClient",
    "isReuseableMock": "Fully Localized",
    "mockPattern": "Creation:\n\u2014 Local Mock Creation in Test Case\n\nStubbing:\n\u2014 None\n\nVerification:\n\u2014 None",
    "classContext": {
      "packageName": "org.springframework.security.oauth2.client.web",
      "filePath": "C:\\java tool\\Spring\\spring-security\\oauth2\\oauth2-client\\src\\test\\java\\org\\springframework\\security\\oauth2\\client\\web\\HttpSessionOAuth2AuthorizedClientRepositoryTests.java",
      "className": "HttpSessionOAuth2AuthorizedClientRepositoryTests"
    },
    "statements": [
      {
        "type": "DECLARATION",
        "code": "OAuth2AuthorizedClient authorizedClient = new OAuth2AuthorizedClient(this.registration1, this.principalName1, mock(OAuth2AccessToken.class));",
        "line": 200,
        "locate": "Test Case",
        "locationContext": {
          "methodName": "removeAuthorizedClientWhenSavedThenRemovedFromSession",
          "methodAnnotations": [
            "@Test"
          ]
        }
      }
    ],
    "pattern_id": 2
  },
  {
    "variableName": "authorizedClient2",
    "variableType": "OAuth2AuthorizedClient",
    "mockedClass": "OAuth2AuthorizedClient",
    "isReuseableMock": "Fully Localized",
    "mockPattern": "Creation:\n\u2014 Local Mock Creation in Test Case\n\nStubbing:\n\u2014 None\n\nVerification:\n\u2014 None",
    "classContext": {
      "packageName": "org.springframework.security.oauth2.client.web",
      "filePath": "C:\\java tool\\Spring\\spring-security\\oauth2\\oauth2-client\\src\\test\\java\\org\\springframework\\security\\oauth2\\client\\web\\HttpSessionOAuth2AuthorizedClientRepositoryTests.java",
      "className": "HttpSessionOAuth2AuthorizedClientRepositoryTests"
    },
    "statements": [
      {
        "type": "DECLARATION",
        "code": "OAuth2AuthorizedClient authorizedClient2 = new OAuth2AuthorizedClient(this.registration2, this.principalName1, mock(OAuth2AccessToken.class));",
        "line": 219,
        "locate": "Test Case",
        "locationContext": {
          "methodName": "removeAuthorizedClientWhenClient1Client2SavedAndClient1RemovedThenClient2NotRemoved",
          "methodAnnotations": [
            "@Test"
          ]
        }
      }
    ],
    "pattern_id": 2
  },
  {
    "variableName": "authorizedClient1",
    "variableType": "OAuth2AuthorizedClient",
    "mockedClass": "OAuth2AuthorizedClient",
    "isReuseableMock": "Fully Localized",
    "mockPattern": "Creation:\n\u2014 Local Mock Creation in Test Case\n\nStubbing:\n\u2014 None\n\nVerification:\n\u2014 None",
    "classContext": {
      "packageName": "org.springframework.security.oauth2.client.web",
      "filePath": "C:\\java tool\\Spring\\spring-security\\oauth2\\oauth2-client\\src\\test\\java\\org\\springframework\\security\\oauth2\\client\\web\\HttpSessionOAuth2AuthorizedClientRepositoryTests.java",
      "className": "HttpSessionOAuth2AuthorizedClientRepositoryTests"
    },
    "statements": [
      {
        "type": "DECLARATION",
        "code": "OAuth2AuthorizedClient authorizedClient1 = new OAuth2AuthorizedClient(this.registration1, this.principalName1, mock(OAuth2AccessToken.class));",
        "line": 216,
        "locate": "Test Case",
        "locationContext": {
          "methodName": "removeAuthorizedClientWhenClient1Client2SavedAndClient1RemovedThenClient2NotRemoved",
          "methodAnnotations": [
            "@Test"
          ]
        }
      }
    ],
    "pattern_id": 2
  },
  {
    "variableName": "authorizedClient",
    "variableType": "OAuth2AuthorizedClient",
    "mockedClass": "OAuth2AuthorizedClient",
    "isReuseableMock": "Fully Localized",
    "mockPattern": "Creation:\n\u2014 Local Mock Creation in Test Case\n\nStubbing:\n\u2014 None\n\nVerification:\n\u2014 None",
    "classContext": {
      "packageName": "org.springframework.security.oauth2.client.web.server",
      "filePath": "C:\\java tool\\Spring\\spring-security\\oauth2\\oauth2-client\\src\\test\\java\\org\\springframework\\security\\oauth2\\client\\web\\server\\AuthenticatedPrincipalServerOAuth2AuthorizedClientRepositoryTests.java",
      "className": "AuthenticatedPrincipalServerOAuth2AuthorizedClientRepositoryTests"
    },
    "statements": [
      {
        "type": "DECLARATION",
        "code": "OAuth2AuthorizedClient authorizedClient = mock(OAuth2AuthorizedClient.class);",
        "line": 102,
        "locate": "Test Case",
        "locationContext": {
          "methodName": "saveAuthorizedClientWhenAuthenticatedPrincipalThenSaveToService",
          "methodAnnotations": [
            "@Test"
          ]
        }
      }
    ],
    "pattern_id": 2
  },
  {
    "variableName": "authorizedClient",
    "variableType": "OAuth2AuthorizedClient",
    "mockedClass": "OAuth2AuthorizedClient",
    "isReuseableMock": "Fully Localized",
    "mockPattern": "Creation:\n\u2014 Local Mock Creation in Test Case\n\nStubbing:\n\u2014 None\n\nVerification:\n\u2014 None",
    "classContext": {
      "packageName": "org.springframework.security.oauth2.client.web.server",
      "filePath": "C:\\java tool\\Spring\\spring-security\\oauth2\\oauth2-client\\src\\test\\java\\org\\springframework\\security\\oauth2\\client\\web\\server\\AuthenticatedPrincipalServerOAuth2AuthorizedClientRepositoryTests.java",
      "className": "AuthenticatedPrincipalServerOAuth2AuthorizedClientRepositoryTests"
    },
    "statements": [
      {
        "type": "DECLARATION",
        "code": "OAuth2AuthorizedClient authorizedClient = mock(OAuth2AuthorizedClient.class);",
        "line": 112,
        "locate": "Test Case",
        "locationContext": {
          "methodName": "saveAuthorizedClientWhenAnonymousPrincipalThenSaveToAnonymousRepository",
          "methodAnnotations": [
            "@Test"
          ]
        }
      }
    ],
    "pattern_id": 2
  },
  {
    "variableName": "authorizedClient",
    "variableType": "OAuth2AuthorizedClient",
    "mockedClass": "OAuth2AuthorizedClient",
    "isReuseableMock": "Fully Localized",
    "mockPattern": "Creation:\n\u2014 Local Mock Creation in Test Case\n\nStubbing:\n\u2014 None\n\nVerification:\n\u2014 None",
    "classContext": {
      "packageName": "org.springframework.security.oauth2.client.web.server",
      "filePath": "C:\\java tool\\Spring\\spring-security\\oauth2\\oauth2-client\\src\\test\\java\\org\\springframework\\security\\oauth2\\client\\web\\server\\WebSessionServerOAuth2AuthorizedClientRepositoryTests.java",
      "className": "WebSessionServerOAuth2AuthorizedClientRepositoryTests"
    },
    "statements": [
      {
        "type": "DECLARATION",
        "code": "OAuth2AuthorizedClient authorizedClient = new OAuth2AuthorizedClient(this.registration1, this.principalName1, mock(OAuth2AccessToken.class));",
        "line": 83,
        "locate": "Test Case",
        "locationContext": {
          "methodName": "loadAuthorizedClientWhenSavedThenReturnAuthorizedClient",
          "methodAnnotations": [
            "@Test"
          ]
        }
      }
    ],
    "pattern_id": 2
  },
  {
    "variableName": "authorizedClient",
    "variableType": "OAuth2AuthorizedClient",
    "mockedClass": "OAuth2AuthorizedClient",
    "isReuseableMock": "Fully Localized",
    "mockPattern": "Creation:\n\u2014 Local Mock Creation in Test Case\n\nStubbing:\n\u2014 None\n\nVerification:\n\u2014 None",
    "classContext": {
      "packageName": "org.springframework.security.oauth2.client.web.server",
      "filePath": "C:\\java tool\\Spring\\spring-security\\oauth2\\oauth2-client\\src\\test\\java\\org\\springframework\\security\\oauth2\\client\\web\\server\\WebSessionServerOAuth2AuthorizedClientRepositoryTests.java",
      "className": "WebSessionServerOAuth2AuthorizedClientRepositoryTests"
    },
    "statements": [
      {
        "type": "DECLARATION",
        "code": "OAuth2AuthorizedClient authorizedClient = new OAuth2AuthorizedClient(this.registration2, this.principalName1, mock(OAuth2AccessToken.class));",
        "line": 100,
        "locate": "Test Case",
        "locationContext": {
          "methodName": "saveAuthorizedClientWhenAuthenticationIsNullThenExceptionNotThrown",
          "methodAnnotations": [
            "@Test"
          ]
        }
      }
    ],
    "pattern_id": 2
  },
  {
    "variableName": "authorizedClient",
    "variableType": "OAuth2AuthorizedClient",
    "mockedClass": "OAuth2AuthorizedClient",
    "isReuseableMock": "Fully Localized",
    "mockPattern": "Creation:\n\u2014 Local Mock Creation in Test Case\n\nStubbing:\n\u2014 None\n\nVerification:\n\u2014 None",
    "classContext": {
      "packageName": "org.springframework.security.oauth2.client.web.server",
      "filePath": "C:\\java tool\\Spring\\spring-security\\oauth2\\oauth2-client\\src\\test\\java\\org\\springframework\\security\\oauth2\\client\\web\\server\\WebSessionServerOAuth2AuthorizedClientRepositoryTests.java",
      "className": "WebSessionServerOAuth2AuthorizedClientRepositoryTests"
    },
    "statements": [
      {
        "type": "DECLARATION",
        "code": "OAuth2AuthorizedClient authorizedClient = new OAuth2AuthorizedClient(this.registration2, this.principalName1, mock(OAuth2AccessToken.class));",
        "line": 107,
        "locate": "Test Case",
        "locationContext": {
          "methodName": "saveAuthorizedClientWhenRequestIsNullThenThrowIllegalArgumentException",
          "methodAnnotations": [
            "@Test"
          ]
        }
      }
    ],
    "pattern_id": 2
  },
  {
    "variableName": "expected",
    "variableType": "OAuth2AuthorizedClient",
    "mockedClass": "OAuth2AuthorizedClient",
    "isReuseableMock": "Fully Localized",
    "mockPattern": "Creation:\n\u2014 Local Mock Creation in Test Case\n\nStubbing:\n\u2014 None\n\nVerification:\n\u2014 None",
    "classContext": {
      "packageName": "org.springframework.security.oauth2.client.web.server",
      "filePath": "C:\\java tool\\Spring\\spring-security\\oauth2\\oauth2-client\\src\\test\\java\\org\\springframework\\security\\oauth2\\client\\web\\server\\WebSessionServerOAuth2AuthorizedClientRepositoryTests.java",
      "className": "WebSessionServerOAuth2AuthorizedClientRepositoryTests"
    },
    "statements": [
      {
        "type": "DECLARATION",
        "code": "OAuth2AuthorizedClient expected = new OAuth2AuthorizedClient(this.registration2, this.principalName1, mock(OAuth2AccessToken.class));",
        "line": 115,
        "locate": "Test Case",
        "locationContext": {
          "methodName": "saveAuthorizedClientWhenSavedThenSavedToSession",
          "methodAnnotations": [
            "@Test"
          ]
        }
      }
    ],
    "pattern_id": 2
  },
  {
    "variableName": "authorizedClient1",
    "variableType": "OAuth2AuthorizedClient",
    "mockedClass": "OAuth2AuthorizedClient",
    "isReuseableMock": "Fully Localized",
    "mockPattern": "Creation:\n\u2014 Local Mock Creation in Test Case\n\nStubbing:\n\u2014 None\n\nVerification:\n\u2014 None",
    "classContext": {
      "packageName": "org.springframework.security.oauth2.client.web.server",
      "filePath": "C:\\java tool\\Spring\\spring-security\\oauth2\\oauth2-client\\src\\test\\java\\org\\springframework\\security\\oauth2\\client\\web\\server\\WebSessionServerOAuth2AuthorizedClientRepositoryTests.java",
      "className": "WebSessionServerOAuth2AuthorizedClientRepositoryTests"
    },
    "statements": [
      {
        "type": "DECLARATION",
        "code": "OAuth2AuthorizedClient authorizedClient1 = new OAuth2AuthorizedClient(this.registration1, this.principalName1, mock(OAuth2AccessToken.class));",
        "line": 149,
        "locate": "Test Case",
        "locationContext": {
          "methodName": "removeAuthorizedClientWhenClient1SavedAndClient2RemovedThenClient1NotRemoved",
          "methodAnnotations": [
            "@Test"
          ]
        }
      }
    ],
    "pattern_id": 2
  },
  {
    "variableName": "authorizedClient",
    "variableType": "OAuth2AuthorizedClient",
    "mockedClass": "OAuth2AuthorizedClient",
    "isReuseableMock": "Fully Localized",
    "mockPattern": "Creation:\n\u2014 Local Mock Creation in Test Case\n\nStubbing:\n\u2014 None\n\nVerification:\n\u2014 None",
    "classContext": {
      "packageName": "org.springframework.security.oauth2.client.web.server",
      "filePath": "C:\\java tool\\Spring\\spring-security\\oauth2\\oauth2-client\\src\\test\\java\\org\\springframework\\security\\oauth2\\client\\web\\server\\WebSessionServerOAuth2AuthorizedClientRepositoryTests.java",
      "className": "WebSessionServerOAuth2AuthorizedClientRepositoryTests"
    },
    "statements": [
      {
        "type": "DECLARATION",
        "code": "OAuth2AuthorizedClient authorizedClient = new OAuth2AuthorizedClient(this.registration2, this.principalName1, mock(OAuth2AccessToken.class));",
        "line": 163,
        "locate": "Test Case",
        "locationContext": {
          "methodName": "removeAuthorizedClientWhenSavedThenRemoved",
          "methodAnnotations": [
            "@Test"
          ]
        }
      }
    ],
    "pattern_id": 2
  },
  {
    "variableName": "authorizedClient",
    "variableType": "OAuth2AuthorizedClient",
    "mockedClass": "OAuth2AuthorizedClient",
    "isReuseableMock": "Fully Localized",
    "mockPattern": "Creation:\n\u2014 Local Mock Creation in Test Case\n\nStubbing:\n\u2014 None\n\nVerification:\n\u2014 None",
    "classContext": {
      "packageName": "org.springframework.security.oauth2.client.web.server",
      "filePath": "C:\\java tool\\Spring\\spring-security\\oauth2\\oauth2-client\\src\\test\\java\\org\\springframework\\security\\oauth2\\client\\web\\server\\WebSessionServerOAuth2AuthorizedClientRepositoryTests.java",
      "className": "WebSessionServerOAuth2AuthorizedClientRepositoryTests"
    },
    "statements": [
      {
        "type": "DECLARATION",
        "code": "OAuth2AuthorizedClient authorizedClient = new OAuth2AuthorizedClient(this.registration1, this.principalName1, mock(OAuth2AccessToken.class));",
        "line": 179,
        "locate": "Test Case",
        "locationContext": {
          "methodName": "removeAuthorizedClientWhenSavedThenRemovedFromSession",
          "methodAnnotations": [
            "@Test"
          ]
        }
      }
    ],
    "pattern_id": 2
  },
  {
    "variableName": "authorizedClient2",
    "variableType": "OAuth2AuthorizedClient",
    "mockedClass": "OAuth2AuthorizedClient",
    "isReuseableMock": "Fully Localized",
    "mockPattern": "Creation:\n\u2014 Local Mock Creation in Test Case\n\nStubbing:\n\u2014 None\n\nVerification:\n\u2014 None",
    "classContext": {
      "packageName": "org.springframework.security.oauth2.client.web.server",
      "filePath": "C:\\java tool\\Spring\\spring-security\\oauth2\\oauth2-client\\src\\test\\java\\org\\springframework\\security\\oauth2\\client\\web\\server\\WebSessionServerOAuth2AuthorizedClientRepositoryTests.java",
      "className": "WebSessionServerOAuth2AuthorizedClientRepositoryTests"
    },
    "statements": [
      {
        "type": "DECLARATION",
        "code": "OAuth2AuthorizedClient authorizedClient2 = new OAuth2AuthorizedClient(this.registration2, this.principalName1, mock(OAuth2AccessToken.class));",
        "line": 197,
        "locate": "Test Case",
        "locationContext": {
          "methodName": "removeAuthorizedClientWhenClient1Client2SavedAndClient1RemovedThenClient2NotRemoved",
          "methodAnnotations": [
            "@Test"
          ]
        }
      }
    ],
    "pattern_id": 2
  },
  {
    "variableName": "authorizedClient1",
    "variableType": "OAuth2AuthorizedClient",
    "mockedClass": "OAuth2AuthorizedClient",
    "isReuseableMock": "Fully Localized",
    "mockPattern": "Creation:\n\u2014 Local Mock Creation in Test Case\n\nStubbing:\n\u2014 None\n\nVerification:\n\u2014 None",
    "classContext": {
      "packageName": "org.springframework.security.oauth2.client.web.server",
      "filePath": "C:\\java tool\\Spring\\spring-security\\oauth2\\oauth2-client\\src\\test\\java\\org\\springframework\\security\\oauth2\\client\\web\\server\\WebSessionServerOAuth2AuthorizedClientRepositoryTests.java",
      "className": "WebSessionServerOAuth2AuthorizedClientRepositoryTests"
    },
    "statements": [
      {
        "type": "DECLARATION",
        "code": "OAuth2AuthorizedClient authorizedClient1 = new OAuth2AuthorizedClient(this.registration1, this.principalName1, mock(OAuth2AccessToken.class));",
        "line": 194,
        "locate": "Test Case",
        "locationContext": {
          "methodName": "removeAuthorizedClientWhenClient1Client2SavedAndClient1RemovedThenClient2NotRemoved",
          "methodAnnotations": [
            "@Test"
          ]
        }
      }
    ],
    "pattern_id": 2
  },
  {
    "variableName": "authorizedClient",
    "variableType": "OAuth2AuthorizedClient",
    "mockedClass": "OAuth2AuthorizedClient",
    "isReuseableMock": "Fully Localized",
    "mockPattern": "Creation:\n\u2014 Local Mock Creation in Test Case\n\nStubbing:\n\u2014 None\n\nVerification:\n\u2014 None",
    "classContext": {
      "packageName": "org.springframework.security.oauth2.client.web.server",
      "filePath": "C:\\java tool\\Spring\\spring-security\\oauth2\\oauth2-client\\src\\test\\java\\org\\springframework\\security\\oauth2\\client\\web\\server\\WebSessionServerOAuth2AuthorizedClientRepositoryTests.java",
      "className": "WebSessionServerOAuth2AuthorizedClientRepositoryTests"
    },
    "statements": [
      {
        "type": "DECLARATION",
        "code": "OAuth2AuthorizedClient authorizedClient = new OAuth2AuthorizedClient(this.registration1, this.principalName1, mock(OAuth2AccessToken.class));",
        "line": 212,
        "locate": "Test Case",
        "locationContext": {
          "methodName": "saveAuthorizedClientWhenSessionIsNullThenThrowIllegalArgumentException",
          "methodAnnotations": [
            "@Test"
          ]
        }
      }
    ],
    "pattern_id": 2
  }
]