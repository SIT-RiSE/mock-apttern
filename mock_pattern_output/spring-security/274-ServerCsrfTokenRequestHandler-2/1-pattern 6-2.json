[
  {
    "variableName": "requestHandler",
    "variableType": "ServerCsrfTokenRequestHandler",
    "mockedClass": "ServerCsrfTokenRequestHandler",
    "isReuseableMock": false,
    "mockPattern": "Creation:\n\u2014 Local Mock Creation in Test Case\n\nStubbing:\n\u2014 Test Case\n\nVerification:\n\u2014 Test Case",
    "classContext": {
      "packageName": "org.springframework.security.config.web.server",
      "filePath": "C:\\java tool\\Spring\\spring-security\\config\\src\\test\\java\\org\\springframework\\security\\config\\web\\server\\ServerHttpSecurityTests.java",
      "className": "ServerHttpSecurityTests"
    },
    "statements": [
      {
        "type": "DECLARATION",
        "code": "ServerCsrfTokenRequestHandler requestHandler = mock(ServerCsrfTokenRequestHandler.class);",
        "line": 548,
        "locate": "Test Case",
        "locationContext": {
          "methodName": "postWhenCustomRequestHandlerThenUsed",
          "methodAnnotations": [
            "@Test"
          ]
        }
      },
      {
        "type": "STUBBING",
        "code": "given(requestHandler.resolveCsrfTokenValue(any(ServerWebExchange.class), any(CsrfToken.class))).willReturn(Mono.just(csrfToken.getToken()));",
        "line": 549,
        "locate": "Test Case",
        "locationContext": {
          "methodName": "postWhenCustomRequestHandlerThenUsed",
          "methodAnnotations": [
            "@Test"
          ]
        }
      },
      {
        "type": "VERIFICATION",
        "code": "verify(requestHandler).handle(any(ServerWebExchange.class), any());",
        "line": 561,
        "locate": "Test Case",
        "locationContext": {
          "methodName": "postWhenCustomRequestHandlerThenUsed",
          "methodAnnotations": [
            "@Test"
          ]
        }
      },
      {
        "type": "VERIFICATION",
        "code": "verify(requestHandler).resolveCsrfTokenValue(any(ServerWebExchange.class), any());",
        "line": 562,
        "locate": "Test Case",
        "locationContext": {
          "methodName": "postWhenCustomRequestHandlerThenUsed",
          "methodAnnotations": [
            "@Test"
          ]
        }
      }
    ],
    "pattern_id": 6
  },
  {
    "variableName": "requestHandler",
    "variableType": "ServerCsrfTokenRequestHandler",
    "mockedClass": "ServerCsrfTokenRequestHandler",
    "isReuseableMock": false,
    "mockPattern": "Creation:\n\u2014 Local Mock Creation in Test Case\n\nStubbing:\n\u2014 Test Case\n\nVerification:\n\u2014 Test Case",
    "classContext": {
      "packageName": "org.springframework.security.web.server.csrf",
      "filePath": "C:\\java tool\\Spring\\spring-security\\web\\src\\test\\java\\org\\springframework\\security\\web\\server\\csrf\\CsrfWebFilterTests.java",
      "className": "CsrfWebFilterTests"
    },
    "statements": [
      {
        "type": "DECLARATION",
        "code": "ServerCsrfTokenRequestHandler requestHandler = mock(ServerCsrfTokenRequestHandler.class);",
        "line": 165,
        "locate": "Test Case",
        "locationContext": {
          "methodName": "filterWhenRequestHandlerSetThenUsed",
          "methodAnnotations": [
            "@Test"
          ]
        }
      },
      {
        "type": "STUBBING",
        "code": "given(requestHandler.resolveCsrfTokenValue(any(ServerWebExchange.class), any(CsrfToken.class))).willReturn(Mono.just(this.token.getToken()));",
        "line": 166,
        "locate": "Test Case",
        "locationContext": {
          "methodName": "filterWhenRequestHandlerSetThenUsed",
          "methodAnnotations": [
            "@Test"
          ]
        }
      },
      {
        "type": "VERIFICATION",
        "code": "verify(requestHandler).handle(eq(this.post), any());",
        "line": 181,
        "locate": "Test Case",
        "locationContext": {
          "methodName": "filterWhenRequestHandlerSetThenUsed",
          "methodAnnotations": [
            "@Test"
          ]
        }
      },
      {
        "type": "VERIFICATION",
        "code": "verify(requestHandler).resolveCsrfTokenValue(this.post, this.token);",
        "line": 182,
        "locate": "Test Case",
        "locationContext": {
          "methodName": "filterWhenRequestHandlerSetThenUsed",
          "methodAnnotations": [
            "@Test"
          ]
        }
      }
    ],
    "pattern_id": 6
  }
]