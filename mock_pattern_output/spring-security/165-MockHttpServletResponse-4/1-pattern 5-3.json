[
  {
    "variableName": "response",
    "variableType": "MockHttpServletResponse",
    "mockedClass": "MockHttpServletResponse",
    "isReuseableMock": false,
    "mockPattern": "Creation:\n\u2014 Local Mock Creation in Test Case\n\nStubbing:\n\u2014 None\n\nVerification:\n\u2014 Test Case",
    "classContext": {
      "packageName": "org.springframework.security.cas.web",
      "filePath": "C:\\java tool\\Spring\\spring-security\\cas\\src\\test\\java\\org\\springframework\\security\\cas\\web\\CasGatewayAuthenticationRedirectFilterTests.java",
      "className": "CasGatewayAuthenticationRedirectFilterTests"
    },
    "statements": [
      {
        "type": "DECLARATION",
        "code": "MockHttpServletResponse response = mock();",
        "line": 69,
        "locate": "Test Case",
        "locationContext": {
          "methodName": "doFilterWhenNotMatchThenContinueFilter",
          "methodAnnotations": [
            "@Test"
          ]
        }
      },
      {
        "type": "VERIFICATION",
        "code": "verifyNoInteractions(response);",
        "line": 72,
        "locate": "Test Case",
        "locationContext": {
          "methodName": "doFilterWhenNotMatchThenContinueFilter",
          "methodAnnotations": [
            "@Test"
          ]
        }
      }
    ],
    "pattern_id": 5
  },
  {
    "variableName": "responseToSpy",
    "variableType": "MockHttpServletResponse",
    "mockedClass": "MockHttpServletResponse",
    "isReuseableMock": false,
    "mockPattern": "Creation:\n\u2014 Local Mock Creation in Test Case\n\nStubbing:\n\u2014 None\n\nVerification:\n\u2014 Test Case",
    "classContext": {
      "packageName": "org.springframework.security.config.http",
      "filePath": "C:\\java tool\\Spring\\spring-security\\config\\src\\test\\java\\org\\springframework\\security\\config\\http\\MiscHttpConfigTests.java",
      "className": "MiscHttpConfigTests"
    },
    "statements": [
      {
        "type": "DECLARATION",
        "code": "MockHttpServletResponse responseToSpy = spy(new MockHttpServletResponse());",
        "line": 584,
        "locate": "Test Case",
        "locationContext": {
          "methodName": "configureWhenUsingDisableUrlRewritingAndCustomRepositoryThenRedirectIsNotEncodedByResponse",
          "methodAnnotations": [
            "@Test"
          ]
        }
      },
      {
        "type": "VERIFICATION",
        "code": "verify(responseToSpy, never()).encodeRedirectURL(any());",
        "line": 592,
        "locate": "Test Case",
        "locationContext": {
          "methodName": "configureWhenUsingDisableUrlRewritingAndCustomRepositoryThenRedirectIsNotEncodedByResponse",
          "methodAnnotations": [
            "@Test"
          ]
        }
      },
      {
        "type": "VERIFICATION",
        "code": "verify(responseToSpy, never()).encodeURL(any());",
        "line": 593,
        "locate": "Test Case",
        "locationContext": {
          "methodName": "configureWhenUsingDisableUrlRewritingAndCustomRepositoryThenRedirectIsNotEncodedByResponse",
          "methodAnnotations": [
            "@Test"
          ]
        }
      }
    ],
    "pattern_id": 5
  },
  {
    "variableName": "spyResponse",
    "variableType": "MockHttpServletResponse",
    "mockedClass": "MockHttpServletResponse",
    "isReuseableMock": false,
    "mockPattern": "Creation:\n\u2014 Local Mock Creation in Test Case\n\nStubbing:\n\u2014 None\n\nVerification:\n\u2014 Test Case",
    "classContext": {
      "packageName": "org.springframework.security.web.csrf",
      "filePath": "C:\\java tool\\Spring\\spring-security\\web\\src\\test\\java\\org\\springframework\\security\\web\\csrf\\CookieCsrfTokenRepositoryTests.java",
      "className": "CookieCsrfTokenRepositoryTests"
    },
    "statements": [
      {
        "type": "DECLARATION",
        "code": "MockHttpServletResponse spyResponse = spy(this.response);",
        "line": 94,
        "locate": "Test Case",
        "locationContext": {
          "methodName": "saveTokenShouldUseResponseAddCookie",
          "methodAnnotations": [
            "@Test"
          ]
        }
      },
      {
        "type": "VERIFICATION",
        "code": "verify(spyResponse).addCookie(any(Cookie.class));",
        "line": 96,
        "locate": "Test Case",
        "locationContext": {
          "methodName": "saveTokenShouldUseResponseAddCookie",
          "methodAnnotations": [
            "@Test"
          ]
        }
      }
    ],
    "pattern_id": 5
  }
]