[
  {
    "variableName": "strategy",
    "variableType": "SecurityContextHolderStrategy",
    "mockedClass": "SecurityContextHolderStrategy",
    "isReuseableMock": "Fully Shared",
    "mockPattern": "Creation:\n\u2014 Local Mock Creation in Helper\n\nStubbing:\n\u2014 Helper Method\n\nVerification:\n\u2014 None",
    "classContext": {
      "packageName": "org.springframework.security.authorization.method",
      "filePath": "C:\\java tool\\Spring\\spring-security\\core\\src\\test\\java\\org\\springframework\\security\\authorization\\method\\AuthorizationManagerAfterMethodInterceptorTests.java",
      "className": "AuthorizationManagerAfterMethodInterceptorTests"
    },
    "statements": [
      {
        "type": "DECLARATION",
        "code": "SecurityContextHolderStrategy strategy = mock(SecurityContextHolderStrategy.class);",
        "line": 164,
        "locate": "Helper Method",
        "locationContext": {
          "methodName": "mockSecurityContextHolderStrategy",
          "methodAnnotations": []
        }
      },
      {
        "type": "STUBBING",
        "code": "given(strategy.getContext()).willReturn(securityContextImpl);",
        "line": 165,
        "locate": "Helper Method",
        "locationContext": {
          "methodName": "mockSecurityContextHolderStrategy",
          "methodAnnotations": []
        }
      }
    ],
    "pattern_id": 10
  },
  {
    "variableName": "strategy",
    "variableType": "SecurityContextHolderStrategy",
    "mockedClass": "SecurityContextHolderStrategy",
    "isReuseableMock": "Fully Shared",
    "mockPattern": "Creation:\n\u2014 Local Mock Creation in Helper\n\nStubbing:\n\u2014 Helper Method\n\nVerification:\n\u2014 None",
    "classContext": {
      "packageName": "org.springframework.security.authorization.method",
      "filePath": "C:\\java tool\\Spring\\spring-security\\core\\src\\test\\java\\org\\springframework\\security\\authorization\\method\\AuthorizationManagerBeforeMethodInterceptorTests.java",
      "className": "AuthorizationManagerBeforeMethodInterceptorTests"
    },
    "statements": [
      {
        "type": "DECLARATION",
        "code": "SecurityContextHolderStrategy strategy = mock(SecurityContextHolderStrategy.class);",
        "line": 157,
        "locate": "Helper Method",
        "locationContext": {
          "methodName": "mockSecurityContextHolderStrategy",
          "methodAnnotations": []
        }
      },
      {
        "type": "STUBBING",
        "code": "given(strategy.getContext()).willReturn(securityContextImpl);",
        "line": 158,
        "locate": "Helper Method",
        "locationContext": {
          "methodName": "mockSecurityContextHolderStrategy",
          "methodAnnotations": []
        }
      }
    ],
    "pattern_id": 10
  },
  {
    "variableName": "strategy",
    "variableType": "SecurityContextHolderStrategy",
    "mockedClass": "SecurityContextHolderStrategy",
    "isReuseableMock": "Fully Shared",
    "mockPattern": "Creation:\n\u2014 Local Mock Creation in Helper\n\nStubbing:\n\u2014 Helper Method\n\nVerification:\n\u2014 None",
    "classContext": {
      "packageName": "org.springframework.security.authorization.method",
      "filePath": "C:\\java tool\\Spring\\spring-security\\core\\src\\test\\java\\org\\springframework\\security\\authorization\\method\\PostFilterAuthorizationMethodInterceptorTests.java",
      "className": "PostFilterAuthorizationMethodInterceptorTests"
    },
    "statements": [
      {
        "type": "DECLARATION",
        "code": "SecurityContextHolderStrategy strategy = mock(SecurityContextHolderStrategy.class);",
        "line": 169,
        "locate": "Helper Method",
        "locationContext": {
          "methodName": "mockSecurityContextHolderStrategy",
          "methodAnnotations": []
        }
      },
      {
        "type": "STUBBING",
        "code": "given(strategy.getContext()).willReturn(securityContextImpl);",
        "line": 170,
        "locate": "Helper Method",
        "locationContext": {
          "methodName": "mockSecurityContextHolderStrategy",
          "methodAnnotations": []
        }
      }
    ],
    "pattern_id": 10
  },
  {
    "variableName": "strategy",
    "variableType": "SecurityContextHolderStrategy",
    "mockedClass": "SecurityContextHolderStrategy",
    "isReuseableMock": "Fully Shared",
    "mockPattern": "Creation:\n\u2014 Local Mock Creation in Helper\n\nStubbing:\n\u2014 Helper Method\n\nVerification:\n\u2014 None",
    "classContext": {
      "packageName": "org.springframework.security.authorization.method",
      "filePath": "C:\\java tool\\Spring\\spring-security\\core\\src\\test\\java\\org\\springframework\\security\\authorization\\method\\PreFilterAuthorizationMethodInterceptorTests.java",
      "className": "PreFilterAuthorizationMethodInterceptorTests"
    },
    "statements": [
      {
        "type": "DECLARATION",
        "code": "SecurityContextHolderStrategy strategy = mock(SecurityContextHolderStrategy.class);",
        "line": 221,
        "locate": "Helper Method",
        "locationContext": {
          "methodName": "mockSecurityContextHolderStrategy",
          "methodAnnotations": []
        }
      },
      {
        "type": "STUBBING",
        "code": "given(strategy.getContext()).willReturn(securityContextImpl);",
        "line": 222,
        "locate": "Helper Method",
        "locationContext": {
          "methodName": "mockSecurityContextHolderStrategy",
          "methodAnnotations": []
        }
      }
    ],
    "pattern_id": 10
  }
]