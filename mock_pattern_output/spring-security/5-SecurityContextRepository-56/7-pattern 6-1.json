[
  {
    "variableName": "repo",
    "variableType": "SecurityContextRepository",
    "mockedClass": "SecurityContextRepository",
    "isReuseableMock": false,
    "mockPattern": "Creation:\n\u2014 Local Mock Creation in Test Case\n\nStubbing:\n\u2014 Test Case\n\nVerification:\n\u2014 Test Case",
    "classContext": {
      "packageName": "org.springframework.security.web.context",
      "filePath": "C:\\java tool\\Spring\\spring-security\\web\\src\\test\\java\\org\\springframework\\security\\web\\context\\SecurityContextPersistenceFilterTests.java",
      "className": "SecurityContextPersistenceFilterTests"
    },
    "statements": [
      {
        "type": "DECLARATION",
        "code": "final SecurityContextRepository repo = mock(SecurityContextRepository.class);",
        "line": 84,
        "locate": "Test Case",
        "locationContext": {
          "methodName": "loadedContextContextIsCopiedToSecurityContextHolderAndUpdatedContextIsStored",
          "methodAnnotations": [
            "@Test"
          ]
        }
      },
      {
        "type": "STUBBING",
        "code": "given(repo.loadContext(any(HttpRequestResponseHolder.class))).willReturn(scBefore);",
        "line": 86,
        "locate": "Test Case",
        "locationContext": {
          "methodName": "loadedContextContextIsCopiedToSecurityContextHolderAndUpdatedContextIsStored",
          "methodAnnotations": [
            "@Test"
          ]
        }
      },
      {
        "type": "VERIFICATION",
        "code": "verify(repo).saveContext(scExpectedAfter, request, response);",
        "line": 93,
        "locate": "Test Case",
        "locationContext": {
          "methodName": "loadedContextContextIsCopiedToSecurityContextHolderAndUpdatedContextIsStored",
          "methodAnnotations": [
            "@Test"
          ]
        }
      }
    ],
    "pattern_id": 6
  }
]