[
  {
    "variableName": "customOidcUserMapper",
    "variableType": "BiFunction<OidcUserRequest,OidcUserInfo,Mono<OidcUser>>",
    "mockedClass": "BiFunction",
    "isReuseableMock": false,
    "mockPattern": "Creation:\n\u2014 Local Mock Creation in Test Case\n\nStubbing:\n\u2014 Test Case\n\nVerification:\n\u2014 Test Case",
    "classContext": {
      "packageName": "org.springframework.security.oauth2.client.oidc.userinfo",
      "filePath": "C:\\java tool\\Spring\\spring-security\\oauth2\\oauth2-client\\src\\test\\java\\org\\springframework\\security\\oauth2\\client\\oidc\\userinfo\\OidcReactiveOAuth2UserServiceTests.java",
      "className": "OidcReactiveOAuth2UserServiceTests"
    },
    "statements": [
      {
        "type": "DECLARATION",
        "code": "BiFunction<OidcUserRequest, OidcUserInfo, Mono<OidcUser>> customOidcUserMapper = mock(BiFunction.class);",
        "line": 252,
        "locate": "Test Case",
        "locationContext": {
          "methodName": "loadUserWhenCustomOidcUserMapperSetThenUsed",
          "methodAnnotations": [
            "@Test"
          ]
        }
      },
      {
        "type": "STUBBING",
        "code": "given(customOidcUserMapper.apply(any(OidcUserRequest.class), any(OidcUserInfo.class))).willReturn(Mono.just(actualUser));",
        "line": 255,
        "locate": "Test Case",
        "locationContext": {
          "methodName": "loadUserWhenCustomOidcUserMapperSetThenUsed",
          "methodAnnotations": [
            "@Test"
          ]
        }
      },
      {
        "type": "VERIFICATION",
        "code": "verify(customOidcUserMapper).apply(eq(userRequest), userInfoCaptor.capture());",
        "line": 263,
        "locate": "Test Case",
        "locationContext": {
          "methodName": "loadUserWhenCustomOidcUserMapperSetThenUsed",
          "methodAnnotations": [
            "@Test"
          ]
        }
      }
    ],
    "pattern_id": 6
  },
  {
    "variableName": "customOidcUserMapper",
    "variableType": "BiFunction<OidcUserRequest,OidcUserInfo,Mono<OidcUser>>",
    "mockedClass": "BiFunction",
    "isReuseableMock": false,
    "mockPattern": "Creation:\n\u2014 Local Mock Creation in Test Case\n\nStubbing:\n\u2014 Test Case\n\nVerification:\n\u2014 Test Case",
    "classContext": {
      "packageName": "org.springframework.security.oauth2.client.oidc.userinfo",
      "filePath": "C:\\java tool\\Spring\\spring-security\\oauth2\\oauth2-client\\src\\test\\java\\org\\springframework\\security\\oauth2\\client\\oidc\\userinfo\\OidcReactiveOAuth2UserServiceTests.java",
      "className": "OidcReactiveOAuth2UserServiceTests"
    },
    "statements": [
      {
        "type": "DECLARATION",
        "code": "// @formatter:on\r\nBiFunction<OidcUserRequest, OidcUserInfo, Mono<OidcUser>> customOidcUserMapper = mock(BiFunction.class);",
        "line": 279,
        "locate": "Test Case",
        "locationContext": {
          "methodName": "loadUserWhenCustomOidcUserMapperSetAndUserInfoNotRetrievedThenUsed",
          "methodAnnotations": [
            "@Test"
          ]
        }
      },
      {
        "type": "STUBBING",
        "code": "given(customOidcUserMapper.apply(any(OidcUserRequest.class), isNull())).willReturn(Mono.just(actualUser));",
        "line": 282,
        "locate": "Test Case",
        "locationContext": {
          "methodName": "loadUserWhenCustomOidcUserMapperSetAndUserInfoNotRetrievedThenUsed",
          "methodAnnotations": [
            "@Test"
          ]
        }
      },
      {
        "type": "VERIFICATION",
        "code": "verify(customOidcUserMapper).apply(eq(userRequest), isNull(OidcUserInfo.class));",
        "line": 288,
        "locate": "Test Case",
        "locationContext": {
          "methodName": "loadUserWhenCustomOidcUserMapperSetAndUserInfoNotRetrievedThenUsed",
          "methodAnnotations": [
            "@Test"
          ]
        }
      }
    ],
    "pattern_id": 6
  }
]