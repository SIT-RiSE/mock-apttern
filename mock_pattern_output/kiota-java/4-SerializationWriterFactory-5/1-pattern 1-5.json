[
  {
    "variableName": "factoryMock",
    "variableType": "SerializationWriterFactory",
    "mockedClass": "SerializationWriterFactory",
    "isReuseableMock": false,
    "mockPattern": "Creation:\n\u2014 Local Mock Creation in Test Case\n\nStubbing:\n\u2014 Test Case\n\nVerification:\n\u2014 None",
    "classContext": {
      "packageName": "com.microsoft.kiota",
      "filePath": "C:\\java tool\\Microsoft\\kiota-java\\components\\abstractions\\src\\test\\java\\com\\microsoft\\kiota\\RequestInformationTest.java",
      "className": "RequestInformationTest"
    },
    "statements": [
      {
        "type": "DECLARATION",
        "code": "final SerializationWriterFactory factoryMock = mock(SerializationWriterFactory.class);",
        "line": 191,
        "locate": "Test Case",
        "locationContext": {
          "methodName": "SetsParsableContent",
          "methodAnnotations": [
            "@Test"
          ]
        }
      },
      {
        "type": "STUBBING",
        "code": "when(factoryMock.getSerializationWriter(anyString())).thenReturn(writerMock);",
        "line": 192,
        "locate": "Test Case",
        "locationContext": {
          "methodName": "SetsParsableContent",
          "methodAnnotations": [
            "@Test"
          ]
        }
      }
    ],
    "pattern_id": 1
  },
  {
    "variableName": "factoryMock",
    "variableType": "SerializationWriterFactory",
    "mockedClass": "SerializationWriterFactory",
    "isReuseableMock": false,
    "mockPattern": "Creation:\n\u2014 Local Mock Creation in Test Case\n\nStubbing:\n\u2014 Test Case\n\nVerification:\n\u2014 None",
    "classContext": {
      "packageName": "com.microsoft.kiota",
      "filePath": "C:\\java tool\\Microsoft\\kiota-java\\components\\abstractions\\src\\test\\java\\com\\microsoft\\kiota\\RequestInformationTest.java",
      "className": "RequestInformationTest"
    },
    "statements": [
      {
        "type": "DECLARATION",
        "code": "final SerializationWriterFactory factoryMock = mock(SerializationWriterFactory.class);",
        "line": 210,
        "locate": "Test Case",
        "locationContext": {
          "methodName": "SetsParsableContentCollection",
          "methodAnnotations": [
            "@Test"
          ]
        }
      },
      {
        "type": "STUBBING",
        "code": "when(factoryMock.getSerializationWriter(anyString())).thenReturn(writerMock);",
        "line": 211,
        "locate": "Test Case",
        "locationContext": {
          "methodName": "SetsParsableContentCollection",
          "methodAnnotations": [
            "@Test"
          ]
        }
      }
    ],
    "pattern_id": 1
  },
  {
    "variableName": "factoryMock",
    "variableType": "SerializationWriterFactory",
    "mockedClass": "SerializationWriterFactory",
    "isReuseableMock": false,
    "mockPattern": "Creation:\n\u2014 Local Mock Creation in Test Case\n\nStubbing:\n\u2014 Test Case\n\nVerification:\n\u2014 None",
    "classContext": {
      "packageName": "com.microsoft.kiota",
      "filePath": "C:\\java tool\\Microsoft\\kiota-java\\components\\abstractions\\src\\test\\java\\com\\microsoft\\kiota\\RequestInformationTest.java",
      "className": "RequestInformationTest"
    },
    "statements": [
      {
        "type": "DECLARATION",
        "code": "final SerializationWriterFactory factoryMock = mock(SerializationWriterFactory.class);",
        "line": 228,
        "locate": "Test Case",
        "locationContext": {
          "methodName": "SetsScalarContentCollection",
          "methodAnnotations": [
            "@Test"
          ]
        }
      },
      {
        "type": "STUBBING",
        "code": "when(factoryMock.getSerializationWriter(anyString())).thenReturn(writerMock);",
        "line": 229,
        "locate": "Test Case",
        "locationContext": {
          "methodName": "SetsScalarContentCollection",
          "methodAnnotations": [
            "@Test"
          ]
        }
      }
    ],
    "pattern_id": 1
  },
  {
    "variableName": "factoryMock",
    "variableType": "SerializationWriterFactory",
    "mockedClass": "SerializationWriterFactory",
    "isReuseableMock": false,
    "mockPattern": "Creation:\n\u2014 Local Mock Creation in Test Case\n\nStubbing:\n\u2014 Test Case\n\nVerification:\n\u2014 None",
    "classContext": {
      "packageName": "com.microsoft.kiota",
      "filePath": "C:\\java tool\\Microsoft\\kiota-java\\components\\abstractions\\src\\test\\java\\com\\microsoft\\kiota\\RequestInformationTest.java",
      "className": "RequestInformationTest"
    },
    "statements": [
      {
        "type": "DECLARATION",
        "code": "final SerializationWriterFactory factoryMock = mock(SerializationWriterFactory.class);",
        "line": 246,
        "locate": "Test Case",
        "locationContext": {
          "methodName": "SetsScalarContent",
          "methodAnnotations": [
            "@Test"
          ]
        }
      },
      {
        "type": "STUBBING",
        "code": "when(factoryMock.getSerializationWriter(anyString())).thenReturn(writerMock);",
        "line": 247,
        "locate": "Test Case",
        "locationContext": {
          "methodName": "SetsScalarContent",
          "methodAnnotations": [
            "@Test"
          ]
        }
      }
    ],
    "pattern_id": 1
  },
  {
    "variableName": "factoryMock",
    "variableType": "SerializationWriterFactory",
    "mockedClass": "SerializationWriterFactory",
    "isReuseableMock": false,
    "mockPattern": "Creation:\n\u2014 Local Mock Creation in Test Case\n\nStubbing:\n\u2014 Test Case\n\nVerification:\n\u2014 None",
    "classContext": {
      "packageName": "com.microsoft.kiota",
      "filePath": "C:\\java tool\\Microsoft\\kiota-java\\components\\abstractions\\src\\test\\java\\com\\microsoft\\kiota\\RequestInformationTest.java",
      "className": "RequestInformationTest"
    },
    "statements": [
      {
        "type": "DECLARATION",
        "code": "final SerializationWriterFactory factoryMock = mock(SerializationWriterFactory.class);",
        "line": 263,
        "locate": "Test Case",
        "locationContext": {
          "methodName": "SetsBoundaryOnMultipartBody",
          "methodAnnotations": [
            "@Test"
          ]
        }
      },
      {
        "type": "STUBBING",
        "code": "when(factoryMock.getSerializationWriter(anyString())).thenReturn(writerMock);",
        "line": 264,
        "locate": "Test Case",
        "locationContext": {
          "methodName": "SetsBoundaryOnMultipartBody",
          "methodAnnotations": [
            "@Test"
          ]
        }
      }
    ],
    "pattern_id": 1
  }
]