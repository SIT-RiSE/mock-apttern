[
  {
    "variableName": "tokenCredential",
    "variableType": "var",
    "mockedClass": "TokenCredential",
    "isReuseableMock": false,
    "mockPattern": "Creation:\n\u2014 Local Mock Creation in Test Case\n\nStubbing:\n\u2014 None\n\nVerification:\n\u2014 None",
    "classContext": {
      "packageName": "com.microsoft.kiota.authentication",
      "filePath": "C:\\java tool\\Microsoft\\kiota-java\\components\\authentication\\azure\\src\\test\\java\\com\\microsoft\\kiota\\authentication\\AzureIdentityAccessTokenProviderTest.java",
      "className": "AzureIdentityAccessTokenProviderTest"
    },
    "statements": [
      {
        "type": "DECLARATION",
        "code": "var tokenCredential = mock(TokenCredential.class);",
        "line": 44,
        "locate": "Test Case",
        "locationContext": {
          "methodName": "testNonLocalhostHttpUrlIsInvalid",
          "methodAnnotations": [
            "@ParameterizedTest",
            "@ValueSource"
          ]
        }
      }
    ],
    "pattern_id": 2
  },
  {
    "variableName": "tokenCredential",
    "variableType": "var",
    "mockedClass": "TokenCredential",
    "isReuseableMock": false,
    "mockPattern": "Creation:\n\u2014 Local Mock Creation in Test Case\n\nStubbing:\n\u2014 None\n\nVerification:\n\u2014 None",
    "classContext": {
      "packageName": "com.microsoft.kiota.authentication",
      "filePath": "C:\\java tool\\Microsoft\\kiota-java\\components\\authentication\\azure\\src\\test\\java\\com\\microsoft\\kiota\\authentication\\AzureIdentityAccessTokenProviderTest.java",
      "className": "AzureIdentityAccessTokenProviderTest"
    },
    "statements": [
      {
        "type": "DECLARATION",
        "code": "var tokenCredential = mock(TokenCredential.class);",
        "line": 55,
        "locate": "Test Case",
        "locationContext": {
          "methodName": "testKeepUserProvidedScopes",
          "methodAnnotations": [
            "@Test"
          ]
        }
      }
    ],
    "pattern_id": 2
  },
  {
    "variableName": "tokenCredential",
    "variableType": "var",
    "mockedClass": "TokenCredential",
    "isReuseableMock": false,
    "mockPattern": "Creation:\n\u2014 Local Mock Creation in Test Case\n\nStubbing:\n\u2014 None\n\nVerification:\n\u2014 None",
    "classContext": {
      "packageName": "com.microsoft.kiota.authentication",
      "filePath": "C:\\java tool\\Microsoft\\kiota-java\\components\\authentication\\azure\\src\\test\\java\\com\\microsoft\\kiota\\authentication\\AzureIdentityAccessTokenProviderTest.java",
      "className": "AzureIdentityAccessTokenProviderTest"
    },
    "statements": [
      {
        "type": "DECLARATION",
        "code": "var tokenCredential = mock(TokenCredential.class);",
        "line": 67,
        "locate": "Test Case",
        "locationContext": {
          "methodName": "testConfigureDefaultScopeWhenScopesNotProvided",
          "methodAnnotations": [
            "@Test"
          ]
        }
      }
    ],
    "pattern_id": 2
  },
  {
    "variableName": "tokenCredential",
    "variableType": "var",
    "mockedClass": "TokenCredential",
    "isReuseableMock": false,
    "mockPattern": "Creation:\n\u2014 Local Mock Creation in Test Case\n\nStubbing:\n\u2014 None\n\nVerification:\n\u2014 None",
    "classContext": {
      "packageName": "com.microsoft.kiota.authentication",
      "filePath": "C:\\java tool\\Microsoft\\kiota-java\\components\\authentication\\azure\\src\\test\\java\\com\\microsoft\\kiota\\authentication\\AzureIdentityAccessTokenProviderTest.java",
      "className": "AzureIdentityAccessTokenProviderTest"
    },
    "statements": [
      {
        "type": "DECLARATION",
        "code": "var tokenCredential = mock(TokenCredential.class);",
        "line": 80,
        "locate": "Test Case",
        "locationContext": {
          "methodName": "testConfigureDefaultScopeWhenScopesNullOrEmpty",
          "methodAnnotations": [
            "@ParameterizedTest",
            "@NullAndEmptySource"
          ]
        }
      }
    ],
    "pattern_id": 2
  },
  {
    "variableName": "authenticationProviderMock",
    "variableType": "var",
    "mockedClass": "AuthenticationProvider",
    "isReuseableMock": false,
    "mockPattern": "Creation:\n\u2014 Local Mock Creation in Test Case\n\nStubbing:\n\u2014 None\n\nVerification:\n\u2014 None",
    "classContext": {
      "packageName": "com.microsoft.kiota.http",
      "filePath": "C:\\java tool\\Microsoft\\kiota-java\\components\\http\\okHttp\\src\\test\\java\\com\\microsoft\\kiota\\http\\OkHttpRequestAdapterTest.java",
      "className": "OkHttpRequestAdapterTest"
    },
    "statements": [
      {
        "type": "DECLARATION",
        "code": "final var authenticationProviderMock = mock(AuthenticationProvider.class);",
        "line": 77,
        "locate": "Test Case",
        "locationContext": {
          "methodName": "sendStreamReturnsUsableStream",
          "methodAnnotations": [
            "@ParameterizedTest",
            "@ValueSource"
          ]
        }
      }
    ],
    "pattern_id": 2
  },
  {
    "variableName": "authenticationProviderMock",
    "variableType": "var",
    "mockedClass": "AuthenticationProvider",
    "isReuseableMock": false,
    "mockPattern": "Creation:\n\u2014 Local Mock Creation in Test Case\n\nStubbing:\n\u2014 None\n\nVerification:\n\u2014 None",
    "classContext": {
      "packageName": "com.microsoft.kiota.http",
      "filePath": "C:\\java tool\\Microsoft\\kiota-java\\components\\http\\okHttp\\src\\test\\java\\com\\microsoft\\kiota\\http\\OkHttpRequestAdapterTest.java",
      "className": "OkHttpRequestAdapterTest"
    },
    "statements": [
      {
        "type": "DECLARATION",
        "code": "final var authenticationProviderMock = mock(AuthenticationProvider.class);",
        "line": 120,
        "locate": "Test Case",
        "locationContext": {
          "methodName": "sendStreamReturnsNullOnNoContent",
          "methodAnnotations": [
            "@ParameterizedTest",
            "@ValueSource"
          ]
        }
      }
    ],
    "pattern_id": 2
  },
  {
    "variableName": "authenticationProviderMock",
    "variableType": "var",
    "mockedClass": "AuthenticationProvider",
    "isReuseableMock": false,
    "mockPattern": "Creation:\n\u2014 Local Mock Creation in Test Case\n\nStubbing:\n\u2014 None\n\nVerification:\n\u2014 None",
    "classContext": {
      "packageName": "com.microsoft.kiota.http",
      "filePath": "C:\\java tool\\Microsoft\\kiota-java\\components\\http\\okHttp\\src\\test\\java\\com\\microsoft\\kiota\\http\\OkHttpRequestAdapterTest.java",
      "className": "OkHttpRequestAdapterTest"
    },
    "statements": [
      {
        "type": "DECLARATION",
        "code": "final var authenticationProviderMock = mock(AuthenticationProvider.class);",
        "line": 149,
        "locate": "Test Case",
        "locationContext": {
          "methodName": "sendReturnsNullOnNoContent",
          "methodAnnotations": [
            "@ParameterizedTest",
            "@ValueSource"
          ]
        }
      }
    ],
    "pattern_id": 2
  },
  {
    "variableName": "authenticationProviderMock",
    "variableType": "var",
    "mockedClass": "AuthenticationProvider",
    "isReuseableMock": false,
    "mockPattern": "Creation:\n\u2014 Local Mock Creation in Test Case\n\nStubbing:\n\u2014 None\n\nVerification:\n\u2014 None",
    "classContext": {
      "packageName": "com.microsoft.kiota.http",
      "filePath": "C:\\java tool\\Microsoft\\kiota-java\\components\\http\\okHttp\\src\\test\\java\\com\\microsoft\\kiota\\http\\OkHttpRequestAdapterTest.java",
      "className": "OkHttpRequestAdapterTest"
    },
    "statements": [
      {
        "type": "DECLARATION",
        "code": "final var authenticationProviderMock = mock(AuthenticationProvider.class);",
        "line": 179,
        "locate": "Test Case",
        "locationContext": {
          "methodName": "sendReturnsObjectOnContent",
          "methodAnnotations": [
            "@ParameterizedTest",
            "@ValueSource"
          ]
        }
      }
    ],
    "pattern_id": 2
  },
  {
    "variableName": "authenticationProviderMock",
    "variableType": "var",
    "mockedClass": "AuthenticationProvider",
    "isReuseableMock": false,
    "mockPattern": "Creation:\n\u2014 Local Mock Creation in Test Case\n\nStubbing:\n\u2014 None\n\nVerification:\n\u2014 None",
    "classContext": {
      "packageName": "com.microsoft.kiota.http",
      "filePath": "C:\\java tool\\Microsoft\\kiota-java\\components\\http\\okHttp\\src\\test\\java\\com\\microsoft\\kiota\\http\\OkHttpRequestAdapterTest.java",
      "className": "OkHttpRequestAdapterTest"
    },
    "statements": [
      {
        "type": "DECLARATION",
        "code": "final var authenticationProviderMock = mock(AuthenticationProvider.class);",
        "line": 240,
        "locate": "Test Case",
        "locationContext": {
          "methodName": "throwsAPIException",
          "methodAnnotations": [
            "@SuppressWarnings",
            "@ParameterizedTest",
            "@MethodSource"
          ]
        }
      }
    ],
    "pattern_id": 2
  },
  {
    "variableName": "request",
    "variableType": "var",
    "mockedClass": "var",
    "isReuseableMock": false,
    "mockPattern": "Creation:\n\u2014 Local Mock Creation in Test Case\n\nStubbing:\n\u2014 None\n\nVerification:\n\u2014 None",
    "classContext": {
      "packageName": "com.microsoft.kiota.http",
      "filePath": "C:\\java tool\\Microsoft\\kiota-java\\components\\http\\okHttp\\src\\test\\java\\com\\microsoft\\kiota\\http\\OkHttpRequestAdapterTest.java",
      "className": "OkHttpRequestAdapterTest"
    },
    "statements": [
      {
        "type": "DECLARATION",
        "code": "final var request = adapter.getRequestFromRequestInformation(requestInformation, mock(Span.class), mock(Span.class));",
        "line": 310,
        "locate": "Test Case",
        "locationContext": {
          "methodName": "getRequestFromRequestInformationHasCorrectContentLength_JsonPayload",
          "methodAnnotations": [
            "@Test"
          ]
        }
      }
    ],
    "pattern_id": 2
  },
  {
    "variableName": "authenticationProviderMock",
    "variableType": "var",
    "mockedClass": "AuthenticationProvider",
    "isReuseableMock": false,
    "mockPattern": "Creation:\n\u2014 Local Mock Creation in Test Case\n\nStubbing:\n\u2014 None\n\nVerification:\n\u2014 None",
    "classContext": {
      "packageName": "com.microsoft.kiota.http",
      "filePath": "C:\\java tool\\Microsoft\\kiota-java\\components\\http\\okHttp\\src\\test\\java\\com\\microsoft\\kiota\\http\\OkHttpRequestAdapterTest.java",
      "className": "OkHttpRequestAdapterTest"
    },
    "statements": [
      {
        "type": "DECLARATION",
        "code": "final var authenticationProviderMock = mock(AuthenticationProvider.class);",
        "line": 297,
        "locate": "Test Case",
        "locationContext": {
          "methodName": "getRequestFromRequestInformationHasCorrectContentLength_JsonPayload",
          "methodAnnotations": [
            "@Test"
          ]
        }
      }
    ],
    "pattern_id": 2
  },
  {
    "variableName": "request",
    "variableType": "var",
    "mockedClass": "var",
    "isReuseableMock": false,
    "mockPattern": "Creation:\n\u2014 Local Mock Creation in Test Case\n\nStubbing:\n\u2014 None\n\nVerification:\n\u2014 None",
    "classContext": {
      "packageName": "com.microsoft.kiota.http",
      "filePath": "C:\\java tool\\Microsoft\\kiota-java\\components\\http\\okHttp\\src\\test\\java\\com\\microsoft\\kiota\\http\\OkHttpRequestAdapterTest.java",
      "className": "OkHttpRequestAdapterTest"
    },
    "statements": [
      {
        "type": "DECLARATION",
        "code": "final var request = adapter.getRequestFromRequestInformation(requestInformation, mock(Span.class), mock(Span.class));",
        "line": 335,
        "locate": "Test Case",
        "locationContext": {
          "methodName": "getRequestFromRequestInformationIncludesContentLength_FilePayload",
          "methodAnnotations": [
            "@Test"
          ]
        }
      }
    ],
    "pattern_id": 2
  },
  {
    "variableName": "authenticationProviderMock",
    "variableType": "var",
    "mockedClass": "AuthenticationProvider",
    "isReuseableMock": false,
    "mockPattern": "Creation:\n\u2014 Local Mock Creation in Test Case\n\nStubbing:\n\u2014 None\n\nVerification:\n\u2014 None",
    "classContext": {
      "packageName": "com.microsoft.kiota.http",
      "filePath": "C:\\java tool\\Microsoft\\kiota-java\\components\\http\\okHttp\\src\\test\\java\\com\\microsoft\\kiota\\http\\OkHttpRequestAdapterTest.java",
      "className": "OkHttpRequestAdapterTest"
    },
    "statements": [
      {
        "type": "DECLARATION",
        "code": "final var authenticationProviderMock = mock(AuthenticationProvider.class);",
        "line": 323,
        "locate": "Test Case",
        "locationContext": {
          "methodName": "getRequestFromRequestInformationIncludesContentLength_FilePayload",
          "methodAnnotations": [
            "@Test"
          ]
        }
      }
    ],
    "pattern_id": 2
  },
  {
    "variableName": "request",
    "variableType": "var",
    "mockedClass": "var",
    "isReuseableMock": false,
    "mockPattern": "Creation:\n\u2014 Local Mock Creation in Test Case\n\nStubbing:\n\u2014 None\n\nVerification:\n\u2014 None",
    "classContext": {
      "packageName": "com.microsoft.kiota.http",
      "filePath": "C:\\java tool\\Microsoft\\kiota-java\\components\\http\\okHttp\\src\\test\\java\\com\\microsoft\\kiota\\http\\OkHttpRequestAdapterTest.java",
      "className": "OkHttpRequestAdapterTest"
    },
    "statements": [
      {
        "type": "DECLARATION",
        "code": "final var request = adapter.getRequestFromRequestInformation(requestInformation, mock(Span.class), mock(Span.class));",
        "line": 360,
        "locate": "Test Case",
        "locationContext": {
          "methodName": "getRequestFromRequestInformationWithoutContentLengthOverrideForStreamBody",
          "methodAnnotations": [
            "@Test"
          ]
        }
      }
    ],
    "pattern_id": 2
  },
  {
    "variableName": "authenticationProviderMock",
    "variableType": "var",
    "mockedClass": "AuthenticationProvider",
    "isReuseableMock": false,
    "mockPattern": "Creation:\n\u2014 Local Mock Creation in Test Case\n\nStubbing:\n\u2014 None\n\nVerification:\n\u2014 None",
    "classContext": {
      "packageName": "com.microsoft.kiota.http",
      "filePath": "C:\\java tool\\Microsoft\\kiota-java\\components\\http\\okHttp\\src\\test\\java\\com\\microsoft\\kiota\\http\\OkHttpRequestAdapterTest.java",
      "className": "OkHttpRequestAdapterTest"
    },
    "statements": [
      {
        "type": "DECLARATION",
        "code": "final var authenticationProviderMock = mock(AuthenticationProvider.class);",
        "line": 350,
        "locate": "Test Case",
        "locationContext": {
          "methodName": "getRequestFromRequestInformationWithoutContentLengthOverrideForStreamBody",
          "methodAnnotations": [
            "@Test"
          ]
        }
      }
    ],
    "pattern_id": 2
  },
  {
    "variableName": "request",
    "variableType": "var",
    "mockedClass": "var",
    "isReuseableMock": false,
    "mockPattern": "Creation:\n\u2014 Local Mock Creation in Test Case\n\nStubbing:\n\u2014 None\n\nVerification:\n\u2014 None",
    "classContext": {
      "packageName": "com.microsoft.kiota.http",
      "filePath": "C:\\java tool\\Microsoft\\kiota-java\\components\\http\\okHttp\\src\\test\\java\\com\\microsoft\\kiota\\http\\OkHttpRequestAdapterTest.java",
      "className": "OkHttpRequestAdapterTest"
    },
    "statements": [
      {
        "type": "DECLARATION",
        "code": "final var request = adapter.getRequestFromRequestInformation(requestInformation, mock(Span.class), mock(Span.class));",
        "line": 386,
        "locate": "Test Case",
        "locationContext": {
          "methodName": "getRequestFromRequestInformationWithoutContentLengthOverrideForJsonPayload",
          "methodAnnotations": [
            "@Test"
          ]
        }
      }
    ],
    "pattern_id": 2
  },
  {
    "variableName": "authenticationProviderMock",
    "variableType": "var",
    "mockedClass": "AuthenticationProvider",
    "isReuseableMock": false,
    "mockPattern": "Creation:\n\u2014 Local Mock Creation in Test Case\n\nStubbing:\n\u2014 None\n\nVerification:\n\u2014 None",
    "classContext": {
      "packageName": "com.microsoft.kiota.http",
      "filePath": "C:\\java tool\\Microsoft\\kiota-java\\components\\http\\okHttp\\src\\test\\java\\com\\microsoft\\kiota\\http\\OkHttpRequestAdapterTest.java",
      "className": "OkHttpRequestAdapterTest"
    },
    "statements": [
      {
        "type": "DECLARATION",
        "code": "final var authenticationProviderMock = mock(AuthenticationProvider.class);",
        "line": 374,
        "locate": "Test Case",
        "locationContext": {
          "methodName": "getRequestFromRequestInformationWithoutContentLengthOverrideForJsonPayload",
          "methodAnnotations": [
            "@Test"
          ]
        }
      }
    ],
    "pattern_id": 2
  },
  {
    "variableName": "request",
    "variableType": "var",
    "mockedClass": "var",
    "isReuseableMock": false,
    "mockPattern": "Creation:\n\u2014 Local Mock Creation in Test Case\n\nStubbing:\n\u2014 None\n\nVerification:\n\u2014 None",
    "classContext": {
      "packageName": "com.microsoft.kiota.http",
      "filePath": "C:\\java tool\\Microsoft\\kiota-java\\components\\http\\okHttp\\src\\test\\java\\com\\microsoft\\kiota\\http\\OkHttpRequestAdapterTest.java",
      "className": "OkHttpRequestAdapterTest"
    },
    "statements": [
      {
        "type": "DECLARATION",
        "code": "final var request = adapter.getRequestFromRequestInformation(requestInformation, mock(Span.class), mock(Span.class));",
        "line": 407,
        "locate": "Test Case",
        "locationContext": {
          "methodName": "getRequestFromRequestInformationWithoutContentLengthOverrideWithEmptyPayload",
          "methodAnnotations": [
            "@Test"
          ]
        }
      }
    ],
    "pattern_id": 2
  },
  {
    "variableName": "authenticationProviderMock",
    "variableType": "var",
    "mockedClass": "AuthenticationProvider",
    "isReuseableMock": false,
    "mockPattern": "Creation:\n\u2014 Local Mock Creation in Test Case\n\nStubbing:\n\u2014 None\n\nVerification:\n\u2014 None",
    "classContext": {
      "packageName": "com.microsoft.kiota.http",
      "filePath": "C:\\java tool\\Microsoft\\kiota-java\\components\\http\\okHttp\\src\\test\\java\\com\\microsoft\\kiota\\http\\OkHttpRequestAdapterTest.java",
      "className": "OkHttpRequestAdapterTest"
    },
    "statements": [
      {
        "type": "DECLARATION",
        "code": "final var authenticationProviderMock = mock(AuthenticationProvider.class);",
        "line": 399,
        "locate": "Test Case",
        "locationContext": {
          "methodName": "getRequestFromRequestInformationWithoutContentLengthOverrideWithEmptyPayload",
          "methodAnnotations": [
            "@Test"
          ]
        }
      }
    ],
    "pattern_id": 2
  }
]