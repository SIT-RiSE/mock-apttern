[
  {
    "variableName": "content",
    "variableType": "FileInputStream",
    "mockedClass": "FileInputStream",
    "isReuseableMock": "Fully Localized",
    "mockPattern": "Creation:\n\u2014 Local Mock Creation in Test Case\n\nStubbing:\n\u2014 None\n\nVerification:\n\u2014 None",
    "classContext": {
      "packageName": "com.microsoft.kiota.http",
      "filePath": "C:\\java tool\\Microsoft\\kiota-java\\components\\http\\okHttp\\src\\test\\java\\com\\microsoft\\kiota\\http\\OkHttpRequestAdapterTest.java",
      "className": "OkHttpRequestAdapterTest"
    },
    "statements": [
      {
        "type": "DECLARATION",
        "code": "try (FileInputStream content = new FileInputStream(testFile)) {\r\n    requestInformation.setStreamContent(content, \"application/octet-stream\");\r\n    final var adapter = new OkHttpRequestAdapter(authenticationProviderMock);\r\n    final var request = adapter.getRequestFromRequestInformation(requestInformation, mock(Span.class), mock(Span.class));\r\n    assertEquals(String.valueOf(contentLength), request.headers().get(\"Content-Length\"));\r\n    assertEquals(\"application/octet-stream\", request.headers().get(\"Content-Type\"));\r\n    assertNotNull(request.body());\r\n    assertEquals(request.body().contentLength(), contentLength);\r\n    assertEquals(request.body().contentType(), MediaType.parse(\"application/octet-stream\"));\r\n}",
        "line": 331,
        "locate": "Test Case",
        "locationContext": {
          "methodName": "getRequestFromRequestInformationIncludesContentLength_FilePayload",
          "methodAnnotations": [
            "@Test"
          ]
        }
      }
    ],
    "pattern_id": 2
  },
  {
    "variableName": "content",
    "variableType": "FileInputStream",
    "mockedClass": "FileInputStream",
    "isReuseableMock": "Fully Localized",
    "mockPattern": "Creation:\n\u2014 Local Mock Creation in Test Case\n\nStubbing:\n\u2014 None\n\nVerification:\n\u2014 None",
    "classContext": {
      "packageName": "com.microsoft.kiota.http",
      "filePath": "C:\\java tool\\Microsoft\\kiota-java\\components\\http\\okHttp\\src\\test\\java\\com\\microsoft\\kiota\\http\\OkHttpRequestAdapterTest.java",
      "className": "OkHttpRequestAdapterTest"
    },
    "statements": [
      {
        "type": "DECLARATION",
        "code": "try (FileInputStream content = new FileInputStream(testFile)) {\r\n    requestInformation.setStreamContent(content, \"application/octet-stream\");\r\n    final var adapter = new OkHttpRequestAdapter(authenticationProviderMock);\r\n    final var request = adapter.getRequestFromRequestInformation(requestInformation, mock(Span.class), mock(Span.class));\r\n    assertEquals(\"application/octet-stream\", request.headers().get(\"Content-Type\"));\r\n    assertNotNull(request.body());\r\n    assertEquals(-1L, request.body().contentLength());\r\n    assertEquals(request.body().contentType(), MediaType.parse(\"application/octet-stream\"));\r\n}",
        "line": 356,
        "locate": "Test Case",
        "locationContext": {
          "methodName": "getRequestFromRequestInformationWithoutContentLengthOverrideForStreamBody",
          "methodAnnotations": [
            "@Test"
          ]
        }
      }
    ],
    "pattern_id": 2
  }
]