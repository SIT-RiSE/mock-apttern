[
  {
    "variableName": "groupByColumnSelectorPlus",
    "variableType": "GroupByColumnSelectorPlus",
    "mockedClass": "GroupByColumnSelectorPlus",
    "isReuseableMock": "Fully Localized",
    "mockPattern": "Creation:\n\u2014 Local Mock Creation in Test Case\n\nStubbing:\n\u2014 Test Case\n\nVerification:\n\u2014 None",
    "classContext": {
      "packageName": "org.apache.druid.query.groupby.epinephelinae.column",
      "filePath": "C:\\java tool\\Apache\\druid\\processing\\src\\test\\java\\org\\apache\\druid\\query\\groupby\\epinephelinae\\column\\ArrayDoubleGroupByColumnSelectorStrategyTest.java",
      "className": "ArrayDoubleGroupByColumnSelectorStrategyTest"
    },
    "statements": [
      {
        "type": "DECLARATION",
        "code": "GroupByColumnSelectorPlus groupByColumnSelectorPlus = Mockito.mock(GroupByColumnSelectorPlus.class);",
        "line": 114,
        "locate": "Test Case",
        "locationContext": {
          "methodName": "testSanity",
          "methodAnnotations": [
            "@Test"
          ]
        }
      },
      {
        "type": "STUBBING",
        "code": "Mockito.when(groupByColumnSelectorPlus.getResultRowPosition()).thenReturn(0);",
        "line": 115,
        "locate": "Test Case",
        "locationContext": {
          "methodName": "testSanity",
          "methodAnnotations": [
            "@Test"
          ]
        }
      }
    ],
    "pattern_id": 1
  },
  {
    "variableName": "groupByColumnSelectorPlus",
    "variableType": "GroupByColumnSelectorPlus",
    "mockedClass": "GroupByColumnSelectorPlus",
    "isReuseableMock": "Fully Localized",
    "mockPattern": "Creation:\n\u2014 Local Mock Creation in Test Case\n\nStubbing:\n\u2014 Test Case\n\nVerification:\n\u2014 None",
    "classContext": {
      "packageName": "org.apache.druid.query.groupby.epinephelinae.column",
      "filePath": "C:\\java tool\\Apache\\druid\\processing\\src\\test\\java\\org\\apache\\druid\\query\\groupby\\epinephelinae\\column\\ArrayDoubleGroupByColumnSelectorStrategyTest.java",
      "className": "ArrayDoubleGroupByColumnSelectorStrategyTest"
    },
    "statements": [
      {
        "type": "DECLARATION",
        "code": "GroupByColumnSelectorPlus groupByColumnSelectorPlus = Mockito.mock(GroupByColumnSelectorPlus.class);",
        "line": 131,
        "locate": "Test Case",
        "locationContext": {
          "methodName": "testAddingInDictionary",
          "methodAnnotations": [
            "@Test"
          ]
        }
      },
      {
        "type": "STUBBING",
        "code": "Mockito.when(groupByColumnSelectorPlus.getResultRowPosition()).thenReturn(0);",
        "line": 132,
        "locate": "Test Case",
        "locationContext": {
          "methodName": "testAddingInDictionary",
          "methodAnnotations": [
            "@Test"
          ]
        }
      }
    ],
    "pattern_id": 1
  },
  {
    "variableName": "groupByColumnSelectorPlus",
    "variableType": "GroupByColumnSelectorPlus",
    "mockedClass": "GroupByColumnSelectorPlus",
    "isReuseableMock": "Fully Localized",
    "mockPattern": "Creation:\n\u2014 Local Mock Creation in Test Case\n\nStubbing:\n\u2014 Test Case\n\nVerification:\n\u2014 None",
    "classContext": {
      "packageName": "org.apache.druid.query.groupby.epinephelinae.column",
      "filePath": "C:\\java tool\\Apache\\druid\\processing\\src\\test\\java\\org\\apache\\druid\\query\\groupby\\epinephelinae\\column\\ArrayDoubleGroupByColumnSelectorStrategyTest.java",
      "className": "ArrayDoubleGroupByColumnSelectorStrategyTest"
    },
    "statements": [
      {
        "type": "DECLARATION",
        "code": "GroupByColumnSelectorPlus groupByColumnSelectorPlus = Mockito.mock(GroupByColumnSelectorPlus.class);",
        "line": 147,
        "locate": "Test Case",
        "locationContext": {
          "methodName": "testAddingInDictionaryWithObjects",
          "methodAnnotations": [
            "@Test"
          ]
        }
      },
      {
        "type": "STUBBING",
        "code": "Mockito.when(groupByColumnSelectorPlus.getResultRowPosition()).thenReturn(0);",
        "line": 148,
        "locate": "Test Case",
        "locationContext": {
          "methodName": "testAddingInDictionaryWithObjects",
          "methodAnnotations": [
            "@Test"
          ]
        }
      }
    ],
    "pattern_id": 1
  },
  {
    "variableName": "groupByColumnSelectorPlus",
    "variableType": "GroupByColumnSelectorPlus",
    "mockedClass": "GroupByColumnSelectorPlus",
    "isReuseableMock": "Fully Localized",
    "mockPattern": "Creation:\n\u2014 Local Mock Creation in Test Case\n\nStubbing:\n\u2014 Test Case\n\nVerification:\n\u2014 None",
    "classContext": {
      "packageName": "org.apache.druid.query.groupby.epinephelinae.column",
      "filePath": "C:\\java tool\\Apache\\druid\\processing\\src\\test\\java\\org\\apache\\druid\\query\\groupby\\epinephelinae\\column\\ArrayLongGroupByColumnSelectorStrategyTest.java",
      "className": "ArrayLongGroupByColumnSelectorStrategyTest"
    },
    "statements": [
      {
        "type": "DECLARATION",
        "code": "GroupByColumnSelectorPlus groupByColumnSelectorPlus = Mockito.mock(GroupByColumnSelectorPlus.class);",
        "line": 117,
        "locate": "Test Case",
        "locationContext": {
          "methodName": "testSanity",
          "methodAnnotations": [
            "@Test"
          ]
        }
      },
      {
        "type": "STUBBING",
        "code": "Mockito.when(groupByColumnSelectorPlus.getResultRowPosition()).thenReturn(0);",
        "line": 118,
        "locate": "Test Case",
        "locationContext": {
          "methodName": "testSanity",
          "methodAnnotations": [
            "@Test"
          ]
        }
      }
    ],
    "pattern_id": 1
  },
  {
    "variableName": "groupByColumnSelectorPlus",
    "variableType": "GroupByColumnSelectorPlus",
    "mockedClass": "GroupByColumnSelectorPlus",
    "isReuseableMock": "Fully Localized",
    "mockPattern": "Creation:\n\u2014 Local Mock Creation in Test Case\n\nStubbing:\n\u2014 Test Case\n\nVerification:\n\u2014 None",
    "classContext": {
      "packageName": "org.apache.druid.query.groupby.epinephelinae.column",
      "filePath": "C:\\java tool\\Apache\\druid\\processing\\src\\test\\java\\org\\apache\\druid\\query\\groupby\\epinephelinae\\column\\ArrayLongGroupByColumnSelectorStrategyTest.java",
      "className": "ArrayLongGroupByColumnSelectorStrategyTest"
    },
    "statements": [
      {
        "type": "DECLARATION",
        "code": "GroupByColumnSelectorPlus groupByColumnSelectorPlus = Mockito.mock(GroupByColumnSelectorPlus.class);",
        "line": 134,
        "locate": "Test Case",
        "locationContext": {
          "methodName": "testAddingInDictionary",
          "methodAnnotations": [
            "@Test"
          ]
        }
      },
      {
        "type": "STUBBING",
        "code": "Mockito.when(groupByColumnSelectorPlus.getResultRowPosition()).thenReturn(0);",
        "line": 135,
        "locate": "Test Case",
        "locationContext": {
          "methodName": "testAddingInDictionary",
          "methodAnnotations": [
            "@Test"
          ]
        }
      }
    ],
    "pattern_id": 1
  },
  {
    "variableName": "groupByColumnSelectorPlus",
    "variableType": "GroupByColumnSelectorPlus",
    "mockedClass": "GroupByColumnSelectorPlus",
    "isReuseableMock": "Fully Localized",
    "mockPattern": "Creation:\n\u2014 Local Mock Creation in Test Case\n\nStubbing:\n\u2014 Test Case\n\nVerification:\n\u2014 None",
    "classContext": {
      "packageName": "org.apache.druid.query.groupby.epinephelinae.column",
      "filePath": "C:\\java tool\\Apache\\druid\\processing\\src\\test\\java\\org\\apache\\druid\\query\\groupby\\epinephelinae\\column\\ArrayLongGroupByColumnSelectorStrategyTest.java",
      "className": "ArrayLongGroupByColumnSelectorStrategyTest"
    },
    "statements": [
      {
        "type": "DECLARATION",
        "code": "GroupByColumnSelectorPlus groupByColumnSelectorPlus = Mockito.mock(GroupByColumnSelectorPlus.class);",
        "line": 150,
        "locate": "Test Case",
        "locationContext": {
          "methodName": "testAddingInDictionaryWithObjects",
          "methodAnnotations": [
            "@Test"
          ]
        }
      },
      {
        "type": "STUBBING",
        "code": "Mockito.when(groupByColumnSelectorPlus.getResultRowPosition()).thenReturn(0);",
        "line": 151,
        "locate": "Test Case",
        "locationContext": {
          "methodName": "testAddingInDictionaryWithObjects",
          "methodAnnotations": [
            "@Test"
          ]
        }
      }
    ],
    "pattern_id": 1
  },
  {
    "variableName": "groupByColumnSelectorPlus",
    "variableType": "GroupByColumnSelectorPlus",
    "mockedClass": "GroupByColumnSelectorPlus",
    "isReuseableMock": "Fully Localized",
    "mockPattern": "Creation:\n\u2014 Local Mock Creation in Test Case\n\nStubbing:\n\u2014 Test Case\n\nVerification:\n\u2014 None",
    "classContext": {
      "packageName": "org.apache.druid.query.groupby.epinephelinae.column",
      "filePath": "C:\\java tool\\Apache\\druid\\processing\\src\\test\\java\\org\\apache\\druid\\query\\groupby\\epinephelinae\\column\\ArrayStringGroupByColumnSelectorStrategyTest.java",
      "className": "ArrayStringGroupByColumnSelectorStrategyTest"
    },
    "statements": [
      {
        "type": "DECLARATION",
        "code": "GroupByColumnSelectorPlus groupByColumnSelectorPlus = Mockito.mock(GroupByColumnSelectorPlus.class);",
        "line": 121,
        "locate": "Test Case",
        "locationContext": {
          "methodName": "testSanity",
          "methodAnnotations": [
            "@Test"
          ]
        }
      },
      {
        "type": "STUBBING",
        "code": "Mockito.when(groupByColumnSelectorPlus.getResultRowPosition()).thenReturn(0);",
        "line": 122,
        "locate": "Test Case",
        "locationContext": {
          "methodName": "testSanity",
          "methodAnnotations": [
            "@Test"
          ]
        }
      }
    ],
    "pattern_id": 1
  },
  {
    "variableName": "groupByColumnSelectorPlus",
    "variableType": "GroupByColumnSelectorPlus",
    "mockedClass": "GroupByColumnSelectorPlus",
    "isReuseableMock": "Fully Localized",
    "mockPattern": "Creation:\n\u2014 Local Mock Creation in Test Case\n\nStubbing:\n\u2014 Test Case\n\nVerification:\n\u2014 None",
    "classContext": {
      "packageName": "org.apache.druid.query.groupby.epinephelinae.column",
      "filePath": "C:\\java tool\\Apache\\druid\\processing\\src\\test\\java\\org\\apache\\druid\\query\\groupby\\epinephelinae\\column\\ArrayStringGroupByColumnSelectorStrategyTest.java",
      "className": "ArrayStringGroupByColumnSelectorStrategyTest"
    },
    "statements": [
      {
        "type": "DECLARATION",
        "code": "GroupByColumnSelectorPlus groupByColumnSelectorPlus = Mockito.mock(GroupByColumnSelectorPlus.class);",
        "line": 138,
        "locate": "Test Case",
        "locationContext": {
          "methodName": "testAddingInDictionary",
          "methodAnnotations": [
            "@Test"
          ]
        }
      },
      {
        "type": "STUBBING",
        "code": "Mockito.when(groupByColumnSelectorPlus.getResultRowPosition()).thenReturn(0);",
        "line": 139,
        "locate": "Test Case",
        "locationContext": {
          "methodName": "testAddingInDictionary",
          "methodAnnotations": [
            "@Test"
          ]
        }
      }
    ],
    "pattern_id": 1
  },
  {
    "variableName": "groupByColumnSelectorPlus",
    "variableType": "GroupByColumnSelectorPlus",
    "mockedClass": "GroupByColumnSelectorPlus",
    "isReuseableMock": "Fully Localized",
    "mockPattern": "Creation:\n\u2014 Local Mock Creation in Test Case\n\nStubbing:\n\u2014 Test Case\n\nVerification:\n\u2014 None",
    "classContext": {
      "packageName": "org.apache.druid.query.groupby.epinephelinae.column",
      "filePath": "C:\\java tool\\Apache\\druid\\processing\\src\\test\\java\\org\\apache\\druid\\query\\groupby\\epinephelinae\\column\\ArrayStringGroupByColumnSelectorStrategyTest.java",
      "className": "ArrayStringGroupByColumnSelectorStrategyTest"
    },
    "statements": [
      {
        "type": "DECLARATION",
        "code": "GroupByColumnSelectorPlus groupByColumnSelectorPlus = Mockito.mock(GroupByColumnSelectorPlus.class);",
        "line": 154,
        "locate": "Test Case",
        "locationContext": {
          "methodName": "testAddingInDictionaryWithObjects",
          "methodAnnotations": [
            "@Test"
          ]
        }
      },
      {
        "type": "STUBBING",
        "code": "Mockito.when(groupByColumnSelectorPlus.getResultRowPosition()).thenReturn(0);",
        "line": 155,
        "locate": "Test Case",
        "locationContext": {
          "methodName": "testAddingInDictionaryWithObjects",
          "methodAnnotations": [
            "@Test"
          ]
        }
      }
    ],
    "pattern_id": 1
  }
]