[
  {
    "variableName": "segment",
    "variableType": "DataSegment",
    "mockedClass": "DataSegment",
    "isReuseableMock": false,
    "mockPattern": "Creation:\n\u2014 Local Mock Creation in Test Case\n\nStubbing:\n\u2014 Test Case\n\nVerification:\n\u2014 None",
    "classContext": {
      "packageName": "org.apache.druid.segment.loading",
      "filePath": "C:\\java tool\\Apache\\druid\\server\\src\\test\\java\\org\\apache\\druid\\segment\\loading\\OmniDataSegmentArchiverTest.java",
      "className": "OmniDataSegmentArchiverTest"
    },
    "statements": [
      {
        "type": "DECLARATION",
        "code": "final DataSegment segment = Mockito.mock(DataSegment.class);",
        "line": 43,
        "locate": "Test Case",
        "locationContext": {
          "methodName": "testArchiveSegmentWithType",
          "methodAnnotations": [
            "@Test"
          ]
        }
      },
      {
        "type": "STUBBING",
        "code": "Mockito.when(segment.getLoadSpec()).thenReturn(ImmutableMap.of(\"type\", \"sane\"));",
        "line": 44,
        "locate": "Test Case",
        "locationContext": {
          "methodName": "testArchiveSegmentWithType",
          "methodAnnotations": [
            "@Test"
          ]
        }
      }
    ],
    "pattern_id": 1
  },
  {
    "variableName": "segment",
    "variableType": "DataSegment",
    "mockedClass": "DataSegment",
    "isReuseableMock": false,
    "mockPattern": "Creation:\n\u2014 Local Mock Creation in Test Case\n\nStubbing:\n\u2014 Test Case\n\nVerification:\n\u2014 None",
    "classContext": {
      "packageName": "org.apache.druid.segment.loading",
      "filePath": "C:\\java tool\\Apache\\druid\\server\\src\\test\\java\\org\\apache\\druid\\segment\\loading\\OmniDataSegmentArchiverTest.java",
      "className": "OmniDataSegmentArchiverTest"
    },
    "statements": [
      {
        "type": "DECLARATION",
        "code": "final DataSegment segment = Mockito.mock(DataSegment.class);",
        "line": 55,
        "locate": "Test Case",
        "locationContext": {
          "methodName": "testArchiveSegmentUnknowType",
          "methodAnnotations": [
            "@Test"
          ]
        }
      },
      {
        "type": "STUBBING",
        "code": "Mockito.when(segment.getLoadSpec()).thenReturn(ImmutableMap.of(\"type\", \"unknown-type\"));",
        "line": 56,
        "locate": "Test Case",
        "locationContext": {
          "methodName": "testArchiveSegmentUnknowType",
          "methodAnnotations": [
            "@Test"
          ]
        }
      }
    ],
    "pattern_id": 1
  },
  {
    "variableName": "segment",
    "variableType": "DataSegment",
    "mockedClass": "DataSegment",
    "isReuseableMock": false,
    "mockPattern": "Creation:\n\u2014 Local Mock Creation in Test Case\n\nStubbing:\n\u2014 Test Case\n\nVerification:\n\u2014 None",
    "classContext": {
      "packageName": "org.apache.druid.segment.loading",
      "filePath": "C:\\java tool\\Apache\\druid\\server\\src\\test\\java\\org\\apache\\druid\\segment\\loading\\OmniDataSegmentArchiverTest.java",
      "className": "OmniDataSegmentArchiverTest"
    },
    "statements": [
      {
        "type": "DECLARATION",
        "code": "final DataSegment segment = Mockito.mock(DataSegment.class);",
        "line": 70,
        "locate": "Test Case",
        "locationContext": {
          "methodName": "testBadSegmentArchiverAccessException",
          "methodAnnotations": [
            "@Test"
          ]
        }
      },
      {
        "type": "STUBBING",
        "code": "Mockito.when(segment.getLoadSpec()).thenReturn(ImmutableMap.of(\"type\", \"bad\"));",
        "line": 71,
        "locate": "Test Case",
        "locationContext": {
          "methodName": "testBadSegmentArchiverAccessException",
          "methodAnnotations": [
            "@Test"
          ]
        }
      }
    ],
    "pattern_id": 1
  },
  {
    "variableName": "segment",
    "variableType": "DataSegment",
    "mockedClass": "DataSegment",
    "isReuseableMock": false,
    "mockPattern": "Creation:\n\u2014 Local Mock Creation in Test Case\n\nStubbing:\n\u2014 Test Case\n\nVerification:\n\u2014 None",
    "classContext": {
      "packageName": "org.apache.druid.segment.loading",
      "filePath": "C:\\java tool\\Apache\\druid\\server\\src\\test\\java\\org\\apache\\druid\\segment\\loading\\OmniDataSegmentKillerTest.java",
      "className": "OmniDataSegmentKillerTest"
    },
    "statements": [
      {
        "type": "DECLARATION",
        "code": "final DataSegment segment = Mockito.mock(DataSegment.class);",
        "line": 52,
        "locate": "Test Case",
        "locationContext": {
          "methodName": "testKillSegmentWithType",
          "methodAnnotations": [
            "@Test"
          ]
        }
      },
      {
        "type": "STUBBING",
        "code": "Mockito.when(segment.isTombstone()).thenReturn(false);",
        "line": 53,
        "locate": "Test Case",
        "locationContext": {
          "methodName": "testKillSegmentWithType",
          "methodAnnotations": [
            "@Test"
          ]
        }
      },
      {
        "type": "STUBBING",
        "code": "Mockito.when(segment.getLoadSpec()).thenReturn(ImmutableMap.of(\"type\", \"sane\"));",
        "line": 54,
        "locate": "Test Case",
        "locationContext": {
          "methodName": "testKillSegmentWithType",
          "methodAnnotations": [
            "@Test"
          ]
        }
      }
    ],
    "pattern_id": 1
  },
  {
    "variableName": "segment",
    "variableType": "DataSegment",
    "mockedClass": "DataSegment",
    "isReuseableMock": false,
    "mockPattern": "Creation:\n\u2014 Local Mock Creation in Test Case\n\nStubbing:\n\u2014 Test Case\n\nVerification:\n\u2014 None",
    "classContext": {
      "packageName": "org.apache.druid.segment.loading",
      "filePath": "C:\\java tool\\Apache\\druid\\server\\src\\test\\java\\org\\apache\\druid\\segment\\loading\\OmniDataSegmentKillerTest.java",
      "className": "OmniDataSegmentKillerTest"
    },
    "statements": [
      {
        "type": "DECLARATION",
        "code": "final DataSegment segment = Mockito.mock(DataSegment.class);",
        "line": 65,
        "locate": "Test Case",
        "locationContext": {
          "methodName": "testKillSegmentUnknowType",
          "methodAnnotations": [
            "@Test"
          ]
        }
      },
      {
        "type": "STUBBING",
        "code": "Mockito.when(segment.getLoadSpec()).thenReturn(ImmutableMap.of(\"type\", \"unknown-type\"));",
        "line": 66,
        "locate": "Test Case",
        "locationContext": {
          "methodName": "testKillSegmentUnknowType",
          "methodAnnotations": [
            "@Test"
          ]
        }
      }
    ],
    "pattern_id": 1
  },
  {
    "variableName": "segment",
    "variableType": "DataSegment",
    "mockedClass": "DataSegment",
    "isReuseableMock": false,
    "mockPattern": "Creation:\n\u2014 Local Mock Creation in Test Case\n\nStubbing:\n\u2014 Test Case\n\nVerification:\n\u2014 None",
    "classContext": {
      "packageName": "org.apache.druid.segment.loading",
      "filePath": "C:\\java tool\\Apache\\druid\\server\\src\\test\\java\\org\\apache\\druid\\segment\\loading\\OmniDataSegmentKillerTest.java",
      "className": "OmniDataSegmentKillerTest"
    },
    "statements": [
      {
        "type": "DECLARATION",
        "code": "final DataSegment segment = Mockito.mock(DataSegment.class);",
        "line": 80,
        "locate": "Test Case",
        "locationContext": {
          "methodName": "testBadSegmentKillerAccessException",
          "methodAnnotations": [
            "@Test"
          ]
        }
      },
      {
        "type": "STUBBING",
        "code": "Mockito.when(segment.getLoadSpec()).thenReturn(ImmutableMap.of(\"type\", \"bad\"));",
        "line": 81,
        "locate": "Test Case",
        "locationContext": {
          "methodName": "testBadSegmentKillerAccessException",
          "methodAnnotations": [
            "@Test"
          ]
        }
      }
    ],
    "pattern_id": 1
  },
  {
    "variableName": "segment2",
    "variableType": "DataSegment",
    "mockedClass": "DataSegment",
    "isReuseableMock": false,
    "mockPattern": "Creation:\n\u2014 Local Mock Creation in Test Case\n\nStubbing:\n\u2014 Test Case\n\nVerification:\n\u2014 None",
    "classContext": {
      "packageName": "org.apache.druid.segment.loading",
      "filePath": "C:\\java tool\\Apache\\druid\\server\\src\\test\\java\\org\\apache\\druid\\segment\\loading\\OmniDataSegmentKillerTest.java",
      "className": "OmniDataSegmentKillerTest"
    },
    "statements": [
      {
        "type": "DECLARATION",
        "code": "final DataSegment segment2 = Mockito.mock(DataSegment.class);",
        "line": 148,
        "locate": "Test Case",
        "locationContext": {
          "methodName": "testKillMultipleSegmentsWithType",
          "methodAnnotations": [
            "@Test"
          ]
        }
      },
      {
        "type": "STUBBING",
        "code": "Mockito.when(segment2.isTombstone()).thenReturn(false);",
        "line": 152,
        "locate": "Test Case",
        "locationContext": {
          "methodName": "testKillMultipleSegmentsWithType",
          "methodAnnotations": [
            "@Test"
          ]
        }
      },
      {
        "type": "STUBBING",
        "code": "Mockito.when(segment2.getLoadSpec()).thenReturn(ImmutableMap.of(\"type\", \"sane\"));",
        "line": 153,
        "locate": "Test Case",
        "locationContext": {
          "methodName": "testKillMultipleSegmentsWithType",
          "methodAnnotations": [
            "@Test"
          ]
        }
      }
    ],
    "pattern_id": 1
  },
  {
    "variableName": "segment1",
    "variableType": "DataSegment",
    "mockedClass": "DataSegment",
    "isReuseableMock": false,
    "mockPattern": "Creation:\n\u2014 Local Mock Creation in Test Case\n\nStubbing:\n\u2014 Test Case\n\nVerification:\n\u2014 None",
    "classContext": {
      "packageName": "org.apache.druid.segment.loading",
      "filePath": "C:\\java tool\\Apache\\druid\\server\\src\\test\\java\\org\\apache\\druid\\segment\\loading\\OmniDataSegmentKillerTest.java",
      "className": "OmniDataSegmentKillerTest"
    },
    "statements": [
      {
        "type": "DECLARATION",
        "code": "final DataSegment segment1 = Mockito.mock(DataSegment.class);",
        "line": 147,
        "locate": "Test Case",
        "locationContext": {
          "methodName": "testKillMultipleSegmentsWithType",
          "methodAnnotations": [
            "@Test"
          ]
        }
      },
      {
        "type": "STUBBING",
        "code": "Mockito.when(segment1.isTombstone()).thenReturn(false);",
        "line": 150,
        "locate": "Test Case",
        "locationContext": {
          "methodName": "testKillMultipleSegmentsWithType",
          "methodAnnotations": [
            "@Test"
          ]
        }
      },
      {
        "type": "STUBBING",
        "code": "Mockito.when(segment1.getLoadSpec()).thenReturn(ImmutableMap.of(\"type\", \"sane\"));",
        "line": 151,
        "locate": "Test Case",
        "locationContext": {
          "methodName": "testKillMultipleSegmentsWithType",
          "methodAnnotations": [
            "@Test"
          ]
        }
      }
    ],
    "pattern_id": 1
  },
  {
    "variableName": "segment3",
    "variableType": "DataSegment",
    "mockedClass": "DataSegment",
    "isReuseableMock": false,
    "mockPattern": "Creation:\n\u2014 Local Mock Creation in Test Case\n\nStubbing:\n\u2014 Test Case\n\nVerification:\n\u2014 None",
    "classContext": {
      "packageName": "org.apache.druid.segment.loading",
      "filePath": "C:\\java tool\\Apache\\druid\\server\\src\\test\\java\\org\\apache\\druid\\segment\\loading\\OmniDataSegmentKillerTest.java",
      "className": "OmniDataSegmentKillerTest"
    },
    "statements": [
      {
        "type": "DECLARATION",
        "code": "final DataSegment segment3 = Mockito.mock(DataSegment.class);",
        "line": 149,
        "locate": "Test Case",
        "locationContext": {
          "methodName": "testKillMultipleSegmentsWithType",
          "methodAnnotations": [
            "@Test"
          ]
        }
      },
      {
        "type": "STUBBING",
        "code": "Mockito.when(segment3.isTombstone()).thenReturn(false);",
        "line": 154,
        "locate": "Test Case",
        "locationContext": {
          "methodName": "testKillMultipleSegmentsWithType",
          "methodAnnotations": [
            "@Test"
          ]
        }
      },
      {
        "type": "STUBBING",
        "code": "Mockito.when(segment3.getLoadSpec()).thenReturn(ImmutableMap.of(\"type\", \"sane_2\"));",
        "line": 155,
        "locate": "Test Case",
        "locationContext": {
          "methodName": "testKillMultipleSegmentsWithType",
          "methodAnnotations": [
            "@Test"
          ]
        }
      }
    ],
    "pattern_id": 1
  },
  {
    "variableName": "segment",
    "variableType": "DataSegment",
    "mockedClass": "DataSegment",
    "isReuseableMock": false,
    "mockPattern": "Creation:\n\u2014 Local Mock Creation in Test Case\n\nStubbing:\n\u2014 Test Case\n\nVerification:\n\u2014 None",
    "classContext": {
      "packageName": "org.apache.druid.segment.loading",
      "filePath": "C:\\java tool\\Apache\\druid\\server\\src\\test\\java\\org\\apache\\druid\\segment\\loading\\OmniDataSegmentMoverTest.java",
      "className": "OmniDataSegmentMoverTest"
    },
    "statements": [
      {
        "type": "DECLARATION",
        "code": "final DataSegment segment = Mockito.mock(DataSegment.class);",
        "line": 45,
        "locate": "Test Case",
        "locationContext": {
          "methodName": "testMoveSegmentWithType",
          "methodAnnotations": [
            "@Test"
          ]
        }
      },
      {
        "type": "STUBBING",
        "code": "Mockito.when(segment.getLoadSpec()).thenReturn(ImmutableMap.of(\"type\", \"sane\"));",
        "line": 46,
        "locate": "Test Case",
        "locationContext": {
          "methodName": "testMoveSegmentWithType",
          "methodAnnotations": [
            "@Test"
          ]
        }
      }
    ],
    "pattern_id": 1
  },
  {
    "variableName": "segment",
    "variableType": "DataSegment",
    "mockedClass": "DataSegment",
    "isReuseableMock": false,
    "mockPattern": "Creation:\n\u2014 Local Mock Creation in Test Case\n\nStubbing:\n\u2014 Test Case\n\nVerification:\n\u2014 None",
    "classContext": {
      "packageName": "org.apache.druid.segment.loading",
      "filePath": "C:\\java tool\\Apache\\druid\\server\\src\\test\\java\\org\\apache\\druid\\segment\\loading\\OmniDataSegmentMoverTest.java",
      "className": "OmniDataSegmentMoverTest"
    },
    "statements": [
      {
        "type": "DECLARATION",
        "code": "final DataSegment segment = Mockito.mock(DataSegment.class);",
        "line": 57,
        "locate": "Test Case",
        "locationContext": {
          "methodName": "testMoveSegmentUnknownType",
          "methodAnnotations": [
            "@Test"
          ]
        }
      },
      {
        "type": "STUBBING",
        "code": "Mockito.when(segment.getLoadSpec()).thenReturn(ImmutableMap.of(\"type\", \"unknown-type\"));",
        "line": 58,
        "locate": "Test Case",
        "locationContext": {
          "methodName": "testMoveSegmentUnknownType",
          "methodAnnotations": [
            "@Test"
          ]
        }
      }
    ],
    "pattern_id": 1
  },
  {
    "variableName": "segment",
    "variableType": "DataSegment",
    "mockedClass": "DataSegment",
    "isReuseableMock": false,
    "mockPattern": "Creation:\n\u2014 Local Mock Creation in Test Case\n\nStubbing:\n\u2014 Test Case\n\nVerification:\n\u2014 None",
    "classContext": {
      "packageName": "org.apache.druid.segment.loading",
      "filePath": "C:\\java tool\\Apache\\druid\\server\\src\\test\\java\\org\\apache\\druid\\segment\\loading\\OmniDataSegmentMoverTest.java",
      "className": "OmniDataSegmentMoverTest"
    },
    "statements": [
      {
        "type": "DECLARATION",
        "code": "final DataSegment segment = Mockito.mock(DataSegment.class);",
        "line": 72,
        "locate": "Test Case",
        "locationContext": {
          "methodName": "testBadSegmentMoverAccessException",
          "methodAnnotations": [
            "@Test"
          ]
        }
      },
      {
        "type": "STUBBING",
        "code": "Mockito.when(segment.getLoadSpec()).thenReturn(ImmutableMap.of(\"type\", \"bad\"));",
        "line": 73,
        "locate": "Test Case",
        "locationContext": {
          "methodName": "testBadSegmentMoverAccessException",
          "methodAnnotations": [
            "@Test"
          ]
        }
      }
    ],
    "pattern_id": 1
  }
]