[
  {
    "variableName": "loadDropHandler",
    "variableType": "SegmentLoadDropHandler",
    "mockedClass": "SegmentLoadDropHandler",
    "isReuseableMock": "Fully Shared",
    "mockPattern": "Creation:\n\u2014 Attribute Mock Creation\n\nStubbing:\n\u2014 None\n\nVerification:\n\u2014 None",
    "classContext": {
      "packageName": "org.apache.druid.server.coordination",
      "filePath": "C:\\java tool\\Apache\\druid\\server\\src\\test\\java\\org\\apache\\druid\\server\\coordination\\SegmentLoadDropHandlerCacheTest.java",
      "className": "SegmentLoadDropHandlerCacheTest"
    },
    "statements": [
      {
        "type": "FIELD_DECLARATION",
        "code": "private SegmentLoadDropHandler loadDropHandler;",
        "line": 78,
        "locate": "Attribute",
        "locationContext": {
          "methodName": "[FieldDeclaration]",
          "methodAnnotations": []
        }
      },
      {
        "type": "ASSIGNMENT",
        "code": "loadDropHandler = new SegmentLoadDropHandler(objectMapper, config, segmentAnnouncer, Mockito.mock(DataSegmentServerAnnouncer.class), segmentManager, cacheManager, new ServerTypeConfig(ServerType.HISTORICAL));",
        "line": 100,
        "locate": "@Before",
        "locationContext": {
          "methodName": "setup",
          "methodAnnotations": [
            "@Before"
          ]
        }
      }
    ],
    "pattern_id": 3
  },
  {
    "variableName": "loadDropHandler",
    "variableType": "SegmentLoadDropHandler",
    "mockedClass": "SegmentLoadDropHandler",
    "isReuseableMock": "Fully Shared",
    "mockPattern": "Creation:\n\u2014 Attribute Mock Creation\n\nStubbing:\n\u2014 None\n\nVerification:\n\u2014 None",
    "classContext": {
      "packageName": "org.apache.druid.server.coordination",
      "filePath": "C:\\java tool\\Apache\\druid\\server\\src\\test\\java\\org\\apache\\druid\\server\\coordination\\SegmentLoadDropHandlerCacheTest.java",
      "className": "SegmentLoadDropHandlerCacheTest"
    },
    "statements": [
      {
        "type": "FIELD_DECLARATION",
        "code": "private SegmentLoadDropHandler loadDropHandler;",
        "line": 78,
        "locate": "Attribute",
        "locationContext": {
          "methodName": "[FieldDeclaration]",
          "methodAnnotations": []
        }
      },
      {
        "type": "ASSIGNMENT",
        "code": "loadDropHandler = new SegmentLoadDropHandler(objectMapper, config, segmentAnnouncer, Mockito.mock(DataSegmentServerAnnouncer.class), segmentManager, cacheManager, new ServerTypeConfig(ServerType.HISTORICAL));",
        "line": 100,
        "locate": "@Before",
        "locationContext": {
          "methodName": "setup",
          "methodAnnotations": [
            "@Before"
          ]
        }
      }
    ],
    "pattern_id": 3
  },
  {
    "variableName": "loadDropHandler",
    "variableType": "SegmentLoadDropHandler",
    "mockedClass": "SegmentLoadDropHandler",
    "isReuseableMock": "Fully Shared",
    "mockPattern": "Creation:\n\u2014 Attribute Mock Creation\n\nStubbing:\n\u2014 None\n\nVerification:\n\u2014 None",
    "classContext": {
      "packageName": "org.apache.druid.server.coordination",
      "filePath": "C:\\java tool\\Apache\\druid\\server\\src\\test\\java\\org\\apache\\druid\\server\\coordination\\SegmentLoadDropHandlerCacheTest.java",
      "className": "SegmentLoadDropHandlerCacheTest"
    },
    "statements": [
      {
        "type": "FIELD_DECLARATION",
        "code": "private SegmentLoadDropHandler loadDropHandler;",
        "line": 78,
        "locate": "Attribute",
        "locationContext": {
          "methodName": "[FieldDeclaration]",
          "methodAnnotations": []
        }
      },
      {
        "type": "ASSIGNMENT",
        "code": "loadDropHandler = new SegmentLoadDropHandler(objectMapper, config, segmentAnnouncer, Mockito.mock(DataSegmentServerAnnouncer.class), segmentManager, cacheManager, new ServerTypeConfig(ServerType.HISTORICAL));",
        "line": 100,
        "locate": "@Before",
        "locationContext": {
          "methodName": "setup",
          "methodAnnotations": [
            "@Before"
          ]
        }
      }
    ],
    "pattern_id": 3
  },
  {
    "variableName": "segmentLoadDropHandler",
    "variableType": "SegmentLoadDropHandler",
    "mockedClass": "SegmentLoadDropHandler",
    "isReuseableMock": "Fully Shared",
    "mockPattern": "Creation:\n\u2014 Attribute Mock Creation\n\nStubbing:\n\u2014 None\n\nVerification:\n\u2014 None",
    "classContext": {
      "packageName": "org.apache.druid.server.coordination",
      "filePath": "C:\\java tool\\Apache\\druid\\server\\src\\test\\java\\org\\apache\\druid\\server\\coordination\\SegmentLoadDropHandlerTest.java",
      "className": "SegmentLoadDropHandlerTest"
    },
    "statements": [
      {
        "type": "FIELD_DECLARATION",
        "code": "private SegmentLoadDropHandler segmentLoadDropHandler;",
        "line": 81,
        "locate": "Attribute",
        "locationContext": {
          "methodName": "[FieldDeclaration]",
          "methodAnnotations": []
        }
      },
      {
        "type": "ASSIGNMENT",
        "code": "segmentLoadDropHandler = new SegmentLoadDropHandler(jsonMapper, segmentLoaderConfig, announcer, Mockito.mock(DataSegmentServerAnnouncer.class), segmentManager, segmentCacheManager, scheduledExecutorFactory.create(5, \"SegmentLoadDropHandlerTest-[%d]\"), new ServerTypeConfig(ServerType.HISTORICAL));",
        "line": 269,
        "locate": "@Before",
        "locationContext": {
          "methodName": "setUp",
          "methodAnnotations": [
            "@Before"
          ]
        }
      }
    ],
    "pattern_id": 3
  }
]