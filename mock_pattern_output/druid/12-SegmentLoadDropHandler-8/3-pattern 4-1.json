[
  {
    "variableName": "segmentLoadDropMgr",
    "variableType": "SegmentLoadDropHandler",
    "mockedClass": "SegmentLoadDropHandler",
    "isReuseableMock": "Hybrid",
    "mockPattern": "Creation:\n\u2014 Attribute Mock Creation\n\nStubbing:\n\u2014 Test Case\n\nVerification:\n\u2014 None",
    "classContext": {
      "packageName": "org.apache.druid.server.metrics",
      "filePath": "C:\\java tool\\Apache\\druid\\server\\src\\test\\java\\org\\apache\\druid\\server\\metrics\\SegmentStatsMonitorTest.java",
      "className": "SegmentStatsMonitorTest"
    },
    "statements": [
      {
        "type": "FIELD_DECLARATION",
        "code": "private SegmentLoadDropHandler segmentLoadDropMgr;",
        "line": 52,
        "locate": "Attribute",
        "locationContext": {
          "methodName": "[FieldDeclaration]",
          "methodAnnotations": []
        }
      },
      {
        "type": "ASSIGNMENT",
        "code": "segmentLoadDropMgr = Mockito.mock(SegmentLoadDropHandler.class);",
        "line": 61,
        "locate": "@Before",
        "locationContext": {
          "methodName": "setUp",
          "methodAnnotations": [
            "@Before"
          ]
        }
      },
      {
        "type": "STUBBING",
        "code": "Mockito.when(segmentLoadDropMgr.getAverageNumOfRowsPerSegmentForDatasource()).thenReturn(ImmutableMap.of(DATA_SOURCE, 100_000L));",
        "line": 88,
        "locate": "Test Case",
        "locationContext": {
          "methodName": "testSimple",
          "methodAnnotations": [
            "@Test"
          ]
        }
      },
      {
        "type": "STUBBING",
        "code": "Mockito.when(segmentLoadDropMgr.getRowCountDistributionPerDatasource()).thenReturn(ImmutableMap.of(DATA_SOURCE, segmentRowCountDistribution));",
        "line": 90,
        "locate": "Test Case",
        "locationContext": {
          "methodName": "testSimple",
          "methodAnnotations": [
            "@Test"
          ]
        }
      },
      {
        "type": "STUBBING",
        "code": "Mockito.when(segmentLoadDropMgr.getAverageNumOfRowsPerSegmentForDatasource()).thenReturn(ImmutableMap.of(DATA_SOURCE, 50_000L));",
        "line": 130,
        "locate": "Test Case",
        "locationContext": {
          "methodName": "testZeroAndTombstoneDistribution",
          "methodAnnotations": [
            "@Test"
          ]
        }
      },
      {
        "type": "STUBBING",
        "code": "Mockito.when(segmentLoadDropMgr.getRowCountDistributionPerDatasource()).thenReturn(ImmutableMap.of(DATA_SOURCE, segmentRowCountDistribution));",
        "line": 132,
        "locate": "Test Case",
        "locationContext": {
          "methodName": "testZeroAndTombstoneDistribution",
          "methodAnnotations": [
            "@Test"
          ]
        }
      }
    ],
    "pattern_id": 4
  }
]