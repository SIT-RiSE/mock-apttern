[
  {
    "variableName": "target",
    "variableType": "NumericAnyVectorAggregator",
    "mockedClass": "NumericAnyVectorAggregator",
    "isReuseableMock": false,
    "mockPattern": "Creation:\n\u2014 Attribute Mock Creation\n\nStubbing:\n\u2014 None\n\nVerification:\n\u2014 None",
    "classContext": {
      "packageName": "org.apache.druid.query.aggregation.any",
      "filePath": "C:\\java tool\\Apache\\druid\\processing\\src\\test\\java\\org\\apache\\druid\\query\\aggregation\\any\\NumericAnyVectorAggregatorTest.java",
      "className": "NumericAnyVectorAggregatorTest"
    },
    "statements": [
      {
        "type": "FIELD_DECLARATION",
        "code": "private NumericAnyVectorAggregator target;",
        "line": 51,
        "locate": "Attribute",
        "locationContext": {
          "methodName": "[FieldDeclaration]",
          "methodAnnotations": []
        }
      },
      {
        "type": "ASSIGNMENT",
        "code": "target = Mockito.spy(new NumericAnyVectorAggregator(selector) {\r\n\r\n    @Override\r\n    void initValue(ByteBuffer buf, int position) {\r\n        /* Do nothing. */\r\n    }\r\n\r\n    @Override\r\n    boolean putAnyValueFromRow(ByteBuffer buf, int position, int startRow, int endRow) {\r\n        boolean isRowsWithinIndex = startRow < endRow && startRow < NULLS.length;\r\n        if (isRowsWithinIndex) {\r\n            buf.putLong(position, startRow);\r\n        }\r\n        return isRowsWithinIndex;\r\n    }\r\n\r\n    @Override\r\n    Object getNonNullObject(ByteBuffer buf, int position) {\r\n        if (position == POSITION + 1) {\r\n            return FOUND_OBJECT;\r\n        }\r\n        return -1;\r\n    }\r\n});",
        "line": 57,
        "locate": "@Before",
        "locationContext": {
          "methodName": "setUp",
          "methodAnnotations": [
            "@Before"
          ]
        }
      }
    ],
    "pattern_id": 3
  }
]