[
  {
    "variableName": "inputSource",
    "variableType": "CloudObjectInputSource",
    "mockedClass": "CloudObjectInputSource",
    "isReuseableMock": false,
    "mockPattern": "Creation:\n\u2014 Local Mock Creation in Test Case\n\nStubbing:\n\u2014 Test Case\n\nVerification:\n\u2014 None",
    "classContext": {
      "packageName": "org.apache.druid.data.input.impl",
      "filePath": "C:\\java tool\\Apache\\druid\\processing\\src\\test\\java\\org\\apache\\druid\\data\\input\\impl\\CloudObjectInputSourceTest.java",
      "className": "CloudObjectInputSourceTest"
    },
    "statements": [
      {
        "type": "DECLARATION",
        "code": "CloudObjectInputSource inputSource = Mockito.mock(CloudObjectInputSource.class, Mockito.withSettings().useConstructor(SCHEME, URIS2, null, null, \"**.csv\").defaultAnswer(Mockito.CALLS_REAL_METHODS));",
        "line": 134,
        "locate": "Test Case",
        "locationContext": {
          "methodName": "testWithUrisFilter",
          "methodAnnotations": [
            "@Test"
          ]
        }
      },
      {
        "type": "STUBBING",
        "code": "Mockito.when(inputSource.getSplitWidget()).thenReturn(new MockSplitWidget());",
        "line": 138,
        "locate": "Test Case",
        "locationContext": {
          "methodName": "testWithUrisFilter",
          "methodAnnotations": [
            "@Test"
          ]
        }
      }
    ],
    "pattern_id": 1
  },
  {
    "variableName": "inputSource",
    "variableType": "CloudObjectInputSource",
    "mockedClass": "CloudObjectInputSource",
    "isReuseableMock": false,
    "mockPattern": "Creation:\n\u2014 Local Mock Creation in Test Case\n\nStubbing:\n\u2014 Test Case\n\nVerification:\n\u2014 None",
    "classContext": {
      "packageName": "org.apache.druid.data.input.impl",
      "filePath": "C:\\java tool\\Apache\\druid\\processing\\src\\test\\java\\org\\apache\\druid\\data\\input\\impl\\CloudObjectInputSourceTest.java",
      "className": "CloudObjectInputSourceTest"
    },
    "statements": [
      {
        "type": "DECLARATION",
        "code": "CloudObjectInputSource inputSource = Mockito.mock(CloudObjectInputSource.class, Mockito.withSettings().useConstructor(SCHEME, URIS, null, null, null).defaultAnswer(Mockito.CALLS_REAL_METHODS));",
        "line": 160,
        "locate": "Test Case",
        "locationContext": {
          "methodName": "testWithUris",
          "methodAnnotations": [
            "@Test"
          ]
        }
      },
      {
        "type": "STUBBING",
        "code": "Mockito.when(inputSource.getSplitWidget()).thenReturn(new MockSplitWidget());",
        "line": 164,
        "locate": "Test Case",
        "locationContext": {
          "methodName": "testWithUris",
          "methodAnnotations": [
            "@Test"
          ]
        }
      }
    ],
    "pattern_id": 1
  },
  {
    "variableName": "inputSource",
    "variableType": "CloudObjectInputSource",
    "mockedClass": "CloudObjectInputSource",
    "isReuseableMock": false,
    "mockPattern": "Creation:\n\u2014 Local Mock Creation in Test Case\n\nStubbing:\n\u2014 Test Case\n\nVerification:\n\u2014 None",
    "classContext": {
      "packageName": "org.apache.druid.data.input.impl",
      "filePath": "C:\\java tool\\Apache\\druid\\processing\\src\\test\\java\\org\\apache\\druid\\data\\input\\impl\\CloudObjectInputSourceTest.java",
      "className": "CloudObjectInputSourceTest"
    },
    "statements": [
      {
        "type": "DECLARATION",
        "code": "CloudObjectInputSource inputSource = Mockito.mock(CloudObjectInputSource.class, Mockito.withSettings().useConstructor(SCHEME, null, null, OBJECTS_BEFORE_GLOB, \"**.csv\").defaultAnswer(Mockito.CALLS_REAL_METHODS));",
        "line": 186,
        "locate": "Test Case",
        "locationContext": {
          "methodName": "testWithObjectsFilter",
          "methodAnnotations": [
            "@Test"
          ]
        }
      },
      {
        "type": "STUBBING",
        "code": "Mockito.when(inputSource.getSplitWidget()).thenReturn(new MockSplitWidget());",
        "line": 190,
        "locate": "Test Case",
        "locationContext": {
          "methodName": "testWithObjectsFilter",
          "methodAnnotations": [
            "@Test"
          ]
        }
      }
    ],
    "pattern_id": 1
  },
  {
    "variableName": "inputSource",
    "variableType": "CloudObjectInputSource",
    "mockedClass": "CloudObjectInputSource",
    "isReuseableMock": false,
    "mockPattern": "Creation:\n\u2014 Local Mock Creation in Test Case\n\nStubbing:\n\u2014 Test Case\n\nVerification:\n\u2014 None",
    "classContext": {
      "packageName": "org.apache.druid.data.input.impl",
      "filePath": "C:\\java tool\\Apache\\druid\\processing\\src\\test\\java\\org\\apache\\druid\\data\\input\\impl\\CloudObjectInputSourceTest.java",
      "className": "CloudObjectInputSourceTest"
    },
    "statements": [
      {
        "type": "DECLARATION",
        "code": "CloudObjectInputSource inputSource = Mockito.mock(CloudObjectInputSource.class, Mockito.withSettings().useConstructor(SCHEME, null, null, OBJECTS, null).defaultAnswer(Mockito.CALLS_REAL_METHODS));",
        "line": 212,
        "locate": "Test Case",
        "locationContext": {
          "methodName": "testWithObjects",
          "methodAnnotations": [
            "@Test"
          ]
        }
      },
      {
        "type": "STUBBING",
        "code": "Mockito.when(inputSource.getSplitWidget()).thenReturn(new MockSplitWidget());",
        "line": 216,
        "locate": "Test Case",
        "locationContext": {
          "methodName": "testWithObjects",
          "methodAnnotations": [
            "@Test"
          ]
        }
      }
    ],
    "pattern_id": 1
  }
]