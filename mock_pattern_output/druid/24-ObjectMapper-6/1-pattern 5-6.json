[
  {
    "variableName": "mockMapper",
    "variableType": "ObjectMapper",
    "mockedClass": "ObjectMapper",
    "isReuseableMock": false,
    "mockPattern": "Creation:\n\u2014 Local Mock Creation in Test Case\n\nStubbing:\n\u2014 None\n\nVerification:\n\u2014 Test Case",
    "classContext": {
      "packageName": "org.apache.druid.server",
      "filePath": "C:\\java tool\\Apache\\druid\\services\\src\\test\\java\\org\\apache\\druid\\server\\AsyncQueryForwardingServletTest.java",
      "className": "AsyncQueryForwardingServletTest"
    },
    "statements": [
      {
        "type": "DECLARATION",
        "code": "ObjectMapper mockMapper = Mockito.mock(ObjectMapper.class);",
        "line": 268,
        "locate": "Test Case",
        "locationContext": {
          "methodName": "testHandleExceptionWithFilterDisabled",
          "methodAnnotations": [
            "@Test"
          ]
        }
      },
      {
        "type": "VERIFICATION",
        "code": "Mockito.verify(mockMapper).writeValue(ArgumentMatchers.eq(outputStream), captor.capture());",
        "line": 289,
        "locate": "Test Case",
        "locationContext": {
          "methodName": "testHandleExceptionWithFilterDisabled",
          "methodAnnotations": [
            "@Test"
          ]
        }
      }
    ],
    "pattern_id": 5
  },
  {
    "variableName": "mockMapper",
    "variableType": "ObjectMapper",
    "mockedClass": "ObjectMapper",
    "isReuseableMock": false,
    "mockPattern": "Creation:\n\u2014 Local Mock Creation in Test Case\n\nStubbing:\n\u2014 None\n\nVerification:\n\u2014 Test Case",
    "classContext": {
      "packageName": "org.apache.druid.server",
      "filePath": "C:\\java tool\\Apache\\druid\\services\\src\\test\\java\\org\\apache\\druid\\server\\AsyncQueryForwardingServletTest.java",
      "className": "AsyncQueryForwardingServletTest"
    },
    "statements": [
      {
        "type": "DECLARATION",
        "code": "ObjectMapper mockMapper = Mockito.mock(ObjectMapper.class);",
        "line": 300,
        "locate": "Test Case",
        "locationContext": {
          "methodName": "testHandleExceptionWithFilterEnabled",
          "methodAnnotations": [
            "@Test"
          ]
        }
      },
      {
        "type": "VERIFICATION",
        "code": "Mockito.verify(mockMapper).writeValue(ArgumentMatchers.eq(outputStream), captor.capture());",
        "line": 334,
        "locate": "Test Case",
        "locationContext": {
          "methodName": "testHandleExceptionWithFilterEnabled",
          "methodAnnotations": [
            "@Test"
          ]
        }
      }
    ],
    "pattern_id": 5
  },
  {
    "variableName": "mockMapper",
    "variableType": "ObjectMapper",
    "mockedClass": "ObjectMapper",
    "isReuseableMock": false,
    "mockPattern": "Creation:\n\u2014 Local Mock Creation in Test Case\n\nStubbing:\n\u2014 None\n\nVerification:\n\u2014 Test Case",
    "classContext": {
      "packageName": "org.apache.druid.server",
      "filePath": "C:\\java tool\\Apache\\druid\\services\\src\\test\\java\\org\\apache\\druid\\server\\AsyncQueryForwardingServletTest.java",
      "className": "AsyncQueryForwardingServletTest"
    },
    "statements": [
      {
        "type": "DECLARATION",
        "code": "ObjectMapper mockMapper = Mockito.mock(ObjectMapper.class);",
        "line": 346,
        "locate": "Test Case",
        "locationContext": {
          "methodName": "testHandleExceptionWithFilterEnabledButMessageMatchAllowedRegex",
          "methodAnnotations": [
            "@Test"
          ]
        }
      },
      {
        "type": "VERIFICATION",
        "code": "Mockito.verify(mockMapper).writeValue(ArgumentMatchers.eq(outputStream), captor.capture());",
        "line": 380,
        "locate": "Test Case",
        "locationContext": {
          "methodName": "testHandleExceptionWithFilterEnabledButMessageMatchAllowedRegex",
          "methodAnnotations": [
            "@Test"
          ]
        }
      }
    ],
    "pattern_id": 5
  },
  {
    "variableName": "mockMapper",
    "variableType": "ObjectMapper",
    "mockedClass": "ObjectMapper",
    "isReuseableMock": false,
    "mockPattern": "Creation:\n\u2014 Local Mock Creation in Test Case\n\nStubbing:\n\u2014 None\n\nVerification:\n\u2014 Test Case",
    "classContext": {
      "packageName": "org.apache.druid.server",
      "filePath": "C:\\java tool\\Apache\\druid\\services\\src\\test\\java\\org\\apache\\druid\\server\\AsyncQueryForwardingServletTest.java",
      "className": "AsyncQueryForwardingServletTest"
    },
    "statements": [
      {
        "type": "DECLARATION",
        "code": "ObjectMapper mockMapper = Mockito.mock(ObjectMapper.class);",
        "line": 392,
        "locate": "Test Case",
        "locationContext": {
          "methodName": "testHandleQueryParseExceptionWithFilterDisabled",
          "methodAnnotations": [
            "@Test"
          ]
        }
      },
      {
        "type": "VERIFICATION",
        "code": "Mockito.verify(mockMapper).writeValue(ArgumentMatchers.eq(outputStream), captor.capture());",
        "line": 414,
        "locate": "Test Case",
        "locationContext": {
          "methodName": "testHandleQueryParseExceptionWithFilterDisabled",
          "methodAnnotations": [
            "@Test"
          ]
        }
      }
    ],
    "pattern_id": 5
  },
  {
    "variableName": "mockMapper",
    "variableType": "ObjectMapper",
    "mockedClass": "ObjectMapper",
    "isReuseableMock": false,
    "mockPattern": "Creation:\n\u2014 Local Mock Creation in Test Case\n\nStubbing:\n\u2014 None\n\nVerification:\n\u2014 Test Case",
    "classContext": {
      "packageName": "org.apache.druid.server",
      "filePath": "C:\\java tool\\Apache\\druid\\services\\src\\test\\java\\org\\apache\\druid\\server\\AsyncQueryForwardingServletTest.java",
      "className": "AsyncQueryForwardingServletTest"
    },
    "statements": [
      {
        "type": "DECLARATION",
        "code": "ObjectMapper mockMapper = Mockito.mock(ObjectMapper.class);",
        "line": 425,
        "locate": "Test Case",
        "locationContext": {
          "methodName": "testHandleQueryParseExceptionWithFilterEnabled",
          "methodAnnotations": [
            "@Test"
          ]
        }
      },
      {
        "type": "VERIFICATION",
        "code": "Mockito.verify(mockMapper).writeValue(ArgumentMatchers.eq(outputStream), captor.capture());",
        "line": 460,
        "locate": "Test Case",
        "locationContext": {
          "methodName": "testHandleQueryParseExceptionWithFilterEnabled",
          "methodAnnotations": [
            "@Test"
          ]
        }
      }
    ],
    "pattern_id": 5
  },
  {
    "variableName": "mockMapper",
    "variableType": "ObjectMapper",
    "mockedClass": "ObjectMapper",
    "isReuseableMock": false,
    "mockPattern": "Creation:\n\u2014 Local Mock Creation in Test Case\n\nStubbing:\n\u2014 None\n\nVerification:\n\u2014 Test Case",
    "classContext": {
      "packageName": "org.apache.druid.server",
      "filePath": "C:\\java tool\\Apache\\druid\\services\\src\\test\\java\\org\\apache\\druid\\server\\AsyncQueryForwardingServletTest.java",
      "className": "AsyncQueryForwardingServletTest"
    },
    "statements": [
      {
        "type": "DECLARATION",
        "code": "ObjectMapper mockMapper = Mockito.mock(ObjectMapper.class);",
        "line": 472,
        "locate": "Test Case",
        "locationContext": {
          "methodName": "testHandleQueryParseExceptionWithFilterEnabledButMessageMatchAllowedRegex",
          "methodAnnotations": [
            "@Test"
          ]
        }
      },
      {
        "type": "VERIFICATION",
        "code": "Mockito.verify(mockMapper).writeValue(ArgumentMatchers.eq(outputStream), captor.capture());",
        "line": 507,
        "locate": "Test Case",
        "locationContext": {
          "methodName": "testHandleQueryParseExceptionWithFilterEnabledButMessageMatchAllowedRegex",
          "methodAnnotations": [
            "@Test"
          ]
        }
      }
    ],
    "pattern_id": 5
  }
]