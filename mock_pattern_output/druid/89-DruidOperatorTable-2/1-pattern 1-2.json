[
  {
    "variableName": "mockOperatorTable",
    "variableType": "DruidOperatorTable",
    "mockedClass": "DruidOperatorTable",
    "isReuseableMock": false,
    "mockPattern": "Creation:\n\u2014 Local Mock Creation in Test Case\n\nStubbing:\n\u2014 Test Case\n\nVerification:\n\u2014 None",
    "classContext": {
      "packageName": "org.apache.druid.sql.calcite.schema",
      "filePath": "C:\\java tool\\Apache\\druid\\sql\\src\\test\\java\\org\\apache\\druid\\sql\\calcite\\schema\\InformationSchemaTest.java",
      "className": "InformationSchemaTest"
    },
    "statements": [
      {
        "type": "DECLARATION",
        "code": "DruidOperatorTable mockOperatorTable = Mockito.mock(DruidOperatorTable.class);",
        "line": 128,
        "locate": "Test Case",
        "locationContext": {
          "methodName": "testScanRoutinesTableWithCustomOperators",
          "methodAnnotations": [
            "@Test"
          ]
        }
      },
      {
        "type": "STUBBING",
        "code": "Mockito.when(mockOperatorTable.getOperatorList()).thenReturn(sqlOperators);",
        "line": 129,
        "locate": "Test Case",
        "locationContext": {
          "methodName": "testScanRoutinesTableWithCustomOperators",
          "methodAnnotations": [
            "@Test"
          ]
        }
      }
    ],
    "pattern_id": 1
  },
  {
    "variableName": "mockOperatorTable",
    "variableType": "DruidOperatorTable",
    "mockedClass": "DruidOperatorTable",
    "isReuseableMock": false,
    "mockPattern": "Creation:\n\u2014 Local Mock Creation in Test Case\n\nStubbing:\n\u2014 Test Case\n\nVerification:\n\u2014 None",
    "classContext": {
      "packageName": "org.apache.druid.sql.calcite.schema",
      "filePath": "C:\\java tool\\Apache\\druid\\sql\\src\\test\\java\\org\\apache\\druid\\sql\\calcite\\schema\\InformationSchemaTest.java",
      "className": "InformationSchemaTest"
    },
    "statements": [
      {
        "type": "DECLARATION",
        "code": "DruidOperatorTable mockOperatorTable = Mockito.mock(DruidOperatorTable.class);",
        "line": 149,
        "locate": "Test Case",
        "locationContext": {
          "methodName": "testScanRoutinesTableWithAnEmptyOperatorTable",
          "methodAnnotations": [
            "@Test"
          ]
        }
      },
      {
        "type": "STUBBING",
        "code": "Mockito.when(mockOperatorTable.getOperatorList()).thenReturn(emptyOperatorList);",
        "line": 153,
        "locate": "Test Case",
        "locationContext": {
          "methodName": "testScanRoutinesTableWithAnEmptyOperatorTable",
          "methodAnnotations": [
            "@Test"
          ]
        }
      }
    ],
    "pattern_id": 1
  }
]