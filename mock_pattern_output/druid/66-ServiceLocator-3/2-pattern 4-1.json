[
  {
    "variableName": "serviceLocator",
    "variableType": "ServiceLocator",
    "mockedClass": "ServiceLocator",
    "isReuseableMock": "Hybrid",
    "mockPattern": "Creation:\n\u2014 Attribute Mock Creation\n\nStubbing:\n\u2014 Test Case\n\nVerification:\n\u2014 None",
    "classContext": {
      "packageName": "org.apache.druid.rpc",
      "filePath": "C:\\java tool\\Apache\\druid\\server\\src\\test\\java\\org\\apache\\druid\\rpc\\ServiceClientImplTest.java",
      "className": "ServiceClientImplTest"
    },
    "statements": [
      {
        "type": "FIELD_MOCK_CREATION",
        "code": "@Mock\r\nprivate ServiceLocator serviceLocator;",
        "line": 84,
        "locate": "Attribute",
        "locationContext": {
          "methodName": "[FieldDeclaration]",
          "methodAnnotations": [
            "@Mock"
          ]
        }
      },
      {
        "type": "STUBBING",
        "code": "// Service unavailable at first, then available.\r\nMockito.when(serviceLocator.locate()).thenReturn(Futures.immediateFuture(locations())).thenReturn(Futures.immediateFuture(locations(SERVER1)));",
        "line": 504,
        "locate": "Test Case",
        "locationContext": {
          "methodName": "test_request_serviceUnavailableRetry",
          "methodAnnotations": [
            "@Test"
          ]
        }
      }
    ],
    "pattern_id": 4
  }
]