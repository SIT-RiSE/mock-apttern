[
  {
    "variableName": "serviceEmitter",
    "variableType": "ServiceEmitter",
    "mockedClass": "ServiceEmitter",
    "isReuseableMock": false,
    "mockPattern": "Creation:\n\u2014 Local Mock Creation in Test Case\n\nStubbing:\n\u2014 None\n\nVerification:\n\u2014 Test Case",
    "classContext": {
      "packageName": "org.apache.druid.query",
      "filePath": "C:\\java tool\\Apache\\druid\\processing\\src\\test\\java\\org\\apache\\druid\\query\\MetricsEmittingQueryProcessingPoolTest.java",
      "className": "MetricsEmittingQueryProcessingPoolTest"
    },
    "statements": [
      {
        "type": "DECLARATION",
        "code": "ServiceEmitter serviceEmitter = Mockito.mock(ServiceEmitter.class);",
        "line": 72,
        "locate": "Test Case",
        "locationContext": {
          "methodName": "testNonPrioritizedExecutorDelegate",
          "methodAnnotations": [
            "@Test"
          ]
        }
      },
      {
        "type": "VERIFICATION",
        "code": "Mockito.verifyNoInteractions(serviceEmitter);",
        "line": 74,
        "locate": "Test Case",
        "locationContext": {
          "methodName": "testNonPrioritizedExecutorDelegate",
          "methodAnnotations": [
            "@Test"
          ]
        }
      }
    ],
    "pattern_id": 5
  },
  {
    "variableName": "emitter",
    "variableType": "ServiceEmitter",
    "mockedClass": "ServiceEmitter",
    "isReuseableMock": false,
    "mockPattern": "Creation:\n\u2014 Local Mock Creation in Test Case\n\nStubbing:\n\u2014 None\n\nVerification:\n\u2014 Test Case",
    "classContext": {
      "packageName": "org.apache.druid.segment.loading",
      "filePath": "C:\\java tool\\Apache\\druid\\server\\src\\test\\java\\org\\apache\\druid\\segment\\loading\\StorageLocationTest.java",
      "className": "StorageLocationTest"
    },
    "statements": [
      {
        "type": "DECLARATION",
        "code": "ServiceEmitter emitter = Mockito.mock(ServiceEmitter.class);",
        "line": 127,
        "locate": "Test Case",
        "locationContext": {
          "methodName": "testMaybeReserve",
          "methodAnnotations": [
            "@Test"
          ]
        }
      },
      {
        "type": "VERIFICATION",
        "code": "Mockito.verify(emitter).emit(argumentCaptor.capture());",
        "line": 158,
        "locate": "Test Case",
        "locationContext": {
          "methodName": "testMaybeReserve",
          "methodAnnotations": [
            "@Test"
          ]
        }
      }
    ],
    "pattern_id": 5
  },
  {
    "variableName": "emitter",
    "variableType": "ServiceEmitter",
    "mockedClass": "ServiceEmitter",
    "isReuseableMock": false,
    "mockPattern": "Creation:\n\u2014 Local Mock Creation in Test Case\n\nStubbing:\n\u2014 None\n\nVerification:\n\u2014 Test Case",
    "classContext": {
      "packageName": "org.apache.druid.server.metrics",
      "filePath": "C:\\java tool\\Apache\\druid\\server\\src\\test\\java\\org\\apache\\druid\\server\\metrics\\MetricsModuleTest.java",
      "className": "MetricsModuleTest"
    },
    "statements": [
      {
        "type": "DECLARATION",
        "code": "final ServiceEmitter emitter = Mockito.mock(ServiceEmitter.class);",
        "line": 182,
        "locate": "Test Case",
        "locationContext": {
          "methodName": "testGetSysMonitorViaInjector",
          "methodAnnotations": [
            "@Test"
          ]
        }
      },
      {
        "type": "VERIFICATION",
        "code": "Mockito.verify(emitter, Mockito.never()).emit(ArgumentMatchers.any(ServiceEventBuilder.class));",
        "line": 186,
        "locate": "Test Case",
        "locationContext": {
          "methodName": "testGetSysMonitorViaInjector",
          "methodAnnotations": [
            "@Test"
          ]
        }
      }
    ],
    "pattern_id": 5
  },
  {
    "variableName": "emitter",
    "variableType": "ServiceEmitter",
    "mockedClass": "ServiceEmitter",
    "isReuseableMock": false,
    "mockPattern": "Creation:\n\u2014 Local Mock Creation in Test Case\n\nStubbing:\n\u2014 None\n\nVerification:\n\u2014 Test Case",
    "classContext": {
      "packageName": "org.apache.druid.server.metrics",
      "filePath": "C:\\java tool\\Apache\\druid\\server\\src\\test\\java\\org\\apache\\druid\\server\\metrics\\MetricsModuleTest.java",
      "className": "MetricsModuleTest"
    },
    "statements": [
      {
        "type": "DECLARATION",
        "code": "final ServiceEmitter emitter = Mockito.mock(ServiceEmitter.class);",
        "line": 197,
        "locate": "Test Case",
        "locationContext": {
          "methodName": "testGetSysMonitorWhenNull",
          "methodAnnotations": [
            "@Test"
          ]
        }
      },
      {
        "type": "VERIFICATION",
        "code": "Mockito.verify(emitter, Mockito.atLeastOnce()).emit(ArgumentMatchers.any(ServiceEventBuilder.class));",
        "line": 201,
        "locate": "Test Case",
        "locationContext": {
          "methodName": "testGetSysMonitorWhenNull",
          "methodAnnotations": [
            "@Test"
          ]
        }
      }
    ],
    "pattern_id": 5
  },
  {
    "variableName": "emitter",
    "variableType": "ServiceEmitter",
    "mockedClass": "ServiceEmitter",
    "isReuseableMock": false,
    "mockPattern": "Creation:\n\u2014 Local Mock Creation in Test Case\n\nStubbing:\n\u2014 None\n\nVerification:\n\u2014 Test Case",
    "classContext": {
      "packageName": "org.apache.druid.server.metrics",
      "filePath": "C:\\java tool\\Apache\\druid\\server\\src\\test\\java\\org\\apache\\druid\\server\\metrics\\MetricsModuleTest.java",
      "className": "MetricsModuleTest"
    },
    "statements": [
      {
        "type": "DECLARATION",
        "code": "final ServiceEmitter emitter = Mockito.mock(ServiceEmitter.class);",
        "line": 209,
        "locate": "Test Case",
        "locationContext": {
          "methodName": "testGetOshiSysMonitorViaInjector",
          "methodAnnotations": [
            "@Test"
          ]
        }
      },
      {
        "type": "VERIFICATION",
        "code": "Mockito.verify(emitter, Mockito.never()).emit(ArgumentMatchers.any(ServiceEventBuilder.class));",
        "line": 213,
        "locate": "Test Case",
        "locationContext": {
          "methodName": "testGetOshiSysMonitorViaInjector",
          "methodAnnotations": [
            "@Test"
          ]
        }
      }
    ],
    "pattern_id": 5
  },
  {
    "variableName": "emitter",
    "variableType": "ServiceEmitter",
    "mockedClass": "ServiceEmitter",
    "isReuseableMock": false,
    "mockPattern": "Creation:\n\u2014 Local Mock Creation in Test Case\n\nStubbing:\n\u2014 None\n\nVerification:\n\u2014 Test Case",
    "classContext": {
      "packageName": "org.apache.druid.server.metrics",
      "filePath": "C:\\java tool\\Apache\\druid\\server\\src\\test\\java\\org\\apache\\druid\\server\\metrics\\MetricsModuleTest.java",
      "className": "MetricsModuleTest"
    },
    "statements": [
      {
        "type": "DECLARATION",
        "code": "final ServiceEmitter emitter = Mockito.mock(ServiceEmitter.class);",
        "line": 221,
        "locate": "Test Case",
        "locationContext": {
          "methodName": "testGetOshiSysMonitorWhenNull",
          "methodAnnotations": [
            "@Test"
          ]
        }
      },
      {
        "type": "VERIFICATION",
        "code": "Mockito.verify(emitter, Mockito.atLeastOnce()).emit(ArgumentMatchers.any(ServiceEventBuilder.class));",
        "line": 225,
        "locate": "Test Case",
        "locationContext": {
          "methodName": "testGetOshiSysMonitorWhenNull",
          "methodAnnotations": [
            "@Test"
          ]
        }
      }
    ],
    "pattern_id": 5
  }
]