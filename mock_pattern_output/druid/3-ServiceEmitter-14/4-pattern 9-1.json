[
  {
    "variableName": "serviceEmitter",
    "variableType": "ServiceEmitter",
    "mockedClass": "ServiceEmitter",
    "isReuseableMock": "Hybrid",
    "mockPattern": "Creation:\n\u2014 Attribute Mock Creation\n\nStubbing:\n\u2014 None\n\nVerification:\n\u2014 Test Case",
    "classContext": {
      "packageName": "org.apache.druid.server.metrics",
      "filePath": "C:\\java tool\\Apache\\druid\\server\\src\\test\\java\\org\\apache\\druid\\server\\metrics\\SegmentStatsMonitorTest.java",
      "className": "SegmentStatsMonitorTest"
    },
    "statements": [
      {
        "type": "FIELD_DECLARATION",
        "code": "private ServiceEmitter serviceEmitter;",
        "line": 53,
        "locate": "Attribute",
        "locationContext": {
          "methodName": "[FieldDeclaration]",
          "methodAnnotations": []
        }
      },
      {
        "type": "ASSIGNMENT",
        "code": "serviceEmitter = Mockito.mock(ServiceEmitter.class);",
        "line": 62,
        "locate": "@Before",
        "locationContext": {
          "methodName": "setUp",
          "methodAnnotations": [
            "@Before"
          ]
        }
      },
      {
        "type": "VERIFICATION",
        "code": "Mockito.verify(serviceEmitter, Mockito.atLeastOnce()).emit(eventArgumentCaptor.capture());",
        "line": 96,
        "locate": "Test Case",
        "locationContext": {
          "methodName": "testSimple",
          "methodAnnotations": [
            "@Test"
          ]
        }
      },
      {
        "type": "VERIFICATION",
        "code": "Mockito.verify(serviceEmitter, Mockito.atLeastOnce()).emit(eventArgumentCaptor.capture());",
        "line": 138,
        "locate": "Test Case",
        "locationContext": {
          "methodName": "testZeroAndTombstoneDistribution",
          "methodAnnotations": [
            "@Test"
          ]
        }
      }
    ],
    "pattern_id": 9
  }
]