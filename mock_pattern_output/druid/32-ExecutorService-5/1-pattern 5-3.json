[
  {
    "variableName": "executor",
    "variableType": "ExecutorService",
    "mockedClass": "ExecutorService",
    "isReuseableMock": "Fully Localized",
    "mockPattern": "Creation:\n\u2014 Local Mock Creation in Test Case\n\nStubbing:\n\u2014 None\n\nVerification:\n\u2014 Test Case",
    "classContext": {
      "packageName": "org.apache.druid.java.util.metrics",
      "filePath": "C:\\java tool\\Apache\\druid\\processing\\src\\test\\java\\org\\apache\\druid\\java\\util\\metrics\\ClockDriftSafeMonitorSchedulerTest.java",
      "className": "ClockDriftSafeMonitorSchedulerTest"
    },
    "statements": [
      {
        "type": "DECLARATION",
        "code": "ExecutorService executor = Mockito.mock(ExecutorService.class);",
        "line": 116,
        "locate": "Test Case",
        "locationContext": {
          "methodName": "testStart_RepeatScheduling",
          "methodAnnotations": [
            "@Test"
          ]
        }
      },
      {
        "type": "VERIFICATION",
        "code": "Mockito.verify(executor, Mockito.times(2)).submit(ArgumentMatchers.any(Callable.class));",
        "line": 173,
        "locate": "Test Case",
        "locationContext": {
          "methodName": "testStart_RepeatScheduling",
          "methodAnnotations": [
            "@Test"
          ]
        }
      }
    ],
    "pattern_id": 5
  },
  {
    "variableName": "executor",
    "variableType": "ExecutorService",
    "mockedClass": "ExecutorService",
    "isReuseableMock": "Fully Localized",
    "mockPattern": "Creation:\n\u2014 Local Mock Creation in Test Case\n\nStubbing:\n\u2014 None\n\nVerification:\n\u2014 Test Case",
    "classContext": {
      "packageName": "org.apache.druid.java.util.metrics",
      "filePath": "C:\\java tool\\Apache\\druid\\processing\\src\\test\\java\\org\\apache\\druid\\java\\util\\metrics\\ClockDriftSafeMonitorSchedulerTest.java",
      "className": "ClockDriftSafeMonitorSchedulerTest"
    },
    "statements": [
      {
        "type": "DECLARATION",
        "code": "ExecutorService executor = Mockito.mock(ExecutorService.class);",
        "line": 181,
        "locate": "Test Case",
        "locationContext": {
          "methodName": "testStart_RepeatAndStopScheduling",
          "methodAnnotations": [
            "@Test"
          ]
        }
      },
      {
        "type": "VERIFICATION",
        "code": "Mockito.verify(executor, Mockito.times(1)).submit(ArgumentMatchers.any(Callable.class));",
        "line": 237,
        "locate": "Test Case",
        "locationContext": {
          "methodName": "testStart_RepeatAndStopScheduling",
          "methodAnnotations": [
            "@Test"
          ]
        }
      }
    ],
    "pattern_id": 5
  },
  {
    "variableName": "executor",
    "variableType": "ExecutorService",
    "mockedClass": "ExecutorService",
    "isReuseableMock": "Fully Localized",
    "mockPattern": "Creation:\n\u2014 Local Mock Creation in Test Case\n\nStubbing:\n\u2014 None\n\nVerification:\n\u2014 Test Case",
    "classContext": {
      "packageName": "org.apache.druid.java.util.metrics",
      "filePath": "C:\\java tool\\Apache\\druid\\processing\\src\\test\\java\\org\\apache\\druid\\java\\util\\metrics\\ClockDriftSafeMonitorSchedulerTest.java",
      "className": "ClockDriftSafeMonitorSchedulerTest"
    },
    "statements": [
      {
        "type": "DECLARATION",
        "code": "ExecutorService executor = Mockito.mock(ExecutorService.class);",
        "line": 246,
        "locate": "Test Case",
        "locationContext": {
          "methodName": "testStart_UnexpectedExceptionWhileMonitoring",
          "methodAnnotations": [
            "@Test"
          ]
        }
      },
      {
        "type": "VERIFICATION",
        "code": "Mockito.verify(executor, Mockito.times(1)).submit(ArgumentMatchers.any(Callable.class));",
        "line": 302,
        "locate": "Test Case",
        "locationContext": {
          "methodName": "testStart_UnexpectedExceptionWhileMonitoring",
          "methodAnnotations": [
            "@Test"
          ]
        }
      }
    ],
    "pattern_id": 5
  }
]