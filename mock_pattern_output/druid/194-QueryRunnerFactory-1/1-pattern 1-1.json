[
  {
    "variableName": "factory",
    "variableType": "QueryRunnerFactory",
    "mockedClass": "QueryRunnerFactory",
    "isReuseableMock": "Fully Localized",
    "mockPattern": "Creation:\n\u2014 Local Mock Creation in Test Case\n\nStubbing:\n\u2014 Test Case\n\nVerification:\n\u2014 None",
    "classContext": {
      "packageName": "org.apache.druid.cli",
      "filePath": "C:\\java tool\\Apache\\druid\\services\\src\\test\\java\\org\\apache\\druid\\cli\\DumpSegmentTest.java",
      "className": "DumpSegmentTest"
    },
    "statements": [
      {
        "type": "DECLARATION",
        "code": "QueryRunnerFactory factory = Mockito.mock(QueryRunnerFactory.class, Mockito.RETURNS_DEEP_STUBS);",
        "line": 102,
        "locate": "Test Case",
        "locationContext": {
          "methodName": "testExecuteQuery",
          "methodAnnotations": [
            "@Test"
          ]
        }
      },
      {
        "type": "STUBBING",
        "code": "Mockito.when(factory.createRunner(ArgumentMatchers.any())).thenReturn(runner);",
        "line": 109,
        "locate": "Test Case",
        "locationContext": {
          "methodName": "testExecuteQuery",
          "methodAnnotations": [
            "@Test"
          ]
        }
      },
      {
        "type": "STUBBING",
        "code": "Mockito.when(factory.getToolchest().mergeResults(factory.mergeRunners(DirectQueryProcessingPool.INSTANCE, ImmutableList.of(runner)))).thenReturn(mergeRunner);",
        "line": 110,
        "locate": "Test Case",
        "locationContext": {
          "methodName": "testExecuteQuery",
          "methodAnnotations": [
            "@Test"
          ]
        }
      }
    ],
    "pattern_id": 1
  }
]