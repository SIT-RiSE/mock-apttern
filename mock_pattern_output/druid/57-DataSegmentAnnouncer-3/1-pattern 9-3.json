[
  {
    "variableName": "segmentAnnouncer",
    "variableType": "DataSegmentAnnouncer",
    "mockedClass": "DataSegmentAnnouncer",
    "isReuseableMock": false,
    "mockPattern": "Creation:\n\u2014 Attribute Mock Creation\n\nStubbing:\n\u2014 None\n\nVerification:\n\u2014 Test Case",
    "classContext": {
      "packageName": "org.apache.druid.server.coordination",
      "filePath": "C:\\java tool\\Apache\\druid\\server\\src\\test\\java\\org\\apache\\druid\\server\\coordination\\SegmentLoadDropHandlerCacheTest.java",
      "className": "SegmentLoadDropHandlerCacheTest"
    },
    "statements": [
      {
        "type": "FIELD_DECLARATION",
        "code": "private DataSegmentAnnouncer segmentAnnouncer;",
        "line": 81,
        "locate": "Attribute",
        "locationContext": {
          "methodName": "[FieldDeclaration]",
          "methodAnnotations": []
        }
      },
      {
        "type": "ASSIGNMENT",
        "code": "segmentAnnouncer = Mockito.mock(DataSegmentAnnouncer.class);",
        "line": 99,
        "locate": "@Before",
        "locationContext": {
          "methodName": "setup",
          "methodAnnotations": [
            "@Before"
          ]
        }
      },
      {
        "type": "VERIFICATION",
        "code": "Mockito.verify(segmentAnnouncer).announceSegments(argCaptor.capture());",
        "line": 135,
        "locate": "Test Case",
        "locationContext": {
          "methodName": "testLoadLocalCache",
          "methodAnnotations": [
            "@Test"
          ]
        }
      },
      {
        "type": "VERIFICATION",
        "code": "Mockito.verify(segmentAnnouncer, Mockito.never()).announceSegment(any());",
        "line": 145,
        "locate": "Test Case",
        "locationContext": {
          "methodName": "testLoadLocalCache",
          "methodAnnotations": [
            "@Test"
          ]
        }
      },
      {
        "type": "VERIFICATION",
        "code": "Mockito.verify(segmentAnnouncer, Mockito.never()).announceSegments(any());",
        "line": 146,
        "locate": "Test Case",
        "locationContext": {
          "methodName": "testLoadLocalCache",
          "methodAnnotations": [
            "@Test"
          ]
        }
      },
      {
        "type": "VERIFICATION",
        "code": "Mockito.verify(segmentAnnouncer).announceSegment(newSegment);",
        "line": 151,
        "locate": "Test Case",
        "locationContext": {
          "methodName": "testLoadLocalCache",
          "methodAnnotations": [
            "@Test"
          ]
        }
      }
    ],
    "pattern_id": 9
  },
  {
    "variableName": "segmentAnnouncer",
    "variableType": "DataSegmentAnnouncer",
    "mockedClass": "DataSegmentAnnouncer",
    "isReuseableMock": false,
    "mockPattern": "Creation:\n\u2014 Attribute Mock Creation\n\nStubbing:\n\u2014 None\n\nVerification:\n\u2014 Test Case",
    "classContext": {
      "packageName": "org.apache.druid.server.coordination",
      "filePath": "C:\\java tool\\Apache\\druid\\server\\src\\test\\java\\org\\apache\\druid\\server\\coordination\\SegmentLoadDropHandlerCacheTest.java",
      "className": "SegmentLoadDropHandlerCacheTest"
    },
    "statements": [
      {
        "type": "FIELD_DECLARATION",
        "code": "private DataSegmentAnnouncer segmentAnnouncer;",
        "line": 81,
        "locate": "Attribute",
        "locationContext": {
          "methodName": "[FieldDeclaration]",
          "methodAnnotations": []
        }
      },
      {
        "type": "ASSIGNMENT",
        "code": "segmentAnnouncer = Mockito.mock(DataSegmentAnnouncer.class);",
        "line": 99,
        "locate": "@Before",
        "locationContext": {
          "methodName": "setup",
          "methodAnnotations": [
            "@Before"
          ]
        }
      },
      {
        "type": "VERIFICATION",
        "code": "Mockito.verify(segmentAnnouncer).announceSegments(argCaptor.capture());",
        "line": 135,
        "locate": "Test Case",
        "locationContext": {
          "methodName": "testLoadLocalCache",
          "methodAnnotations": [
            "@Test"
          ]
        }
      },
      {
        "type": "VERIFICATION",
        "code": "Mockito.verify(segmentAnnouncer, Mockito.never()).announceSegment(any());",
        "line": 145,
        "locate": "Test Case",
        "locationContext": {
          "methodName": "testLoadLocalCache",
          "methodAnnotations": [
            "@Test"
          ]
        }
      },
      {
        "type": "VERIFICATION",
        "code": "Mockito.verify(segmentAnnouncer, Mockito.never()).announceSegments(any());",
        "line": 146,
        "locate": "Test Case",
        "locationContext": {
          "methodName": "testLoadLocalCache",
          "methodAnnotations": [
            "@Test"
          ]
        }
      },
      {
        "type": "VERIFICATION",
        "code": "Mockito.verify(segmentAnnouncer).announceSegment(newSegment);",
        "line": 151,
        "locate": "Test Case",
        "locationContext": {
          "methodName": "testLoadLocalCache",
          "methodAnnotations": [
            "@Test"
          ]
        }
      }
    ],
    "pattern_id": 9
  },
  {
    "variableName": "segmentAnnouncer",
    "variableType": "DataSegmentAnnouncer",
    "mockedClass": "DataSegmentAnnouncer",
    "isReuseableMock": false,
    "mockPattern": "Creation:\n\u2014 Attribute Mock Creation\n\nStubbing:\n\u2014 None\n\nVerification:\n\u2014 Test Case",
    "classContext": {
      "packageName": "org.apache.druid.server.coordination",
      "filePath": "C:\\java tool\\Apache\\druid\\server\\src\\test\\java\\org\\apache\\druid\\server\\coordination\\SegmentLoadDropHandlerCacheTest.java",
      "className": "SegmentLoadDropHandlerCacheTest"
    },
    "statements": [
      {
        "type": "FIELD_DECLARATION",
        "code": "private DataSegmentAnnouncer segmentAnnouncer;",
        "line": 81,
        "locate": "Attribute",
        "locationContext": {
          "methodName": "[FieldDeclaration]",
          "methodAnnotations": []
        }
      },
      {
        "type": "ASSIGNMENT",
        "code": "segmentAnnouncer = Mockito.mock(DataSegmentAnnouncer.class);",
        "line": 99,
        "locate": "@Before",
        "locationContext": {
          "methodName": "setup",
          "methodAnnotations": [
            "@Before"
          ]
        }
      },
      {
        "type": "VERIFICATION",
        "code": "Mockito.verify(segmentAnnouncer).announceSegments(argCaptor.capture());",
        "line": 135,
        "locate": "Test Case",
        "locationContext": {
          "methodName": "testLoadLocalCache",
          "methodAnnotations": [
            "@Test"
          ]
        }
      },
      {
        "type": "VERIFICATION",
        "code": "Mockito.verify(segmentAnnouncer, Mockito.never()).announceSegment(any());",
        "line": 145,
        "locate": "Test Case",
        "locationContext": {
          "methodName": "testLoadLocalCache",
          "methodAnnotations": [
            "@Test"
          ]
        }
      },
      {
        "type": "VERIFICATION",
        "code": "Mockito.verify(segmentAnnouncer, Mockito.never()).announceSegments(any());",
        "line": 146,
        "locate": "Test Case",
        "locationContext": {
          "methodName": "testLoadLocalCache",
          "methodAnnotations": [
            "@Test"
          ]
        }
      },
      {
        "type": "VERIFICATION",
        "code": "Mockito.verify(segmentAnnouncer).announceSegment(newSegment);",
        "line": 151,
        "locate": "Test Case",
        "locationContext": {
          "methodName": "testLoadLocalCache",
          "methodAnnotations": [
            "@Test"
          ]
        }
      }
    ],
    "pattern_id": 9
  }
]