[
  {
    "variableName": "negativeUnion",
    "variableType": "Union",
    "mockedClass": "Union",
    "isReuseableMock": false,
    "mockPattern": "Creation:\n\u2014 Local Mock Creation in Test Case\n\nStubbing:\n\u2014 Test Case\n\nVerification:\n\u2014 None",
    "classContext": {
      "packageName": "org.apache.druid.indexing.common.task.batch.parallel",
      "filePath": "C:\\java tool\\Apache\\druid\\indexing-service\\src\\test\\java\\org\\apache\\druid\\indexing\\common\\task\\batch\\parallel\\DimensionCardinalityReportTest.java",
      "className": "DimensionCardinalityReportTest"
    },
    "statements": [
      {
        "type": "DECLARATION",
        "code": "Union negativeUnion = mock(Union.class);",
        "line": 314,
        "locate": "Test Case",
        "locationContext": {
          "methodName": "testSupervisorDetermineNegativeNumShardsFromCardinalityReport",
          "methodAnnotations": [
            "@Test"
          ]
        }
      },
      {
        "type": "STUBBING",
        "code": "Mockito.when(negativeUnion.getEstimate()).thenReturn(-1.0);",
        "line": 315,
        "locate": "Test Case",
        "locationContext": {
          "methodName": "testSupervisorDetermineNegativeNumShardsFromCardinalityReport",
          "methodAnnotations": [
            "@Test"
          ]
        }
      }
    ],
    "pattern_id": 1
  },
  {
    "variableName": "union",
    "variableType": "Union",
    "mockedClass": "Union",
    "isReuseableMock": false,
    "mockPattern": "Creation:\n\u2014 Local Mock Creation in Test Case\n\nStubbing:\n\u2014 Test Case\n\nVerification:\n\u2014 None",
    "classContext": {
      "packageName": "org.apache.druid.indexing.common.task.batch.parallel",
      "filePath": "C:\\java tool\\Apache\\druid\\indexing-service\\src\\test\\java\\org\\apache\\druid\\indexing\\common\\task\\batch\\parallel\\DimensionCardinalityReportTest.java",
      "className": "DimensionCardinalityReportTest"
    },
    "statements": [
      {
        "type": "DECLARATION",
        "code": "Union union = mock(Union.class);",
        "line": 340,
        "locate": "Test Case",
        "locationContext": {
          "methodName": "testSupervisorDeterminePositiveNumShardsFromCardinalityReport",
          "methodAnnotations": [
            "@Test"
          ]
        }
      },
      {
        "type": "STUBBING",
        "code": "Mockito.when(union.getEstimate()).thenReturn(24.0);",
        "line": 341,
        "locate": "Test Case",
        "locationContext": {
          "methodName": "testSupervisorDeterminePositiveNumShardsFromCardinalityReport",
          "methodAnnotations": [
            "@Test"
          ]
        }
      }
    ],
    "pattern_id": 1
  },
  {
    "variableName": "union",
    "variableType": "Union",
    "mockedClass": "Union",
    "isReuseableMock": false,
    "mockPattern": "Creation:\n\u2014 Local Mock Creation in Test Case\n\nStubbing:\n\u2014 Test Case\n\nVerification:\n\u2014 None",
    "classContext": {
      "packageName": "org.apache.druid.indexing.common.task.batch.parallel",
      "filePath": "C:\\java tool\\Apache\\druid\\indexing-service\\src\\test\\java\\org\\apache\\druid\\indexing\\common\\task\\batch\\parallel\\DimensionCardinalityReportTest.java",
      "className": "DimensionCardinalityReportTest"
    },
    "statements": [
      {
        "type": "DECLARATION",
        "code": "Union union = mock(Union.class);",
        "line": 353,
        "locate": "Test Case",
        "locationContext": {
          "methodName": "testSupervisorDeterminePositiveOneShardFromCardinalityReport",
          "methodAnnotations": [
            "@Test"
          ]
        }
      },
      {
        "type": "STUBBING",
        "code": "Mockito.when(union.getEstimate()).thenReturn(24.0);",
        "line": 354,
        "locate": "Test Case",
        "locationContext": {
          "methodName": "testSupervisorDeterminePositiveOneShardFromCardinalityReport",
          "methodAnnotations": [
            "@Test"
          ]
        }
      }
    ],
    "pattern_id": 1
  }
]