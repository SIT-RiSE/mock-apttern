[
  {
    "variableName": "jettyServerThreadPool",
    "variableType": "QueuedThreadPool",
    "mockedClass": "QueuedThreadPool",
    "isReuseableMock": false,
    "mockPattern": "Creation:\n\u2014 Local Mock Creation in Test Case\n\nStubbing:\n\u2014 Test Case\n\nVerification:\n\u2014 None",
    "classContext": {
      "packageName": "org.apache.druid.server.initialization.jetty",
      "filePath": "C:\\java tool\\Apache\\druid\\server\\src\\test\\java\\org\\apache\\druid\\server\\initialization\\jetty\\JettyServerModuleTest.java",
      "className": "JettyServerModuleTest"
    },
    "statements": [
      {
        "type": "DECLARATION",
        "code": "QueuedThreadPool jettyServerThreadPool = Mockito.mock(QueuedThreadPool.class);",
        "line": 50,
        "locate": "Test Case",
        "locationContext": {
          "methodName": "testJettyServerModule",
          "methodAnnotations": [
            "@Test"
          ]
        }
      },
      {
        "type": "STUBBING",
        "code": "Mockito.when(jettyServerThreadPool.getThreads()).thenReturn(100);",
        "line": 52,
        "locate": "Test Case",
        "locationContext": {
          "methodName": "testJettyServerModule",
          "methodAnnotations": [
            "@Test"
          ]
        }
      },
      {
        "type": "STUBBING",
        "code": "Mockito.when(jettyServerThreadPool.getIdleThreads()).thenReturn(40);",
        "line": 53,
        "locate": "Test Case",
        "locationContext": {
          "methodName": "testJettyServerModule",
          "methodAnnotations": [
            "@Test"
          ]
        }
      },
      {
        "type": "STUBBING",
        "code": "Mockito.when(jettyServerThreadPool.isLowOnThreads()).thenReturn(true);",
        "line": 54,
        "locate": "Test Case",
        "locationContext": {
          "methodName": "testJettyServerModule",
          "methodAnnotations": [
            "@Test"
          ]
        }
      },
      {
        "type": "STUBBING",
        "code": "Mockito.when(jettyServerThreadPool.getMinThreads()).thenReturn(30);",
        "line": 55,
        "locate": "Test Case",
        "locationContext": {
          "methodName": "testJettyServerModule",
          "methodAnnotations": [
            "@Test"
          ]
        }
      },
      {
        "type": "STUBBING",
        "code": "Mockito.when(jettyServerThreadPool.getMaxThreads()).thenReturn(100);",
        "line": 56,
        "locate": "Test Case",
        "locationContext": {
          "methodName": "testJettyServerModule",
          "methodAnnotations": [
            "@Test"
          ]
        }
      },
      {
        "type": "STUBBING",
        "code": "Mockito.when(jettyServerThreadPool.getQueueSize()).thenReturn(50);",
        "line": 57,
        "locate": "Test Case",
        "locationContext": {
          "methodName": "testJettyServerModule",
          "methodAnnotations": [
            "@Test"
          ]
        }
      },
      {
        "type": "STUBBING",
        "code": "Mockito.when(jettyServerThreadPool.getBusyThreads()).thenReturn(60);",
        "line": 58,
        "locate": "Test Case",
        "locationContext": {
          "methodName": "testJettyServerModule",
          "methodAnnotations": [
            "@Test"
          ]
        }
      }
    ],
    "pattern_id": 1
  }
]