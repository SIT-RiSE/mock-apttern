[
  {
    "variableName": "inputStreamMock",
    "variableType": "InputStream",
    "mockedClass": "InputStream",
    "isReuseableMock": false,
    "mockPattern": "Creation:\n\u2014 Attribute Mock Creation\n\nStubbing:\n\u2014 @Before\n\nVerification:\n\u2014 Test Case",
    "classContext": {
      "packageName": "org.apache.druid.data.input.impl",
      "filePath": "C:\\java tool\\Apache\\druid\\processing\\src\\test\\java\\org\\apache\\druid\\data\\input\\impl\\HttpEntityTest.java",
      "className": "HttpEntityTest"
    },
    "statements": [
      {
        "type": "FIELD_DECLARATION",
        "code": "private InputStream inputStreamMock;",
        "line": 51,
        "locate": "Attribute",
        "locationContext": {
          "methodName": "[FieldDeclaration]",
          "methodAnnotations": []
        }
      },
      {
        "type": "ASSIGNMENT",
        "code": "inputStreamMock = Mockito.mock(InputStream.class);",
        "line": 59,
        "locate": "@Before",
        "locationContext": {
          "methodName": "setup",
          "methodAnnotations": [
            "@Before"
          ]
        }
      },
      {
        "type": "STUBBING",
        "code": "Mockito.when(inputStreamMock.skip(ArgumentMatchers.anyLong())).then(AdditionalAnswers.returnsFirstArg());",
        "line": 63,
        "locate": "@Before",
        "locationContext": {
          "methodName": "setup",
          "methodAnnotations": [
            "@Before"
          ]
        }
      },
      {
        "type": "VERIFICATION",
        "code": "Mockito.verify(inputStreamMock, Mockito.times(0)).skip(offset);",
        "line": 123,
        "locate": "Test Case",
        "locationContext": {
          "methodName": "testWithServerSupportingRanges",
          "methodAnnotations": [
            "@Test"
          ]
        }
      },
      {
        "type": "VERIFICATION",
        "code": "Mockito.verify(inputStreamMock, Mockito.times(1)).skip(offset);",
        "line": 132,
        "locate": "Test Case",
        "locationContext": {
          "methodName": "testWithServerNotSupportingRanges",
          "methodAnnotations": [
            "@Test"
          ]
        }
      },
      {
        "type": "VERIFICATION",
        "code": "Mockito.verify(inputStreamMock, Mockito.times(1)).skip(offset);",
        "line": 141,
        "locate": "Test Case",
        "locationContext": {
          "methodName": "testWithServerNotSupportingBytesRanges",
          "methodAnnotations": [
            "@Test"
          ]
        }
      }
    ],
    "pattern_id": 15
  }
]