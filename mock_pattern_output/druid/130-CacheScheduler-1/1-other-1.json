[
  {
    "variableName": "scheduler",
    "variableType": "CacheScheduler",
    "mockedClass": "CacheScheduler",
    "isReuseableMock": false,
    "mockPattern": "Creation:\n\u2014 Attribute Mock Creation\n\nStubbing:\n\u2014 Test Case\n\u2014 Other Methods\n\nVerification:\n\u2014 Test Case\n\u2014 Other Methods",
    "classContext": {
      "packageName": "org.apache.druid.query.lookup",
      "filePath": "C:\\java tool\\Apache\\druid\\extensions-core\\lookups-cached-global\\src\\test\\java\\org\\apache\\druid\\query\\lookup\\NamespaceLookupExtractorFactoryTest.java",
      "className": "NamespaceLookupExtractorFactoryTest"
    },
    "statements": [
      {
        "type": "FIELD_MOCK_CREATION",
        "code": "private final CacheScheduler scheduler = mock(CacheScheduler.class);",
        "line": 77,
        "locate": "Attribute",
        "locationContext": {
          "methodName": "[FieldDeclaration]",
          "methodAnnotations": []
        }
      },
      {
        "type": "VERIFICATION",
        "code": "verify(scheduler).scheduleAndWait(extractionNamespace, 60000L);",
        "line": 155,
        "locate": "Test Case",
        "locationContext": {
          "methodName": "testSimpleStartStop",
          "methodAnnotations": [
            "@Test"
          ]
        }
      },
      {
        "type": "VERIFICATION",
        "code": "verifyNoMoreInteractions(scheduler, entry, versionedCache);",
        "line": 157,
        "locate": "Test Case",
        "locationContext": {
          "methodName": "testSimpleStartStop",
          "methodAnnotations": [
            "@Test"
          ]
        }
      },
      {
        "type": "STUBBING",
        "code": "when(scheduler.schedule(extractionNamespace)).thenReturn(entry);",
        "line": 164,
        "locate": "Test Case",
        "locationContext": {
          "methodName": "testStartReturnsImmediately",
          "methodAnnotations": [
            "@Test"
          ]
        }
      },
      {
        "type": "VERIFICATION",
        "code": "verify(scheduler).schedule(any());",
        "line": 175,
        "locate": "Test Case",
        "locationContext": {
          "methodName": "testStartReturnsImmediately",
          "methodAnnotations": [
            "@Test"
          ]
        }
      },
      {
        "type": "VERIFICATION",
        "code": "verifyNoMoreInteractions(scheduler, entry, versionedCache);",
        "line": 177,
        "locate": "Test Case",
        "locationContext": {
          "methodName": "testStartReturnsImmediately",
          "methodAnnotations": [
            "@Test"
          ]
        }
      },
      {
        "type": "STUBBING",
        "code": "when(scheduler.scheduleAndWait(extractionNamespace, 1L)).thenReturn(null);",
        "line": 184,
        "locate": "Test Case",
        "locationContext": {
          "methodName": "testStartReturnsImmediatelyAndFails",
          "methodAnnotations": [
            "@Test"
          ]
        }
      },
      {
        "type": "VERIFICATION",
        "code": "verify(scheduler).scheduleAndWait(extractionNamespace, 1L);",
        "line": 195,
        "locate": "Test Case",
        "locationContext": {
          "methodName": "testStartReturnsImmediatelyAndFails",
          "methodAnnotations": [
            "@Test"
          ]
        }
      },
      {
        "type": "VERIFICATION",
        "code": "verifyNoMoreInteractions(scheduler, entry, versionedCache);",
        "line": 196,
        "locate": "Test Case",
        "locationContext": {
          "methodName": "testStartReturnsImmediatelyAndFails",
          "methodAnnotations": [
            "@Test"
          ]
        }
      },
      {
        "type": "VERIFICATION",
        "code": "verify(scheduler).scheduleAndWait(extractionNamespace, 60000L);",
        "line": 214,
        "locate": "Test Case",
        "locationContext": {
          "methodName": "testSimpleStartStopStop",
          "methodAnnotations": [
            "@Test"
          ]
        }
      },
      {
        "type": "VERIFICATION",
        "code": "verifyNoMoreInteractions(scheduler, entry, versionedCache);",
        "line": 215,
        "locate": "Test Case",
        "locationContext": {
          "methodName": "testSimpleStartStopStop",
          "methodAnnotations": [
            "@Test"
          ]
        }
      },
      {
        "type": "VERIFICATION",
        "code": "verify(scheduler).scheduleAndWait(extractionNamespace, 60000L);",
        "line": 231,
        "locate": "Test Case",
        "locationContext": {
          "methodName": "testSimpleStartStart",
          "methodAnnotations": [
            "@Test"
          ]
        }
      },
      {
        "type": "VERIFICATION",
        "code": "verifyNoMoreInteractions(scheduler, entry, versionedCache);",
        "line": 232,
        "locate": "Test Case",
        "locationContext": {
          "methodName": "testSimpleStartStart",
          "methodAnnotations": [
            "@Test"
          ]
        }
      },
      {
        "type": "VERIFICATION",
        "code": "verify(scheduler).scheduleAndWait(extractionNamespace, 60000L);",
        "line": 255,
        "locate": "Test Case",
        "locationContext": {
          "methodName": "testSimpleStartGetStop",
          "methodAnnotations": [
            "@Test"
          ]
        }
      },
      {
        "type": "VERIFICATION",
        "code": "verifyNoMoreInteractions(scheduler, entry, versionedCache);",
        "line": 260,
        "locate": "Test Case",
        "locationContext": {
          "methodName": "testSimpleStartGetStop",
          "methodAnnotations": [
            "@Test"
          ]
        }
      },
      {
        "type": "VERIFICATION",
        "code": "verify(scheduler).scheduleAndWait(extractionNamespace, 60000L);",
        "line": 285,
        "locate": "Test Case",
        "locationContext": {
          "methodName": "testSimpleStartRacyGetDuringDelete",
          "methodAnnotations": [
            "@Test"
          ]
        }
      },
      {
        "type": "VERIFICATION",
        "code": "verifyNoMoreInteractions(scheduler, entry, versionedCache);",
        "line": 287,
        "locate": "Test Case",
        "locationContext": {
          "methodName": "testSimpleStartRacyGetDuringDelete",
          "methodAnnotations": [
            "@Test"
          ]
        }
      },
      {
        "type": "STUBBING",
        "code": "when(scheduler.scheduleAndWait(extractionNamespace, 60000L)).thenReturn(entry);",
        "line": 293,
        "locate": "Other Methods",
        "locationContext": {
          "methodName": "expectScheduleAndWaitOnce",
          "methodAnnotations": []
        }
      },
      {
        "type": "STUBBING",
        "code": "when(scheduler.scheduleAndWait(extractionNamespace, 60000L)).thenReturn(null);",
        "line": 316,
        "locate": "Test Case",
        "locationContext": {
          "methodName": "testStartFailsToSchedule",
          "methodAnnotations": [
            "@Test"
          ]
        }
      },
      {
        "type": "VERIFICATION",
        "code": "verify(scheduler).scheduleAndWait(extractionNamespace, 60000L);",
        "line": 333,
        "locate": "Test Case",
        "locationContext": {
          "methodName": "testStartFailsToSchedule",
          "methodAnnotations": [
            "@Test"
          ]
        }
      },
      {
        "type": "VERIFICATION",
        "code": "verifyNoMoreInteractions(scheduler, entry, versionedCache);",
        "line": 337,
        "locate": "Test Case",
        "locationContext": {
          "methodName": "testStartFailsToSchedule",
          "methodAnnotations": [
            "@Test"
          ]
        }
      },
      {
        "type": "STUBBING",
        "code": "when(scheduler.scheduleAndWait(eq(extractionNamespace), anyLong())).thenReturn(entry);",
        "line": 471,
        "locate": "Test Case",
        "locationContext": {
          "methodName": "testExceptionalIntrospectionHandler",
          "methodAnnotations": [
            "@Test"
          ]
        }
      },
      {
        "type": "VERIFICATION",
        "code": "verify(scheduler).scheduleAndWait(eq(extractionNamespace), anyLong());",
        "line": 483,
        "locate": "Test Case",
        "locationContext": {
          "methodName": "testExceptionalIntrospectionHandler",
          "methodAnnotations": [
            "@Test"
          ]
        }
      },
      {
        "type": "VERIFICATION",
        "code": "verifyNoMoreInteractions(scheduler, entry, versionedCache);",
        "line": 484,
        "locate": "Test Case",
        "locationContext": {
          "methodName": "testExceptionalIntrospectionHandler",
          "methodAnnotations": [
            "@Test"
          ]
        }
      },
      {
        "type": "VERIFICATION",
        "code": "verifyNoMoreInteractions(scheduler, entry, versionedCache);",
        "line": 497,
        "locate": "Test Case",
        "locationContext": {
          "methodName": "testExceptionalIntrospectionHandler",
          "methodAnnotations": [
            "@Test"
          ]
        }
      },
      {
        "type": "VERIFICATION",
        "code": "verifyNoMoreInteractions(scheduler, entry, versionedCache);",
        "line": 506,
        "locate": "Other Methods",
        "locationContext": {
          "methodName": "validateNotFound",
          "methodAnnotations": []
        }
      },
      {
        "type": "VERIFICATION",
        "code": "verifyNoMoreInteractions(scheduler, entry, versionedCache);",
        "line": 521,
        "locate": "Other Methods",
        "locationContext": {
          "methodName": "validateNotFound",
          "methodAnnotations": []
        }
      }
    ],
    "pattern_id": 46
  }
]