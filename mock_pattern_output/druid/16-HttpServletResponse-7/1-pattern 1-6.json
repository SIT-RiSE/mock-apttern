[
  {
    "variableName": "response",
    "variableType": "HttpServletResponse",
    "mockedClass": "HttpServletResponse",
    "isReuseableMock": "Fully Localized",
    "mockPattern": "Creation:\n\u2014 Local Mock Creation in Test Case\n\nStubbing:\n\u2014 Test Case\n\nVerification:\n\u2014 None",
    "classContext": {
      "packageName": "org.apache.druid.server",
      "filePath": "C:\\java tool\\Apache\\druid\\services\\src\\test\\java\\org\\apache\\druid\\server\\AsyncQueryForwardingServletTest.java",
      "className": "AsyncQueryForwardingServletTest"
    },
    "statements": [
      {
        "type": "DECLARATION",
        "code": "HttpServletResponse response = Mockito.mock(HttpServletResponse.class);",
        "line": 269,
        "locate": "Test Case",
        "locationContext": {
          "methodName": "testHandleExceptionWithFilterDisabled",
          "methodAnnotations": [
            "@Test"
          ]
        }
      },
      {
        "type": "STUBBING",
        "code": "Mockito.when(response.getOutputStream()).thenReturn(outputStream);",
        "line": 271,
        "locate": "Test Case",
        "locationContext": {
          "methodName": "testHandleExceptionWithFilterDisabled",
          "methodAnnotations": [
            "@Test"
          ]
        }
      }
    ],
    "pattern_id": 1
  },
  {
    "variableName": "response",
    "variableType": "HttpServletResponse",
    "mockedClass": "HttpServletResponse",
    "isReuseableMock": "Fully Localized",
    "mockPattern": "Creation:\n\u2014 Local Mock Creation in Test Case\n\nStubbing:\n\u2014 Test Case\n\nVerification:\n\u2014 None",
    "classContext": {
      "packageName": "org.apache.druid.server",
      "filePath": "C:\\java tool\\Apache\\druid\\services\\src\\test\\java\\org\\apache\\druid\\server\\AsyncQueryForwardingServletTest.java",
      "className": "AsyncQueryForwardingServletTest"
    },
    "statements": [
      {
        "type": "DECLARATION",
        "code": "HttpServletResponse response = Mockito.mock(HttpServletResponse.class);",
        "line": 301,
        "locate": "Test Case",
        "locationContext": {
          "methodName": "testHandleExceptionWithFilterEnabled",
          "methodAnnotations": [
            "@Test"
          ]
        }
      },
      {
        "type": "STUBBING",
        "code": "Mockito.when(response.getOutputStream()).thenReturn(outputStream);",
        "line": 303,
        "locate": "Test Case",
        "locationContext": {
          "methodName": "testHandleExceptionWithFilterEnabled",
          "methodAnnotations": [
            "@Test"
          ]
        }
      }
    ],
    "pattern_id": 1
  },
  {
    "variableName": "response",
    "variableType": "HttpServletResponse",
    "mockedClass": "HttpServletResponse",
    "isReuseableMock": "Fully Localized",
    "mockPattern": "Creation:\n\u2014 Local Mock Creation in Test Case\n\nStubbing:\n\u2014 Test Case\n\nVerification:\n\u2014 None",
    "classContext": {
      "packageName": "org.apache.druid.server",
      "filePath": "C:\\java tool\\Apache\\druid\\services\\src\\test\\java\\org\\apache\\druid\\server\\AsyncQueryForwardingServletTest.java",
      "className": "AsyncQueryForwardingServletTest"
    },
    "statements": [
      {
        "type": "DECLARATION",
        "code": "HttpServletResponse response = Mockito.mock(HttpServletResponse.class);",
        "line": 347,
        "locate": "Test Case",
        "locationContext": {
          "methodName": "testHandleExceptionWithFilterEnabledButMessageMatchAllowedRegex",
          "methodAnnotations": [
            "@Test"
          ]
        }
      },
      {
        "type": "STUBBING",
        "code": "Mockito.when(response.getOutputStream()).thenReturn(outputStream);",
        "line": 349,
        "locate": "Test Case",
        "locationContext": {
          "methodName": "testHandleExceptionWithFilterEnabledButMessageMatchAllowedRegex",
          "methodAnnotations": [
            "@Test"
          ]
        }
      }
    ],
    "pattern_id": 1
  },
  {
    "variableName": "response",
    "variableType": "HttpServletResponse",
    "mockedClass": "HttpServletResponse",
    "isReuseableMock": "Fully Localized",
    "mockPattern": "Creation:\n\u2014 Local Mock Creation in Test Case\n\nStubbing:\n\u2014 Test Case\n\nVerification:\n\u2014 None",
    "classContext": {
      "packageName": "org.apache.druid.server",
      "filePath": "C:\\java tool\\Apache\\druid\\services\\src\\test\\java\\org\\apache\\druid\\server\\AsyncQueryForwardingServletTest.java",
      "className": "AsyncQueryForwardingServletTest"
    },
    "statements": [
      {
        "type": "DECLARATION",
        "code": "HttpServletResponse response = Mockito.mock(HttpServletResponse.class);",
        "line": 394,
        "locate": "Test Case",
        "locationContext": {
          "methodName": "testHandleQueryParseExceptionWithFilterDisabled",
          "methodAnnotations": [
            "@Test"
          ]
        }
      },
      {
        "type": "STUBBING",
        "code": "Mockito.when(response.getOutputStream()).thenReturn(outputStream);",
        "line": 396,
        "locate": "Test Case",
        "locationContext": {
          "methodName": "testHandleQueryParseExceptionWithFilterDisabled",
          "methodAnnotations": [
            "@Test"
          ]
        }
      }
    ],
    "pattern_id": 1
  },
  {
    "variableName": "response",
    "variableType": "HttpServletResponse",
    "mockedClass": "HttpServletResponse",
    "isReuseableMock": "Fully Localized",
    "mockPattern": "Creation:\n\u2014 Local Mock Creation in Test Case\n\nStubbing:\n\u2014 Test Case\n\nVerification:\n\u2014 None",
    "classContext": {
      "packageName": "org.apache.druid.server",
      "filePath": "C:\\java tool\\Apache\\druid\\services\\src\\test\\java\\org\\apache\\druid\\server\\AsyncQueryForwardingServletTest.java",
      "className": "AsyncQueryForwardingServletTest"
    },
    "statements": [
      {
        "type": "DECLARATION",
        "code": "HttpServletResponse response = Mockito.mock(HttpServletResponse.class);",
        "line": 427,
        "locate": "Test Case",
        "locationContext": {
          "methodName": "testHandleQueryParseExceptionWithFilterEnabled",
          "methodAnnotations": [
            "@Test"
          ]
        }
      },
      {
        "type": "STUBBING",
        "code": "Mockito.when(response.getOutputStream()).thenReturn(outputStream);",
        "line": 429,
        "locate": "Test Case",
        "locationContext": {
          "methodName": "testHandleQueryParseExceptionWithFilterEnabled",
          "methodAnnotations": [
            "@Test"
          ]
        }
      }
    ],
    "pattern_id": 1
  },
  {
    "variableName": "response",
    "variableType": "HttpServletResponse",
    "mockedClass": "HttpServletResponse",
    "isReuseableMock": "Fully Localized",
    "mockPattern": "Creation:\n\u2014 Local Mock Creation in Test Case\n\nStubbing:\n\u2014 Test Case\n\nVerification:\n\u2014 None",
    "classContext": {
      "packageName": "org.apache.druid.server",
      "filePath": "C:\\java tool\\Apache\\druid\\services\\src\\test\\java\\org\\apache\\druid\\server\\AsyncQueryForwardingServletTest.java",
      "className": "AsyncQueryForwardingServletTest"
    },
    "statements": [
      {
        "type": "DECLARATION",
        "code": "HttpServletResponse response = Mockito.mock(HttpServletResponse.class);",
        "line": 474,
        "locate": "Test Case",
        "locationContext": {
          "methodName": "testHandleQueryParseExceptionWithFilterEnabledButMessageMatchAllowedRegex",
          "methodAnnotations": [
            "@Test"
          ]
        }
      },
      {
        "type": "STUBBING",
        "code": "Mockito.when(response.getOutputStream()).thenReturn(outputStream);",
        "line": 476,
        "locate": "Test Case",
        "locationContext": {
          "methodName": "testHandleQueryParseExceptionWithFilterEnabledButMessageMatchAllowedRegex",
          "methodAnnotations": [
            "@Test"
          ]
        }
      }
    ],
    "pattern_id": 1
  }
]