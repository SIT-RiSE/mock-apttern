[
  {
    "variableName": "mockTestLogs",
    "variableType": "TaskLogs",
    "mockedClass": "TaskLogs",
    "isReuseableMock": "Fully Localized",
    "mockPattern": "Creation:\n\u2014 Local Mock Creation in Test Case\n\nStubbing:\n\u2014 Test Case\n\nVerification:\n\u2014 None",
    "classContext": {
      "packageName": "org.apache.druid.k8s.overlord.taskadapter",
      "filePath": "C:\\java tool\\Apache\\druid\\extensions-contrib\\kubernetes-overlord-extensions\\src\\test\\java\\org\\apache\\druid\\k8s\\overlord\\taskadapter\\K8sTaskAdapterTest.java",
      "className": "K8sTaskAdapterTest"
    },
    "statements": [
      {
        "type": "DECLARATION",
        "code": "TaskLogs mockTestLogs = Mockito.mock(TaskLogs.class);",
        "line": 283,
        "locate": "Test Case",
        "locationContext": {
          "methodName": "toTask_useTaskPayloadManager",
          "methodAnnotations": [
            "@Test"
          ]
        }
      },
      {
        "type": "STUBBING",
        "code": "Mockito.when(mockTestLogs.streamTaskPayload(\"ID\")).thenReturn(com.google.common.base.Optional.of(new ByteArrayInputStream(jsonMapper.writeValueAsString(taskInTaskPayloadManager).getBytes(Charset.defaultCharset()))));",
        "line": 284,
        "locate": "Test Case",
        "locationContext": {
          "methodName": "toTask_useTaskPayloadManager",
          "methodAnnotations": [
            "@Test"
          ]
        }
      }
    ],
    "pattern_id": 1
  },
  {
    "variableName": "mockTestLogs",
    "variableType": "TaskLogs",
    "mockedClass": "TaskLogs",
    "isReuseableMock": "Fully Localized",
    "mockPattern": "Creation:\n\u2014 Local Mock Creation in Test Case\n\nStubbing:\n\u2014 Test Case\n\nVerification:\n\u2014 None",
    "classContext": {
      "packageName": "org.apache.druid.k8s.overlord.taskadapter",
      "filePath": "C:\\java tool\\Apache\\druid\\extensions-contrib\\kubernetes-overlord-extensions\\src\\test\\java\\org\\apache\\druid\\k8s\\overlord\\taskadapter\\PodTemplateTaskAdapterTest.java",
      "className": "PodTemplateTaskAdapterTest"
    },
    "statements": [
      {
        "type": "DECLARATION",
        "code": "TaskLogs mockTestLogs = Mockito.mock(TaskLogs.class);",
        "line": 433,
        "locate": "Test Case",
        "locationContext": {
          "methodName": "test_toTask_useTaskPayloadManager",
          "methodAnnotations": [
            "@Test"
          ]
        }
      },
      {
        "type": "STUBBING",
        "code": "Mockito.when(mockTestLogs.streamTaskPayload(\"id\")).thenReturn(Optional.of(new ByteArrayInputStream(mapper.writeValueAsString(expected).getBytes(Charset.defaultCharset()))));",
        "line": 434,
        "locate": "Test Case",
        "locationContext": {
          "methodName": "test_toTask_useTaskPayloadManager",
          "methodAnnotations": [
            "@Test"
          ]
        }
      }
    ],
    "pattern_id": 1
  }
]