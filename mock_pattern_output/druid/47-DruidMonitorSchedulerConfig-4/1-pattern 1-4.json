[
  {
    "variableName": "config",
    "variableType": "DruidMonitorSchedulerConfig",
    "mockedClass": "DruidMonitorSchedulerConfig",
    "isReuseableMock": false,
    "mockPattern": "Creation:\n\u2014 Local Mock Creation in Test Case\n\nStubbing:\n\u2014 Test Case\n\nVerification:\n\u2014 None",
    "classContext": {
      "packageName": "org.apache.druid.java.util.metrics",
      "filePath": "C:\\java tool\\Apache\\druid\\processing\\src\\test\\java\\org\\apache\\druid\\java\\util\\metrics\\ClockDriftSafeMonitorSchedulerTest.java",
      "className": "ClockDriftSafeMonitorSchedulerTest"
    },
    "statements": [
      {
        "type": "DECLARATION",
        "code": "DruidMonitorSchedulerConfig config = Mockito.mock(DruidMonitorSchedulerConfig.class);",
        "line": 156,
        "locate": "Test Case",
        "locationContext": {
          "methodName": "testStart_RepeatScheduling",
          "methodAnnotations": [
            "@Test"
          ]
        }
      },
      {
        "type": "STUBBING",
        "code": "Mockito.when(config.getEmissionDuration()).thenReturn(new org.joda.time.Duration(1000L));",
        "line": 157,
        "locate": "Test Case",
        "locationContext": {
          "methodName": "testStart_RepeatScheduling",
          "methodAnnotations": [
            "@Test"
          ]
        }
      }
    ],
    "pattern_id": 1
  },
  {
    "variableName": "config",
    "variableType": "DruidMonitorSchedulerConfig",
    "mockedClass": "DruidMonitorSchedulerConfig",
    "isReuseableMock": false,
    "mockPattern": "Creation:\n\u2014 Local Mock Creation in Test Case\n\nStubbing:\n\u2014 Test Case\n\nVerification:\n\u2014 None",
    "classContext": {
      "packageName": "org.apache.druid.java.util.metrics",
      "filePath": "C:\\java tool\\Apache\\druid\\processing\\src\\test\\java\\org\\apache\\druid\\java\\util\\metrics\\ClockDriftSafeMonitorSchedulerTest.java",
      "className": "ClockDriftSafeMonitorSchedulerTest"
    },
    "statements": [
      {
        "type": "DECLARATION",
        "code": "DruidMonitorSchedulerConfig config = Mockito.mock(DruidMonitorSchedulerConfig.class);",
        "line": 220,
        "locate": "Test Case",
        "locationContext": {
          "methodName": "testStart_RepeatAndStopScheduling",
          "methodAnnotations": [
            "@Test"
          ]
        }
      },
      {
        "type": "STUBBING",
        "code": "Mockito.when(config.getEmissionDuration()).thenReturn(new org.joda.time.Duration(1000L));",
        "line": 221,
        "locate": "Test Case",
        "locationContext": {
          "methodName": "testStart_RepeatAndStopScheduling",
          "methodAnnotations": [
            "@Test"
          ]
        }
      }
    ],
    "pattern_id": 1
  },
  {
    "variableName": "config",
    "variableType": "DruidMonitorSchedulerConfig",
    "mockedClass": "DruidMonitorSchedulerConfig",
    "isReuseableMock": false,
    "mockPattern": "Creation:\n\u2014 Local Mock Creation in Test Case\n\nStubbing:\n\u2014 Test Case\n\nVerification:\n\u2014 None",
    "classContext": {
      "packageName": "org.apache.druid.java.util.metrics",
      "filePath": "C:\\java tool\\Apache\\druid\\processing\\src\\test\\java\\org\\apache\\druid\\java\\util\\metrics\\ClockDriftSafeMonitorSchedulerTest.java",
      "className": "ClockDriftSafeMonitorSchedulerTest"
    },
    "statements": [
      {
        "type": "DECLARATION",
        "code": "DruidMonitorSchedulerConfig config = Mockito.mock(DruidMonitorSchedulerConfig.class);",
        "line": 251,
        "locate": "Test Case",
        "locationContext": {
          "methodName": "testStart_UnexpectedExceptionWhileMonitoring",
          "methodAnnotations": [
            "@Test"
          ]
        }
      },
      {
        "type": "STUBBING",
        "code": "Mockito.when(config.getEmissionDuration()).thenReturn(new org.joda.time.Duration(1000L));",
        "line": 252,
        "locate": "Test Case",
        "locationContext": {
          "methodName": "testStart_UnexpectedExceptionWhileMonitoring",
          "methodAnnotations": [
            "@Test"
          ]
        }
      }
    ],
    "pattern_id": 1
  },
  {
    "variableName": "config",
    "variableType": "DruidMonitorSchedulerConfig",
    "mockedClass": "DruidMonitorSchedulerConfig",
    "isReuseableMock": false,
    "mockPattern": "Creation:\n\u2014 Local Mock Creation in Test Case\n\nStubbing:\n\u2014 Test Case\n\nVerification:\n\u2014 None",
    "classContext": {
      "packageName": "org.apache.druid.java.util.metrics",
      "filePath": "C:\\java tool\\Apache\\druid\\processing\\src\\test\\java\\org\\apache\\druid\\java\\util\\metrics\\ClockDriftSafeMonitorSchedulerTest.java",
      "className": "ClockDriftSafeMonitorSchedulerTest"
    },
    "statements": [
      {
        "type": "DECLARATION",
        "code": "DruidMonitorSchedulerConfig config = Mockito.mock(DruidMonitorSchedulerConfig.class);",
        "line": 313,
        "locate": "Test Case",
        "locationContext": {
          "methodName": "testStart_UnexpectedExceptionWhileScheduling",
          "methodAnnotations": [
            "@Test"
          ]
        }
      },
      {
        "type": "STUBBING",
        "code": "Mockito.when(config.getEmissionDuration()).thenReturn(new org.joda.time.Duration(1000L));",
        "line": 314,
        "locate": "Test Case",
        "locationContext": {
          "methodName": "testStart_UnexpectedExceptionWhileScheduling",
          "methodAnnotations": [
            "@Test"
          ]
        }
      }
    ],
    "pattern_id": 1
  }
]