[
  {
    "variableName": "protocolDelegate",
    "variableType": "Protocol",
    "mockedClass": "Protocol",
    "isReuseableMock": "Hybrid",
    "mockPattern": "Creation:\n\u2014 Attribute Mock Creation\n\nStubbing:\n\u2014 @Before\n\nVerification:\n\u2014 Test Case",
    "classContext": {
      "packageName": "org.apache.dubbo.config",
      "filePath": "C:\\java tool\\Apache\\dubbo\\dubbo-config\\dubbo-config-api\\src\\test\\java\\org\\apache\\dubbo\\config\\ServiceConfigTest.java",
      "className": "ServiceConfigTest"
    },
    "statements": [
      {
        "type": "FIELD_MOCK_CREATION",
        "code": "private Protocol protocolDelegate = Mockito.mock(Protocol.class);",
        "line": 89,
        "locate": "Attribute",
        "locationContext": {
          "methodName": "[FieldDeclaration]",
          "methodAnnotations": []
        }
      },
      {
        "type": "STUBBING",
        "code": "Mockito.when(protocolDelegate.export(Mockito.any(Invoker.class))).thenReturn(exporter);",
        "line": 108,
        "locate": "@Before",
        "locationContext": {
          "methodName": "setUp",
          "methodAnnotations": [
            "@BeforeEach"
          ]
        }
      },
      {
        "type": "VERIFICATION",
        "code": "// export MetadataService and DemoService in \"mockprotocol2\" protocol.\r\nMockito.verify(protocolDelegate, times(2)).export(Mockito.any(Invoker.class));",
        "line": 188,
        "locate": "Test Case",
        "locationContext": {
          "methodName": "testExport",
          "methodAnnotations": [
            "@Test"
          ]
        }
      },
      {
        "type": "VERIFICATION",
        "code": "// export MetadataService and DemoService in \"mockprotocol2\" protocol.\r\nMockito.verify(protocolDelegate, times(2)).export(Mockito.any(Invoker.class));",
        "line": 349,
        "locate": "Test Case",
        "locationContext": {
          "methodName": "testExportWithoutRegistryConfig",
          "methodAnnotations": [
            "@Test"
          ]
        }
      }
    ],
    "pattern_id": 15
  }
]