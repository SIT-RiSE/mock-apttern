[
  {
    "variableName": "protocol",
    "variableType": "Protocol",
    "mockedClass": "Protocol",
    "isReuseableMock": false,
    "mockPattern": "Creation:\n\u2014 Local Mock Creation in Test Case\n\nStubbing:\n\u2014 Test Case\n\nVerification:\n\u2014 None",
    "classContext": {
      "packageName": "org.apache.dubbo.rpc.protocol",
      "filePath": "C:\\java tool\\Apache\\dubbo\\dubbo-rpc\\dubbo-rpc-api\\src\\test\\java\\org\\apache\\dubbo\\rpc\\protocol\\ProtocolListenerWrapperTest.java",
      "className": "ProtocolListenerWrapperTest"
    },
    "statements": [
      {
        "type": "DECLARATION",
        "code": "Protocol protocol = mock(Protocol.class);",
        "line": 74,
        "locate": "Test Case",
        "locationContext": {
          "methodName": "testLoadingListenerForLocalReference",
          "methodAnnotations": [
            "@Test"
          ]
        }
      },
      {
        "type": "STUBBING",
        "code": "when(protocol.refer(DemoService.class, urlWithListener)).thenReturn(invokerWithListener);",
        "line": 75,
        "locate": "Test Case",
        "locationContext": {
          "methodName": "testLoadingListenerForLocalReference",
          "methodAnnotations": [
            "@Test"
          ]
        }
      }
    ],
    "pattern_id": 1
  },
  {
    "variableName": "protocolWithoutListener",
    "variableType": "Protocol",
    "mockedClass": "Protocol",
    "isReuseableMock": false,
    "mockPattern": "Creation:\n\u2014 Local Mock Creation in Test Case\n\nStubbing:\n\u2014 Test Case\n\nVerification:\n\u2014 None",
    "classContext": {
      "packageName": "org.apache.dubbo.rpc.protocol",
      "filePath": "C:\\java tool\\Apache\\dubbo\\dubbo-rpc\\dubbo-rpc-api\\src\\test\\java\\org\\apache\\dubbo\\rpc\\protocol\\ProtocolListenerWrapperTest.java",
      "className": "ProtocolListenerWrapperTest"
    },
    "statements": [
      {
        "type": "DECLARATION",
        "code": "Protocol protocolWithoutListener = mock(Protocol.class);",
        "line": 50,
        "locate": "Test Case",
        "locationContext": {
          "methodName": "testLoadingListenerForLocalReference",
          "methodAnnotations": [
            "@Test"
          ]
        }
      },
      {
        "type": "STUBBING",
        "code": "when(protocolWithoutListener.refer(DemoService.class, urlWithoutListener)).thenReturn(invokerWithoutListener);",
        "line": 51,
        "locate": "Test Case",
        "locationContext": {
          "methodName": "testLoadingListenerForLocalReference",
          "methodAnnotations": [
            "@Test"
          ]
        }
      }
    ],
    "pattern_id": 1
  },
  {
    "variableName": "protocol",
    "variableType": "Protocol",
    "mockedClass": "Protocol",
    "isReuseableMock": false,
    "mockPattern": "Creation:\n\u2014 Local Mock Creation in Test Case\n\nStubbing:\n\u2014 Test Case\n\nVerification:\n\u2014 None",
    "classContext": {
      "packageName": "org.apache.dubbo.rpc.protocol",
      "filePath": "C:\\java tool\\Apache\\dubbo\\dubbo-rpc\\dubbo-rpc-api\\src\\test\\java\\org\\apache\\dubbo\\rpc\\protocol\\ProtocolListenerWrapperTest.java",
      "className": "ProtocolListenerWrapperTest"
    },
    "statements": [
      {
        "type": "DECLARATION",
        "code": "Protocol protocol = mock(Protocol.class);",
        "line": 121,
        "locate": "Test Case",
        "locationContext": {
          "methodName": "testLoadingListenerForRemoteReference",
          "methodAnnotations": [
            "@Test"
          ]
        }
      },
      {
        "type": "STUBBING",
        "code": "when(protocol.refer(DemoService.class, urlWithListener)).thenReturn(invokerWithListener);",
        "line": 122,
        "locate": "Test Case",
        "locationContext": {
          "methodName": "testLoadingListenerForRemoteReference",
          "methodAnnotations": [
            "@Test"
          ]
        }
      }
    ],
    "pattern_id": 1
  },
  {
    "variableName": "protocolWithoutListener",
    "variableType": "Protocol",
    "mockedClass": "Protocol",
    "isReuseableMock": false,
    "mockPattern": "Creation:\n\u2014 Local Mock Creation in Test Case\n\nStubbing:\n\u2014 Test Case\n\nVerification:\n\u2014 None",
    "classContext": {
      "packageName": "org.apache.dubbo.rpc.protocol",
      "filePath": "C:\\java tool\\Apache\\dubbo\\dubbo-rpc\\dubbo-rpc-api\\src\\test\\java\\org\\apache\\dubbo\\rpc\\protocol\\ProtocolListenerWrapperTest.java",
      "className": "ProtocolListenerWrapperTest"
    },
    "statements": [
      {
        "type": "DECLARATION",
        "code": "Protocol protocolWithoutListener = mock(Protocol.class);",
        "line": 97,
        "locate": "Test Case",
        "locationContext": {
          "methodName": "testLoadingListenerForRemoteReference",
          "methodAnnotations": [
            "@Test"
          ]
        }
      },
      {
        "type": "STUBBING",
        "code": "when(protocolWithoutListener.refer(DemoService.class, urlWithoutListener)).thenReturn(invokerWithoutListener);",
        "line": 98,
        "locate": "Test Case",
        "locationContext": {
          "methodName": "testLoadingListenerForRemoteReference",
          "methodAnnotations": [
            "@Test"
          ]
        }
      }
    ],
    "pattern_id": 1
  }
]