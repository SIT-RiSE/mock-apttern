[
  {
    "variableName": "weightInvoker2",
    "variableType": "Invoker<LoadBalanceBaseTest>",
    "mockedClass": "Invoker<LoadBalanceBaseTest>",
    "isReuseableMock": "Fully Shared",
    "mockPattern": "Creation:\n\u2014 Attribute Mock Creation\n\nStubbing:\n\u2014 @Before\n\nVerification:\n\u2014 None",
    "classContext": {
      "packageName": "org.apache.dubbo.rpc.cluster.loadbalance",
      "filePath": "C:\\java tool\\Apache\\dubbo\\dubbo-cluster\\src\\test\\java\\org\\apache\\dubbo\\rpc\\cluster\\loadbalance\\LoadBalanceBaseTest.java",
      "className": "LoadBalanceBaseTest"
    },
    "statements": [
      {
        "type": "FIELD_DECLARATION",
        "code": "protected Invoker<LoadBalanceBaseTest> weightInvoker2;",
        "line": 235,
        "locate": "Attribute",
        "locationContext": {
          "methodName": "[FieldDeclaration]",
          "methodAnnotations": []
        }
      },
      {
        "type": "ASSIGNMENT",
        "code": "weightInvoker2 = mock(Invoker.class, Mockito.withSettings().stubOnly());",
        "line": 243,
        "locate": "@Before",
        "locationContext": {
          "methodName": "before",
          "methodAnnotations": [
            "@BeforeEach"
          ]
        }
      },
      {
        "type": "STUBBING",
        "code": "given(weightInvoker2.isAvailable()).willReturn(true);",
        "line": 261,
        "locate": "@Before",
        "locationContext": {
          "methodName": "before",
          "methodAnnotations": [
            "@BeforeEach"
          ]
        }
      },
      {
        "type": "STUBBING",
        "code": "given(weightInvoker2.getInterface()).willReturn(LoadBalanceBaseTest.class);",
        "line": 262,
        "locate": "@Before",
        "locationContext": {
          "methodName": "before",
          "methodAnnotations": [
            "@BeforeEach"
          ]
        }
      },
      {
        "type": "STUBBING",
        "code": "given(weightInvoker2.getUrl()).willReturn(url2);",
        "line": 263,
        "locate": "@Before",
        "locationContext": {
          "methodName": "before",
          "methodAnnotations": [
            "@BeforeEach"
          ]
        }
      }
    ],
    "pattern_id": 7
  },
  {
    "variableName": "weightInvoker3",
    "variableType": "Invoker<LoadBalanceBaseTest>",
    "mockedClass": "Invoker<LoadBalanceBaseTest>",
    "isReuseableMock": "Fully Shared",
    "mockPattern": "Creation:\n\u2014 Attribute Mock Creation\n\nStubbing:\n\u2014 @Before\n\nVerification:\n\u2014 None",
    "classContext": {
      "packageName": "org.apache.dubbo.rpc.cluster.loadbalance",
      "filePath": "C:\\java tool\\Apache\\dubbo\\dubbo-cluster\\src\\test\\java\\org\\apache\\dubbo\\rpc\\cluster\\loadbalance\\LoadBalanceBaseTest.java",
      "className": "LoadBalanceBaseTest"
    },
    "statements": [
      {
        "type": "FIELD_DECLARATION",
        "code": "protected Invoker<LoadBalanceBaseTest> weightInvoker3;",
        "line": 236,
        "locate": "Attribute",
        "locationContext": {
          "methodName": "[FieldDeclaration]",
          "methodAnnotations": []
        }
      },
      {
        "type": "ASSIGNMENT",
        "code": "weightInvoker3 = mock(Invoker.class, Mockito.withSettings().stubOnly());",
        "line": 244,
        "locate": "@Before",
        "locationContext": {
          "methodName": "before",
          "methodAnnotations": [
            "@BeforeEach"
          ]
        }
      },
      {
        "type": "STUBBING",
        "code": "given(weightInvoker3.isAvailable()).willReturn(true);",
        "line": 265,
        "locate": "@Before",
        "locationContext": {
          "methodName": "before",
          "methodAnnotations": [
            "@BeforeEach"
          ]
        }
      },
      {
        "type": "STUBBING",
        "code": "given(weightInvoker3.getInterface()).willReturn(LoadBalanceBaseTest.class);",
        "line": 266,
        "locate": "@Before",
        "locationContext": {
          "methodName": "before",
          "methodAnnotations": [
            "@BeforeEach"
          ]
        }
      },
      {
        "type": "STUBBING",
        "code": "given(weightInvoker3.getUrl()).willReturn(url3);",
        "line": 267,
        "locate": "@Before",
        "locationContext": {
          "methodName": "before",
          "methodAnnotations": [
            "@BeforeEach"
          ]
        }
      }
    ],
    "pattern_id": 7
  },
  {
    "variableName": "weightInvoker5",
    "variableType": "Invoker<LoadBalanceBaseTest>",
    "mockedClass": "Invoker<LoadBalanceBaseTest>",
    "isReuseableMock": "Fully Shared",
    "mockPattern": "Creation:\n\u2014 Attribute Mock Creation\n\nStubbing:\n\u2014 @Before\n\nVerification:\n\u2014 None",
    "classContext": {
      "packageName": "org.apache.dubbo.rpc.cluster.loadbalance",
      "filePath": "C:\\java tool\\Apache\\dubbo\\dubbo-cluster\\src\\test\\java\\org\\apache\\dubbo\\rpc\\cluster\\loadbalance\\LoadBalanceBaseTest.java",
      "className": "LoadBalanceBaseTest"
    },
    "statements": [
      {
        "type": "FIELD_DECLARATION",
        "code": "protected Invoker<LoadBalanceBaseTest> weightInvoker5;",
        "line": 238,
        "locate": "Attribute",
        "locationContext": {
          "methodName": "[FieldDeclaration]",
          "methodAnnotations": []
        }
      },
      {
        "type": "ASSIGNMENT",
        "code": "weightInvoker5 = mock(Invoker.class, Mockito.withSettings().stubOnly());",
        "line": 246,
        "locate": "@Before",
        "locationContext": {
          "methodName": "before",
          "methodAnnotations": [
            "@BeforeEach"
          ]
        }
      },
      {
        "type": "STUBBING",
        "code": "given(weightInvoker5.isAvailable()).willReturn(true);",
        "line": 273,
        "locate": "@Before",
        "locationContext": {
          "methodName": "before",
          "methodAnnotations": [
            "@BeforeEach"
          ]
        }
      },
      {
        "type": "STUBBING",
        "code": "given(weightInvoker5.getInterface()).willReturn(LoadBalanceBaseTest.class);",
        "line": 274,
        "locate": "@Before",
        "locationContext": {
          "methodName": "before",
          "methodAnnotations": [
            "@BeforeEach"
          ]
        }
      },
      {
        "type": "STUBBING",
        "code": "given(weightInvoker5.getUrl()).willReturn(url5);",
        "line": 275,
        "locate": "@Before",
        "locationContext": {
          "methodName": "before",
          "methodAnnotations": [
            "@BeforeEach"
          ]
        }
      }
    ],
    "pattern_id": 7
  },
  {
    "variableName": "invoker1",
    "variableType": "Invoker<LoadBalanceBaseTest>",
    "mockedClass": "Invoker",
    "isReuseableMock": "Fully Shared",
    "mockPattern": "Creation:\n\u2014 Attribute Mock Creation\n\nStubbing:\n\u2014 @Before\n\nVerification:\n\u2014 None",
    "classContext": {
      "packageName": "org.apache.dubbo.rpc.cluster.loadbalance",
      "filePath": "C:\\java tool\\Apache\\dubbo\\dubbo-cluster\\src\\test\\java\\org\\apache\\dubbo\\rpc\\cluster\\loadbalance\\LoadBalanceBaseTest.java",
      "className": "LoadBalanceBaseTest"
    },
    "statements": [
      {
        "type": "FIELD_DECLARATION",
        "code": "Invoker<LoadBalanceBaseTest> invoker1;",
        "line": 53,
        "locate": "Attribute",
        "locationContext": {
          "methodName": "[FieldDeclaration]",
          "methodAnnotations": []
        }
      },
      {
        "type": "ASSIGNMENT",
        "code": "invoker1 = mock(Invoker.class);",
        "line": 90,
        "locate": "@Before",
        "locationContext": {
          "methodName": "setUp",
          "methodAnnotations": [
            "@BeforeEach"
          ]
        }
      },
      {
        "type": "STUBBING",
        "code": "given(invoker1.isAvailable()).willReturn(true);",
        "line": 102,
        "locate": "@Before",
        "locationContext": {
          "methodName": "setUp",
          "methodAnnotations": [
            "@BeforeEach"
          ]
        }
      },
      {
        "type": "STUBBING",
        "code": "given(invoker1.getInterface()).willReturn(LoadBalanceBaseTest.class);",
        "line": 103,
        "locate": "@Before",
        "locationContext": {
          "methodName": "setUp",
          "methodAnnotations": [
            "@BeforeEach"
          ]
        }
      },
      {
        "type": "STUBBING",
        "code": "given(invoker1.getUrl()).willReturn(url1);",
        "line": 104,
        "locate": "@Before",
        "locationContext": {
          "methodName": "setUp",
          "methodAnnotations": [
            "@BeforeEach"
          ]
        }
      }
    ],
    "pattern_id": 7
  },
  {
    "variableName": "invoker5",
    "variableType": "Invoker<LoadBalanceBaseTest>",
    "mockedClass": "Invoker",
    "isReuseableMock": "Fully Shared",
    "mockPattern": "Creation:\n\u2014 Attribute Mock Creation\n\nStubbing:\n\u2014 @Before\n\nVerification:\n\u2014 None",
    "classContext": {
      "packageName": "org.apache.dubbo.rpc.cluster.loadbalance",
      "filePath": "C:\\java tool\\Apache\\dubbo\\dubbo-cluster\\src\\test\\java\\org\\apache\\dubbo\\rpc\\cluster\\loadbalance\\LoadBalanceBaseTest.java",
      "className": "LoadBalanceBaseTest"
    },
    "statements": [
      {
        "type": "FIELD_DECLARATION",
        "code": "Invoker<LoadBalanceBaseTest> invoker5;",
        "line": 57,
        "locate": "Attribute",
        "locationContext": {
          "methodName": "[FieldDeclaration]",
          "methodAnnotations": []
        }
      },
      {
        "type": "ASSIGNMENT",
        "code": "invoker5 = mock(Invoker.class);",
        "line": 94,
        "locate": "@Before",
        "locationContext": {
          "methodName": "setUp",
          "methodAnnotations": [
            "@BeforeEach"
          ]
        }
      },
      {
        "type": "STUBBING",
        "code": "given(invoker5.isAvailable()).willReturn(true);",
        "line": 118,
        "locate": "@Before",
        "locationContext": {
          "methodName": "setUp",
          "methodAnnotations": [
            "@BeforeEach"
          ]
        }
      },
      {
        "type": "STUBBING",
        "code": "given(invoker5.getInterface()).willReturn(LoadBalanceBaseTest.class);",
        "line": 119,
        "locate": "@Before",
        "locationContext": {
          "methodName": "setUp",
          "methodAnnotations": [
            "@BeforeEach"
          ]
        }
      },
      {
        "type": "STUBBING",
        "code": "given(invoker5.getUrl()).willReturn(url5);",
        "line": 120,
        "locate": "@Before",
        "locationContext": {
          "methodName": "setUp",
          "methodAnnotations": [
            "@BeforeEach"
          ]
        }
      }
    ],
    "pattern_id": 7
  },
  {
    "variableName": "invoker4",
    "variableType": "Invoker<LoadBalanceBaseTest>",
    "mockedClass": "Invoker",
    "isReuseableMock": "Fully Shared",
    "mockPattern": "Creation:\n\u2014 Attribute Mock Creation\n\nStubbing:\n\u2014 @Before\n\nVerification:\n\u2014 None",
    "classContext": {
      "packageName": "org.apache.dubbo.rpc.cluster.loadbalance",
      "filePath": "C:\\java tool\\Apache\\dubbo\\dubbo-cluster\\src\\test\\java\\org\\apache\\dubbo\\rpc\\cluster\\loadbalance\\LoadBalanceBaseTest.java",
      "className": "LoadBalanceBaseTest"
    },
    "statements": [
      {
        "type": "FIELD_DECLARATION",
        "code": "Invoker<LoadBalanceBaseTest> invoker4;",
        "line": 56,
        "locate": "Attribute",
        "locationContext": {
          "methodName": "[FieldDeclaration]",
          "methodAnnotations": []
        }
      },
      {
        "type": "ASSIGNMENT",
        "code": "invoker4 = mock(Invoker.class);",
        "line": 93,
        "locate": "@Before",
        "locationContext": {
          "methodName": "setUp",
          "methodAnnotations": [
            "@BeforeEach"
          ]
        }
      },
      {
        "type": "STUBBING",
        "code": "given(invoker4.isAvailable()).willReturn(true);",
        "line": 114,
        "locate": "@Before",
        "locationContext": {
          "methodName": "setUp",
          "methodAnnotations": [
            "@BeforeEach"
          ]
        }
      },
      {
        "type": "STUBBING",
        "code": "given(invoker4.getInterface()).willReturn(LoadBalanceBaseTest.class);",
        "line": 115,
        "locate": "@Before",
        "locationContext": {
          "methodName": "setUp",
          "methodAnnotations": [
            "@BeforeEach"
          ]
        }
      },
      {
        "type": "STUBBING",
        "code": "given(invoker4.getUrl()).willReturn(url4);",
        "line": 116,
        "locate": "@Before",
        "locationContext": {
          "methodName": "setUp",
          "methodAnnotations": [
            "@BeforeEach"
          ]
        }
      }
    ],
    "pattern_id": 7
  },
  {
    "variableName": "invoker3",
    "variableType": "Invoker<LoadBalanceBaseTest>",
    "mockedClass": "Invoker",
    "isReuseableMock": "Fully Shared",
    "mockPattern": "Creation:\n\u2014 Attribute Mock Creation\n\nStubbing:\n\u2014 @Before\n\nVerification:\n\u2014 None",
    "classContext": {
      "packageName": "org.apache.dubbo.rpc.cluster.loadbalance",
      "filePath": "C:\\java tool\\Apache\\dubbo\\dubbo-cluster\\src\\test\\java\\org\\apache\\dubbo\\rpc\\cluster\\loadbalance\\LoadBalanceBaseTest.java",
      "className": "LoadBalanceBaseTest"
    },
    "statements": [
      {
        "type": "FIELD_DECLARATION",
        "code": "Invoker<LoadBalanceBaseTest> invoker3;",
        "line": 55,
        "locate": "Attribute",
        "locationContext": {
          "methodName": "[FieldDeclaration]",
          "methodAnnotations": []
        }
      },
      {
        "type": "ASSIGNMENT",
        "code": "invoker3 = mock(Invoker.class);",
        "line": 92,
        "locate": "@Before",
        "locationContext": {
          "methodName": "setUp",
          "methodAnnotations": [
            "@BeforeEach"
          ]
        }
      },
      {
        "type": "STUBBING",
        "code": "given(invoker3.isAvailable()).willReturn(true);",
        "line": 110,
        "locate": "@Before",
        "locationContext": {
          "methodName": "setUp",
          "methodAnnotations": [
            "@BeforeEach"
          ]
        }
      },
      {
        "type": "STUBBING",
        "code": "given(invoker3.getInterface()).willReturn(LoadBalanceBaseTest.class);",
        "line": 111,
        "locate": "@Before",
        "locationContext": {
          "methodName": "setUp",
          "methodAnnotations": [
            "@BeforeEach"
          ]
        }
      },
      {
        "type": "STUBBING",
        "code": "given(invoker3.getUrl()).willReturn(url3);",
        "line": 112,
        "locate": "@Before",
        "locationContext": {
          "methodName": "setUp",
          "methodAnnotations": [
            "@BeforeEach"
          ]
        }
      }
    ],
    "pattern_id": 7
  },
  {
    "variableName": "invoker2",
    "variableType": "Invoker<LoadBalanceBaseTest>",
    "mockedClass": "Invoker",
    "isReuseableMock": "Fully Shared",
    "mockPattern": "Creation:\n\u2014 Attribute Mock Creation\n\nStubbing:\n\u2014 @Before\n\nVerification:\n\u2014 None",
    "classContext": {
      "packageName": "org.apache.dubbo.rpc.cluster.loadbalance",
      "filePath": "C:\\java tool\\Apache\\dubbo\\dubbo-cluster\\src\\test\\java\\org\\apache\\dubbo\\rpc\\cluster\\loadbalance\\LoadBalanceBaseTest.java",
      "className": "LoadBalanceBaseTest"
    },
    "statements": [
      {
        "type": "FIELD_DECLARATION",
        "code": "Invoker<LoadBalanceBaseTest> invoker2;",
        "line": 54,
        "locate": "Attribute",
        "locationContext": {
          "methodName": "[FieldDeclaration]",
          "methodAnnotations": []
        }
      },
      {
        "type": "ASSIGNMENT",
        "code": "invoker2 = mock(Invoker.class);",
        "line": 91,
        "locate": "@Before",
        "locationContext": {
          "methodName": "setUp",
          "methodAnnotations": [
            "@BeforeEach"
          ]
        }
      },
      {
        "type": "STUBBING",
        "code": "given(invoker2.isAvailable()).willReturn(true);",
        "line": 106,
        "locate": "@Before",
        "locationContext": {
          "methodName": "setUp",
          "methodAnnotations": [
            "@BeforeEach"
          ]
        }
      },
      {
        "type": "STUBBING",
        "code": "given(invoker2.getInterface()).willReturn(LoadBalanceBaseTest.class);",
        "line": 107,
        "locate": "@Before",
        "locationContext": {
          "methodName": "setUp",
          "methodAnnotations": [
            "@BeforeEach"
          ]
        }
      },
      {
        "type": "STUBBING",
        "code": "given(invoker2.getUrl()).willReturn(url2);",
        "line": 108,
        "locate": "@Before",
        "locationContext": {
          "methodName": "setUp",
          "methodAnnotations": [
            "@BeforeEach"
          ]
        }
      }
    ],
    "pattern_id": 7
  },
  {
    "variableName": "weightInvokerTmp",
    "variableType": "Invoker<LoadBalanceBaseTest>",
    "mockedClass": "Invoker<LoadBalanceBaseTest>",
    "isReuseableMock": "Fully Shared",
    "mockPattern": "Creation:\n\u2014 Attribute Mock Creation\n\nStubbing:\n\u2014 @Before\n\nVerification:\n\u2014 None",
    "classContext": {
      "packageName": "org.apache.dubbo.rpc.cluster.loadbalance",
      "filePath": "C:\\java tool\\Apache\\dubbo\\dubbo-cluster\\src\\test\\java\\org\\apache\\dubbo\\rpc\\cluster\\loadbalance\\LoadBalanceBaseTest.java",
      "className": "LoadBalanceBaseTest"
    },
    "statements": [
      {
        "type": "FIELD_DECLARATION",
        "code": "protected Invoker<LoadBalanceBaseTest> weightInvokerTmp;",
        "line": 237,
        "locate": "Attribute",
        "locationContext": {
          "methodName": "[FieldDeclaration]",
          "methodAnnotations": []
        }
      },
      {
        "type": "ASSIGNMENT",
        "code": "weightInvokerTmp = mock(Invoker.class, Mockito.withSettings().stubOnly());",
        "line": 245,
        "locate": "@Before",
        "locationContext": {
          "methodName": "before",
          "methodAnnotations": [
            "@BeforeEach"
          ]
        }
      },
      {
        "type": "STUBBING",
        "code": "given(weightInvokerTmp.isAvailable()).willReturn(true);",
        "line": 269,
        "locate": "@Before",
        "locationContext": {
          "methodName": "before",
          "methodAnnotations": [
            "@BeforeEach"
          ]
        }
      },
      {
        "type": "STUBBING",
        "code": "given(weightInvokerTmp.getInterface()).willReturn(LoadBalanceBaseTest.class);",
        "line": 270,
        "locate": "@Before",
        "locationContext": {
          "methodName": "before",
          "methodAnnotations": [
            "@BeforeEach"
          ]
        }
      },
      {
        "type": "STUBBING",
        "code": "given(weightInvokerTmp.getUrl()).willReturn(urlTmp);",
        "line": 271,
        "locate": "@Before",
        "locationContext": {
          "methodName": "before",
          "methodAnnotations": [
            "@BeforeEach"
          ]
        }
      }
    ],
    "pattern_id": 7
  },
  {
    "variableName": "weightInvoker1",
    "variableType": "Invoker<LoadBalanceBaseTest>",
    "mockedClass": "Invoker<LoadBalanceBaseTest>",
    "isReuseableMock": "Fully Shared",
    "mockPattern": "Creation:\n\u2014 Attribute Mock Creation\n\nStubbing:\n\u2014 @Before\n\nVerification:\n\u2014 None",
    "classContext": {
      "packageName": "org.apache.dubbo.rpc.cluster.loadbalance",
      "filePath": "C:\\java tool\\Apache\\dubbo\\dubbo-cluster\\src\\test\\java\\org\\apache\\dubbo\\rpc\\cluster\\loadbalance\\LoadBalanceBaseTest.java",
      "className": "LoadBalanceBaseTest"
    },
    "statements": [
      {
        "type": "FIELD_DECLARATION",
        "code": "protected Invoker<LoadBalanceBaseTest> weightInvoker1;",
        "line": 234,
        "locate": "Attribute",
        "locationContext": {
          "methodName": "[FieldDeclaration]",
          "methodAnnotations": []
        }
      },
      {
        "type": "ASSIGNMENT",
        "code": "weightInvoker1 = mock(Invoker.class, Mockito.withSettings().stubOnly());",
        "line": 242,
        "locate": "@Before",
        "locationContext": {
          "methodName": "before",
          "methodAnnotations": [
            "@BeforeEach"
          ]
        }
      },
      {
        "type": "STUBBING",
        "code": "given(weightInvoker1.isAvailable()).willReturn(true);",
        "line": 257,
        "locate": "@Before",
        "locationContext": {
          "methodName": "before",
          "methodAnnotations": [
            "@BeforeEach"
          ]
        }
      },
      {
        "type": "STUBBING",
        "code": "given(weightInvoker1.getInterface()).willReturn(LoadBalanceBaseTest.class);",
        "line": 258,
        "locate": "@Before",
        "locationContext": {
          "methodName": "before",
          "methodAnnotations": [
            "@BeforeEach"
          ]
        }
      },
      {
        "type": "STUBBING",
        "code": "given(weightInvoker1.getUrl()).willReturn(url1);",
        "line": 259,
        "locate": "@Before",
        "locationContext": {
          "methodName": "before",
          "methodAnnotations": [
            "@BeforeEach"
          ]
        }
      }
    ],
    "pattern_id": 7
  },
  {
    "variableName": "weightInvoker2",
    "variableType": "Invoker<LoadBalanceBaseTest>",
    "mockedClass": "Invoker<LoadBalanceBaseTest>",
    "isReuseableMock": "Fully Shared",
    "mockPattern": "Creation:\n\u2014 Attribute Mock Creation\n\nStubbing:\n\u2014 @Before\n\nVerification:\n\u2014 None",
    "classContext": {
      "packageName": "org.apache.dubbo.rpc.cluster.loadbalance",
      "filePath": "C:\\java tool\\Apache\\dubbo\\dubbo-cluster\\src\\test\\java\\org\\apache\\dubbo\\rpc\\cluster\\loadbalance\\LoadBalanceBaseTest.java",
      "className": "LoadBalanceBaseTest"
    },
    "statements": [
      {
        "type": "FIELD_DECLARATION",
        "code": "protected Invoker<LoadBalanceBaseTest> weightInvoker2;",
        "line": 235,
        "locate": "Attribute",
        "locationContext": {
          "methodName": "[FieldDeclaration]",
          "methodAnnotations": []
        }
      },
      {
        "type": "ASSIGNMENT",
        "code": "weightInvoker2 = mock(Invoker.class, Mockito.withSettings().stubOnly());",
        "line": 243,
        "locate": "@Before",
        "locationContext": {
          "methodName": "before",
          "methodAnnotations": [
            "@BeforeEach"
          ]
        }
      },
      {
        "type": "STUBBING",
        "code": "given(weightInvoker2.isAvailable()).willReturn(true);",
        "line": 261,
        "locate": "@Before",
        "locationContext": {
          "methodName": "before",
          "methodAnnotations": [
            "@BeforeEach"
          ]
        }
      },
      {
        "type": "STUBBING",
        "code": "given(weightInvoker2.getInterface()).willReturn(LoadBalanceBaseTest.class);",
        "line": 262,
        "locate": "@Before",
        "locationContext": {
          "methodName": "before",
          "methodAnnotations": [
            "@BeforeEach"
          ]
        }
      },
      {
        "type": "STUBBING",
        "code": "given(weightInvoker2.getUrl()).willReturn(url2);",
        "line": 263,
        "locate": "@Before",
        "locationContext": {
          "methodName": "before",
          "methodAnnotations": [
            "@BeforeEach"
          ]
        }
      }
    ],
    "pattern_id": 7
  },
  {
    "variableName": "weightInvoker3",
    "variableType": "Invoker<LoadBalanceBaseTest>",
    "mockedClass": "Invoker<LoadBalanceBaseTest>",
    "isReuseableMock": "Fully Shared",
    "mockPattern": "Creation:\n\u2014 Attribute Mock Creation\n\nStubbing:\n\u2014 @Before\n\nVerification:\n\u2014 None",
    "classContext": {
      "packageName": "org.apache.dubbo.rpc.cluster.loadbalance",
      "filePath": "C:\\java tool\\Apache\\dubbo\\dubbo-cluster\\src\\test\\java\\org\\apache\\dubbo\\rpc\\cluster\\loadbalance\\LoadBalanceBaseTest.java",
      "className": "LoadBalanceBaseTest"
    },
    "statements": [
      {
        "type": "FIELD_DECLARATION",
        "code": "protected Invoker<LoadBalanceBaseTest> weightInvoker3;",
        "line": 236,
        "locate": "Attribute",
        "locationContext": {
          "methodName": "[FieldDeclaration]",
          "methodAnnotations": []
        }
      },
      {
        "type": "ASSIGNMENT",
        "code": "weightInvoker3 = mock(Invoker.class, Mockito.withSettings().stubOnly());",
        "line": 244,
        "locate": "@Before",
        "locationContext": {
          "methodName": "before",
          "methodAnnotations": [
            "@BeforeEach"
          ]
        }
      },
      {
        "type": "STUBBING",
        "code": "given(weightInvoker3.isAvailable()).willReturn(true);",
        "line": 265,
        "locate": "@Before",
        "locationContext": {
          "methodName": "before",
          "methodAnnotations": [
            "@BeforeEach"
          ]
        }
      },
      {
        "type": "STUBBING",
        "code": "given(weightInvoker3.getInterface()).willReturn(LoadBalanceBaseTest.class);",
        "line": 266,
        "locate": "@Before",
        "locationContext": {
          "methodName": "before",
          "methodAnnotations": [
            "@BeforeEach"
          ]
        }
      },
      {
        "type": "STUBBING",
        "code": "given(weightInvoker3.getUrl()).willReturn(url3);",
        "line": 267,
        "locate": "@Before",
        "locationContext": {
          "methodName": "before",
          "methodAnnotations": [
            "@BeforeEach"
          ]
        }
      }
    ],
    "pattern_id": 7
  },
  {
    "variableName": "weightInvoker5",
    "variableType": "Invoker<LoadBalanceBaseTest>",
    "mockedClass": "Invoker<LoadBalanceBaseTest>",
    "isReuseableMock": "Fully Shared",
    "mockPattern": "Creation:\n\u2014 Attribute Mock Creation\n\nStubbing:\n\u2014 @Before\n\nVerification:\n\u2014 None",
    "classContext": {
      "packageName": "org.apache.dubbo.rpc.cluster.loadbalance",
      "filePath": "C:\\java tool\\Apache\\dubbo\\dubbo-cluster\\src\\test\\java\\org\\apache\\dubbo\\rpc\\cluster\\loadbalance\\LoadBalanceBaseTest.java",
      "className": "LoadBalanceBaseTest"
    },
    "statements": [
      {
        "type": "FIELD_DECLARATION",
        "code": "protected Invoker<LoadBalanceBaseTest> weightInvoker5;",
        "line": 238,
        "locate": "Attribute",
        "locationContext": {
          "methodName": "[FieldDeclaration]",
          "methodAnnotations": []
        }
      },
      {
        "type": "ASSIGNMENT",
        "code": "weightInvoker5 = mock(Invoker.class, Mockito.withSettings().stubOnly());",
        "line": 246,
        "locate": "@Before",
        "locationContext": {
          "methodName": "before",
          "methodAnnotations": [
            "@BeforeEach"
          ]
        }
      },
      {
        "type": "STUBBING",
        "code": "given(weightInvoker5.isAvailable()).willReturn(true);",
        "line": 273,
        "locate": "@Before",
        "locationContext": {
          "methodName": "before",
          "methodAnnotations": [
            "@BeforeEach"
          ]
        }
      },
      {
        "type": "STUBBING",
        "code": "given(weightInvoker5.getInterface()).willReturn(LoadBalanceBaseTest.class);",
        "line": 274,
        "locate": "@Before",
        "locationContext": {
          "methodName": "before",
          "methodAnnotations": [
            "@BeforeEach"
          ]
        }
      },
      {
        "type": "STUBBING",
        "code": "given(weightInvoker5.getUrl()).willReturn(url5);",
        "line": 275,
        "locate": "@Before",
        "locationContext": {
          "methodName": "before",
          "methodAnnotations": [
            "@BeforeEach"
          ]
        }
      }
    ],
    "pattern_id": 7
  },
  {
    "variableName": "invoker1",
    "variableType": "Invoker<LoadBalanceBaseTest>",
    "mockedClass": "Invoker",
    "isReuseableMock": "Fully Shared",
    "mockPattern": "Creation:\n\u2014 Attribute Mock Creation\n\nStubbing:\n\u2014 @Before\n\nVerification:\n\u2014 None",
    "classContext": {
      "packageName": "org.apache.dubbo.rpc.cluster.loadbalance",
      "filePath": "C:\\java tool\\Apache\\dubbo\\dubbo-cluster\\src\\test\\java\\org\\apache\\dubbo\\rpc\\cluster\\loadbalance\\LoadBalanceBaseTest.java",
      "className": "LoadBalanceBaseTest"
    },
    "statements": [
      {
        "type": "FIELD_DECLARATION",
        "code": "Invoker<LoadBalanceBaseTest> invoker1;",
        "line": 53,
        "locate": "Attribute",
        "locationContext": {
          "methodName": "[FieldDeclaration]",
          "methodAnnotations": []
        }
      },
      {
        "type": "ASSIGNMENT",
        "code": "invoker1 = mock(Invoker.class);",
        "line": 90,
        "locate": "@Before",
        "locationContext": {
          "methodName": "setUp",
          "methodAnnotations": [
            "@BeforeEach"
          ]
        }
      },
      {
        "type": "STUBBING",
        "code": "given(invoker1.isAvailable()).willReturn(true);",
        "line": 102,
        "locate": "@Before",
        "locationContext": {
          "methodName": "setUp",
          "methodAnnotations": [
            "@BeforeEach"
          ]
        }
      },
      {
        "type": "STUBBING",
        "code": "given(invoker1.getInterface()).willReturn(LoadBalanceBaseTest.class);",
        "line": 103,
        "locate": "@Before",
        "locationContext": {
          "methodName": "setUp",
          "methodAnnotations": [
            "@BeforeEach"
          ]
        }
      },
      {
        "type": "STUBBING",
        "code": "given(invoker1.getUrl()).willReturn(url1);",
        "line": 104,
        "locate": "@Before",
        "locationContext": {
          "methodName": "setUp",
          "methodAnnotations": [
            "@BeforeEach"
          ]
        }
      }
    ],
    "pattern_id": 7
  },
  {
    "variableName": "invoker5",
    "variableType": "Invoker<LoadBalanceBaseTest>",
    "mockedClass": "Invoker",
    "isReuseableMock": "Fully Shared",
    "mockPattern": "Creation:\n\u2014 Attribute Mock Creation\n\nStubbing:\n\u2014 @Before\n\nVerification:\n\u2014 None",
    "classContext": {
      "packageName": "org.apache.dubbo.rpc.cluster.loadbalance",
      "filePath": "C:\\java tool\\Apache\\dubbo\\dubbo-cluster\\src\\test\\java\\org\\apache\\dubbo\\rpc\\cluster\\loadbalance\\LoadBalanceBaseTest.java",
      "className": "LoadBalanceBaseTest"
    },
    "statements": [
      {
        "type": "FIELD_DECLARATION",
        "code": "Invoker<LoadBalanceBaseTest> invoker5;",
        "line": 57,
        "locate": "Attribute",
        "locationContext": {
          "methodName": "[FieldDeclaration]",
          "methodAnnotations": []
        }
      },
      {
        "type": "ASSIGNMENT",
        "code": "invoker5 = mock(Invoker.class);",
        "line": 94,
        "locate": "@Before",
        "locationContext": {
          "methodName": "setUp",
          "methodAnnotations": [
            "@BeforeEach"
          ]
        }
      },
      {
        "type": "STUBBING",
        "code": "given(invoker5.isAvailable()).willReturn(true);",
        "line": 118,
        "locate": "@Before",
        "locationContext": {
          "methodName": "setUp",
          "methodAnnotations": [
            "@BeforeEach"
          ]
        }
      },
      {
        "type": "STUBBING",
        "code": "given(invoker5.getInterface()).willReturn(LoadBalanceBaseTest.class);",
        "line": 119,
        "locate": "@Before",
        "locationContext": {
          "methodName": "setUp",
          "methodAnnotations": [
            "@BeforeEach"
          ]
        }
      },
      {
        "type": "STUBBING",
        "code": "given(invoker5.getUrl()).willReturn(url5);",
        "line": 120,
        "locate": "@Before",
        "locationContext": {
          "methodName": "setUp",
          "methodAnnotations": [
            "@BeforeEach"
          ]
        }
      }
    ],
    "pattern_id": 7
  },
  {
    "variableName": "invoker4",
    "variableType": "Invoker<LoadBalanceBaseTest>",
    "mockedClass": "Invoker",
    "isReuseableMock": "Fully Shared",
    "mockPattern": "Creation:\n\u2014 Attribute Mock Creation\n\nStubbing:\n\u2014 @Before\n\nVerification:\n\u2014 None",
    "classContext": {
      "packageName": "org.apache.dubbo.rpc.cluster.loadbalance",
      "filePath": "C:\\java tool\\Apache\\dubbo\\dubbo-cluster\\src\\test\\java\\org\\apache\\dubbo\\rpc\\cluster\\loadbalance\\LoadBalanceBaseTest.java",
      "className": "LoadBalanceBaseTest"
    },
    "statements": [
      {
        "type": "FIELD_DECLARATION",
        "code": "Invoker<LoadBalanceBaseTest> invoker4;",
        "line": 56,
        "locate": "Attribute",
        "locationContext": {
          "methodName": "[FieldDeclaration]",
          "methodAnnotations": []
        }
      },
      {
        "type": "ASSIGNMENT",
        "code": "invoker4 = mock(Invoker.class);",
        "line": 93,
        "locate": "@Before",
        "locationContext": {
          "methodName": "setUp",
          "methodAnnotations": [
            "@BeforeEach"
          ]
        }
      },
      {
        "type": "STUBBING",
        "code": "given(invoker4.isAvailable()).willReturn(true);",
        "line": 114,
        "locate": "@Before",
        "locationContext": {
          "methodName": "setUp",
          "methodAnnotations": [
            "@BeforeEach"
          ]
        }
      },
      {
        "type": "STUBBING",
        "code": "given(invoker4.getInterface()).willReturn(LoadBalanceBaseTest.class);",
        "line": 115,
        "locate": "@Before",
        "locationContext": {
          "methodName": "setUp",
          "methodAnnotations": [
            "@BeforeEach"
          ]
        }
      },
      {
        "type": "STUBBING",
        "code": "given(invoker4.getUrl()).willReturn(url4);",
        "line": 116,
        "locate": "@Before",
        "locationContext": {
          "methodName": "setUp",
          "methodAnnotations": [
            "@BeforeEach"
          ]
        }
      }
    ],
    "pattern_id": 7
  },
  {
    "variableName": "invoker3",
    "variableType": "Invoker<LoadBalanceBaseTest>",
    "mockedClass": "Invoker",
    "isReuseableMock": "Fully Shared",
    "mockPattern": "Creation:\n\u2014 Attribute Mock Creation\n\nStubbing:\n\u2014 @Before\n\nVerification:\n\u2014 None",
    "classContext": {
      "packageName": "org.apache.dubbo.rpc.cluster.loadbalance",
      "filePath": "C:\\java tool\\Apache\\dubbo\\dubbo-cluster\\src\\test\\java\\org\\apache\\dubbo\\rpc\\cluster\\loadbalance\\LoadBalanceBaseTest.java",
      "className": "LoadBalanceBaseTest"
    },
    "statements": [
      {
        "type": "FIELD_DECLARATION",
        "code": "Invoker<LoadBalanceBaseTest> invoker3;",
        "line": 55,
        "locate": "Attribute",
        "locationContext": {
          "methodName": "[FieldDeclaration]",
          "methodAnnotations": []
        }
      },
      {
        "type": "ASSIGNMENT",
        "code": "invoker3 = mock(Invoker.class);",
        "line": 92,
        "locate": "@Before",
        "locationContext": {
          "methodName": "setUp",
          "methodAnnotations": [
            "@BeforeEach"
          ]
        }
      },
      {
        "type": "STUBBING",
        "code": "given(invoker3.isAvailable()).willReturn(true);",
        "line": 110,
        "locate": "@Before",
        "locationContext": {
          "methodName": "setUp",
          "methodAnnotations": [
            "@BeforeEach"
          ]
        }
      },
      {
        "type": "STUBBING",
        "code": "given(invoker3.getInterface()).willReturn(LoadBalanceBaseTest.class);",
        "line": 111,
        "locate": "@Before",
        "locationContext": {
          "methodName": "setUp",
          "methodAnnotations": [
            "@BeforeEach"
          ]
        }
      },
      {
        "type": "STUBBING",
        "code": "given(invoker3.getUrl()).willReturn(url3);",
        "line": 112,
        "locate": "@Before",
        "locationContext": {
          "methodName": "setUp",
          "methodAnnotations": [
            "@BeforeEach"
          ]
        }
      }
    ],
    "pattern_id": 7
  },
  {
    "variableName": "invoker2",
    "variableType": "Invoker<LoadBalanceBaseTest>",
    "mockedClass": "Invoker",
    "isReuseableMock": "Fully Shared",
    "mockPattern": "Creation:\n\u2014 Attribute Mock Creation\n\nStubbing:\n\u2014 @Before\n\nVerification:\n\u2014 None",
    "classContext": {
      "packageName": "org.apache.dubbo.rpc.cluster.loadbalance",
      "filePath": "C:\\java tool\\Apache\\dubbo\\dubbo-cluster\\src\\test\\java\\org\\apache\\dubbo\\rpc\\cluster\\loadbalance\\LoadBalanceBaseTest.java",
      "className": "LoadBalanceBaseTest"
    },
    "statements": [
      {
        "type": "FIELD_DECLARATION",
        "code": "Invoker<LoadBalanceBaseTest> invoker2;",
        "line": 54,
        "locate": "Attribute",
        "locationContext": {
          "methodName": "[FieldDeclaration]",
          "methodAnnotations": []
        }
      },
      {
        "type": "ASSIGNMENT",
        "code": "invoker2 = mock(Invoker.class);",
        "line": 91,
        "locate": "@Before",
        "locationContext": {
          "methodName": "setUp",
          "methodAnnotations": [
            "@BeforeEach"
          ]
        }
      },
      {
        "type": "STUBBING",
        "code": "given(invoker2.isAvailable()).willReturn(true);",
        "line": 106,
        "locate": "@Before",
        "locationContext": {
          "methodName": "setUp",
          "methodAnnotations": [
            "@BeforeEach"
          ]
        }
      },
      {
        "type": "STUBBING",
        "code": "given(invoker2.getInterface()).willReturn(LoadBalanceBaseTest.class);",
        "line": 107,
        "locate": "@Before",
        "locationContext": {
          "methodName": "setUp",
          "methodAnnotations": [
            "@BeforeEach"
          ]
        }
      },
      {
        "type": "STUBBING",
        "code": "given(invoker2.getUrl()).willReturn(url2);",
        "line": 108,
        "locate": "@Before",
        "locationContext": {
          "methodName": "setUp",
          "methodAnnotations": [
            "@BeforeEach"
          ]
        }
      }
    ],
    "pattern_id": 7
  },
  {
    "variableName": "weightInvokerTmp",
    "variableType": "Invoker<LoadBalanceBaseTest>",
    "mockedClass": "Invoker<LoadBalanceBaseTest>",
    "isReuseableMock": "Fully Shared",
    "mockPattern": "Creation:\n\u2014 Attribute Mock Creation\n\nStubbing:\n\u2014 @Before\n\nVerification:\n\u2014 None",
    "classContext": {
      "packageName": "org.apache.dubbo.rpc.cluster.loadbalance",
      "filePath": "C:\\java tool\\Apache\\dubbo\\dubbo-cluster\\src\\test\\java\\org\\apache\\dubbo\\rpc\\cluster\\loadbalance\\LoadBalanceBaseTest.java",
      "className": "LoadBalanceBaseTest"
    },
    "statements": [
      {
        "type": "FIELD_DECLARATION",
        "code": "protected Invoker<LoadBalanceBaseTest> weightInvokerTmp;",
        "line": 237,
        "locate": "Attribute",
        "locationContext": {
          "methodName": "[FieldDeclaration]",
          "methodAnnotations": []
        }
      },
      {
        "type": "ASSIGNMENT",
        "code": "weightInvokerTmp = mock(Invoker.class, Mockito.withSettings().stubOnly());",
        "line": 245,
        "locate": "@Before",
        "locationContext": {
          "methodName": "before",
          "methodAnnotations": [
            "@BeforeEach"
          ]
        }
      },
      {
        "type": "STUBBING",
        "code": "given(weightInvokerTmp.isAvailable()).willReturn(true);",
        "line": 269,
        "locate": "@Before",
        "locationContext": {
          "methodName": "before",
          "methodAnnotations": [
            "@BeforeEach"
          ]
        }
      },
      {
        "type": "STUBBING",
        "code": "given(weightInvokerTmp.getInterface()).willReturn(LoadBalanceBaseTest.class);",
        "line": 270,
        "locate": "@Before",
        "locationContext": {
          "methodName": "before",
          "methodAnnotations": [
            "@BeforeEach"
          ]
        }
      },
      {
        "type": "STUBBING",
        "code": "given(weightInvokerTmp.getUrl()).willReturn(urlTmp);",
        "line": 271,
        "locate": "@Before",
        "locationContext": {
          "methodName": "before",
          "methodAnnotations": [
            "@BeforeEach"
          ]
        }
      }
    ],
    "pattern_id": 7
  },
  {
    "variableName": "weightInvoker1",
    "variableType": "Invoker<LoadBalanceBaseTest>",
    "mockedClass": "Invoker<LoadBalanceBaseTest>",
    "isReuseableMock": "Fully Shared",
    "mockPattern": "Creation:\n\u2014 Attribute Mock Creation\n\nStubbing:\n\u2014 @Before\n\nVerification:\n\u2014 None",
    "classContext": {
      "packageName": "org.apache.dubbo.rpc.cluster.loadbalance",
      "filePath": "C:\\java tool\\Apache\\dubbo\\dubbo-cluster\\src\\test\\java\\org\\apache\\dubbo\\rpc\\cluster\\loadbalance\\LoadBalanceBaseTest.java",
      "className": "LoadBalanceBaseTest"
    },
    "statements": [
      {
        "type": "FIELD_DECLARATION",
        "code": "protected Invoker<LoadBalanceBaseTest> weightInvoker1;",
        "line": 234,
        "locate": "Attribute",
        "locationContext": {
          "methodName": "[FieldDeclaration]",
          "methodAnnotations": []
        }
      },
      {
        "type": "ASSIGNMENT",
        "code": "weightInvoker1 = mock(Invoker.class, Mockito.withSettings().stubOnly());",
        "line": 242,
        "locate": "@Before",
        "locationContext": {
          "methodName": "before",
          "methodAnnotations": [
            "@BeforeEach"
          ]
        }
      },
      {
        "type": "STUBBING",
        "code": "given(weightInvoker1.isAvailable()).willReturn(true);",
        "line": 257,
        "locate": "@Before",
        "locationContext": {
          "methodName": "before",
          "methodAnnotations": [
            "@BeforeEach"
          ]
        }
      },
      {
        "type": "STUBBING",
        "code": "given(weightInvoker1.getInterface()).willReturn(LoadBalanceBaseTest.class);",
        "line": 258,
        "locate": "@Before",
        "locationContext": {
          "methodName": "before",
          "methodAnnotations": [
            "@BeforeEach"
          ]
        }
      },
      {
        "type": "STUBBING",
        "code": "given(weightInvoker1.getUrl()).willReturn(url1);",
        "line": 259,
        "locate": "@Before",
        "locationContext": {
          "methodName": "before",
          "methodAnnotations": [
            "@BeforeEach"
          ]
        }
      }
    ],
    "pattern_id": 7
  }
]