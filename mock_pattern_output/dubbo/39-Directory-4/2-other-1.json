[
  {
    "variableName": "directory",
    "variableType": "Directory",
    "mockedClass": "Directory",
    "isReuseableMock": null,
    "mockPattern": "Creation:\n\u2014 Attribute Mock Creation\n\u2014 Global Init in @Before\n\nStubbing:\n\u2014 Test Case\n\nVerification:\n\u2014 None",
    "classContext": {
      "packageName": "org.apache.dubbo.rpc.cluster.support",
      "filePath": "C:\\java tool\\Apache\\dubbo\\dubbo-cluster\\src\\test\\java\\org\\apache\\dubbo\\rpc\\cluster\\support\\MergeableClusterInvokerTest.java",
      "className": "MergeableClusterInvokerTest"
    },
    "statements": [
      {
        "type": "FIELD_MOCK_CREATION",
        "code": "private Directory directory = mock(Directory.class);",
        "line": 54,
        "locate": "Attribute",
        "locationContext": {
          "methodName": "[FieldDeclaration]",
          "methodAnnotations": []
        }
      },
      {
        "type": "ASSIGNMENT",
        "code": "directory = mock(Directory.class);",
        "line": 97,
        "locate": "@Before",
        "locationContext": {
          "methodName": "setUp",
          "methodAnnotations": [
            "@BeforeEach"
          ]
        }
      },
      {
        "type": "STUBBING",
        "code": "given(directory.list(invocation)).willReturn(new ArrayList() {\r\n\r\n    {\r\n        add(firstInvoker);\r\n        add(secondInvoker);\r\n    }\r\n});",
        "line": 143,
        "locate": "Test Case",
        "locationContext": {
          "methodName": "testGetMenuSuccessfully",
          "methodAnnotations": [
            "@Test"
          ]
        }
      },
      {
        "type": "STUBBING",
        "code": "given(directory.getUrl()).willReturn(url);",
        "line": 150,
        "locate": "Test Case",
        "locationContext": {
          "methodName": "testGetMenuSuccessfully",
          "methodAnnotations": [
            "@Test"
          ]
        }
      },
      {
        "type": "STUBBING",
        "code": "given(directory.getConsumerUrl()).willReturn(url);",
        "line": 151,
        "locate": "Test Case",
        "locationContext": {
          "methodName": "testGetMenuSuccessfully",
          "methodAnnotations": [
            "@Test"
          ]
        }
      },
      {
        "type": "STUBBING",
        "code": "given(directory.getConsumerUrl()).willReturn(url);",
        "line": 152,
        "locate": "Test Case",
        "locationContext": {
          "methodName": "testGetMenuSuccessfully",
          "methodAnnotations": [
            "@Test"
          ]
        }
      },
      {
        "type": "STUBBING",
        "code": "given(directory.getInterface()).willReturn(MenuService.class);",
        "line": 153,
        "locate": "Test Case",
        "locationContext": {
          "methodName": "testGetMenuSuccessfully",
          "methodAnnotations": [
            "@Test"
          ]
        }
      },
      {
        "type": "STUBBING",
        "code": "given(directory.list(invocation)).willReturn(new ArrayList() {\r\n\r\n    {\r\n        add(firstInvoker);\r\n        add(secondInvoker);\r\n    }\r\n});",
        "line": 203,
        "locate": "Test Case",
        "locationContext": {
          "methodName": "testAddMenu",
          "methodAnnotations": [
            "@Test"
          ]
        }
      },
      {
        "type": "STUBBING",
        "code": "given(directory.getUrl()).willReturn(url);",
        "line": 210,
        "locate": "Test Case",
        "locationContext": {
          "methodName": "testAddMenu",
          "methodAnnotations": [
            "@Test"
          ]
        }
      },
      {
        "type": "STUBBING",
        "code": "given(directory.getConsumerUrl()).willReturn(url);",
        "line": 211,
        "locate": "Test Case",
        "locationContext": {
          "methodName": "testAddMenu",
          "methodAnnotations": [
            "@Test"
          ]
        }
      },
      {
        "type": "STUBBING",
        "code": "given(directory.getConsumerUrl()).willReturn(url);",
        "line": 212,
        "locate": "Test Case",
        "locationContext": {
          "methodName": "testAddMenu",
          "methodAnnotations": [
            "@Test"
          ]
        }
      },
      {
        "type": "STUBBING",
        "code": "given(directory.getInterface()).willReturn(MenuService.class);",
        "line": 213,
        "locate": "Test Case",
        "locationContext": {
          "methodName": "testAddMenu",
          "methodAnnotations": [
            "@Test"
          ]
        }
      },
      {
        "type": "STUBBING",
        "code": "given(directory.list(invocation)).willReturn(new ArrayList() {\r\n\r\n    {\r\n        add(firstInvoker);\r\n        add(secondInvoker);\r\n    }\r\n});",
        "line": 269,
        "locate": "Test Case",
        "locationContext": {
          "methodName": "testAddMenu1",
          "methodAnnotations": [
            "@Test"
          ]
        }
      },
      {
        "type": "STUBBING",
        "code": "given(directory.getUrl()).willReturn(url);",
        "line": 276,
        "locate": "Test Case",
        "locationContext": {
          "methodName": "testAddMenu1",
          "methodAnnotations": [
            "@Test"
          ]
        }
      },
      {
        "type": "STUBBING",
        "code": "given(directory.getConsumerUrl()).willReturn(url);",
        "line": 277,
        "locate": "Test Case",
        "locationContext": {
          "methodName": "testAddMenu1",
          "methodAnnotations": [
            "@Test"
          ]
        }
      },
      {
        "type": "STUBBING",
        "code": "given(directory.getConsumerUrl()).willReturn(url);",
        "line": 278,
        "locate": "Test Case",
        "locationContext": {
          "methodName": "testAddMenu1",
          "methodAnnotations": [
            "@Test"
          ]
        }
      },
      {
        "type": "STUBBING",
        "code": "given(directory.getInterface()).willReturn(MenuService.class);",
        "line": 279,
        "locate": "Test Case",
        "locationContext": {
          "methodName": "testAddMenu1",
          "methodAnnotations": [
            "@Test"
          ]
        }
      },
      {
        "type": "STUBBING",
        "code": "given(directory.list(invocation)).willReturn(new ArrayList() {\r\n\r\n    {\r\n        add(firstInvoker);\r\n        add(secondInvoker);\r\n    }\r\n});",
        "line": 317,
        "locate": "Test Case",
        "locationContext": {
          "methodName": "testInvokerToNoInvokerAvailableException",
          "methodAnnotations": [
            "@Test"
          ]
        }
      },
      {
        "type": "STUBBING",
        "code": "given(directory.getUrl()).willReturn(url);",
        "line": 324,
        "locate": "Test Case",
        "locationContext": {
          "methodName": "testInvokerToNoInvokerAvailableException",
          "methodAnnotations": [
            "@Test"
          ]
        }
      },
      {
        "type": "STUBBING",
        "code": "given(directory.getConsumerUrl()).willReturn(url);",
        "line": 325,
        "locate": "Test Case",
        "locationContext": {
          "methodName": "testInvokerToNoInvokerAvailableException",
          "methodAnnotations": [
            "@Test"
          ]
        }
      },
      {
        "type": "STUBBING",
        "code": "given(directory.getConsumerUrl()).willReturn(url);",
        "line": 326,
        "locate": "Test Case",
        "locationContext": {
          "methodName": "testInvokerToNoInvokerAvailableException",
          "methodAnnotations": [
            "@Test"
          ]
        }
      },
      {
        "type": "STUBBING",
        "code": "given(directory.getInterface()).willReturn(MenuService.class);",
        "line": 327,
        "locate": "Test Case",
        "locationContext": {
          "methodName": "testInvokerToNoInvokerAvailableException",
          "methodAnnotations": [
            "@Test"
          ]
        }
      },
      {
        "type": "STUBBING",
        "code": "given(directory.list(invocation)).willReturn(new ArrayList() {\r\n\r\n    {\r\n        add(firstInvoker);\r\n        add(secondInvoker);\r\n    }\r\n});",
        "line": 372,
        "locate": "Test Case",
        "locationContext": {
          "methodName": "testInvokerToException",
          "methodAnnotations": [
            "@Test"
          ]
        }
      },
      {
        "type": "STUBBING",
        "code": "given(directory.getUrl()).willReturn(url);",
        "line": 379,
        "locate": "Test Case",
        "locationContext": {
          "methodName": "testInvokerToException",
          "methodAnnotations": [
            "@Test"
          ]
        }
      },
      {
        "type": "STUBBING",
        "code": "given(directory.getConsumerUrl()).willReturn(url);",
        "line": 380,
        "locate": "Test Case",
        "locationContext": {
          "methodName": "testInvokerToException",
          "methodAnnotations": [
            "@Test"
          ]
        }
      },
      {
        "type": "STUBBING",
        "code": "given(directory.getConsumerUrl()).willReturn(url);",
        "line": 381,
        "locate": "Test Case",
        "locationContext": {
          "methodName": "testInvokerToException",
          "methodAnnotations": [
            "@Test"
          ]
        }
      },
      {
        "type": "STUBBING",
        "code": "given(directory.getInterface()).willReturn(MenuService.class);",
        "line": 382,
        "locate": "Test Case",
        "locationContext": {
          "methodName": "testInvokerToException",
          "methodAnnotations": [
            "@Test"
          ]
        }
      },
      {
        "type": "STUBBING",
        "code": "given(directory.list(invocation)).willReturn(new ArrayList() {\r\n\r\n    {\r\n        add(firstInvoker);\r\n        add(secondInvoker);\r\n    }\r\n});",
        "line": 418,
        "locate": "Test Case",
        "locationContext": {
          "methodName": "testGetMenuResultHasException",
          "methodAnnotations": [
            "@Test"
          ]
        }
      },
      {
        "type": "STUBBING",
        "code": "given(directory.getUrl()).willReturn(url);",
        "line": 425,
        "locate": "Test Case",
        "locationContext": {
          "methodName": "testGetMenuResultHasException",
          "methodAnnotations": [
            "@Test"
          ]
        }
      },
      {
        "type": "STUBBING",
        "code": "given(directory.getConsumerUrl()).willReturn(url);",
        "line": 426,
        "locate": "Test Case",
        "locationContext": {
          "methodName": "testGetMenuResultHasException",
          "methodAnnotations": [
            "@Test"
          ]
        }
      },
      {
        "type": "STUBBING",
        "code": "given(directory.getConsumerUrl()).willReturn(url);",
        "line": 427,
        "locate": "Test Case",
        "locationContext": {
          "methodName": "testGetMenuResultHasException",
          "methodAnnotations": [
            "@Test"
          ]
        }
      },
      {
        "type": "STUBBING",
        "code": "given(directory.getInterface()).willReturn(MenuService.class);",
        "line": 428,
        "locate": "Test Case",
        "locationContext": {
          "methodName": "testGetMenuResultHasException",
          "methodAnnotations": [
            "@Test"
          ]
        }
      },
      {
        "type": "STUBBING",
        "code": "given(directory.list(invocation)).willReturn(new ArrayList() {\r\n\r\n    {\r\n        add(firstInvoker);\r\n        add(secondInvoker);\r\n    }\r\n});",
        "line": 485,
        "locate": "Test Case",
        "locationContext": {
          "methodName": "testGetMenuWithMergerDefault",
          "methodAnnotations": [
            "@Test"
          ]
        }
      },
      {
        "type": "STUBBING",
        "code": "given(directory.getUrl()).willReturn(url);",
        "line": 492,
        "locate": "Test Case",
        "locationContext": {
          "methodName": "testGetMenuWithMergerDefault",
          "methodAnnotations": [
            "@Test"
          ]
        }
      },
      {
        "type": "STUBBING",
        "code": "given(directory.getConsumerUrl()).willReturn(url);",
        "line": 493,
        "locate": "Test Case",
        "locationContext": {
          "methodName": "testGetMenuWithMergerDefault",
          "methodAnnotations": [
            "@Test"
          ]
        }
      },
      {
        "type": "STUBBING",
        "code": "given(directory.getConsumerUrl()).willReturn(url);",
        "line": 494,
        "locate": "Test Case",
        "locationContext": {
          "methodName": "testGetMenuWithMergerDefault",
          "methodAnnotations": [
            "@Test"
          ]
        }
      },
      {
        "type": "STUBBING",
        "code": "given(directory.getInterface()).willReturn(MenuService.class);",
        "line": 495,
        "locate": "Test Case",
        "locationContext": {
          "methodName": "testGetMenuWithMergerDefault",
          "methodAnnotations": [
            "@Test"
          ]
        }
      },
      {
        "type": "STUBBING",
        "code": "given(directory.list(invocation)).willReturn(new ArrayList() {\r\n\r\n    {\r\n        add(firstInvoker);\r\n        add(secondInvoker);\r\n    }\r\n});",
        "line": 523,
        "locate": "Test Case",
        "locationContext": {
          "methodName": "testDestroy",
          "methodAnnotations": [
            "@Test"
          ]
        }
      },
      {
        "type": "STUBBING",
        "code": "given(directory.getUrl()).willReturn(url);",
        "line": 530,
        "locate": "Test Case",
        "locationContext": {
          "methodName": "testDestroy",
          "methodAnnotations": [
            "@Test"
          ]
        }
      },
      {
        "type": "STUBBING",
        "code": "given(directory.getConsumerUrl()).willReturn(url);",
        "line": 531,
        "locate": "Test Case",
        "locationContext": {
          "methodName": "testDestroy",
          "methodAnnotations": [
            "@Test"
          ]
        }
      },
      {
        "type": "STUBBING",
        "code": "given(directory.getConsumerUrl()).willReturn(url);",
        "line": 532,
        "locate": "Test Case",
        "locationContext": {
          "methodName": "testDestroy",
          "methodAnnotations": [
            "@Test"
          ]
        }
      },
      {
        "type": "STUBBING",
        "code": "given(directory.getInterface()).willReturn(MenuService.class);",
        "line": 533,
        "locate": "Test Case",
        "locationContext": {
          "methodName": "testDestroy",
          "methodAnnotations": [
            "@Test"
          ]
        }
      }
    ],
    "pattern_id": 41
  }
]