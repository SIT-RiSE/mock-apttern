[
  {
    "variableName": "directory",
    "variableType": "Directory",
    "mockedClass": "Directory",
    "isReuseableMock": false,
    "mockPattern": "Creation:\n\u2014 Attribute Mock Creation\n\nStubbing:\n\u2014 Test Case\n\nVerification:\n\u2014 None",
    "classContext": {
      "packageName": "org.apache.dubbo.rpc.cluster.support.registry",
      "filePath": "C:\\java tool\\Apache\\dubbo\\dubbo-cluster\\src\\test\\java\\org\\apache\\dubbo\\rpc\\cluster\\support\\registry\\ZoneAwareClusterInvokerTest.java",
      "className": "ZoneAwareClusterInvokerTest"
    },
    "statements": [
      {
        "type": "FIELD_MOCK_CREATION",
        "code": "private Directory directory = mock(Directory.class);",
        "line": 43,
        "locate": "Attribute",
        "locationContext": {
          "methodName": "[FieldDeclaration]",
          "methodAnnotations": []
        }
      },
      {
        "type": "STUBBING",
        "code": "given(directory.list(invocation)).willReturn(new ArrayList() {\r\n\r\n    {\r\n        add(firstInvoker);\r\n        add(secondInvoker);\r\n        add(thirdInvoker);\r\n    }\r\n});",
        "line": 83,
        "locate": "Test Case",
        "locationContext": {
          "methodName": "testPreferredStrategy",
          "methodAnnotations": [
            "@Test"
          ]
        }
      },
      {
        "type": "STUBBING",
        "code": "given(directory.getUrl()).willReturn(url);",
        "line": 91,
        "locate": "Test Case",
        "locationContext": {
          "methodName": "testPreferredStrategy",
          "methodAnnotations": [
            "@Test"
          ]
        }
      },
      {
        "type": "STUBBING",
        "code": "given(directory.getConsumerUrl()).willReturn(url);",
        "line": 92,
        "locate": "Test Case",
        "locationContext": {
          "methodName": "testPreferredStrategy",
          "methodAnnotations": [
            "@Test"
          ]
        }
      },
      {
        "type": "STUBBING",
        "code": "given(directory.list(invocation)).willReturn(new ArrayList() {\r\n\r\n    {\r\n        add(firstInvoker);\r\n        add(secondInvoker);\r\n        add(thirdInvoker);\r\n    }\r\n});",
        "line": 128,
        "locate": "Test Case",
        "locationContext": {
          "methodName": "testRegistryZoneStrategy",
          "methodAnnotations": [
            "@Test"
          ]
        }
      },
      {
        "type": "STUBBING",
        "code": "given(directory.getUrl()).willReturn(url);",
        "line": 136,
        "locate": "Test Case",
        "locationContext": {
          "methodName": "testRegistryZoneStrategy",
          "methodAnnotations": [
            "@Test"
          ]
        }
      },
      {
        "type": "STUBBING",
        "code": "given(directory.getConsumerUrl()).willReturn(url);",
        "line": 137,
        "locate": "Test Case",
        "locationContext": {
          "methodName": "testRegistryZoneStrategy",
          "methodAnnotations": [
            "@Test"
          ]
        }
      },
      {
        "type": "STUBBING",
        "code": "given(directory.list(invocation)).willReturn(new ArrayList() {\r\n\r\n    {\r\n        add(firstInvoker);\r\n        add(secondInvoker);\r\n        add(thirdInvoker);\r\n    }\r\n});",
        "line": 158,
        "locate": "Test Case",
        "locationContext": {
          "methodName": "testRegistryZoneForceStrategy",
          "methodAnnotations": [
            "@Test"
          ]
        }
      },
      {
        "type": "STUBBING",
        "code": "given(directory.getUrl()).willReturn(url);",
        "line": 166,
        "locate": "Test Case",
        "locationContext": {
          "methodName": "testRegistryZoneForceStrategy",
          "methodAnnotations": [
            "@Test"
          ]
        }
      },
      {
        "type": "STUBBING",
        "code": "given(directory.getConsumerUrl()).willReturn(url);",
        "line": 167,
        "locate": "Test Case",
        "locationContext": {
          "methodName": "testRegistryZoneForceStrategy",
          "methodAnnotations": [
            "@Test"
          ]
        }
      },
      {
        "type": "STUBBING",
        "code": "given(directory.getUrl()).willReturn(url);",
        "line": 175,
        "locate": "Test Case",
        "locationContext": {
          "methodName": "testNoAvailableInvoker",
          "methodAnnotations": [
            "@Test"
          ]
        }
      },
      {
        "type": "STUBBING",
        "code": "given(directory.getConsumerUrl()).willReturn(url);",
        "line": 176,
        "locate": "Test Case",
        "locationContext": {
          "methodName": "testNoAvailableInvoker",
          "methodAnnotations": [
            "@Test"
          ]
        }
      },
      {
        "type": "STUBBING",
        "code": "given(directory.list(invocation)).willReturn(new ArrayList<>(0));",
        "line": 177,
        "locate": "Test Case",
        "locationContext": {
          "methodName": "testNoAvailableInvoker",
          "methodAnnotations": [
            "@Test"
          ]
        }
      },
      {
        "type": "STUBBING",
        "code": "given(directory.getInterface()).willReturn(ZoneAwareClusterInvokerTest.class);",
        "line": 178,
        "locate": "Test Case",
        "locationContext": {
          "methodName": "testNoAvailableInvoker",
          "methodAnnotations": [
            "@Test"
          ]
        }
      }
    ],
    "pattern_id": 4
  }
]