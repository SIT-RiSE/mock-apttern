[
  {
    "variableName": "metadataReport",
    "variableType": "MetadataReport",
    "mockedClass": "MetadataReport",
    "isReuseableMock": false,
    "mockPattern": "Creation:\n\u2014 Attribute Mock Creation\n\nStubbing:\n\u2014 Test Case\n\nVerification:\n\u2014 None",
    "classContext": {
      "packageName": "org.apache.dubbo.registry.client.metadata",
      "filePath": "C:\\java tool\\Apache\\dubbo\\dubbo-registry\\dubbo-registry-api\\src\\test\\java\\org\\apache\\dubbo\\registry\\client\\metadata\\MetadataServiceNameMappingTest.java",
      "className": "MetadataServiceNameMappingTest"
    },
    "statements": [
      {
        "type": "FIELD_DECLARATION",
        "code": "private MetadataReport metadataReport;",
        "line": 55,
        "locate": "Attribute",
        "locationContext": {
          "methodName": "[FieldDeclaration]",
          "methodAnnotations": []
        }
      },
      {
        "type": "ASSIGNMENT",
        "code": "metadataReport = mock(MetadataReport.class);",
        "line": 63,
        "locate": "@Before",
        "locationContext": {
          "methodName": "setUp",
          "methodAnnotations": [
            "@BeforeEach"
          ]
        }
      },
      {
        "type": "STUBBING",
        "code": "when(metadataReport.registerServiceAppMapping(any(), any(), any())).thenReturn(true);",
        "line": 93,
        "locate": "Test Case",
        "locationContext": {
          "methodName": "testMap",
          "methodAnnotations": [
            "@Test"
          ]
        }
      },
      {
        "type": "STUBBING",
        "code": "// metadata report using cas and retry, succeeded after retried 10 times\r\nwhen(metadataReport.registerServiceAppMapping(any(), any(), any())).thenReturn(false);",
        "line": 100,
        "locate": "Test Case",
        "locationContext": {
          "methodName": "testMap",
          "methodAnnotations": [
            "@Test"
          ]
        }
      },
      {
        "type": "STUBBING",
        "code": "when(metadataReport.getConfigItem(any(), any())).thenReturn(new ConfigItem());",
        "line": 101,
        "locate": "Test Case",
        "locationContext": {
          "methodName": "testMap",
          "methodAnnotations": [
            "@Test"
          ]
        }
      },
      {
        "type": "STUBBING",
        "code": "when(metadataReport.registerServiceAppMapping(any(), any(), any(), any())).thenAnswer(new Answer<Boolean>() {\r\n\r\n    private int counter = 0;\r\n\r\n    @Override\r\n    public Boolean answer(InvocationOnMock invocationOnMock) {\r\n        if (++counter == 10) {\r\n            return true;\r\n        }\r\n        return false;\r\n    }\r\n});",
        "line": 102,
        "locate": "Test Case",
        "locationContext": {
          "methodName": "testMap",
          "methodAnnotations": [
            "@Test"
          ]
        }
      },
      {
        "type": "STUBBING",
        "code": "// metadata report using cas and retry, failed after 11 times retry\r\nwhen(metadataReport.registerServiceAppMapping(any(), any(), any(), any())).thenReturn(false);",
        "line": 117,
        "locate": "Test Case",
        "locationContext": {
          "methodName": "testMap",
          "methodAnnotations": [
            "@Test"
          ]
        }
      },
      {
        "type": "STUBBING",
        "code": "when(metadataReport.getServiceAppMapping(any(), any())).thenReturn(set);",
        "line": 133,
        "locate": "Test Case",
        "locationContext": {
          "methodName": "testGet",
          "methodAnnotations": [
            "@Test"
          ]
        }
      }
    ],
    "pattern_id": 4
  }
]