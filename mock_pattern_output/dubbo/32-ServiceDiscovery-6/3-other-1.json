[
  {
    "variableName": "serviceDiscovery",
    "variableType": "ServiceDiscovery",
    "mockedClass": "ServiceDiscovery",
    "isReuseableMock": false,
    "mockPattern": "Creation:\n\u2014 Attribute Mock Creation\n\nStubbing:\n\u2014 @Before\n\u2014 Test Case\n\nVerification:\n\u2014 Test Case",
    "classContext": {
      "packageName": "org.apache.dubbo.registry.client",
      "filePath": "C:\\java tool\\Apache\\dubbo\\dubbo-registry\\dubbo-registry-api\\src\\test\\java\\org\\apache\\dubbo\\registry\\client\\ServiceDiscoveryRegistryTest.java",
      "className": "ServiceDiscoveryRegistryTest"
    },
    "statements": [
      {
        "type": "FIELD_DECLARATION",
        "code": "private ServiceDiscovery serviceDiscovery;",
        "line": 82,
        "locate": "Attribute",
        "locationContext": {
          "methodName": "[FieldDeclaration]",
          "methodAnnotations": []
        }
      },
      {
        "type": "ASSIGNMENT",
        "code": "serviceDiscovery = mock(ServiceDiscovery.class);",
        "line": 103,
        "locate": "@Before",
        "locationContext": {
          "methodName": "init",
          "methodAnnotations": [
            "@BeforeEach"
          ]
        }
      },
      {
        "type": "STUBBING",
        "code": "when(serviceDiscovery.createListener(any())).thenReturn(instanceListener);",
        "line": 106,
        "locate": "@Before",
        "locationContext": {
          "methodName": "init",
          "methodAnnotations": [
            "@BeforeEach"
          ]
        }
      },
      {
        "type": "STUBBING",
        "code": "when(serviceDiscovery.getInstances(any())).thenReturn(Collections.emptyList());",
        "line": 107,
        "locate": "@Before",
        "locationContext": {
          "methodName": "init",
          "methodAnnotations": [
            "@BeforeEach"
          ]
        }
      },
      {
        "type": "STUBBING",
        "code": "when(serviceDiscovery.getUrl()).thenReturn(url);",
        "line": 108,
        "locate": "@Before",
        "locationContext": {
          "methodName": "init",
          "methodAnnotations": [
            "@BeforeEach"
          ]
        }
      },
      {
        "type": "VERIFICATION",
        "code": "verify(serviceDiscovery, times(1)).addServiceInstancesChangedListener(instanceListener);",
        "line": 194,
        "locate": "Test Case",
        "locationContext": {
          "methodName": "testSubscribeURLs",
          "methodAnnotations": [
            "@Test"
          ]
        }
      },
      {
        "type": "STUBBING",
        "code": "when(serviceDiscovery.createListener(multiApps)).thenReturn(multiAppsInstanceListener);",
        "line": 206,
        "locate": "Test Case",
        "locationContext": {
          "methodName": "testSubscribeURLs",
          "methodAnnotations": [
            "@Test"
          ]
        }
      },
      {
        "type": "STUBBING",
        "code": "when(serviceDiscovery.getInstances(APP_NAME1)).thenReturn(instanceList1);",
        "line": 207,
        "locate": "Test Case",
        "locationContext": {
          "methodName": "testSubscribeURLs",
          "methodAnnotations": [
            "@Test"
          ]
        }
      },
      {
        "type": "STUBBING",
        "code": "when(serviceDiscovery.getInstances(APP_NAME2)).thenReturn(instanceList2);",
        "line": 208,
        "locate": "Test Case",
        "locationContext": {
          "methodName": "testSubscribeURLs",
          "methodAnnotations": [
            "@Test"
          ]
        }
      },
      {
        "type": "VERIFICATION",
        "code": "verify(serviceDiscovery, times(1)).addServiceInstancesChangedListener(multiAppsInstanceListener);",
        "line": 220,
        "locate": "Test Case",
        "locationContext": {
          "methodName": "testSubscribeURLs",
          "methodAnnotations": [
            "@Test"
          ]
        }
      },
      {
        "type": "VERIFICATION",
        "code": "// still called once, not executed this time\r\nverify(serviceDiscovery, times(2)).addServiceInstancesChangedListener(multiAppsInstanceListener);",
        "line": 237,
        "locate": "Test Case",
        "locationContext": {
          "methodName": "testSubscribeURLs",
          "methodAnnotations": [
            "@Test"
          ]
        }
      }
    ],
    "pattern_id": 21
  }
]