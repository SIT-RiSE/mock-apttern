[
  {
    "variableName": "dataStore",
    "variableType": "DataStore",
    "mockedClass": "DataStore",
    "isReuseableMock": "Hybrid",
    "mockPattern": "Creation:\n\u2014 Attribute Mock Creation\n\nStubbing:\n\u2014 Test Case\n\nVerification:\n\u2014 Test Case",
    "classContext": {
      "packageName": "org.apache.dubbo.metrics.collector.sample",
      "filePath": "C:\\java tool\\Apache\\dubbo\\dubbo-metrics\\dubbo-metrics-default\\src\\test\\java\\org\\apache\\dubbo\\metrics\\collector\\sample\\ThreadPoolMetricsSamplerTest.java",
      "className": "ThreadPoolMetricsSamplerTest"
    },
    "statements": [
      {
        "type": "FIELD_MOCK_CREATION",
        "code": "@Mock\r\nprivate DataStore dataStore;",
        "line": 129,
        "locate": "Attribute",
        "locationContext": {
          "methodName": "[FieldDeclaration]",
          "methodAnnotations": [
            "@Mock"
          ]
        }
      },
      {
        "type": "STUBBING",
        "code": "when(dataStore.get(EXECUTOR_SERVICE_COMPONENT_KEY)).thenReturn(serverExecutors);",
        "line": 165,
        "locate": "Test Case",
        "locationContext": {
          "methodName": "testRegistryDefaultSampleThreadPoolExecutor",
          "methodAnnotations": [
            "@Test"
          ]
        }
      },
      {
        "type": "STUBBING",
        "code": "when(dataStore.get(CONSUMER_SHARED_EXECUTOR_SERVICE_COMPONENT_KEY)).thenReturn(clientExecutors);",
        "line": 166,
        "locate": "Test Case",
        "locationContext": {
          "methodName": "testRegistryDefaultSampleThreadPoolExecutor",
          "methodAnnotations": [
            "@Test"
          ]
        }
      },
      {
        "type": "VERIFICATION",
        "code": "verify(dataStore).addListener(captor.capture());",
        "line": 198,
        "locate": "Test Case",
        "locationContext": {
          "methodName": "testDataSourceNotify",
          "methodAnnotations": [
            "@Test"
          ]
        }
      }
    ],
    "pattern_id": 8
  }
]