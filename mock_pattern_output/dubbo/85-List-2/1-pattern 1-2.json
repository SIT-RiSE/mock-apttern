[
  {
    "variableName": "invokers",
    "variableType": "List",
    "mockedClass": "List",
    "isReuseableMock": "Fully Localized",
    "mockPattern": "Creation:\n\u2014 Local Mock Creation in Test Case\n\nStubbing:\n\u2014 Test Case\n\nVerification:\n\u2014 None",
    "classContext": {
      "packageName": "org.apache.dubbo.qos.command.util",
      "filePath": "C:\\java tool\\Apache\\dubbo\\dubbo-plugin\\dubbo-qos\\src\\test\\java\\org\\apache\\dubbo\\qos\\command\\util\\ServiceCheckUtilsTest.java",
      "className": "ServiceCheckUtilsTest"
    },
    "statements": [
      {
        "type": "DECLARATION",
        "code": "List invokers = Mockito.mock(List.class);",
        "line": 141,
        "locate": "Test Case",
        "locationContext": {
          "methodName": "testGetConsumerAddressNum",
          "methodAnnotations": [
            "@Test"
          ]
        }
      },
      {
        "type": "STUBBING",
        "code": "Mockito.when(invokers.size()).thenReturn(10);",
        "line": 128,
        "locate": "Test Case",
        "locationContext": {
          "methodName": "testGetConsumerAddressNum",
          "methodAnnotations": [
            "@Test"
          ]
        }
      },
      {
        "type": "STUBBING",
        "code": "Mockito.when(invokers.size()).thenReturn(10);",
        "line": 143,
        "locate": "Test Case",
        "locationContext": {
          "methodName": "testGetConsumerAddressNum",
          "methodAnnotations": [
            "@Test"
          ]
        }
      }
    ],
    "pattern_id": 1
  },
  {
    "variableName": "sdInvokers",
    "variableType": "List",
    "mockedClass": "List",
    "isReuseableMock": "Fully Localized",
    "mockPattern": "Creation:\n\u2014 Local Mock Creation in Test Case\n\nStubbing:\n\u2014 Test Case\n\nVerification:\n\u2014 None",
    "classContext": {
      "packageName": "org.apache.dubbo.qos.command.util",
      "filePath": "C:\\java tool\\Apache\\dubbo\\dubbo-plugin\\dubbo-qos\\src\\test\\java\\org\\apache\\dubbo\\qos\\command\\util\\ServiceCheckUtilsTest.java",
      "className": "ServiceCheckUtilsTest"
    },
    "statements": [
      {
        "type": "DECLARATION",
        "code": "List sdInvokers = Mockito.mock(List.class);",
        "line": 118,
        "locate": "Test Case",
        "locationContext": {
          "methodName": "testGetConsumerAddressNum",
          "methodAnnotations": [
            "@Test"
          ]
        }
      },
      {
        "type": "STUBBING",
        "code": "Mockito.when(sdInvokers.size()).thenReturn(5);",
        "line": 105,
        "locate": "Test Case",
        "locationContext": {
          "methodName": "testGetConsumerAddressNum",
          "methodAnnotations": [
            "@Test"
          ]
        }
      },
      {
        "type": "STUBBING",
        "code": "Mockito.when(sdInvokers.size()).thenReturn(0);",
        "line": 120,
        "locate": "Test Case",
        "locationContext": {
          "methodName": "testGetConsumerAddressNum",
          "methodAnnotations": [
            "@Test"
          ]
        }
      }
    ],
    "pattern_id": 1
  }
]