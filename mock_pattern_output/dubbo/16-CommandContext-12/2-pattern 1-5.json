[
  {
    "variableName": "commandContext1",
    "variableType": "CommandContext",
    "mockedClass": "CommandContext",
    "isReuseableMock": "Fully Localized",
    "mockPattern": "Creation:\n\u2014 Local Mock Creation in Test Case\n\nStubbing:\n\u2014 Test Case\n\nVerification:\n\u2014 None",
    "classContext": {
      "packageName": "org.apache.dubbo.qos.command.impl",
      "filePath": "C:\\java tool\\Apache\\dubbo\\dubbo-plugin\\dubbo-qos\\src\\test\\java\\org\\apache\\dubbo\\qos\\command\\impl\\SerializeCheckStatusTest.java",
      "className": "SerializeCheckStatusTest"
    },
    "statements": [
      {
        "type": "DECLARATION",
        "code": "CommandContext commandContext1 = Mockito.mock(CommandContext.class);",
        "line": 36,
        "locate": "Test Case",
        "locationContext": {
          "methodName": "testNotify",
          "methodAnnotations": [
            "@Test"
          ]
        }
      },
      {
        "type": "STUBBING",
        "code": "Mockito.when(commandContext1.isHttp()).thenReturn(false);",
        "line": 37,
        "locate": "Test Case",
        "locationContext": {
          "methodName": "testNotify",
          "methodAnnotations": [
            "@Test"
          ]
        }
      }
    ],
    "pattern_id": 1
  },
  {
    "variableName": "commandContext2",
    "variableType": "CommandContext",
    "mockedClass": "CommandContext",
    "isReuseableMock": "Fully Localized",
    "mockPattern": "Creation:\n\u2014 Local Mock Creation in Test Case\n\nStubbing:\n\u2014 Test Case\n\nVerification:\n\u2014 None",
    "classContext": {
      "packageName": "org.apache.dubbo.qos.command.impl",
      "filePath": "C:\\java tool\\Apache\\dubbo\\dubbo-plugin\\dubbo-qos\\src\\test\\java\\org\\apache\\dubbo\\qos\\command\\impl\\SerializeCheckStatusTest.java",
      "className": "SerializeCheckStatusTest"
    },
    "statements": [
      {
        "type": "DECLARATION",
        "code": "CommandContext commandContext2 = Mockito.mock(CommandContext.class);",
        "line": 38,
        "locate": "Test Case",
        "locationContext": {
          "methodName": "testNotify",
          "methodAnnotations": [
            "@Test"
          ]
        }
      },
      {
        "type": "STUBBING",
        "code": "Mockito.when(commandContext2.isHttp()).thenReturn(true);",
        "line": 39,
        "locate": "Test Case",
        "locationContext": {
          "methodName": "testNotify",
          "methodAnnotations": [
            "@Test"
          ]
        }
      }
    ],
    "pattern_id": 1
  },
  {
    "variableName": "commandContext1",
    "variableType": "CommandContext",
    "mockedClass": "CommandContext",
    "isReuseableMock": "Fully Localized",
    "mockPattern": "Creation:\n\u2014 Local Mock Creation in Test Case\n\nStubbing:\n\u2014 Test Case\n\nVerification:\n\u2014 None",
    "classContext": {
      "packageName": "org.apache.dubbo.qos.command.impl",
      "filePath": "C:\\java tool\\Apache\\dubbo\\dubbo-plugin\\dubbo-qos\\src\\test\\java\\org\\apache\\dubbo\\qos\\command\\impl\\SerializeWarnedClassesTest.java",
      "className": "SerializeWarnedClassesTest"
    },
    "statements": [
      {
        "type": "DECLARATION",
        "code": "CommandContext commandContext1 = Mockito.mock(CommandContext.class);",
        "line": 36,
        "locate": "Test Case",
        "locationContext": {
          "methodName": "test",
          "methodAnnotations": [
            "@Test"
          ]
        }
      },
      {
        "type": "STUBBING",
        "code": "Mockito.when(commandContext1.isHttp()).thenReturn(false);",
        "line": 37,
        "locate": "Test Case",
        "locationContext": {
          "methodName": "test",
          "methodAnnotations": [
            "@Test"
          ]
        }
      }
    ],
    "pattern_id": 1
  },
  {
    "variableName": "commandContext2",
    "variableType": "CommandContext",
    "mockedClass": "CommandContext",
    "isReuseableMock": "Fully Localized",
    "mockPattern": "Creation:\n\u2014 Local Mock Creation in Test Case\n\nStubbing:\n\u2014 Test Case\n\nVerification:\n\u2014 None",
    "classContext": {
      "packageName": "org.apache.dubbo.qos.command.impl",
      "filePath": "C:\\java tool\\Apache\\dubbo\\dubbo-plugin\\dubbo-qos\\src\\test\\java\\org\\apache\\dubbo\\qos\\command\\impl\\SerializeWarnedClassesTest.java",
      "className": "SerializeWarnedClassesTest"
    },
    "statements": [
      {
        "type": "DECLARATION",
        "code": "CommandContext commandContext2 = Mockito.mock(CommandContext.class);",
        "line": 38,
        "locate": "Test Case",
        "locationContext": {
          "methodName": "test",
          "methodAnnotations": [
            "@Test"
          ]
        }
      },
      {
        "type": "STUBBING",
        "code": "Mockito.when(commandContext2.isHttp()).thenReturn(true);",
        "line": 39,
        "locate": "Test Case",
        "locationContext": {
          "methodName": "test",
          "methodAnnotations": [
            "@Test"
          ]
        }
      }
    ],
    "pattern_id": 1
  },
  {
    "variableName": "commandContext",
    "variableType": "CommandContext",
    "mockedClass": "CommandContext",
    "isReuseableMock": "Fully Localized",
    "mockPattern": "Creation:\n\u2014 Local Mock Creation in Test Case\n\nStubbing:\n\u2014 Test Case\n\nVerification:\n\u2014 None",
    "classContext": {
      "packageName": "org.apache.dubbo.qos.permission",
      "filePath": "C:\\java tool\\Apache\\dubbo\\dubbo-plugin\\dubbo-qos\\src\\test\\java\\org\\apache\\dubbo\\qos\\permission\\DefaultAnonymousAccessPermissionCheckerTest.java",
      "className": "DefaultAnonymousAccessPermissionCheckerTest"
    },
    "statements": [
      {
        "type": "DECLARATION",
        "code": "CommandContext commandContext = Mockito.mock(CommandContext.class);",
        "line": 41,
        "locate": "Test Case",
        "locationContext": {
          "methodName": "testPermission",
          "methodAnnotations": [
            "@Test"
          ]
        }
      },
      {
        "type": "STUBBING",
        "code": "Mockito.when(commandContext.getRemote()).thenReturn(channel);",
        "line": 42,
        "locate": "Test Case",
        "locationContext": {
          "methodName": "testPermission",
          "methodAnnotations": [
            "@Test"
          ]
        }
      },
      {
        "type": "STUBBING",
        "code": "Mockito.when(commandContext.getQosConfiguration()).thenReturn(qosConfiguration);",
        "line": 48,
        "locate": "Test Case",
        "locationContext": {
          "methodName": "testPermission",
          "methodAnnotations": [
            "@Test"
          ]
        }
      },
      {
        "type": "STUBBING",
        "code": "Mockito.when(commandContext.getCommandName()).thenReturn(\"test1\");",
        "line": 87,
        "locate": "Test Case",
        "locationContext": {
          "methodName": "testPermission",
          "methodAnnotations": [
            "@Test"
          ]
        }
      },
      {
        "type": "STUBBING",
        "code": "Mockito.when(commandContext.getCommandName()).thenReturn(\"test2\");",
        "line": 93,
        "locate": "Test Case",
        "locationContext": {
          "methodName": "testPermission",
          "methodAnnotations": [
            "@Test"
          ]
        }
      },
      {
        "type": "STUBBING",
        "code": "Mockito.when(commandContext.getCommandName()).thenReturn(\"test\");",
        "line": 99,
        "locate": "Test Case",
        "locationContext": {
          "methodName": "testPermission",
          "methodAnnotations": [
            "@Test"
          ]
        }
      }
    ],
    "pattern_id": 1
  }
]