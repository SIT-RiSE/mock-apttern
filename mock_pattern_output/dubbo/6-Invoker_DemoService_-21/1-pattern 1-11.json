[
  {
    "variableName": "invoker1",
    "variableType": "Invoker<DemoService>",
    "mockedClass": "Invoker",
    "isReuseableMock": "Fully Localized",
    "mockPattern": "Creation:\n\u2014 Local Mock Creation in Test Case\n\nStubbing:\n\u2014 Test Case\n\nVerification:\n\u2014 None",
    "classContext": {
      "packageName": "org.apache.dubbo.rpc.cluster.router.mock",
      "filePath": "C:\\java tool\\Apache\\dubbo\\dubbo-cluster\\src\\test\\java\\org\\apache\\dubbo\\rpc\\cluster\\router\\mock\\MockInvokersSelectorTest.java",
      "className": "MockInvokersSelectorTest"
    },
    "statements": [
      {
        "type": "DECLARATION",
        "code": "// Data preparation\r\nInvoker<DemoService> invoker1 = Mockito.mock(Invoker.class);",
        "line": 41,
        "locate": "Test Case",
        "locationContext": {
          "methodName": "test",
          "methodAnnotations": [
            "@Test"
          ]
        }
      },
      {
        "type": "STUBBING",
        "code": "Mockito.when(invoker1.getUrl()).thenReturn(URL.valueOf(\"mock://127.0.0.1/test\"));",
        "line": 44,
        "locate": "Test Case",
        "locationContext": {
          "methodName": "test",
          "methodAnnotations": [
            "@Test"
          ]
        }
      }
    ],
    "pattern_id": 1
  },
  {
    "variableName": "invoker3",
    "variableType": "Invoker<DemoService>",
    "mockedClass": "Invoker",
    "isReuseableMock": "Fully Localized",
    "mockPattern": "Creation:\n\u2014 Local Mock Creation in Test Case\n\nStubbing:\n\u2014 Test Case\n\nVerification:\n\u2014 None",
    "classContext": {
      "packageName": "org.apache.dubbo.rpc.cluster.router.mock",
      "filePath": "C:\\java tool\\Apache\\dubbo\\dubbo-cluster\\src\\test\\java\\org\\apache\\dubbo\\rpc\\cluster\\router\\mock\\MockInvokersSelectorTest.java",
      "className": "MockInvokersSelectorTest"
    },
    "statements": [
      {
        "type": "DECLARATION",
        "code": "Invoker<DemoService> invoker3 = Mockito.mock(Invoker.class);",
        "line": 43,
        "locate": "Test Case",
        "locationContext": {
          "methodName": "test",
          "methodAnnotations": [
            "@Test"
          ]
        }
      },
      {
        "type": "STUBBING",
        "code": "Mockito.when(invoker3.getUrl()).thenReturn(URL.valueOf(\"dubbo://127.0.0.1/test\"));",
        "line": 46,
        "locate": "Test Case",
        "locationContext": {
          "methodName": "test",
          "methodAnnotations": [
            "@Test"
          ]
        }
      }
    ],
    "pattern_id": 1
  },
  {
    "variableName": "invoker2",
    "variableType": "Invoker<DemoService>",
    "mockedClass": "Invoker",
    "isReuseableMock": "Fully Localized",
    "mockPattern": "Creation:\n\u2014 Local Mock Creation in Test Case\n\nStubbing:\n\u2014 Test Case\n\nVerification:\n\u2014 None",
    "classContext": {
      "packageName": "org.apache.dubbo.rpc.cluster.router.mock",
      "filePath": "C:\\java tool\\Apache\\dubbo\\dubbo-cluster\\src\\test\\java\\org\\apache\\dubbo\\rpc\\cluster\\router\\mock\\MockInvokersSelectorTest.java",
      "className": "MockInvokersSelectorTest"
    },
    "statements": [
      {
        "type": "DECLARATION",
        "code": "Invoker<DemoService> invoker2 = Mockito.mock(Invoker.class);",
        "line": 42,
        "locate": "Test Case",
        "locationContext": {
          "methodName": "test",
          "methodAnnotations": [
            "@Test"
          ]
        }
      },
      {
        "type": "STUBBING",
        "code": "Mockito.when(invoker2.getUrl()).thenReturn(URL.valueOf(\"mock://127.0.0.1/test\"));",
        "line": 45,
        "locate": "Test Case",
        "locationContext": {
          "methodName": "test",
          "methodAnnotations": [
            "@Test"
          ]
        }
      }
    ],
    "pattern_id": 1
  },
  {
    "variableName": "invoker",
    "variableType": "Invoker<DemoService>",
    "mockedClass": "Invoker",
    "isReuseableMock": "Fully Localized",
    "mockPattern": "Creation:\n\u2014 Local Mock Creation in Test Case\n\nStubbing:\n\u2014 Test Case\n\nVerification:\n\u2014 None",
    "classContext": {
      "packageName": "org.apache.dubbo.rpc.filter",
      "filePath": "C:\\java tool\\Apache\\dubbo\\dubbo-rpc\\dubbo-rpc-api\\src\\test\\java\\org\\apache\\dubbo\\rpc\\filter\\ExceptionFilterTest.java",
      "className": "ExceptionFilterTest"
    },
    "statements": [
      {
        "type": "DECLARATION",
        "code": "Invoker<DemoService> invoker = mock(Invoker.class);",
        "line": 58,
        "locate": "Test Case",
        "locationContext": {
          "methodName": "testRpcException",
          "methodAnnotations": [
            "@SuppressWarnings",
            "@Test"
          ]
        }
      },
      {
        "type": "STUBBING",
        "code": "given(invoker.getInterface()).willReturn(DemoService.class);",
        "line": 59,
        "locate": "Test Case",
        "locationContext": {
          "methodName": "testRpcException",
          "methodAnnotations": [
            "@SuppressWarnings",
            "@Test"
          ]
        }
      },
      {
        "type": "STUBBING",
        "code": "given(invoker.invoke(eq(invocation))).willThrow(exception);",
        "line": 60,
        "locate": "Test Case",
        "locationContext": {
          "methodName": "testRpcException",
          "methodAnnotations": [
            "@SuppressWarnings",
            "@Test"
          ]
        }
      }
    ],
    "pattern_id": 1
  },
  {
    "variableName": "invoker",
    "variableType": "Invoker<DemoService>",
    "mockedClass": "Invoker",
    "isReuseableMock": "Fully Localized",
    "mockPattern": "Creation:\n\u2014 Local Mock Creation in Test Case\n\nStubbing:\n\u2014 Test Case\n\nVerification:\n\u2014 None",
    "classContext": {
      "packageName": "org.apache.dubbo.rpc.filter",
      "filePath": "C:\\java tool\\Apache\\dubbo\\dubbo-rpc\\dubbo-rpc-api\\src\\test\\java\\org\\apache\\dubbo\\rpc\\filter\\ExceptionFilterTest.java",
      "className": "ExceptionFilterTest"
    },
    "statements": [
      {
        "type": "DECLARATION",
        "code": "Invoker<DemoService> invoker = mock(Invoker.class);",
        "line": 92,
        "locate": "Test Case",
        "locationContext": {
          "methodName": "testJavaException",
          "methodAnnotations": [
            "@SuppressWarnings",
            "@Test"
          ]
        }
      },
      {
        "type": "STUBBING",
        "code": "when(invoker.invoke(invocation)).thenReturn(appResponse);",
        "line": 93,
        "locate": "Test Case",
        "locationContext": {
          "methodName": "testJavaException",
          "methodAnnotations": [
            "@SuppressWarnings",
            "@Test"
          ]
        }
      },
      {
        "type": "STUBBING",
        "code": "when(invoker.getInterface()).thenReturn(DemoService.class);",
        "line": 94,
        "locate": "Test Case",
        "locationContext": {
          "methodName": "testJavaException",
          "methodAnnotations": [
            "@SuppressWarnings",
            "@Test"
          ]
        }
      }
    ],
    "pattern_id": 1
  },
  {
    "variableName": "invoker",
    "variableType": "Invoker<DemoService>",
    "mockedClass": "Invoker",
    "isReuseableMock": "Fully Localized",
    "mockPattern": "Creation:\n\u2014 Local Mock Creation in Test Case\n\nStubbing:\n\u2014 Test Case\n\nVerification:\n\u2014 None",
    "classContext": {
      "packageName": "org.apache.dubbo.rpc.filter",
      "filePath": "C:\\java tool\\Apache\\dubbo\\dubbo-rpc\\dubbo-rpc-api\\src\\test\\java\\org\\apache\\dubbo\\rpc\\filter\\ExceptionFilterTest.java",
      "className": "ExceptionFilterTest"
    },
    "statements": [
      {
        "type": "DECLARATION",
        "code": "Invoker<DemoService> invoker = mock(Invoker.class);",
        "line": 112,
        "locate": "Test Case",
        "locationContext": {
          "methodName": "testRuntimeException",
          "methodAnnotations": [
            "@SuppressWarnings",
            "@Test"
          ]
        }
      },
      {
        "type": "STUBBING",
        "code": "when(invoker.invoke(invocation)).thenReturn(appResponse);",
        "line": 113,
        "locate": "Test Case",
        "locationContext": {
          "methodName": "testRuntimeException",
          "methodAnnotations": [
            "@SuppressWarnings",
            "@Test"
          ]
        }
      },
      {
        "type": "STUBBING",
        "code": "when(invoker.getInterface()).thenReturn(DemoService.class);",
        "line": 114,
        "locate": "Test Case",
        "locationContext": {
          "methodName": "testRuntimeException",
          "methodAnnotations": [
            "@SuppressWarnings",
            "@Test"
          ]
        }
      }
    ],
    "pattern_id": 1
  },
  {
    "variableName": "invoker",
    "variableType": "Invoker<DemoService>",
    "mockedClass": "Invoker",
    "isReuseableMock": "Fully Localized",
    "mockPattern": "Creation:\n\u2014 Local Mock Creation in Test Case\n\nStubbing:\n\u2014 Test Case\n\nVerification:\n\u2014 None",
    "classContext": {
      "packageName": "org.apache.dubbo.rpc.filter",
      "filePath": "C:\\java tool\\Apache\\dubbo\\dubbo-rpc\\dubbo-rpc-api\\src\\test\\java\\org\\apache\\dubbo\\rpc\\filter\\ExceptionFilterTest.java",
      "className": "ExceptionFilterTest"
    },
    "statements": [
      {
        "type": "DECLARATION",
        "code": "Invoker<DemoService> invoker = mock(Invoker.class);",
        "line": 133,
        "locate": "Test Case",
        "locationContext": {
          "methodName": "testConvertToRunTimeException",
          "methodAnnotations": [
            "@SuppressWarnings",
            "@Test"
          ]
        }
      },
      {
        "type": "STUBBING",
        "code": "when(invoker.invoke(invocation)).thenReturn(mockAsyncResult);",
        "line": 134,
        "locate": "Test Case",
        "locationContext": {
          "methodName": "testConvertToRunTimeException",
          "methodAnnotations": [
            "@SuppressWarnings",
            "@Test"
          ]
        }
      },
      {
        "type": "STUBBING",
        "code": "when(invoker.getInterface()).thenReturn(DemoService.class);",
        "line": 135,
        "locate": "Test Case",
        "locationContext": {
          "methodName": "testConvertToRunTimeException",
          "methodAnnotations": [
            "@SuppressWarnings",
            "@Test"
          ]
        }
      }
    ],
    "pattern_id": 1
  },
  {
    "variableName": "invoker",
    "variableType": "Invoker<DemoService>",
    "mockedClass": "Invoker",
    "isReuseableMock": "Fully Localized",
    "mockPattern": "Creation:\n\u2014 Local Mock Creation in Test Case\n\nStubbing:\n\u2014 Test Case\n\nVerification:\n\u2014 None",
    "classContext": {
      "packageName": "org.apache.dubbo.rpc.proxy.wrapper",
      "filePath": "C:\\java tool\\Apache\\dubbo\\dubbo-rpc\\dubbo-rpc-api\\src\\test\\java\\org\\apache\\dubbo\\rpc\\proxy\\wrapper\\StubProxyFactoryWrapperTest.java",
      "className": "StubProxyFactoryWrapperTest"
    },
    "statements": [
      {
        "type": "DECLARATION",
        "code": "Invoker<DemoService> invoker = Mockito.mock(Invoker.class);",
        "line": 48,
        "locate": "Test Case",
        "locationContext": {
          "methodName": "test",
          "methodAnnotations": [
            "@Test"
          ]
        }
      },
      {
        "type": "STUBBING",
        "code": "Mockito.when(invoker.getInterface()).thenReturn(DemoService.class);",
        "line": 49,
        "locate": "Test Case",
        "locationContext": {
          "methodName": "test",
          "methodAnnotations": [
            "@Test"
          ]
        }
      },
      {
        "type": "STUBBING",
        "code": "Mockito.when(invoker.getUrl()).thenReturn(url);",
        "line": 50,
        "locate": "Test Case",
        "locationContext": {
          "methodName": "test",
          "methodAnnotations": [
            "@Test"
          ]
        }
      }
    ],
    "pattern_id": 1
  },
  {
    "variableName": "mockInvoker",
    "variableType": "Invoker<DemoService>",
    "mockedClass": "Invoker",
    "isReuseableMock": "Fully Localized",
    "mockPattern": "Creation:\n\u2014 Local Mock Creation in Test Case\n\nStubbing:\n\u2014 Test Case\n\nVerification:\n\u2014 None",
    "classContext": {
      "packageName": "org.apache.dubbo.rpc.protocol.dubbo.filter",
      "filePath": "C:\\java tool\\Apache\\dubbo\\dubbo-rpc\\dubbo-rpc-dubbo\\src\\test\\java\\org\\apache\\dubbo\\rpc\\protocol\\dubbo\\filter\\TraceFilterTest.java",
      "className": "TraceFilterTest"
    },
    "statements": [
      {
        "type": "DECLARATION",
        "code": "Invoker<DemoService> mockInvoker = mock(Invoker.class);",
        "line": 96,
        "locate": "Test Case",
        "locationContext": {
          "methodName": "testInvoke",
          "methodAnnotations": [
            "@Test"
          ]
        }
      },
      {
        "type": "STUBBING",
        "code": "given(mockInvoker.getInterface()).willReturn(DemoService.class);",
        "line": 101,
        "locate": "Test Case",
        "locationContext": {
          "methodName": "testInvoke",
          "methodAnnotations": [
            "@Test"
          ]
        }
      },
      {
        "type": "STUBBING",
        "code": "given(mockInvoker.invoke(mockInvocation)).willReturn(mockResult);",
        "line": 104,
        "locate": "Test Case",
        "locationContext": {
          "methodName": "testInvoke",
          "methodAnnotations": [
            "@Test"
          ]
        }
      }
    ],
    "pattern_id": 1
  },
  {
    "variableName": "invoker",
    "variableType": "Invoker<DemoService>",
    "mockedClass": "Invoker",
    "isReuseableMock": "Fully Localized",
    "mockPattern": "Creation:\n\u2014 Local Mock Creation in Test Case\n\nStubbing:\n\u2014 Test Case\n\nVerification:\n\u2014 None",
    "classContext": {
      "packageName": "org.apache.dubbo.rpc.protocol.dubbo",
      "filePath": "C:\\java tool\\Apache\\dubbo\\dubbo-rpc\\dubbo-rpc-dubbo\\src\\test\\java\\org\\apache\\dubbo\\rpc\\protocol\\dubbo\\FutureFilterTest.java",
      "className": "FutureFilterTest"
    },
    "statements": [
      {
        "type": "DECLARATION",
        "code": "@SuppressWarnings(\"unchecked\")\r\nInvoker<DemoService> invoker = mock(Invoker.class);",
        "line": 55,
        "locate": "Test Case",
        "locationContext": {
          "methodName": "testSyncCallback",
          "methodAnnotations": [
            "@Test"
          ]
        }
      },
      {
        "type": "STUBBING",
        "code": "given(invoker.isAvailable()).willReturn(true);",
        "line": 57,
        "locate": "Test Case",
        "locationContext": {
          "methodName": "testSyncCallback",
          "methodAnnotations": [
            "@Test"
          ]
        }
      },
      {
        "type": "STUBBING",
        "code": "given(invoker.getInterface()).willReturn(DemoService.class);",
        "line": 58,
        "locate": "Test Case",
        "locationContext": {
          "methodName": "testSyncCallback",
          "methodAnnotations": [
            "@Test"
          ]
        }
      },
      {
        "type": "STUBBING",
        "code": "given(invoker.invoke(invocation)).willReturn(result);",
        "line": 61,
        "locate": "Test Case",
        "locationContext": {
          "methodName": "testSyncCallback",
          "methodAnnotations": [
            "@Test"
          ]
        }
      },
      {
        "type": "STUBBING",
        "code": "given(invoker.getUrl()).willReturn(url);",
        "line": 63,
        "locate": "Test Case",
        "locationContext": {
          "methodName": "testSyncCallback",
          "methodAnnotations": [
            "@Test"
          ]
        }
      }
    ],
    "pattern_id": 1
  },
  {
    "variableName": "invoker",
    "variableType": "Invoker<DemoService>",
    "mockedClass": "Invoker",
    "isReuseableMock": "Fully Localized",
    "mockPattern": "Creation:\n\u2014 Local Mock Creation in Test Case\n\nStubbing:\n\u2014 Test Case\n\nVerification:\n\u2014 None",
    "classContext": {
      "packageName": "org.apache.dubbo.rpc.protocol.dubbo",
      "filePath": "C:\\java tool\\Apache\\dubbo\\dubbo-rpc\\dubbo-rpc-dubbo\\src\\test\\java\\org\\apache\\dubbo\\rpc\\protocol\\dubbo\\FutureFilterTest.java",
      "className": "FutureFilterTest"
    },
    "statements": [
      {
        "type": "DECLARATION",
        "code": "@SuppressWarnings(\"unchecked\")\r\nInvoker<DemoService> invoker = mock(Invoker.class);",
        "line": 72,
        "locate": "Test Case",
        "locationContext": {
          "methodName": "testSyncCallbackHasException",
          "methodAnnotations": [
            "@Test"
          ]
        }
      },
      {
        "type": "STUBBING",
        "code": "given(invoker.isAvailable()).willReturn(true);",
        "line": 74,
        "locate": "Test Case",
        "locationContext": {
          "methodName": "testSyncCallbackHasException",
          "methodAnnotations": [
            "@Test"
          ]
        }
      },
      {
        "type": "STUBBING",
        "code": "given(invoker.getInterface()).willReturn(DemoService.class);",
        "line": 75,
        "locate": "Test Case",
        "locationContext": {
          "methodName": "testSyncCallbackHasException",
          "methodAnnotations": [
            "@Test"
          ]
        }
      },
      {
        "type": "STUBBING",
        "code": "given(invoker.invoke(invocation)).willReturn(result);",
        "line": 78,
        "locate": "Test Case",
        "locationContext": {
          "methodName": "testSyncCallbackHasException",
          "methodAnnotations": [
            "@Test"
          ]
        }
      },
      {
        "type": "STUBBING",
        "code": "given(invoker.getUrl()).willReturn(url);",
        "line": 80,
        "locate": "Test Case",
        "locationContext": {
          "methodName": "testSyncCallbackHasException",
          "methodAnnotations": [
            "@Test"
          ]
        }
      }
    ],
    "pattern_id": 1
  }
]