[
  {
    "variableName": "ctx",
    "variableType": "ChannelHandlerContext",
    "mockedClass": "ChannelHandlerContext",
    "isReuseableMock": "Hybrid",
    "mockPattern": "Creation:\n\u2014 Attribute Mock Creation\n\nStubbing:\n\u2014 @Before\n\nVerification:\n\u2014 Test Case",
    "classContext": {
      "packageName": "org.apache.dubbo.rpc.protocol.tri.transport",
      "filePath": "C:\\java tool\\Apache\\dubbo\\dubbo-rpc\\dubbo-rpc-triple\\src\\test\\java\\org\\apache\\dubbo\\rpc\\protocol\\tri\\transport\\TripleHttp2ClientResponseHandlerTest.java",
      "className": "TripleHttp2ClientResponseHandlerTest"
    },
    "statements": [
      {
        "type": "FIELD_DECLARATION",
        "code": "private ChannelHandlerContext ctx;",
        "line": 39,
        "locate": "Attribute",
        "locationContext": {
          "methodName": "[FieldDeclaration]",
          "methodAnnotations": []
        }
      },
      {
        "type": "ASSIGNMENT",
        "code": "ctx = Mockito.mock(ChannelHandlerContext.class);",
        "line": 46,
        "locate": "@Before",
        "locationContext": {
          "methodName": "init",
          "methodAnnotations": [
            "@BeforeEach"
          ]
        }
      },
      {
        "type": "STUBBING",
        "code": "Mockito.when(ctx.channel()).thenReturn(channel);",
        "line": 48,
        "locate": "@Before",
        "locationContext": {
          "methodName": "init",
          "methodAnnotations": [
            "@BeforeEach"
          ]
        }
      },
      {
        "type": "VERIFICATION",
        "code": "Mockito.verify(ctx, Mockito.times(1)).close();",
        "line": 57,
        "locate": "Test Case",
        "locationContext": {
          "methodName": "testUserEventTriggered",
          "methodAnnotations": [
            "@Test"
          ]
        }
      },
      {
        "type": "VERIFICATION",
        "code": "Mockito.verify(ctx, Mockito.times(2)).close();",
        "line": 62,
        "locate": "Test Case",
        "locationContext": {
          "methodName": "testUserEventTriggered",
          "methodAnnotations": [
            "@Test"
          ]
        }
      },
      {
        "type": "VERIFICATION",
        "code": "Mockito.verify(ctx).close();",
        "line": 77,
        "locate": "Test Case",
        "locationContext": {
          "methodName": "testExceptionCaught",
          "methodAnnotations": [
            "@Test"
          ]
        }
      }
    ],
    "pattern_id": 15
  }
]