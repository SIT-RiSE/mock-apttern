[
  {
    "variableName": "metadataService",
    "variableType": "MetadataService",
    "mockedClass": "MetadataService",
    "isReuseableMock": false,
    "mockPattern": "Creation:\n\u2014 Attribute Mock Creation\n\nStubbing:\n\u2014 None\n\nVerification:\n\u2014 None",
    "classContext": {
      "packageName": "org.apache.dubbo.registry.client.event.listener",
      "filePath": "C:\\java tool\\Apache\\dubbo\\dubbo-registry\\dubbo-registry-api\\src\\test\\java\\org\\apache\\dubbo\\registry\\client\\event\\listener\\ServiceInstancesChangedListenerTest.java",
      "className": "ServiceInstancesChangedListenerTest"
    },
    "statements": [
      {
        "type": "FIELD_DECLARATION",
        "code": "static MetadataService metadataService;",
        "line": 131,
        "locate": "Attribute",
        "locationContext": {
          "methodName": "[FieldDeclaration]",
          "methodAnnotations": []
        }
      },
      {
        "type": "ASSIGNMENT",
        "code": "metadataService = Mockito.mock(MetadataService.class);",
        "line": 140,
        "locate": "@Before",
        "locationContext": {
          "methodName": "setUp",
          "methodAnnotations": [
            "@BeforeAll"
          ]
        }
      }
    ],
    "pattern_id": 3
  },
  {
    "variableName": "metadataService",
    "variableType": "MetadataService",
    "mockedClass": "MetadataService",
    "isReuseableMock": false,
    "mockPattern": "Creation:\n\u2014 Attribute Mock Creation\n\nStubbing:\n\u2014 None\n\nVerification:\n\u2014 None",
    "classContext": {
      "packageName": "org.apache.dubbo.registry.client.event.listener",
      "filePath": "C:\\java tool\\Apache\\dubbo\\dubbo-registry\\dubbo-registry-api\\src\\test\\java\\org\\apache\\dubbo\\registry\\client\\event\\listener\\ServiceInstancesChangedListenerWithoutEmptyProtectTest.java",
      "className": "ServiceInstancesChangedListenerWithoutEmptyProtectTest"
    },
    "statements": [
      {
        "type": "FIELD_DECLARATION",
        "code": "static MetadataService metadataService;",
        "line": 130,
        "locate": "Attribute",
        "locationContext": {
          "methodName": "[FieldDeclaration]",
          "methodAnnotations": []
        }
      },
      {
        "type": "ASSIGNMENT",
        "code": "metadataService = Mockito.mock(MetadataService.class);",
        "line": 139,
        "locate": "@Before",
        "locationContext": {
          "methodName": "setUp",
          "methodAnnotations": [
            "@BeforeAll"
          ]
        }
      }
    ],
    "pattern_id": 3
  },
  {
    "variableName": "mockedMetadataService",
    "variableType": "MetadataService",
    "mockedClass": "MetadataService",
    "isReuseableMock": false,
    "mockPattern": "Creation:\n\u2014 Attribute Mock Creation\n\nStubbing:\n\u2014 None\n\nVerification:\n\u2014 None",
    "classContext": {
      "packageName": "org.apache.dubbo.registry.client.metadata",
      "filePath": "C:\\java tool\\Apache\\dubbo\\dubbo-registry\\dubbo-registry-api\\src\\test\\java\\org\\apache\\dubbo\\registry\\client\\metadata\\ProtocolPortsMetadataCustomizerTest.java",
      "className": "ProtocolPortsMetadataCustomizerTest"
    },
    "statements": [
      {
        "type": "FIELD_DECLARATION",
        "code": "private MetadataService mockedMetadataService;",
        "line": 47,
        "locate": "Attribute",
        "locationContext": {
          "methodName": "[FieldDeclaration]",
          "methodAnnotations": []
        }
      },
      {
        "type": "ASSIGNMENT",
        "code": "mockedMetadataService = Mockito.mock(MetadataService.class);",
        "line": 76,
        "locate": "@Before",
        "locationContext": {
          "methodName": "init",
          "methodAnnotations": [
            "@BeforeEach"
          ]
        }
      }
    ],
    "pattern_id": 3
  }
]