[
  {
    "variableName": "serviceModel",
    "variableType": "ServiceModel",
    "mockedClass": "ServiceModel",
    "isReuseableMock": false,
    "mockPattern": "Creation:\n\u2014 Local Mock Creation in Test Case\n\nStubbing:\n\u2014 Test Case\n\nVerification:\n\u2014 None",
    "classContext": {
      "packageName": "org.apache.dubbo.rpc.cluster.router",
      "filePath": "C:\\java tool\\Apache\\dubbo\\dubbo-cluster\\src\\test\\java\\org\\apache\\dubbo\\rpc\\cluster\\router\\RouterSnapshotFilterTest.java",
      "className": "RouterSnapshotFilterTest"
    },
    "statements": [
      {
        "type": "DECLARATION",
        "code": "ServiceModel serviceModel = Mockito.mock(ServiceModel.class);",
        "line": 46,
        "locate": "Test Case",
        "locationContext": {
          "methodName": "test",
          "methodAnnotations": [
            "@Test"
          ]
        }
      },
      {
        "type": "STUBBING",
        "code": "Mockito.when(serviceModel.getServiceKey()).thenReturn(\"TestKey\");",
        "line": 47,
        "locate": "Test Case",
        "locationContext": {
          "methodName": "test",
          "methodAnnotations": [
            "@Test"
          ]
        }
      }
    ],
    "pattern_id": 1
  },
  {
    "variableName": "serviceModel",
    "variableType": "ServiceModel",
    "mockedClass": "ServiceModel",
    "isReuseableMock": false,
    "mockPattern": "Creation:\n\u2014 Local Mock Creation in Test Case\n\nStubbing:\n\u2014 Test Case\n\nVerification:\n\u2014 None",
    "classContext": {
      "packageName": "org.apache.dubbo.rpc.filter",
      "filePath": "C:\\java tool\\Apache\\dubbo\\dubbo-rpc\\dubbo-rpc-api\\src\\test\\java\\org\\apache\\dubbo\\rpc\\filter\\ClassLoaderFilterTest.java",
      "className": "ClassLoaderFilterTest"
    },
    "statements": [
      {
        "type": "DECLARATION",
        "code": "ServiceModel serviceModel = Mockito.mock(ServiceModel.class);",
        "line": 67,
        "locate": "Test Case",
        "locationContext": {
          "methodName": "testInvoke",
          "methodAnnotations": [
            "@Test"
          ]
        }
      },
      {
        "type": "STUBBING",
        "code": "Mockito.when(serviceModel.getClassLoader()).thenReturn(cl);",
        "line": 68,
        "locate": "Test Case",
        "locationContext": {
          "methodName": "testInvoke",
          "methodAnnotations": [
            "@Test"
          ]
        }
      }
    ],
    "pattern_id": 1
  }
]