[
  {
    "variableName": "secondInvoker",
    "variableType": "ClusterInvoker",
    "mockedClass": "ClusterInvoker",
    "isReuseableMock": false,
    "mockPattern": "Creation:\n\u2014 Attribute Mock Creation\n\u2014 Lazy-init via Test Case\n\nStubbing:\n\u2014 None\n\nVerification:\n\u2014 None",
    "classContext": {
      "packageName": "org.apache.dubbo.rpc.cluster.support.registry",
      "filePath": "C:\\java tool\\Apache\\dubbo\\dubbo-cluster\\src\\test\\java\\org\\apache\\dubbo\\rpc\\cluster\\support\\registry\\ZoneAwareClusterInvokerTest.java",
      "className": "ZoneAwareClusterInvokerTest"
    },
    "statements": [
      {
        "type": "FIELD_MOCK_CREATION",
        "code": "private ClusterInvoker secondInvoker = mock(ClusterInvoker.class);",
        "line": 45,
        "locate": "Attribute",
        "locationContext": {
          "methodName": "[FieldDeclaration]",
          "methodAnnotations": []
        }
      },
      {
        "type": "ASSIGNMENT",
        "code": "secondInvoker = (ClusterInvoker) Proxy.newProxyInstance(getClass().getClassLoader(), new Class<?>[] { ClusterInvoker.class }, (proxy, method, args) -> {\r\n    if (\"getUrl\".equals(method.getName())) {\r\n        return url;\r\n    }\r\n    if (\"getRegistryUrl\".equals(method.getName())) {\r\n        return registryUrl.addParameter(PREFERRED_KEY, true);\r\n    }\r\n    if (\"isAvailable\".equals(method.getName())) {\r\n        return true;\r\n    }\r\n    if (\"invoke\".equals(method.getName())) {\r\n        return new AppResponse(expectedValue);\r\n    }\r\n    return null;\r\n});",
        "line": 66,
        "locate": "Test Case",
        "locationContext": {
          "methodName": "testPreferredStrategy",
          "methodAnnotations": [
            "@Test"
          ]
        }
      },
      {
        "type": "ASSIGNMENT",
        "code": "secondInvoker = (ClusterInvoker) Proxy.newProxyInstance(getClass().getClassLoader(), new Class<?>[] { ClusterInvoker.class }, (proxy, method, args) -> {\r\n    if (\"getUrl\".equals(method.getName())) {\r\n        return url;\r\n    }\r\n    if (\"getRegistryUrl\".equals(method.getName())) {\r\n        return registryUrl.addParameter(ZONE_KEY, zoneKey);\r\n    }\r\n    if (\"isAvailable\".equals(method.getName())) {\r\n        return true;\r\n    }\r\n    if (\"invoke\".equals(method.getName())) {\r\n        return new AppResponse(expectedValue);\r\n    }\r\n    return null;\r\n});",
        "line": 111,
        "locate": "Test Case",
        "locationContext": {
          "methodName": "testRegistryZoneStrategy",
          "methodAnnotations": [
            "@Test"
          ]
        }
      },
      {
        "type": "ASSIGNMENT",
        "code": "secondInvoker = newUnexpectedInvoker();",
        "line": 155,
        "locate": "Test Case",
        "locationContext": {
          "methodName": "testRegistryZoneForceStrategy",
          "methodAnnotations": [
            "@Test"
          ]
        }
      }
    ],
    "pattern_id": 38
  },
  {
    "variableName": "firstInvoker",
    "variableType": "ClusterInvoker",
    "mockedClass": "ClusterInvoker",
    "isReuseableMock": false,
    "mockPattern": "Creation:\n\u2014 Attribute Mock Creation\n\u2014 Lazy-init via Test Case\n\nStubbing:\n\u2014 None\n\nVerification:\n\u2014 None",
    "classContext": {
      "packageName": "org.apache.dubbo.rpc.cluster.support.registry",
      "filePath": "C:\\java tool\\Apache\\dubbo\\dubbo-cluster\\src\\test\\java\\org\\apache\\dubbo\\rpc\\cluster\\support\\registry\\ZoneAwareClusterInvokerTest.java",
      "className": "ZoneAwareClusterInvokerTest"
    },
    "statements": [
      {
        "type": "FIELD_MOCK_CREATION",
        "code": "private ClusterInvoker firstInvoker = mock(ClusterInvoker.class);",
        "line": 44,
        "locate": "Attribute",
        "locationContext": {
          "methodName": "[FieldDeclaration]",
          "methodAnnotations": []
        }
      },
      {
        "type": "ASSIGNMENT",
        "code": "firstInvoker = newUnexpectedInvoker();",
        "line": 63,
        "locate": "Test Case",
        "locationContext": {
          "methodName": "testPreferredStrategy",
          "methodAnnotations": [
            "@Test"
          ]
        }
      },
      {
        "type": "ASSIGNMENT",
        "code": "firstInvoker = newUnexpectedInvoker();",
        "line": 108,
        "locate": "Test Case",
        "locationContext": {
          "methodName": "testRegistryZoneStrategy",
          "methodAnnotations": [
            "@Test"
          ]
        }
      },
      {
        "type": "ASSIGNMENT",
        "code": "firstInvoker = newUnexpectedInvoker();",
        "line": 154,
        "locate": "Test Case",
        "locationContext": {
          "methodName": "testRegistryZoneForceStrategy",
          "methodAnnotations": [
            "@Test"
          ]
        }
      }
    ],
    "pattern_id": 38
  },
  {
    "variableName": "thirdInvoker",
    "variableType": "ClusterInvoker",
    "mockedClass": "ClusterInvoker",
    "isReuseableMock": false,
    "mockPattern": "Creation:\n\u2014 Attribute Mock Creation\n\u2014 Lazy-init via Test Case\n\nStubbing:\n\u2014 None\n\nVerification:\n\u2014 None",
    "classContext": {
      "packageName": "org.apache.dubbo.rpc.cluster.support.registry",
      "filePath": "C:\\java tool\\Apache\\dubbo\\dubbo-cluster\\src\\test\\java\\org\\apache\\dubbo\\rpc\\cluster\\support\\registry\\ZoneAwareClusterInvokerTest.java",
      "className": "ZoneAwareClusterInvokerTest"
    },
    "statements": [
      {
        "type": "FIELD_MOCK_CREATION",
        "code": "private ClusterInvoker thirdInvoker = mock(ClusterInvoker.class);",
        "line": 46,
        "locate": "Attribute",
        "locationContext": {
          "methodName": "[FieldDeclaration]",
          "methodAnnotations": []
        }
      },
      {
        "type": "ASSIGNMENT",
        "code": "thirdInvoker = newUnexpectedInvoker();",
        "line": 64,
        "locate": "Test Case",
        "locationContext": {
          "methodName": "testPreferredStrategy",
          "methodAnnotations": [
            "@Test"
          ]
        }
      },
      {
        "type": "ASSIGNMENT",
        "code": "thirdInvoker = newUnexpectedInvoker();",
        "line": 109,
        "locate": "Test Case",
        "locationContext": {
          "methodName": "testRegistryZoneStrategy",
          "methodAnnotations": [
            "@Test"
          ]
        }
      },
      {
        "type": "ASSIGNMENT",
        "code": "thirdInvoker = newUnexpectedInvoker();",
        "line": 156,
        "locate": "Test Case",
        "locationContext": {
          "methodName": "testRegistryZoneForceStrategy",
          "methodAnnotations": [
            "@Test"
          ]
        }
      }
    ],
    "pattern_id": 38
  }
]