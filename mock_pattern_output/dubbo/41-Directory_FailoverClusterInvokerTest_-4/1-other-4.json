[
  {
    "variableName": "dic",
    "variableType": "Directory<FailoverClusterInvokerTest>",
    "mockedClass": "Directory",
    "isReuseableMock": false,
    "mockPattern": "Creation:\n\u2014 Declaration Attribute\n\u2014 Global Init in @Before\n\u2014 Lazy-init via Test Case\n\nStubbing:\n\u2014 @Before\n\u2014 Test Case\n\nVerification:\n\u2014 None",
    "classContext": {
      "packageName": "org.apache.dubbo.rpc.cluster.support",
      "filePath": "C:\\java tool\\Apache\\dubbo\\dubbo-cluster\\src\\test\\java\\org\\apache\\dubbo\\rpc\\cluster\\support\\FailoverClusterInvokerTest.java",
      "className": "FailoverClusterInvokerTest"
    },
    "statements": [
      {
        "type": "FIELD_DECLARATION",
        "code": "private Directory<FailoverClusterInvokerTest> dic;",
        "line": 63,
        "locate": "Attribute",
        "locationContext": {
          "methodName": "[FieldDeclaration]",
          "methodAnnotations": []
        }
      },
      {
        "type": "ASSIGNMENT",
        "code": "dic = mock(Directory.class);",
        "line": 71,
        "locate": "@Before",
        "locationContext": {
          "methodName": "setUp",
          "methodAnnotations": [
            "@BeforeEach"
          ]
        }
      },
      {
        "type": "STUBBING",
        "code": "given(dic.getUrl()).willReturn(url);",
        "line": 73,
        "locate": "@Before",
        "locationContext": {
          "methodName": "setUp",
          "methodAnnotations": [
            "@BeforeEach"
          ]
        }
      },
      {
        "type": "STUBBING",
        "code": "given(dic.getConsumerUrl()).willReturn(url);",
        "line": 74,
        "locate": "@Before",
        "locationContext": {
          "methodName": "setUp",
          "methodAnnotations": [
            "@BeforeEach"
          ]
        }
      },
      {
        "type": "STUBBING",
        "code": "given(dic.list(invocation)).willReturn(invokers);",
        "line": 75,
        "locate": "@Before",
        "locationContext": {
          "methodName": "setUp",
          "methodAnnotations": [
            "@BeforeEach"
          ]
        }
      },
      {
        "type": "STUBBING",
        "code": "given(dic.getInterface()).willReturn(FailoverClusterInvokerTest.class);",
        "line": 76,
        "locate": "@Before",
        "locationContext": {
          "methodName": "setUp",
          "methodAnnotations": [
            "@BeforeEach"
          ]
        }
      },
      {
        "type": "ASSIGNMENT",
        "code": "dic = mock(Directory.class);",
        "line": 254,
        "locate": "Test Case",
        "locationContext": {
          "methodName": "testNoInvoke",
          "methodAnnotations": [
            "@Test"
          ]
        }
      },
      {
        "type": "STUBBING",
        "code": "given(dic.getUrl()).willReturn(url);",
        "line": 256,
        "locate": "Test Case",
        "locationContext": {
          "methodName": "testNoInvoke",
          "methodAnnotations": [
            "@Test"
          ]
        }
      },
      {
        "type": "STUBBING",
        "code": "given(dic.getConsumerUrl()).willReturn(url);",
        "line": 257,
        "locate": "Test Case",
        "locationContext": {
          "methodName": "testNoInvoke",
          "methodAnnotations": [
            "@Test"
          ]
        }
      },
      {
        "type": "STUBBING",
        "code": "given(dic.list(invocation)).willReturn(null);",
        "line": 258,
        "locate": "Test Case",
        "locationContext": {
          "methodName": "testNoInvoke",
          "methodAnnotations": [
            "@Test"
          ]
        }
      },
      {
        "type": "STUBBING",
        "code": "given(dic.getInterface()).willReturn(FailoverClusterInvokerTest.class);",
        "line": 259,
        "locate": "Test Case",
        "locationContext": {
          "methodName": "testNoInvoke",
          "methodAnnotations": [
            "@Test"
          ]
        }
      }
    ],
    "pattern_id": 33
  },
  {
    "variableName": "dic",
    "variableType": "Directory<FailoverClusterInvokerTest>",
    "mockedClass": "Directory",
    "isReuseableMock": false,
    "mockPattern": "Creation:\n\u2014 Declaration Attribute\n\u2014 Global Init in @Before\n\u2014 Lazy-init via Test Case\n\nStubbing:\n\u2014 @Before\n\u2014 Test Case\n\nVerification:\n\u2014 None",
    "classContext": {
      "packageName": "org.apache.dubbo.rpc.cluster.support",
      "filePath": "C:\\java tool\\Apache\\dubbo\\dubbo-cluster\\src\\test\\java\\org\\apache\\dubbo\\rpc\\cluster\\support\\FailoverClusterInvokerTest.java",
      "className": "FailoverClusterInvokerTest"
    },
    "statements": [
      {
        "type": "FIELD_DECLARATION",
        "code": "private Directory<FailoverClusterInvokerTest> dic;",
        "line": 63,
        "locate": "Attribute",
        "locationContext": {
          "methodName": "[FieldDeclaration]",
          "methodAnnotations": []
        }
      },
      {
        "type": "ASSIGNMENT",
        "code": "dic = mock(Directory.class);",
        "line": 71,
        "locate": "@Before",
        "locationContext": {
          "methodName": "setUp",
          "methodAnnotations": [
            "@BeforeEach"
          ]
        }
      },
      {
        "type": "STUBBING",
        "code": "given(dic.getUrl()).willReturn(url);",
        "line": 73,
        "locate": "@Before",
        "locationContext": {
          "methodName": "setUp",
          "methodAnnotations": [
            "@BeforeEach"
          ]
        }
      },
      {
        "type": "STUBBING",
        "code": "given(dic.getConsumerUrl()).willReturn(url);",
        "line": 74,
        "locate": "@Before",
        "locationContext": {
          "methodName": "setUp",
          "methodAnnotations": [
            "@BeforeEach"
          ]
        }
      },
      {
        "type": "STUBBING",
        "code": "given(dic.list(invocation)).willReturn(invokers);",
        "line": 75,
        "locate": "@Before",
        "locationContext": {
          "methodName": "setUp",
          "methodAnnotations": [
            "@BeforeEach"
          ]
        }
      },
      {
        "type": "STUBBING",
        "code": "given(dic.getInterface()).willReturn(FailoverClusterInvokerTest.class);",
        "line": 76,
        "locate": "@Before",
        "locationContext": {
          "methodName": "setUp",
          "methodAnnotations": [
            "@BeforeEach"
          ]
        }
      },
      {
        "type": "ASSIGNMENT",
        "code": "dic = mock(Directory.class);",
        "line": 254,
        "locate": "Test Case",
        "locationContext": {
          "methodName": "testNoInvoke",
          "methodAnnotations": [
            "@Test"
          ]
        }
      },
      {
        "type": "STUBBING",
        "code": "given(dic.getUrl()).willReturn(url);",
        "line": 256,
        "locate": "Test Case",
        "locationContext": {
          "methodName": "testNoInvoke",
          "methodAnnotations": [
            "@Test"
          ]
        }
      },
      {
        "type": "STUBBING",
        "code": "given(dic.getConsumerUrl()).willReturn(url);",
        "line": 257,
        "locate": "Test Case",
        "locationContext": {
          "methodName": "testNoInvoke",
          "methodAnnotations": [
            "@Test"
          ]
        }
      },
      {
        "type": "STUBBING",
        "code": "given(dic.list(invocation)).willReturn(null);",
        "line": 258,
        "locate": "Test Case",
        "locationContext": {
          "methodName": "testNoInvoke",
          "methodAnnotations": [
            "@Test"
          ]
        }
      },
      {
        "type": "STUBBING",
        "code": "given(dic.getInterface()).willReturn(FailoverClusterInvokerTest.class);",
        "line": 259,
        "locate": "Test Case",
        "locationContext": {
          "methodName": "testNoInvoke",
          "methodAnnotations": [
            "@Test"
          ]
        }
      }
    ],
    "pattern_id": 33
  },
  {
    "variableName": "dic",
    "variableType": "Directory<FailoverClusterInvokerTest>",
    "mockedClass": "Directory",
    "isReuseableMock": false,
    "mockPattern": "Creation:\n\u2014 Declaration Attribute\n\u2014 Global Init in @Before\n\u2014 Lazy-init via Test Case\n\nStubbing:\n\u2014 @Before\n\u2014 Test Case\n\nVerification:\n\u2014 None",
    "classContext": {
      "packageName": "org.apache.dubbo.rpc.cluster.support",
      "filePath": "C:\\java tool\\Apache\\dubbo\\dubbo-cluster\\src\\test\\java\\org\\apache\\dubbo\\rpc\\cluster\\support\\FailoverClusterInvokerTest.java",
      "className": "FailoverClusterInvokerTest"
    },
    "statements": [
      {
        "type": "FIELD_DECLARATION",
        "code": "private Directory<FailoverClusterInvokerTest> dic;",
        "line": 63,
        "locate": "Attribute",
        "locationContext": {
          "methodName": "[FieldDeclaration]",
          "methodAnnotations": []
        }
      },
      {
        "type": "ASSIGNMENT",
        "code": "dic = mock(Directory.class);",
        "line": 71,
        "locate": "@Before",
        "locationContext": {
          "methodName": "setUp",
          "methodAnnotations": [
            "@BeforeEach"
          ]
        }
      },
      {
        "type": "STUBBING",
        "code": "given(dic.getUrl()).willReturn(url);",
        "line": 73,
        "locate": "@Before",
        "locationContext": {
          "methodName": "setUp",
          "methodAnnotations": [
            "@BeforeEach"
          ]
        }
      },
      {
        "type": "STUBBING",
        "code": "given(dic.getConsumerUrl()).willReturn(url);",
        "line": 74,
        "locate": "@Before",
        "locationContext": {
          "methodName": "setUp",
          "methodAnnotations": [
            "@BeforeEach"
          ]
        }
      },
      {
        "type": "STUBBING",
        "code": "given(dic.list(invocation)).willReturn(invokers);",
        "line": 75,
        "locate": "@Before",
        "locationContext": {
          "methodName": "setUp",
          "methodAnnotations": [
            "@BeforeEach"
          ]
        }
      },
      {
        "type": "STUBBING",
        "code": "given(dic.getInterface()).willReturn(FailoverClusterInvokerTest.class);",
        "line": 76,
        "locate": "@Before",
        "locationContext": {
          "methodName": "setUp",
          "methodAnnotations": [
            "@BeforeEach"
          ]
        }
      },
      {
        "type": "ASSIGNMENT",
        "code": "dic = mock(Directory.class);",
        "line": 254,
        "locate": "Test Case",
        "locationContext": {
          "methodName": "testNoInvoke",
          "methodAnnotations": [
            "@Test"
          ]
        }
      },
      {
        "type": "STUBBING",
        "code": "given(dic.getUrl()).willReturn(url);",
        "line": 256,
        "locate": "Test Case",
        "locationContext": {
          "methodName": "testNoInvoke",
          "methodAnnotations": [
            "@Test"
          ]
        }
      },
      {
        "type": "STUBBING",
        "code": "given(dic.getConsumerUrl()).willReturn(url);",
        "line": 257,
        "locate": "Test Case",
        "locationContext": {
          "methodName": "testNoInvoke",
          "methodAnnotations": [
            "@Test"
          ]
        }
      },
      {
        "type": "STUBBING",
        "code": "given(dic.list(invocation)).willReturn(null);",
        "line": 258,
        "locate": "Test Case",
        "locationContext": {
          "methodName": "testNoInvoke",
          "methodAnnotations": [
            "@Test"
          ]
        }
      },
      {
        "type": "STUBBING",
        "code": "given(dic.getInterface()).willReturn(FailoverClusterInvokerTest.class);",
        "line": 259,
        "locate": "Test Case",
        "locationContext": {
          "methodName": "testNoInvoke",
          "methodAnnotations": [
            "@Test"
          ]
        }
      }
    ],
    "pattern_id": 33
  },
  {
    "variableName": "dic",
    "variableType": "Directory<FailoverClusterInvokerTest>",
    "mockedClass": "Directory",
    "isReuseableMock": false,
    "mockPattern": "Creation:\n\u2014 Declaration Attribute\n\u2014 Global Init in @Before\n\u2014 Lazy-init via Test Case\n\nStubbing:\n\u2014 @Before\n\u2014 Test Case\n\nVerification:\n\u2014 None",
    "classContext": {
      "packageName": "org.apache.dubbo.rpc.cluster.support",
      "filePath": "C:\\java tool\\Apache\\dubbo\\dubbo-cluster\\src\\test\\java\\org\\apache\\dubbo\\rpc\\cluster\\support\\FailoverClusterInvokerTest.java",
      "className": "FailoverClusterInvokerTest"
    },
    "statements": [
      {
        "type": "FIELD_DECLARATION",
        "code": "private Directory<FailoverClusterInvokerTest> dic;",
        "line": 63,
        "locate": "Attribute",
        "locationContext": {
          "methodName": "[FieldDeclaration]",
          "methodAnnotations": []
        }
      },
      {
        "type": "ASSIGNMENT",
        "code": "dic = mock(Directory.class);",
        "line": 71,
        "locate": "@Before",
        "locationContext": {
          "methodName": "setUp",
          "methodAnnotations": [
            "@BeforeEach"
          ]
        }
      },
      {
        "type": "STUBBING",
        "code": "given(dic.getUrl()).willReturn(url);",
        "line": 73,
        "locate": "@Before",
        "locationContext": {
          "methodName": "setUp",
          "methodAnnotations": [
            "@BeforeEach"
          ]
        }
      },
      {
        "type": "STUBBING",
        "code": "given(dic.getConsumerUrl()).willReturn(url);",
        "line": 74,
        "locate": "@Before",
        "locationContext": {
          "methodName": "setUp",
          "methodAnnotations": [
            "@BeforeEach"
          ]
        }
      },
      {
        "type": "STUBBING",
        "code": "given(dic.list(invocation)).willReturn(invokers);",
        "line": 75,
        "locate": "@Before",
        "locationContext": {
          "methodName": "setUp",
          "methodAnnotations": [
            "@BeforeEach"
          ]
        }
      },
      {
        "type": "STUBBING",
        "code": "given(dic.getInterface()).willReturn(FailoverClusterInvokerTest.class);",
        "line": 76,
        "locate": "@Before",
        "locationContext": {
          "methodName": "setUp",
          "methodAnnotations": [
            "@BeforeEach"
          ]
        }
      },
      {
        "type": "ASSIGNMENT",
        "code": "dic = mock(Directory.class);",
        "line": 254,
        "locate": "Test Case",
        "locationContext": {
          "methodName": "testNoInvoke",
          "methodAnnotations": [
            "@Test"
          ]
        }
      },
      {
        "type": "STUBBING",
        "code": "given(dic.getUrl()).willReturn(url);",
        "line": 256,
        "locate": "Test Case",
        "locationContext": {
          "methodName": "testNoInvoke",
          "methodAnnotations": [
            "@Test"
          ]
        }
      },
      {
        "type": "STUBBING",
        "code": "given(dic.getConsumerUrl()).willReturn(url);",
        "line": 257,
        "locate": "Test Case",
        "locationContext": {
          "methodName": "testNoInvoke",
          "methodAnnotations": [
            "@Test"
          ]
        }
      },
      {
        "type": "STUBBING",
        "code": "given(dic.list(invocation)).willReturn(null);",
        "line": 258,
        "locate": "Test Case",
        "locationContext": {
          "methodName": "testNoInvoke",
          "methodAnnotations": [
            "@Test"
          ]
        }
      },
      {
        "type": "STUBBING",
        "code": "given(dic.getInterface()).willReturn(FailoverClusterInvokerTest.class);",
        "line": 259,
        "locate": "Test Case",
        "locationContext": {
          "methodName": "testNoInvoke",
          "methodAnnotations": [
            "@Test"
          ]
        }
      }
    ],
    "pattern_id": 33
  }
]