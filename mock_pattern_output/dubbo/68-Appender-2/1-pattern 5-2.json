[
  {
    "variableName": "appender2",
    "variableType": "Appender",
    "mockedClass": "Appender",
    "isReuseableMock": "Fully Localized",
    "mockPattern": "Creation:\n\u2014 Local Mock Creation in Test Case\n\nStubbing:\n\u2014 None\n\nVerification:\n\u2014 Test Case",
    "classContext": {
      "packageName": "org.apache.dubbo.rpc.filter",
      "filePath": "C:\\java tool\\Apache\\dubbo\\dubbo-rpc\\dubbo-rpc-api\\src\\test\\java\\org\\apache\\dubbo\\rpc\\filter\\AccessLogFilterTest.java",
      "className": "AccessLogFilterTest"
    },
    "statements": [
      {
        "type": "DECLARATION",
        "code": "Appender appender2 = mock(Appender.class);",
        "line": 116,
        "locate": "Test Case",
        "locationContext": {
          "methodName": "testCustom",
          "methodAnnotations": [
            "@Test"
          ]
        }
      },
      {
        "type": "VERIFICATION",
        "code": "verify(appender2, times(2)).doAppend(argument.capture());",
        "line": 128,
        "locate": "Test Case",
        "locationContext": {
          "methodName": "testCustom",
          "methodAnnotations": [
            "@Test"
          ]
        }
      }
    ],
    "pattern_id": 5
  },
  {
    "variableName": "appender",
    "variableType": "Appender",
    "mockedClass": "Appender",
    "isReuseableMock": "Fully Localized",
    "mockPattern": "Creation:\n\u2014 Local Mock Creation in Test Case\n\nStubbing:\n\u2014 None\n\nVerification:\n\u2014 Test Case",
    "classContext": {
      "packageName": "org.apache.dubbo.rpc.filter",
      "filePath": "C:\\java tool\\Apache\\dubbo\\dubbo-rpc\\dubbo-rpc-api\\src\\test\\java\\org\\apache\\dubbo\\rpc\\filter\\AccessLogFilterTest.java",
      "className": "AccessLogFilterTest"
    },
    "statements": [
      {
        "type": "DECLARATION",
        "code": "Appender appender = mock(Appender.class);",
        "line": 91,
        "locate": "Test Case",
        "locationContext": {
          "methodName": "testCustom",
          "methodAnnotations": [
            "@Test"
          ]
        }
      },
      {
        "type": "VERIFICATION",
        "code": "verify(appender, times(2)).doAppend(argument.capture());",
        "line": 103,
        "locate": "Test Case",
        "locationContext": {
          "methodName": "testCustom",
          "methodAnnotations": [
            "@Test"
          ]
        }
      }
    ],
    "pattern_id": 5
  }
]