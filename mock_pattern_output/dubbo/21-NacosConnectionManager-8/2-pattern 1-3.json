[
  {
    "variableName": "connectionManager",
    "variableType": "NacosConnectionManager",
    "mockedClass": "NacosConnectionManager",
    "isReuseableMock": false,
    "mockPattern": "Creation:\n\u2014 Local Mock Creation in Test Case\n\nStubbing:\n\u2014 Test Case\n\nVerification:\n\u2014 None",
    "classContext": {
      "packageName": "org.apache.dubbo.registry.nacos",
      "filePath": "C:\\java tool\\Apache\\dubbo\\dubbo-registry\\dubbo-registry-nacos\\src\\test\\java\\org\\apache\\dubbo\\registry\\nacos\\NacosNamingServiceWrapperTest.java",
      "className": "NacosNamingServiceWrapperTest"
    },
    "statements": [
      {
        "type": "DECLARATION",
        "code": "NacosConnectionManager connectionManager = Mockito.mock(NacosConnectionManager.class);",
        "line": 40,
        "locate": "Test Case",
        "locationContext": {
          "methodName": "testSubscribe",
          "methodAnnotations": [
            "@Test"
          ]
        }
      },
      {
        "type": "STUBBING",
        "code": "Mockito.when(connectionManager.getNamingService()).thenReturn(namingService);",
        "line": 42,
        "locate": "Test Case",
        "locationContext": {
          "methodName": "testSubscribe",
          "methodAnnotations": [
            "@Test"
          ]
        }
      }
    ],
    "pattern_id": 1
  },
  {
    "variableName": "connectionManager",
    "variableType": "NacosConnectionManager",
    "mockedClass": "NacosConnectionManager",
    "isReuseableMock": false,
    "mockPattern": "Creation:\n\u2014 Local Mock Creation in Test Case\n\nStubbing:\n\u2014 Test Case\n\nVerification:\n\u2014 None",
    "classContext": {
      "packageName": "org.apache.dubbo.registry.nacos",
      "filePath": "C:\\java tool\\Apache\\dubbo\\dubbo-registry\\dubbo-registry-nacos\\src\\test\\java\\org\\apache\\dubbo\\registry\\nacos\\NacosNamingServiceWrapperTest.java",
      "className": "NacosNamingServiceWrapperTest"
    },
    "statements": [
      {
        "type": "DECLARATION",
        "code": "NacosConnectionManager connectionManager = Mockito.mock(NacosConnectionManager.class);",
        "line": 65,
        "locate": "Test Case",
        "locationContext": {
          "methodName": "testSubscribeMultiManager",
          "methodAnnotations": [
            "@Test"
          ]
        }
      },
      {
        "type": "STUBBING",
        "code": "Mockito.when(connectionManager.getNamingService()).thenReturn(namingService1);",
        "line": 72,
        "locate": "Test Case",
        "locationContext": {
          "methodName": "testSubscribeMultiManager",
          "methodAnnotations": [
            "@Test"
          ]
        }
      },
      {
        "type": "STUBBING",
        "code": "Mockito.when(connectionManager.getNamingService()).thenReturn(namingService2);",
        "line": 76,
        "locate": "Test Case",
        "locationContext": {
          "methodName": "testSubscribeMultiManager",
          "methodAnnotations": [
            "@Test"
          ]
        }
      }
    ],
    "pattern_id": 1
  },
  {
    "variableName": "connectionManager",
    "variableType": "NacosConnectionManager",
    "mockedClass": "NacosConnectionManager",
    "isReuseableMock": false,
    "mockPattern": "Creation:\n\u2014 Local Mock Creation in Test Case\n\nStubbing:\n\u2014 Test Case\n\nVerification:\n\u2014 None",
    "classContext": {
      "packageName": "org.apache.dubbo.registry.nacos",
      "filePath": "C:\\java tool\\Apache\\dubbo\\dubbo-registry\\dubbo-registry-nacos\\src\\test\\java\\org\\apache\\dubbo\\registry\\nacos\\NacosNamingServiceWrapperTest.java",
      "className": "NacosNamingServiceWrapperTest"
    },
    "statements": [
      {
        "type": "DECLARATION",
        "code": "NacosConnectionManager connectionManager = Mockito.mock(NacosConnectionManager.class);",
        "line": 558,
        "locate": "Test Case",
        "locationContext": {
          "methodName": "testConcurrency",
          "methodAnnotations": [
            "@Test"
          ]
        }
      },
      {
        "type": "STUBBING",
        "code": "Mockito.when(connectionManager.getNamingService()).thenReturn(namingService);",
        "line": 563,
        "locate": "Test Case",
        "locationContext": {
          "methodName": "testConcurrency",
          "methodAnnotations": [
            "@Test"
          ]
        }
      }
    ],
    "pattern_id": 1
  }
]