[
  {
    "variableName": "invocation",
    "variableType": "Invocation",
    "mockedClass": "Invocation",
    "isReuseableMock": false,
    "mockPattern": "Creation:\n\u2014 Local Mock Creation in Test Case\n\nStubbing:\n\u2014 None\n\nVerification:\n\u2014 Test Case",
    "classContext": {
      "packageName": "org.apache.dubbo.auth.filter",
      "filePath": "C:\\java tool\\Apache\\dubbo\\dubbo-plugin\\dubbo-auth\\src\\test\\java\\org\\apache\\dubbo\\auth\\filter\\ConsumerSignFilterTest.java",
      "className": "ConsumerSignFilterTest"
    },
    "statements": [
      {
        "type": "DECLARATION",
        "code": "Invocation invocation = mock(Invocation.class);",
        "line": 42,
        "locate": "Test Case",
        "locationContext": {
          "methodName": "testAuthDisabled",
          "methodAnnotations": [
            "@Test"
          ]
        }
      },
      {
        "type": "VERIFICATION",
        "code": "verify(invocation, never()).setAttachment(eq(Constants.REQUEST_SIGNATURE_KEY), anyString());",
        "line": 46,
        "locate": "Test Case",
        "locationContext": {
          "methodName": "testAuthDisabled",
          "methodAnnotations": [
            "@Test"
          ]
        }
      }
    ],
    "pattern_id": 5
  },
  {
    "variableName": "invocation",
    "variableType": "Invocation",
    "mockedClass": "Invocation",
    "isReuseableMock": false,
    "mockPattern": "Creation:\n\u2014 Local Mock Creation in Test Case\n\nStubbing:\n\u2014 None\n\nVerification:\n\u2014 Test Case",
    "classContext": {
      "packageName": "org.apache.dubbo.auth.filter",
      "filePath": "C:\\java tool\\Apache\\dubbo\\dubbo-plugin\\dubbo-auth\\src\\test\\java\\org\\apache\\dubbo\\auth\\filter\\ConsumerSignFilterTest.java",
      "className": "ConsumerSignFilterTest"
    },
    "statements": [
      {
        "type": "DECLARATION",
        "code": "Invocation invocation = mock(Invocation.class);",
        "line": 57,
        "locate": "Test Case",
        "locationContext": {
          "methodName": "testAuthEnabled",
          "methodAnnotations": [
            "@Test"
          ]
        }
      },
      {
        "type": "VERIFICATION",
        "code": "verify(invocation, times(1)).setAttachment(eq(Constants.REQUEST_SIGNATURE_KEY), anyString());",
        "line": 61,
        "locate": "Test Case",
        "locationContext": {
          "methodName": "testAuthEnabled",
          "methodAnnotations": [
            "@Test"
          ]
        }
      }
    ],
    "pattern_id": 5
  },
  {
    "variableName": "invocation",
    "variableType": "Invocation",
    "mockedClass": "RpcInvocation",
    "isReuseableMock": false,
    "mockPattern": "Creation:\n\u2014 Local Mock Creation in Test Case\n\nStubbing:\n\u2014 None\n\nVerification:\n\u2014 Test Case",
    "classContext": {
      "packageName": "org.apache.dubbo.auth.filter",
      "filePath": "C:\\java tool\\Apache\\dubbo\\dubbo-plugin\\dubbo-auth\\src\\test\\java\\org\\apache\\dubbo\\auth\\filter\\ProviderAuthFilterTest.java",
      "className": "ProviderAuthFilterTest"
    },
    "statements": [
      {
        "type": "DECLARATION",
        "code": "Invocation invocation = mock(RpcInvocation.class);",
        "line": 62,
        "locate": "Test Case",
        "locationContext": {
          "methodName": "testAuthEnabled",
          "methodAnnotations": [
            "@Test"
          ]
        }
      },
      {
        "type": "VERIFICATION",
        "code": "verify(invocation, atLeastOnce()).getAttachment(anyString());",
        "line": 66,
        "locate": "Test Case",
        "locationContext": {
          "methodName": "testAuthEnabled",
          "methodAnnotations": [
            "@Test"
          ]
        }
      }
    ],
    "pattern_id": 5
  }
]