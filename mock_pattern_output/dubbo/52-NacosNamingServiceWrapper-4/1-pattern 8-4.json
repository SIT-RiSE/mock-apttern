[
  {
    "variableName": "namingServiceWrapper",
    "variableType": "NacosNamingServiceWrapper",
    "mockedClass": "NacosNamingServiceWrapper",
    "isReuseableMock": false,
    "mockPattern": "Creation:\n\u2014 Attribute Mock Creation\n\nStubbing:\n\u2014 Test Case\n\nVerification:\n\u2014 Test Case",
    "classContext": {
      "packageName": "org.apache.dubbo.registry.nacos",
      "filePath": "C:\\java tool\\Apache\\dubbo\\dubbo-registry\\dubbo-registry-nacos\\src\\test\\java\\org\\apache\\dubbo\\registry\\nacos\\NacosServiceDiscoveryTest.java",
      "className": "NacosServiceDiscoveryTest"
    },
    "statements": [
      {
        "type": "FIELD_DECLARATION",
        "code": "private NacosNamingServiceWrapper namingServiceWrapper;",
        "line": 70,
        "locate": "Attribute",
        "locationContext": {
          "methodName": "[FieldDeclaration]",
          "methodAnnotations": []
        }
      },
      {
        "type": "ASSIGNMENT",
        "code": "namingServiceWrapper = mock(NacosNamingServiceWrapper.class);",
        "line": 127,
        "locate": "@Before",
        "locationContext": {
          "methodName": "init",
          "methodAnnotations": [
            "@BeforeEach"
          ]
        }
      },
      {
        "type": "VERIFICATION",
        "code": "verify(namingServiceWrapper, times(1)).registerInstance(any(), eq(group), instanceCaptor.capture());",
        "line": 144,
        "locate": "Test Case",
        "locationContext": {
          "methodName": "testDoRegister",
          "methodAnnotations": [
            "@Test"
          ]
        }
      },
      {
        "type": "VERIFICATION",
        "code": "verify(namingServiceWrapper, times(1)).deregisterInstance(any(), eq(group), instanceCaptor.capture());",
        "line": 164,
        "locate": "Test Case",
        "locationContext": {
          "methodName": "testDoUnRegister",
          "methodAnnotations": [
            "@Test"
          ]
        }
      },
      {
        "type": "VERIFICATION",
        "code": "verify(namingServiceWrapper, times(1)).registerInstance(any(), eq(group), instance.capture());",
        "line": 180,
        "locate": "Test Case",
        "locationContext": {
          "methodName": "testGetServices",
          "methodAnnotations": [
            "@Test"
          ]
        }
      },
      {
        "type": "STUBBING",
        "code": "when(namingServiceWrapper.getServicesOfServer(anyInt(), anyInt(), eq(group))).thenReturn(result);",
        "line": 189,
        "locate": "Test Case",
        "locationContext": {
          "methodName": "testGetServices",
          "methodAnnotations": [
            "@Test"
          ]
        }
      }
    ],
    "pattern_id": 8
  },
  {
    "variableName": "namingServiceWrapper",
    "variableType": "NacosNamingServiceWrapper",
    "mockedClass": "NacosNamingServiceWrapper",
    "isReuseableMock": false,
    "mockPattern": "Creation:\n\u2014 Attribute Mock Creation\n\nStubbing:\n\u2014 Test Case\n\nVerification:\n\u2014 Test Case",
    "classContext": {
      "packageName": "org.apache.dubbo.registry.nacos",
      "filePath": "C:\\java tool\\Apache\\dubbo\\dubbo-registry\\dubbo-registry-nacos\\src\\test\\java\\org\\apache\\dubbo\\registry\\nacos\\NacosServiceDiscoveryTest.java",
      "className": "NacosServiceDiscoveryTest"
    },
    "statements": [
      {
        "type": "FIELD_DECLARATION",
        "code": "private NacosNamingServiceWrapper namingServiceWrapper;",
        "line": 70,
        "locate": "Attribute",
        "locationContext": {
          "methodName": "[FieldDeclaration]",
          "methodAnnotations": []
        }
      },
      {
        "type": "ASSIGNMENT",
        "code": "namingServiceWrapper = mock(NacosNamingServiceWrapper.class);",
        "line": 127,
        "locate": "@Before",
        "locationContext": {
          "methodName": "init",
          "methodAnnotations": [
            "@BeforeEach"
          ]
        }
      },
      {
        "type": "VERIFICATION",
        "code": "verify(namingServiceWrapper, times(1)).registerInstance(any(), eq(group), instanceCaptor.capture());",
        "line": 144,
        "locate": "Test Case",
        "locationContext": {
          "methodName": "testDoRegister",
          "methodAnnotations": [
            "@Test"
          ]
        }
      },
      {
        "type": "VERIFICATION",
        "code": "verify(namingServiceWrapper, times(1)).deregisterInstance(any(), eq(group), instanceCaptor.capture());",
        "line": 164,
        "locate": "Test Case",
        "locationContext": {
          "methodName": "testDoUnRegister",
          "methodAnnotations": [
            "@Test"
          ]
        }
      },
      {
        "type": "VERIFICATION",
        "code": "verify(namingServiceWrapper, times(1)).registerInstance(any(), eq(group), instance.capture());",
        "line": 180,
        "locate": "Test Case",
        "locationContext": {
          "methodName": "testGetServices",
          "methodAnnotations": [
            "@Test"
          ]
        }
      },
      {
        "type": "STUBBING",
        "code": "when(namingServiceWrapper.getServicesOfServer(anyInt(), anyInt(), eq(group))).thenReturn(result);",
        "line": 189,
        "locate": "Test Case",
        "locationContext": {
          "methodName": "testGetServices",
          "methodAnnotations": [
            "@Test"
          ]
        }
      }
    ],
    "pattern_id": 8
  },
  {
    "variableName": "namingServiceWrapper",
    "variableType": "NacosNamingServiceWrapper",
    "mockedClass": "NacosNamingServiceWrapper",
    "isReuseableMock": false,
    "mockPattern": "Creation:\n\u2014 Attribute Mock Creation\n\nStubbing:\n\u2014 Test Case\n\nVerification:\n\u2014 Test Case",
    "classContext": {
      "packageName": "org.apache.dubbo.registry.nacos",
      "filePath": "C:\\java tool\\Apache\\dubbo\\dubbo-registry\\dubbo-registry-nacos\\src\\test\\java\\org\\apache\\dubbo\\registry\\nacos\\NacosServiceDiscoveryTest.java",
      "className": "NacosServiceDiscoveryTest"
    },
    "statements": [
      {
        "type": "FIELD_DECLARATION",
        "code": "private NacosNamingServiceWrapper namingServiceWrapper;",
        "line": 70,
        "locate": "Attribute",
        "locationContext": {
          "methodName": "[FieldDeclaration]",
          "methodAnnotations": []
        }
      },
      {
        "type": "ASSIGNMENT",
        "code": "namingServiceWrapper = mock(NacosNamingServiceWrapper.class);",
        "line": 127,
        "locate": "@Before",
        "locationContext": {
          "methodName": "init",
          "methodAnnotations": [
            "@BeforeEach"
          ]
        }
      },
      {
        "type": "VERIFICATION",
        "code": "verify(namingServiceWrapper, times(1)).registerInstance(any(), eq(group), instanceCaptor.capture());",
        "line": 144,
        "locate": "Test Case",
        "locationContext": {
          "methodName": "testDoRegister",
          "methodAnnotations": [
            "@Test"
          ]
        }
      },
      {
        "type": "VERIFICATION",
        "code": "verify(namingServiceWrapper, times(1)).deregisterInstance(any(), eq(group), instanceCaptor.capture());",
        "line": 164,
        "locate": "Test Case",
        "locationContext": {
          "methodName": "testDoUnRegister",
          "methodAnnotations": [
            "@Test"
          ]
        }
      },
      {
        "type": "VERIFICATION",
        "code": "verify(namingServiceWrapper, times(1)).registerInstance(any(), eq(group), instance.capture());",
        "line": 180,
        "locate": "Test Case",
        "locationContext": {
          "methodName": "testGetServices",
          "methodAnnotations": [
            "@Test"
          ]
        }
      },
      {
        "type": "STUBBING",
        "code": "when(namingServiceWrapper.getServicesOfServer(anyInt(), anyInt(), eq(group))).thenReturn(result);",
        "line": 189,
        "locate": "Test Case",
        "locationContext": {
          "methodName": "testGetServices",
          "methodAnnotations": [
            "@Test"
          ]
        }
      }
    ],
    "pattern_id": 8
  },
  {
    "variableName": "namingServiceWrapper",
    "variableType": "NacosNamingServiceWrapper",
    "mockedClass": "NacosNamingServiceWrapper",
    "isReuseableMock": false,
    "mockPattern": "Creation:\n\u2014 Attribute Mock Creation\n\nStubbing:\n\u2014 Test Case\n\nVerification:\n\u2014 Test Case",
    "classContext": {
      "packageName": "org.apache.dubbo.registry.nacos",
      "filePath": "C:\\java tool\\Apache\\dubbo\\dubbo-registry\\dubbo-registry-nacos\\src\\test\\java\\org\\apache\\dubbo\\registry\\nacos\\NacosServiceDiscoveryTest.java",
      "className": "NacosServiceDiscoveryTest"
    },
    "statements": [
      {
        "type": "FIELD_DECLARATION",
        "code": "private NacosNamingServiceWrapper namingServiceWrapper;",
        "line": 70,
        "locate": "Attribute",
        "locationContext": {
          "methodName": "[FieldDeclaration]",
          "methodAnnotations": []
        }
      },
      {
        "type": "ASSIGNMENT",
        "code": "namingServiceWrapper = mock(NacosNamingServiceWrapper.class);",
        "line": 127,
        "locate": "@Before",
        "locationContext": {
          "methodName": "init",
          "methodAnnotations": [
            "@BeforeEach"
          ]
        }
      },
      {
        "type": "VERIFICATION",
        "code": "verify(namingServiceWrapper, times(1)).registerInstance(any(), eq(group), instanceCaptor.capture());",
        "line": 144,
        "locate": "Test Case",
        "locationContext": {
          "methodName": "testDoRegister",
          "methodAnnotations": [
            "@Test"
          ]
        }
      },
      {
        "type": "VERIFICATION",
        "code": "verify(namingServiceWrapper, times(1)).deregisterInstance(any(), eq(group), instanceCaptor.capture());",
        "line": 164,
        "locate": "Test Case",
        "locationContext": {
          "methodName": "testDoUnRegister",
          "methodAnnotations": [
            "@Test"
          ]
        }
      },
      {
        "type": "VERIFICATION",
        "code": "verify(namingServiceWrapper, times(1)).registerInstance(any(), eq(group), instance.capture());",
        "line": 180,
        "locate": "Test Case",
        "locationContext": {
          "methodName": "testGetServices",
          "methodAnnotations": [
            "@Test"
          ]
        }
      },
      {
        "type": "STUBBING",
        "code": "when(namingServiceWrapper.getServicesOfServer(anyInt(), anyInt(), eq(group))).thenReturn(result);",
        "line": 189,
        "locate": "Test Case",
        "locationContext": {
          "methodName": "testGetServices",
          "methodAnnotations": [
            "@Test"
          ]
        }
      }
    ],
    "pattern_id": 8
  }
]