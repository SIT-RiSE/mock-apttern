[
  {
    "variableName": "dic",
    "variableType": "Directory<FailbackClusterInvokerTest>",
    "mockedClass": "Directory",
    "isReuseableMock": false,
    "mockPattern": "Creation:\n\u2014 Local Mock Creation in Test Case\n\nStubbing:\n\u2014 Test Case\n\nVerification:\n\u2014 None",
    "classContext": {
      "packageName": "org.apache.dubbo.rpc.cluster.support",
      "filePath": "C:\\java tool\\Apache\\dubbo\\dubbo-cluster\\src\\test\\java\\org\\apache\\dubbo\\rpc\\cluster\\support\\FailbackClusterInvokerTest.java",
      "className": "FailbackClusterInvokerTest"
    },
    "statements": [
      {
        "type": "DECLARATION",
        "code": "Directory<FailbackClusterInvokerTest> dic = mock(Directory.class);",
        "line": 108,
        "locate": "Test Case",
        "locationContext": {
          "methodName": "testInvokeWithIllegalRetriesParam",
          "methodAnnotations": [
            "@Test"
          ]
        }
      },
      {
        "type": "STUBBING",
        "code": "given(dic.getUrl()).willReturn(url);",
        "line": 109,
        "locate": "Test Case",
        "locationContext": {
          "methodName": "testInvokeWithIllegalRetriesParam",
          "methodAnnotations": [
            "@Test"
          ]
        }
      },
      {
        "type": "STUBBING",
        "code": "given(dic.getConsumerUrl()).willReturn(url);",
        "line": 110,
        "locate": "Test Case",
        "locationContext": {
          "methodName": "testInvokeWithIllegalRetriesParam",
          "methodAnnotations": [
            "@Test"
          ]
        }
      },
      {
        "type": "STUBBING",
        "code": "given(dic.getInterface()).willReturn(FailbackClusterInvokerTest.class);",
        "line": 111,
        "locate": "Test Case",
        "locationContext": {
          "methodName": "testInvokeWithIllegalRetriesParam",
          "methodAnnotations": [
            "@Test"
          ]
        }
      },
      {
        "type": "STUBBING",
        "code": "given(dic.list(invocation)).willReturn(invokers);",
        "line": 112,
        "locate": "Test Case",
        "locationContext": {
          "methodName": "testInvokeWithIllegalRetriesParam",
          "methodAnnotations": [
            "@Test"
          ]
        }
      }
    ],
    "pattern_id": 1
  },
  {
    "variableName": "dic",
    "variableType": "Directory<FailbackClusterInvokerTest>",
    "mockedClass": "Directory",
    "isReuseableMock": false,
    "mockPattern": "Creation:\n\u2014 Local Mock Creation in Test Case\n\nStubbing:\n\u2014 Test Case\n\nVerification:\n\u2014 None",
    "classContext": {
      "packageName": "org.apache.dubbo.rpc.cluster.support",
      "filePath": "C:\\java tool\\Apache\\dubbo\\dubbo-cluster\\src\\test\\java\\org\\apache\\dubbo\\rpc\\cluster\\support\\FailbackClusterInvokerTest.java",
      "className": "FailbackClusterInvokerTest"
    },
    "statements": [
      {
        "type": "DECLARATION",
        "code": "Directory<FailbackClusterInvokerTest> dic = mock(Directory.class);",
        "line": 124,
        "locate": "Test Case",
        "locationContext": {
          "methodName": "testInvokeWithIllegalFailbacktasksParam",
          "methodAnnotations": [
            "@Test"
          ]
        }
      },
      {
        "type": "STUBBING",
        "code": "given(dic.getUrl()).willReturn(url);",
        "line": 125,
        "locate": "Test Case",
        "locationContext": {
          "methodName": "testInvokeWithIllegalFailbacktasksParam",
          "methodAnnotations": [
            "@Test"
          ]
        }
      },
      {
        "type": "STUBBING",
        "code": "given(dic.getConsumerUrl()).willReturn(url);",
        "line": 126,
        "locate": "Test Case",
        "locationContext": {
          "methodName": "testInvokeWithIllegalFailbacktasksParam",
          "methodAnnotations": [
            "@Test"
          ]
        }
      },
      {
        "type": "STUBBING",
        "code": "given(dic.getInterface()).willReturn(FailbackClusterInvokerTest.class);",
        "line": 127,
        "locate": "Test Case",
        "locationContext": {
          "methodName": "testInvokeWithIllegalFailbacktasksParam",
          "methodAnnotations": [
            "@Test"
          ]
        }
      },
      {
        "type": "STUBBING",
        "code": "given(dic.list(invocation)).willReturn(invokers);",
        "line": 128,
        "locate": "Test Case",
        "locationContext": {
          "methodName": "testInvokeWithIllegalFailbacktasksParam",
          "methodAnnotations": [
            "@Test"
          ]
        }
      }
    ],
    "pattern_id": 1
  }
]