[
  {
    "variableName": "vlanDao",
    "variableType": "VlanDao",
    "mockedClass": "VlanDao",
    "isReuseableMock": null,
    "mockPattern": "Creation:\n\u2014 Local Mock Creation in @Before\n\nStubbing:\n\u2014 None\n\nVerification:\n\u2014 None",
    "classContext": {
      "packageName": "org.apache.cloudstack.network.contrail.model",
      "filePath": "C:\\java tool\\Apache\\cloudstack\\plugins\\network-elements\\juniper-contrail\\src\\test\\java\\org\\apache\\cloudstack\\network\\contrail\\model\\VirtualNetworkModelTest.java",
      "className": "VirtualNetworkModelTest"
    },
    "statements": [
      {
        "type": "DECLARATION",
        "code": "VlanDao vlanDao = mock(VlanDao.class);",
        "line": 72,
        "locate": "@Before",
        "locationContext": {
          "methodName": "setUp",
          "methodAnnotations": [
            "@Override",
            "@Before"
          ]
        }
      }
    ],
    "pattern_id": 18
  },
  {
    "variableName": "_vlanDao",
    "variableType": "VlanDao",
    "mockedClass": "VlanDao",
    "isReuseableMock": null,
    "mockPattern": "Creation:\n\u2014 Attribute Mock Creation\n\nStubbing:\n\u2014 @Before\n\u2014 Test Case\n\u2014 Other Methods\n\nVerification:\n\u2014 None",
    "classContext": {
      "packageName": "com.cloud.configuration",
      "filePath": "C:\\java tool\\Apache\\cloudstack\\server\\src\\test\\java\\com\\cloud\\configuration\\ConfigurationManagerTest.java",
      "className": "ConfigurationManagerTest"
    },
    "statements": [
      {
        "type": "FIELD_MOCK_CREATION",
        "code": "@Mock\r\nVlanDao _vlanDao;",
        "line": 161,
        "locate": "Attribute",
        "locationContext": {
          "methodName": "[FieldDeclaration]",
          "methodAnnotations": [
            "@Mock"
          ]
        }
      },
      {
        "type": "STUBBING",
        "code": "when(configurationMgr._vlanDao.acquireInLockTable(anyLong(), anyInt())).thenReturn(vlan);",
        "line": 240,
        "locate": "@Before",
        "locationContext": {
          "methodName": "setup",
          "methodAnnotations": [
            "@Before"
          ]
        }
      },
      {
        "type": "STUBBING",
        "code": "when(configurationMgr._vlanDao.findById(anyLong())).thenReturn(vlan);",
        "line": 327,
        "locate": "Test Case",
        "locationContext": {
          "methodName": "runDedicatePublicIpRangePostiveTest",
          "methodAnnotations": []
        }
      },
      {
        "type": "STUBBING",
        "code": "when(configurationMgr._vlanDao.findById(anyLong())).thenReturn(null);",
        "line": 353,
        "locate": "Other Methods",
        "locationContext": {
          "methodName": "runDedicatePublicIpRangeInvalidRange",
          "methodAnnotations": []
        }
      },
      {
        "type": "STUBBING",
        "code": "when(configurationMgr._vlanDao.findById(anyLong())).thenReturn(vlan);",
        "line": 366,
        "locate": "Other Methods",
        "locationContext": {
          "methodName": "runDedicatePublicIpRangeDedicatedRange",
          "methodAnnotations": []
        }
      },
      {
        "type": "STUBBING",
        "code": "when(configurationMgr._vlanDao.findById(anyLong())).thenReturn(vlan);",
        "line": 395,
        "locate": "Other Methods",
        "locationContext": {
          "methodName": "runDedicatePublicIpRangeInvalidZone",
          "methodAnnotations": []
        }
      },
      {
        "type": "STUBBING",
        "code": "when(configurationMgr._vlanDao.findById(anyLong())).thenReturn(vlan);",
        "line": 421,
        "locate": "Other Methods",
        "locationContext": {
          "methodName": "runDedicatePublicIpRangeIPAddressAllocated",
          "methodAnnotations": []
        }
      },
      {
        "type": "STUBBING",
        "code": "when(configurationMgr._vlanDao.findById(anyLong())).thenReturn(vlan);",
        "line": 448,
        "locate": "Test Case",
        "locationContext": {
          "methodName": "runReleasePublicIpRangePostiveTest1",
          "methodAnnotations": []
        }
      },
      {
        "type": "STUBBING",
        "code": "when(configurationMgr._vlanDao.findById(anyLong())).thenReturn(vlan);",
        "line": 472,
        "locate": "Test Case",
        "locationContext": {
          "methodName": "runReleasePublicIpRangePostiveTest2",
          "methodAnnotations": []
        }
      },
      {
        "type": "STUBBING",
        "code": "when(configurationMgr._vlanDao.releaseFromLockTable(anyLong())).thenReturn(true);",
        "line": 490,
        "locate": "Test Case",
        "locationContext": {
          "methodName": "runReleasePublicIpRangePostiveTest2",
          "methodAnnotations": []
        }
      },
      {
        "type": "STUBBING",
        "code": "when(configurationMgr._vlanDao.findById(anyLong())).thenReturn(null);",
        "line": 506,
        "locate": "Other Methods",
        "locationContext": {
          "methodName": "runReleasePublicIpRangeInvalidIpRange",
          "methodAnnotations": []
        }
      },
      {
        "type": "STUBBING",
        "code": "when(configurationMgr._vlanDao.findById(anyLong())).thenReturn(vlan);",
        "line": 519,
        "locate": "Other Methods",
        "locationContext": {
          "methodName": "runReleaseNonDedicatedPublicIpRange",
          "methodAnnotations": []
        }
      }
    ],
    "pattern_id": 28
  },
  {
    "variableName": "_vlanDao",
    "variableType": "VlanDao",
    "mockedClass": "VlanDao",
    "isReuseableMock": null,
    "mockPattern": "Creation:\n\u2014 Attribute Mock Creation\n\nStubbing:\n\u2014 @Before\n\u2014 Test Case\n\u2014 Other Methods\n\nVerification:\n\u2014 None",
    "classContext": {
      "packageName": "com.cloud.configuration",
      "filePath": "C:\\java tool\\Apache\\cloudstack\\server\\src\\test\\java\\com\\cloud\\configuration\\ConfigurationManagerTest.java",
      "className": "ConfigurationManagerTest"
    },
    "statements": [
      {
        "type": "FIELD_MOCK_CREATION",
        "code": "@Mock\r\nVlanDao _vlanDao;",
        "line": 161,
        "locate": "Attribute",
        "locationContext": {
          "methodName": "[FieldDeclaration]",
          "methodAnnotations": [
            "@Mock"
          ]
        }
      },
      {
        "type": "STUBBING",
        "code": "when(configurationMgr._vlanDao.acquireInLockTable(anyLong(), anyInt())).thenReturn(vlan);",
        "line": 240,
        "locate": "@Before",
        "locationContext": {
          "methodName": "setup",
          "methodAnnotations": [
            "@Before"
          ]
        }
      },
      {
        "type": "STUBBING",
        "code": "when(configurationMgr._vlanDao.findById(anyLong())).thenReturn(vlan);",
        "line": 327,
        "locate": "Test Case",
        "locationContext": {
          "methodName": "runDedicatePublicIpRangePostiveTest",
          "methodAnnotations": []
        }
      },
      {
        "type": "STUBBING",
        "code": "when(configurationMgr._vlanDao.findById(anyLong())).thenReturn(null);",
        "line": 353,
        "locate": "Other Methods",
        "locationContext": {
          "methodName": "runDedicatePublicIpRangeInvalidRange",
          "methodAnnotations": []
        }
      },
      {
        "type": "STUBBING",
        "code": "when(configurationMgr._vlanDao.findById(anyLong())).thenReturn(vlan);",
        "line": 366,
        "locate": "Other Methods",
        "locationContext": {
          "methodName": "runDedicatePublicIpRangeDedicatedRange",
          "methodAnnotations": []
        }
      },
      {
        "type": "STUBBING",
        "code": "when(configurationMgr._vlanDao.findById(anyLong())).thenReturn(vlan);",
        "line": 395,
        "locate": "Other Methods",
        "locationContext": {
          "methodName": "runDedicatePublicIpRangeInvalidZone",
          "methodAnnotations": []
        }
      },
      {
        "type": "STUBBING",
        "code": "when(configurationMgr._vlanDao.findById(anyLong())).thenReturn(vlan);",
        "line": 421,
        "locate": "Other Methods",
        "locationContext": {
          "methodName": "runDedicatePublicIpRangeIPAddressAllocated",
          "methodAnnotations": []
        }
      },
      {
        "type": "STUBBING",
        "code": "when(configurationMgr._vlanDao.findById(anyLong())).thenReturn(vlan);",
        "line": 448,
        "locate": "Test Case",
        "locationContext": {
          "methodName": "runReleasePublicIpRangePostiveTest1",
          "methodAnnotations": []
        }
      },
      {
        "type": "STUBBING",
        "code": "when(configurationMgr._vlanDao.findById(anyLong())).thenReturn(vlan);",
        "line": 472,
        "locate": "Test Case",
        "locationContext": {
          "methodName": "runReleasePublicIpRangePostiveTest2",
          "methodAnnotations": []
        }
      },
      {
        "type": "STUBBING",
        "code": "when(configurationMgr._vlanDao.releaseFromLockTable(anyLong())).thenReturn(true);",
        "line": 490,
        "locate": "Test Case",
        "locationContext": {
          "methodName": "runReleasePublicIpRangePostiveTest2",
          "methodAnnotations": []
        }
      },
      {
        "type": "STUBBING",
        "code": "when(configurationMgr._vlanDao.findById(anyLong())).thenReturn(null);",
        "line": 506,
        "locate": "Other Methods",
        "locationContext": {
          "methodName": "runReleasePublicIpRangeInvalidIpRange",
          "methodAnnotations": []
        }
      },
      {
        "type": "STUBBING",
        "code": "when(configurationMgr._vlanDao.findById(anyLong())).thenReturn(vlan);",
        "line": 519,
        "locate": "Other Methods",
        "locationContext": {
          "methodName": "runReleaseNonDedicatedPublicIpRange",
          "methodAnnotations": []
        }
      }
    ],
    "pattern_id": 28
  },
  {
    "variableName": "_vlanDao",
    "variableType": "VlanDao",
    "mockedClass": "VlanDao",
    "isReuseableMock": null,
    "mockPattern": "Creation:\n\u2014 Attribute Mock Creation\n\nStubbing:\n\u2014 @Before\n\u2014 Test Case\n\u2014 Other Methods\n\nVerification:\n\u2014 None",
    "classContext": {
      "packageName": "com.cloud.configuration",
      "filePath": "C:\\java tool\\Apache\\cloudstack\\server\\src\\test\\java\\com\\cloud\\configuration\\ConfigurationManagerTest.java",
      "className": "ConfigurationManagerTest"
    },
    "statements": [
      {
        "type": "FIELD_MOCK_CREATION",
        "code": "@Mock\r\nVlanDao _vlanDao;",
        "line": 161,
        "locate": "Attribute",
        "locationContext": {
          "methodName": "[FieldDeclaration]",
          "methodAnnotations": [
            "@Mock"
          ]
        }
      },
      {
        "type": "STUBBING",
        "code": "when(configurationMgr._vlanDao.acquireInLockTable(anyLong(), anyInt())).thenReturn(vlan);",
        "line": 240,
        "locate": "@Before",
        "locationContext": {
          "methodName": "setup",
          "methodAnnotations": [
            "@Before"
          ]
        }
      },
      {
        "type": "STUBBING",
        "code": "when(configurationMgr._vlanDao.findById(anyLong())).thenReturn(vlan);",
        "line": 327,
        "locate": "Test Case",
        "locationContext": {
          "methodName": "runDedicatePublicIpRangePostiveTest",
          "methodAnnotations": []
        }
      },
      {
        "type": "STUBBING",
        "code": "when(configurationMgr._vlanDao.findById(anyLong())).thenReturn(null);",
        "line": 353,
        "locate": "Other Methods",
        "locationContext": {
          "methodName": "runDedicatePublicIpRangeInvalidRange",
          "methodAnnotations": []
        }
      },
      {
        "type": "STUBBING",
        "code": "when(configurationMgr._vlanDao.findById(anyLong())).thenReturn(vlan);",
        "line": 366,
        "locate": "Other Methods",
        "locationContext": {
          "methodName": "runDedicatePublicIpRangeDedicatedRange",
          "methodAnnotations": []
        }
      },
      {
        "type": "STUBBING",
        "code": "when(configurationMgr._vlanDao.findById(anyLong())).thenReturn(vlan);",
        "line": 395,
        "locate": "Other Methods",
        "locationContext": {
          "methodName": "runDedicatePublicIpRangeInvalidZone",
          "methodAnnotations": []
        }
      },
      {
        "type": "STUBBING",
        "code": "when(configurationMgr._vlanDao.findById(anyLong())).thenReturn(vlan);",
        "line": 421,
        "locate": "Other Methods",
        "locationContext": {
          "methodName": "runDedicatePublicIpRangeIPAddressAllocated",
          "methodAnnotations": []
        }
      },
      {
        "type": "STUBBING",
        "code": "when(configurationMgr._vlanDao.findById(anyLong())).thenReturn(vlan);",
        "line": 448,
        "locate": "Test Case",
        "locationContext": {
          "methodName": "runReleasePublicIpRangePostiveTest1",
          "methodAnnotations": []
        }
      },
      {
        "type": "STUBBING",
        "code": "when(configurationMgr._vlanDao.findById(anyLong())).thenReturn(vlan);",
        "line": 472,
        "locate": "Test Case",
        "locationContext": {
          "methodName": "runReleasePublicIpRangePostiveTest2",
          "methodAnnotations": []
        }
      },
      {
        "type": "STUBBING",
        "code": "when(configurationMgr._vlanDao.releaseFromLockTable(anyLong())).thenReturn(true);",
        "line": 490,
        "locate": "Test Case",
        "locationContext": {
          "methodName": "runReleasePublicIpRangePostiveTest2",
          "methodAnnotations": []
        }
      },
      {
        "type": "STUBBING",
        "code": "when(configurationMgr._vlanDao.findById(anyLong())).thenReturn(null);",
        "line": 506,
        "locate": "Other Methods",
        "locationContext": {
          "methodName": "runReleasePublicIpRangeInvalidIpRange",
          "methodAnnotations": []
        }
      },
      {
        "type": "STUBBING",
        "code": "when(configurationMgr._vlanDao.findById(anyLong())).thenReturn(vlan);",
        "line": 519,
        "locate": "Other Methods",
        "locationContext": {
          "methodName": "runReleaseNonDedicatedPublicIpRange",
          "methodAnnotations": []
        }
      }
    ],
    "pattern_id": 28
  },
  {
    "variableName": "vlanDao",
    "variableType": "VlanDao",
    "mockedClass": "VlanDao",
    "isReuseableMock": null,
    "mockPattern": "Creation:\n\u2014 Attribute Mock Creation\n\nStubbing:\n\u2014 Test Case\n\u2014 Helper Method\n\nVerification:\n\u2014 None",
    "classContext": {
      "packageName": "com.cloud.network",
      "filePath": "C:\\java tool\\Apache\\cloudstack\\server\\src\\test\\java\\com\\cloud\\network\\Ipv6ServiceImplTest.java",
      "className": "Ipv6ServiceImplTest"
    },
    "statements": [
      {
        "type": "FIELD_MOCK_CREATION",
        "code": "@Mock\r\nVlanDao vlanDao;",
        "line": 105,
        "locate": "Attribute",
        "locationContext": {
          "methodName": "[FieldDeclaration]",
          "methodAnnotations": [
            "@Mock"
          ]
        }
      },
      {
        "type": "STUBBING",
        "code": "Mockito.when(vlanDao.listIpv6RangeByZoneIdAndVlanId(1L, \"vlan\")).thenReturn(new ArrayList<>());",
        "line": 399,
        "locate": "Test Case",
        "locationContext": {
          "methodName": "testNewErrorAssignPublicIpv6ToNetwork",
          "methodAnnotations": [
            "@Test"
          ]
        }
      },
      {
        "type": "STUBBING",
        "code": "Mockito.when(vlanDao.listIpv6RangeByZoneIdAndVlanId(Mockito.anyLong(), Mockito.anyString())).thenReturn(vlans);",
        "line": 423,
        "locate": "Helper Method",
        "locationContext": {
          "methodName": "prepareMocksForPublicIpv6",
          "methodAnnotations": []
        }
      },
      {
        "type": "STUBBING",
        "code": "Mockito.when(vlanDao.findById(Mockito.anyLong())).thenReturn(vlanVO);",
        "line": 604,
        "locate": "Test Case",
        "locationContext": {
          "methodName": "testCheckNetworkIpv6UpgradeForNoIpv6Vlan",
          "methodAnnotations": [
            "@Test"
          ]
        }
      },
      {
        "type": "STUBBING",
        "code": "Mockito.when(vlanDao.listIpv6RangeByZoneIdAndVlanId(Mockito.anyLong(), Mockito.anyString())).thenReturn(new ArrayList<>());",
        "line": 605,
        "locate": "Test Case",
        "locationContext": {
          "methodName": "testCheckNetworkIpv6UpgradeForNoIpv6Vlan",
          "methodAnnotations": [
            "@Test"
          ]
        }
      },
      {
        "type": "STUBBING",
        "code": "Mockito.when(vlanDao.findById(Mockito.anyLong())).thenReturn(vlanVO);",
        "line": 622,
        "locate": "Test Case",
        "locationContext": {
          "methodName": "testCheckNetworkIpv6UpgradeForNetwork",
          "methodAnnotations": [
            "@Test"
          ]
        }
      },
      {
        "type": "STUBBING",
        "code": "Mockito.when(vlanDao.listIpv6RangeByZoneIdAndVlanId(zoneId, vlan)).thenReturn(List.of(vlanVO));",
        "line": 623,
        "locate": "Test Case",
        "locationContext": {
          "methodName": "testCheckNetworkIpv6UpgradeForNetwork",
          "methodAnnotations": [
            "@Test"
          ]
        }
      }
    ],
    "pattern_id": 30
  }
]