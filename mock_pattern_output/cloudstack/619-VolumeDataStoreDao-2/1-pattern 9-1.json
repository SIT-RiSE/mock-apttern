[
  {
    "variableName": "volumeDataStoreDaoMock",
    "variableType": "VolumeDataStoreDao",
    "mockedClass": "VolumeDataStoreDao",
    "isReuseableMock": "Hybrid",
    "mockPattern": "Creation:\n\u2014 Attribute Mock Creation\n\nStubbing:\n\u2014 None\n\nVerification:\n\u2014 Test Case",
    "classContext": {
      "packageName": "org.apache.cloudstack.storage.volume",
      "filePath": "C:\\java tool\\Apache\\cloudstack\\engine\\storage\\volume\\src\\test\\java\\org\\apache\\cloudstack\\storage\\volume\\VolumeObjectTest.java",
      "className": "VolumeObjectTest"
    },
    "statements": [
      {
        "type": "FIELD_MOCK_CREATION",
        "code": "@Mock\r\nVolumeDataStoreDao volumeDataStoreDaoMock;",
        "line": 70,
        "locate": "Attribute",
        "locationContext": {
          "methodName": "[FieldDeclaration]",
          "methodAnnotations": [
            "@Mock"
          ]
        }
      },
      {
        "type": "VERIFICATION",
        "code": "Mockito.verify(volumeDataStoreDaoMock, Mockito.never()).findByStoreVolume(Mockito.anyLong(), Mockito.anyLong());",
        "line": 305,
        "locate": "Test Case",
        "locationContext": {
          "methodName": "validateUpdateRefCountDataStoreNullReturn",
          "methodAnnotations": [
            "@Test"
          ]
        }
      },
      {
        "type": "VERIFICATION",
        "code": "Mockito.verify(volumeDataStoreDaoMock, Mockito.never()).findByStoreVolume(Mockito.anyLong(), Mockito.anyLong());",
        "line": 316,
        "locate": "Test Case",
        "locationContext": {
          "methodName": "validateUpdateRefCountDataStoreIsNotImage",
          "methodAnnotations": [
            "@Test"
          ]
        }
      },
      {
        "type": "VERIFICATION",
        "code": "Mockito.verify(volumeDataStoreDaoMock, Mockito.times(2)).findByStoreVolume(Mockito.anyLong(), Mockito.anyLong());",
        "line": 330,
        "locate": "Test Case",
        "locationContext": {
          "methodName": "validateUpdateRefCountDataStoreIsImagerOrImageCacheIncreasingCount",
          "methodAnnotations": [
            "@Test"
          ]
        }
      },
      {
        "type": "VERIFICATION",
        "code": "Mockito.verify(volumeDataStoreDaoMock, Mockito.times(2)).findByStoreVolume(Mockito.anyLong(), Mockito.anyLong());",
        "line": 344,
        "locate": "Test Case",
        "locationContext": {
          "methodName": "validateUpdateRefCountDataStoreIsImagerOrImageCacheDecreasingCount",
          "methodAnnotations": [
            "@Test"
          ]
        }
      },
      {
        "type": "VERIFICATION",
        "code": "Mockito.verifyNoInteractions(dataStoreMock, volumeDataStoreDaoMock);",
        "line": 409,
        "locate": "Test Case",
        "locationContext": {
          "methodName": "validateHandleProcessEventAnswerDownloadAnswerIsPrimaryDataStore",
          "methodAnnotations": [
            "@Test"
          ]
        }
      },
      {
        "type": "VERIFICATION",
        "code": "Mockito.verify(volumeDataStoreDaoMock, Mockito.times(1)).findByStoreVolume(Mockito.anyLong(), Mockito.anyLong());",
        "line": 421,
        "locate": "Test Case",
        "locationContext": {
          "methodName": "validateHandleProcessEventAnswerDownloadAnswerIsNotPrimaryDataStore",
          "methodAnnotations": [
            "@Test"
          ]
        }
      },
      {
        "type": "VERIFICATION",
        "code": "Mockito.verify(volumeDataStoreDaoMock, Mockito.times(1)).update(Mockito.anyLong(), Mockito.any());",
        "line": 422,
        "locate": "Test Case",
        "locationContext": {
          "methodName": "validateHandleProcessEventAnswerDownloadAnswerIsNotPrimaryDataStore",
          "methodAnnotations": [
            "@Test"
          ]
        }
      },
      {
        "type": "VERIFICATION",
        "code": "Mockito.verify(volumeDataStoreDaoMock, Mockito.times(1)).findByStoreVolume(Mockito.anyLong(), Mockito.anyLong());",
        "line": 513,
        "locate": "Test Case",
        "locationContext": {
          "methodName": "validateHandleProcessEventCopyCmdAnswerNotPrimaryStoreDoNotSetSize",
          "methodAnnotations": [
            "@Test"
          ]
        }
      },
      {
        "type": "VERIFICATION",
        "code": "Mockito.verify(volumeDataStoreDaoMock, Mockito.times(1)).update(Mockito.anyLong(), Mockito.any());",
        "line": 515,
        "locate": "Test Case",
        "locationContext": {
          "methodName": "validateHandleProcessEventCopyCmdAnswerNotPrimaryStoreDoNotSetSize",
          "methodAnnotations": [
            "@Test"
          ]
        }
      },
      {
        "type": "VERIFICATION",
        "code": "Mockito.verify(volumeDataStoreDaoMock, Mockito.times(1)).findByStoreVolume(Mockito.anyLong(), Mockito.anyLong());",
        "line": 528,
        "locate": "Test Case",
        "locationContext": {
          "methodName": "validateHandleProcessEventCopyCmdAnswerNotPrimaryStoreSetSize",
          "methodAnnotations": [
            "@Test"
          ]
        }
      },
      {
        "type": "VERIFICATION",
        "code": "Mockito.verify(volumeDataStoreDaoMock, Mockito.times(1)).update(Mockito.anyLong(), Mockito.any());",
        "line": 530,
        "locate": "Test Case",
        "locationContext": {
          "methodName": "validateHandleProcessEventCopyCmdAnswerNotPrimaryStoreSetSize",
          "methodAnnotations": [
            "@Test"
          ]
        }
      }
    ],
    "pattern_id": 9
  }
]