[
  {
    "variableName": "usageVPNUserDaoMock",
    "variableType": "UsageVPNUserDao",
    "mockedClass": "UsageVPNUserDao",
    "isReuseableMock": "Hybrid",
    "mockPattern": "Creation:\n\u2014 Attribute Mock Creation\n\nStubbing:\n\u2014 None\n\nVerification:\n\u2014 Test Case",
    "classContext": {
      "packageName": "com.cloud.usage",
      "filePath": "C:\\java tool\\Apache\\cloudstack\\usage\\src\\test\\java\\com\\cloud\\usage\\UsageManagerImplTest.java",
      "className": "UsageManagerImplTest"
    },
    "statements": [
      {
        "type": "FIELD_MOCK_CREATION",
        "code": "@Mock\r\nprivate UsageVPNUserDao usageVPNUserDaoMock;",
        "line": 52,
        "locate": "Attribute",
        "locationContext": {
          "methodName": "[FieldDeclaration]",
          "methodAnnotations": [
            "@Mock"
          ]
        }
      },
      {
        "type": "VERIFICATION",
        "code": "Mockito.verify(usageVPNUserDaoMock, Mockito.never()).persist(Mockito.any(UsageVPNUserVO.class));",
        "line": 91,
        "locate": "Test Case",
        "locationContext": {
          "methodName": "createUsageVpnUserTestUserExits",
          "methodAnnotations": [
            "@Test"
          ]
        }
      },
      {
        "type": "VERIFICATION",
        "code": "Mockito.verify(usageVPNUserDaoMock, Mockito.times(1)).persist(Mockito.any(UsageVPNUserVO.class));",
        "line": 104,
        "locate": "Test Case",
        "locationContext": {
          "methodName": "createUsageVpnUserTestUserDoesNotExits",
          "methodAnnotations": [
            "@Test"
          ]
        }
      },
      {
        "type": "VERIFICATION",
        "code": "Mockito.verify(usageVPNUserDaoMock, Mockito.never()).update(Mockito.any(UsageVPNUserVO.class));",
        "line": 116,
        "locate": "Test Case",
        "locationContext": {
          "methodName": "deleteUsageVpnUserNoUserFound",
          "methodAnnotations": [
            "@Test"
          ]
        }
      },
      {
        "type": "VERIFICATION",
        "code": "Mockito.verify(usageVPNUserDaoMock, Mockito.times(1)).update(Mockito.any(UsageVPNUserVO.class));",
        "line": 129,
        "locate": "Test Case",
        "locationContext": {
          "methodName": "deleteUsageVpnUserOneUserFound",
          "methodAnnotations": [
            "@Test"
          ]
        }
      },
      {
        "type": "VERIFICATION",
        "code": "Mockito.verify(usageVPNUserDaoMock, Mockito.times(3)).update(Mockito.any(UsageVPNUserVO.class));",
        "line": 144,
        "locate": "Test Case",
        "locationContext": {
          "methodName": "deleteUsageVpnUserMultipleUsersFound",
          "methodAnnotations": [
            "@Test"
          ]
        }
      }
    ],
    "pattern_id": 9
  }
]