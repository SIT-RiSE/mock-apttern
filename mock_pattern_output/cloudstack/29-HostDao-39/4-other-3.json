[
  {
    "variableName": "nDao",
    "variableType": "HostDao",
    "mockedClass": "HostDao",
    "isReuseableMock": false,
    "mockPattern": "Creation:\n\u2014 Local Mock Creation in @Override\n\nStubbing:\n\u2014 None\n\nVerification:\n\u2014 None",
    "classContext": {
      "packageName": "org.apache.cloudstack.storage.test",
      "filePath": "C:\\java tool\\Apache\\cloudstack\\plugins\\storage\\volume\\solidfire\\src\\test\\java\\org\\apache\\cloudstack\\storage\\test\\ChildTestConfiguration.java",
      "className": "ChildTestConfiguration"
    },
    "statements": [
      {
        "type": "DECLARATION",
        "code": "HostDao nDao = Mockito.spy(dao);",
        "line": 33,
        "locate": "@Override",
        "locationContext": {
          "methodName": "hostDao",
          "methodAnnotations": [
            "@Override",
            "@Bean"
          ]
        }
      }
    ],
    "pattern_id": 37
  },
  {
    "variableName": "_hostDao",
    "variableType": "HostDao",
    "mockedClass": "HostDao",
    "isReuseableMock": false,
    "mockPattern": "Creation:\n\u2014 Attribute Mock Creation\n\nStubbing:\n\u2014 Helper Method\n\u2014 Test Case\n\nVerification:\n\u2014 None",
    "classContext": {
      "packageName": "com.cloud.network",
      "filePath": "C:\\java tool\\Apache\\cloudstack\\server\\src\\test\\java\\com\\cloud\\network\\ExternalLoadBalancerDeviceManagerImplTest.java",
      "className": "ExternalLoadBalancerDeviceManagerImplTest"
    },
    "statements": [
      {
        "type": "FIELD_MOCK_CREATION",
        "code": "@Mock\r\nHostDao _hostDao;",
        "line": 88,
        "locate": "Attribute",
        "locationContext": {
          "methodName": "[FieldDeclaration]",
          "methodAnnotations": [
            "@Mock"
          ]
        }
      },
      {
        "type": "STUBBING",
        "code": "Mockito.when(_hostDao.findById(Mockito.anyLong())).thenReturn(hostVo);",
        "line": 230,
        "locate": "Helper Method",
        "locationContext": {
          "methodName": "setupLBHealthChecksMocks",
          "methodAnnotations": []
        }
      },
      {
        "type": "STUBBING",
        "code": "Mockito.lenient().when(_hostDao.listByType(Host.Type.ExternalFirewall)).thenReturn(new ArrayList<HostVO>());",
        "line": 238,
        "locate": "Test Case",
        "locationContext": {
          "methodName": "testUsageTask",
          "methodAnnotations": [
            "@Test"
          ]
        }
      },
      {
        "type": "STUBBING",
        "code": "Mockito.lenient().when(_hostDao.listByType(Host.Type.ExternalLoadBalancer)).thenReturn(new ArrayList<HostVO>());",
        "line": 239,
        "locate": "Test Case",
        "locationContext": {
          "methodName": "testUsageTask",
          "methodAnnotations": [
            "@Test"
          ]
        }
      }
    ],
    "pattern_id": 26
  },
  {
    "variableName": "hostDao",
    "variableType": "HostDao",
    "mockedClass": "HostDao",
    "isReuseableMock": false,
    "mockPattern": "Creation:\n\u2014 Attribute Mock Creation\n\nStubbing:\n\u2014 Helper Method\n\u2014 Test Case\n\nVerification:\n\u2014 None",
    "classContext": {
      "packageName": "org.apache.cloudstack.agent.lb",
      "filePath": "C:\\java tool\\Apache\\cloudstack\\server\\src\\test\\java\\org\\apache\\cloudstack\\agent\\lb\\IndirectAgentLBServiceImplTest.java",
      "className": "IndirectAgentLBServiceImplTest"
    },
    "statements": [
      {
        "type": "FIELD_MOCK_CREATION",
        "code": "@Mock\r\nHostDao hostDao;",
        "line": 48,
        "locate": "Attribute",
        "locationContext": {
          "methodName": "[FieldDeclaration]",
          "methodAnnotations": [
            "@Mock"
          ]
        }
      },
      {
        "type": "STUBBING",
        "code": "when(hostDao.listAll()).thenReturn(Arrays.asList(host4, host2, host1, host3));",
        "line": 100,
        "locate": "Helper Method",
        "locationContext": {
          "methodName": "configureMocks",
          "methodAnnotations": []
        }
      },
      {
        "type": "STUBBING",
        "code": "when(hostDao.listAll()).thenReturn(null);",
        "line": 191,
        "locate": "Test Case",
        "locationContext": {
          "methodName": "testGetOrderedRunningHostIdsNullList",
          "methodAnnotations": [
            "@Test"
          ]
        }
      },
      {
        "type": "STUBBING",
        "code": "when(hostDao.listAll()).thenReturn(Arrays.asList(host4, host2, host1, host3));",
        "line": 197,
        "locate": "Test Case",
        "locationContext": {
          "methodName": "testGetOrderedRunningHostIdsOrderList",
          "methodAnnotations": [
            "@Test"
          ]
        }
      },
      {
        "type": "STUBBING",
        "code": "when(hostDao.listAll()).thenReturn(null);",
        "line": 204,
        "locate": "Test Case",
        "locationContext": {
          "methodName": "testGetHostsPerZoneNullHosts",
          "methodAnnotations": [
            "@Test"
          ]
        }
      }
    ],
    "pattern_id": 26
  }
]