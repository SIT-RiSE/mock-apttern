[
  {
    "variableName": "subscriberAtChildLevel",
    "variableType": "MessageSubscriber",
    "mockedClass": "MessageSubscriber",
    "isReuseableMock": null,
    "mockPattern": "Creation:\n\u2014 Local Mock Creation in Test Case\n\u2014 Local Assignment in Test Case\n\nStubbing:\n\u2014 None\n\nVerification:\n\u2014 Test Case",
    "classContext": {
      "packageName": "org.apache.cloudstack.messagebus",
      "filePath": "C:\\java tool\\Apache\\cloudstack\\framework\\ipc\\src\\test\\java\\org\\apache\\cloudstack\\messagebus\\TestMessageBus.java",
      "className": "TestMessageBus"
    },
    "statements": [
      {
        "type": "DECLARATION",
        "code": "MessageSubscriber subscriberAtChildLevel = new MessageSubscriber() {\r\n\r\n    @Override\r\n    public void onPublishMessage(String senderAddress, String subject, Object args) {\r\n        Assert.assertTrue(subject.equals(\"Host.123\"));\r\n    }\r\n};",
        "line": 84,
        "locate": "Test Case",
        "locationContext": {
          "methodName": "testMiscMatch",
          "methodAnnotations": [
            "@Test"
          ]
        }
      },
      {
        "type": "ASSIGNMENT",
        "code": "subscriberAtChildLevel = Mockito.spy(subscriberAtChildLevel);",
        "line": 92,
        "locate": "Test Case",
        "locationContext": {
          "methodName": "testMiscMatch",
          "methodAnnotations": [
            "@Test"
          ]
        }
      },
      {
        "type": "VERIFICATION",
        "code": "Mockito.verify(subscriberAtChildLevel).onPublishMessage(null, \"Host.123\", null);",
        "line": 105,
        "locate": "Test Case",
        "locationContext": {
          "methodName": "testMiscMatch",
          "methodAnnotations": [
            "@Test"
          ]
        }
      },
      {
        "type": "VERIFICATION",
        "code": "Mockito.verify(subscriberAtChildLevel).onPublishMessage(null, \"Host.123\", null);",
        "line": 114,
        "locate": "Test Case",
        "locationContext": {
          "methodName": "testMiscMatch",
          "methodAnnotations": [
            "@Test"
          ]
        }
      }
    ],
    "pattern_id": 16
  },
  {
    "variableName": "subscriberAtParentLevel",
    "variableType": "MessageSubscriber",
    "mockedClass": "MessageSubscriber",
    "isReuseableMock": null,
    "mockPattern": "Creation:\n\u2014 Local Mock Creation in Test Case\n\u2014 Local Assignment in Test Case\n\nStubbing:\n\u2014 None\n\nVerification:\n\u2014 Test Case",
    "classContext": {
      "packageName": "org.apache.cloudstack.messagebus",
      "filePath": "C:\\java tool\\Apache\\cloudstack\\framework\\ipc\\src\\test\\java\\org\\apache\\cloudstack\\messagebus\\TestMessageBus.java",
      "className": "TestMessageBus"
    },
    "statements": [
      {
        "type": "DECLARATION",
        "code": "MessageSubscriber subscriberAtParentLevel = new MessageSubscriber() {\r\n\r\n    @Override\r\n    public void onPublishMessage(String senderAddress, String subject, Object args) {\r\n        Assert.assertTrue(subject.startsWith((\"Host\")) || subject.startsWith(\"VM\"));\r\n    }\r\n};",
        "line": 77,
        "locate": "Test Case",
        "locationContext": {
          "methodName": "testMiscMatch",
          "methodAnnotations": [
            "@Test"
          ]
        }
      },
      {
        "type": "ASSIGNMENT",
        "code": "subscriberAtParentLevel = Mockito.spy(subscriberAtParentLevel);",
        "line": 91,
        "locate": "Test Case",
        "locationContext": {
          "methodName": "testMiscMatch",
          "methodAnnotations": [
            "@Test"
          ]
        }
      },
      {
        "type": "VERIFICATION",
        "code": "Mockito.verify(subscriberAtParentLevel).onPublishMessage(null, \"Host.123\", null);",
        "line": 102,
        "locate": "Test Case",
        "locationContext": {
          "methodName": "testMiscMatch",
          "methodAnnotations": [
            "@Test"
          ]
        }
      },
      {
        "type": "VERIFICATION",
        "code": "Mockito.verify(subscriberAtParentLevel).onPublishMessage(null, \"Host.321\", null);",
        "line": 103,
        "locate": "Test Case",
        "locationContext": {
          "methodName": "testMiscMatch",
          "methodAnnotations": [
            "@Test"
          ]
        }
      },
      {
        "type": "VERIFICATION",
        "code": "Mockito.verify(subscriberAtParentLevel).onPublishMessage(null, \"VM.123\", null);",
        "line": 104,
        "locate": "Test Case",
        "locationContext": {
          "methodName": "testMiscMatch",
          "methodAnnotations": [
            "@Test"
          ]
        }
      },
      {
        "type": "VERIFICATION",
        "code": "Mockito.verify(subscriberAtParentLevel, Mockito.times(0)).onPublishMessage(null, \"Host.123\", null);",
        "line": 115,
        "locate": "Test Case",
        "locationContext": {
          "methodName": "testMiscMatch",
          "methodAnnotations": [
            "@Test"
          ]
        }
      },
      {
        "type": "VERIFICATION",
        "code": "Mockito.verify(subscriberAtParentLevel, Mockito.times(0)).onPublishMessage(null, \"VM.123\", null);",
        "line": 116,
        "locate": "Test Case",
        "locationContext": {
          "methodName": "testMiscMatch",
          "methodAnnotations": [
            "@Test"
          ]
        }
      }
    ],
    "pattern_id": 16
  }
]