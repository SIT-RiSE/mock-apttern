[
  {
    "variableName": "mapStringStoragePoolTypeMock",
    "variableType": "Map<String,Storage.StoragePoolType>",
    "mockedClass": "Map<String,Storage.StoragePoolType>",
    "isReuseableMock": false,
    "mockPattern": "Creation:\n\u2014 Attribute Mock Creation\n\nStubbing:\n\u2014 None\n\nVerification:\n\u2014 Test Case",
    "classContext": {
      "packageName": "org.apache.cloudstack.storage.motion",
      "filePath": "C:\\java tool\\Apache\\cloudstack\\engine\\storage\\datamotion\\src\\test\\java\\org\\apache\\cloudstack\\storage\\motion\\StorageSystemDataMotionStrategyTest.java",
      "className": "StorageSystemDataMotionStrategyTest"
    },
    "statements": [
      {
        "type": "FIELD_MOCK_CREATION",
        "code": "@Mock\r\nMap<String, Storage.StoragePoolType> mapStringStoragePoolTypeMock;",
        "line": 90,
        "locate": "Attribute",
        "locationContext": {
          "methodName": "[FieldDeclaration]",
          "methodAnnotations": [
            "@Mock"
          ]
        }
      },
      {
        "type": "VERIFICATION",
        "code": "Mockito.verifyNoMoreInteractions(mapStringStoragePoolTypeMock, sourceStoragePoolVoMock, destinationStoragePoolVoMock);",
        "line": 382,
        "locate": "Test Case",
        "locationContext": {
          "methodName": "validateAddSourcePoolToPoolsMapDestinationPoolIsManaged",
          "methodAnnotations": [
            "@Test"
          ]
        }
      },
      {
        "type": "VERIFICATION",
        "code": "Mockito.verifyNoMoreInteractions(mapStringStoragePoolTypeMock, sourceStoragePoolVoMock, destinationStoragePoolVoMock);",
        "line": 399,
        "locate": "Test Case",
        "locationContext": {
          "methodName": "validateAddSourcePoolToPoolsMapDestinationPoolIsNotNFS",
          "methodAnnotations": [
            "@Test"
          ]
        }
      },
      {
        "type": "VERIFICATION",
        "code": "Mockito.verify(mapStringStoragePoolTypeMock).containsKey(Mockito.anyString());",
        "line": 414,
        "locate": "Test Case",
        "locationContext": {
          "methodName": "validateAddSourcePoolToPoolsMapMapContainsKey",
          "methodAnnotations": [
            "@Test"
          ]
        }
      },
      {
        "type": "VERIFICATION",
        "code": "Mockito.verifyNoMoreInteractions(mapStringStoragePoolTypeMock, sourceStoragePoolVoMock, destinationStoragePoolVoMock);",
        "line": 415,
        "locate": "Test Case",
        "locationContext": {
          "methodName": "validateAddSourcePoolToPoolsMapMapContainsKey",
          "methodAnnotations": [
            "@Test"
          ]
        }
      },
      {
        "type": "VERIFICATION",
        "code": "Mockito.verify(mapStringStoragePoolTypeMock, times).containsKey(Mockito.anyString());",
        "line": 438,
        "locate": "Test Case",
        "locationContext": {
          "methodName": "validateAddSourcePoolToPoolsMapMapDoesNotContainsKey",
          "methodAnnotations": [
            "@Test"
          ]
        }
      },
      {
        "type": "VERIFICATION",
        "code": "Mockito.verify(mapStringStoragePoolTypeMock, times).put(Mockito.anyString(), Mockito.any());",
        "line": 440,
        "locate": "Test Case",
        "locationContext": {
          "methodName": "validateAddSourcePoolToPoolsMapMapDoesNotContainsKey",
          "methodAnnotations": [
            "@Test"
          ]
        }
      },
      {
        "type": "VERIFICATION",
        "code": "Mockito.verifyNoMoreInteractions(mapStringStoragePoolTypeMock, sourceStoragePoolVoMock, destinationStoragePoolVoMock);",
        "line": 441,
        "locate": "Test Case",
        "locationContext": {
          "methodName": "validateAddSourcePoolToPoolsMapMapDoesNotContainsKey",
          "methodAnnotations": [
            "@Test"
          ]
        }
      }
    ],
    "pattern_id": 9
  }
]