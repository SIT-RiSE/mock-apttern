[
  {
    "variableName": "userAccountDao",
    "variableType": "UserAccountDao",
    "mockedClass": "UserAccountDao",
    "isReuseableMock": false,
    "mockPattern": "Creation:\n\u2014 Attribute Mock Creation\n\nStubbing:\n\u2014 Test Case\n\nVerification:\n\u2014 None",
    "classContext": {
      "packageName": "org.apache.cloudstack.ldap",
      "filePath": "C:\\java tool\\Apache\\cloudstack\\plugins\\user-authenticators\\ldap\\src\\test\\java\\org\\apache\\cloudstack\\ldap\\LdapAuthenticatorTest.java",
      "className": "LdapAuthenticatorTest"
    },
    "statements": [
      {
        "type": "FIELD_MOCK_CREATION",
        "code": "@Mock\r\nUserAccountDao userAccountDao;",
        "line": 55,
        "locate": "Attribute",
        "locationContext": {
          "methodName": "[FieldDeclaration]",
          "methodAnnotations": [
            "@Mock"
          ]
        }
      },
      {
        "type": "STUBBING",
        "code": "lenient().when(userAccountDao.getUserAccount(username, domainId)).thenReturn(user);",
        "line": 78,
        "locate": "Test Case",
        "locationContext": {
          "methodName": "authenticateAsNativeUser",
          "methodAnnotations": [
            "@Test"
          ]
        }
      }
    ],
    "pattern_id": 4
  },
  {
    "variableName": "dao",
    "variableType": "UserAccountDao",
    "mockedClass": "UserAccountDao",
    "isReuseableMock": false,
    "mockPattern": "Creation:\n\u2014 Attribute Mock Creation\n\nStubbing:\n\u2014 Test Case\n\nVerification:\n\u2014 None",
    "classContext": {
      "packageName": "org.apache.cloudstack.auth",
      "filePath": "C:\\java tool\\Apache\\cloudstack\\plugins\\user-authenticators\\md5\\src\\test\\java\\org\\apache\\cloudstack\\auth\\MD5UserAuthenticatorTest.java",
      "className": "MD5UserAuthenticatorTest"
    },
    "statements": [
      {
        "type": "FIELD_MOCK_CREATION",
        "code": "@Mock\r\nUserAccountDao dao;",
        "line": 37,
        "locate": "Attribute",
        "locationContext": {
          "methodName": "[FieldDeclaration]",
          "methodAnnotations": [
            "@Mock"
          ]
        }
      },
      {
        "type": "STUBBING",
        "code": "Mockito.when(dao.getUserAccount(Mockito.anyString(), Mockito.anyLong())).thenReturn(account);",
        "line": 54,
        "locate": "Test Case",
        "locationContext": {
          "methodName": "authenticate",
          "methodAnnotations": [
            "@Test"
          ]
        }
      },
      {
        "type": "STUBBING",
        "code": "Mockito.when(dao.getUserAccount(Mockito.anyString(), Mockito.anyLong())).thenReturn(account);",
        "line": 67,
        "locate": "Test Case",
        "locationContext": {
          "methodName": "authenticateBadPass",
          "methodAnnotations": [
            "@Test"
          ]
        }
      },
      {
        "type": "STUBBING",
        "code": "Mockito.when(dao.getUserAccount(Mockito.anyString(), Mockito.anyLong())).thenReturn(null);",
        "line": 78,
        "locate": "Test Case",
        "locationContext": {
          "methodName": "authenticateBadUser",
          "methodAnnotations": [
            "@Test"
          ]
        }
      }
    ],
    "pattern_id": 4
  },
  {
    "variableName": "dao",
    "variableType": "UserAccountDao",
    "mockedClass": "UserAccountDao",
    "isReuseableMock": false,
    "mockPattern": "Creation:\n\u2014 Attribute Mock Creation\n\nStubbing:\n\u2014 Test Case\n\nVerification:\n\u2014 None",
    "classContext": {
      "packageName": "org.apache.cloudstack.server.auth",
      "filePath": "C:\\java tool\\Apache\\cloudstack\\plugins\\user-authenticators\\pbkdf2\\src\\test\\java\\org\\apache\\cloudstack\\server\\auth\\PBKD2UserAuthenticatorTest.java",
      "className": "PBKD2UserAuthenticatorTest"
    },
    "statements": [
      {
        "type": "FIELD_MOCK_CREATION",
        "code": "@Mock\r\nUserAccountDao dao;",
        "line": 34,
        "locate": "Attribute",
        "locationContext": {
          "methodName": "[FieldDeclaration]",
          "methodAnnotations": [
            "@Mock"
          ]
        }
      },
      {
        "type": "STUBBING",
        "code": "Mockito.when(dao.getUserAccount(Mockito.anyString(), Mockito.anyLong())).thenReturn(account);",
        "line": 58,
        "locate": "Test Case",
        "locationContext": {
          "methodName": "authenticateValidTest",
          "methodAnnotations": [
            "@Test"
          ]
        }
      },
      {
        "type": "STUBBING",
        "code": "Mockito.when(dao.getUserAccount(Mockito.anyString(), Mockito.anyLong())).thenReturn(account);",
        "line": 71,
        "locate": "Test Case",
        "locationContext": {
          "methodName": "authenticateInValidTest",
          "methodAnnotations": [
            "@Test"
          ]
        }
      }
    ],
    "pattern_id": 4
  },
  {
    "variableName": "userAccountDao",
    "variableType": "UserAccountDao",
    "mockedClass": "UserAccountDao",
    "isReuseableMock": false,
    "mockPattern": "Creation:\n\u2014 Attribute Mock Creation\n\nStubbing:\n\u2014 Test Case\n\nVerification:\n\u2014 None",
    "classContext": {
      "packageName": "org.apache.cloudstack",
      "filePath": "C:\\java tool\\Apache\\cloudstack\\plugins\\user-authenticators\\saml2\\src\\test\\java\\org\\apache\\cloudstack\\SAML2UserAuthenticatorTest.java",
      "className": "SAML2UserAuthenticatorTest"
    },
    "statements": [
      {
        "type": "FIELD_MOCK_CREATION",
        "code": "@Mock\r\nUserAccountDao userAccountDao;",
        "line": 45,
        "locate": "Attribute",
        "locationContext": {
          "methodName": "[FieldDeclaration]",
          "methodAnnotations": [
            "@Mock"
          ]
        }
      },
      {
        "type": "STUBBING",
        "code": "Mockito.when(userAccountDao.getUserAccount(Mockito.anyString(), Mockito.anyLong())).thenReturn(account);",
        "line": 72,
        "locate": "Test Case",
        "locationContext": {
          "methodName": "authenticate",
          "methodAnnotations": [
            "@Test"
          ]
        }
      }
    ],
    "pattern_id": 4
  }
]