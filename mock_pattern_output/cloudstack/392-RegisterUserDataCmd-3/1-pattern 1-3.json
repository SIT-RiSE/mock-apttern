[
  {
    "variableName": "cmd",
    "variableType": "RegisterUserDataCmd",
    "mockedClass": "RegisterUserDataCmd",
    "isReuseableMock": false,
    "mockPattern": "Creation:\n\u2014 Local Mock Creation in Test Case\n\nStubbing:\n\u2014 Test Case\n\nVerification:\n\u2014 None",
    "classContext": {
      "packageName": "com.cloud.server",
      "filePath": "C:\\java tool\\Apache\\cloudstack\\server\\src\\test\\java\\com\\cloud\\server\\ManagementServerImplTest.java",
      "className": "ManagementServerImplTest"
    },
    "statements": [
      {
        "type": "DECLARATION",
        "code": "RegisterUserDataCmd cmd = Mockito.mock(RegisterUserDataCmd.class);",
        "line": 307,
        "locate": "Test Case",
        "locationContext": {
          "methodName": "testSuccessfulRegisterUserdata",
          "methodAnnotations": [
            "@Test"
          ]
        }
      },
      {
        "type": "STUBBING",
        "code": "when(cmd.getUserData()).thenReturn(\"testUserdata\");",
        "line": 308,
        "locate": "Test Case",
        "locationContext": {
          "methodName": "testSuccessfulRegisterUserdata",
          "methodAnnotations": [
            "@Test"
          ]
        }
      },
      {
        "type": "STUBBING",
        "code": "when(cmd.getName()).thenReturn(\"testName\");",
        "line": 309,
        "locate": "Test Case",
        "locationContext": {
          "methodName": "testSuccessfulRegisterUserdata",
          "methodAnnotations": [
            "@Test"
          ]
        }
      },
      {
        "type": "STUBBING",
        "code": "when(cmd.getHttpMethod()).thenReturn(BaseCmd.HTTPMethod.GET);",
        "line": 310,
        "locate": "Test Case",
        "locationContext": {
          "methodName": "testSuccessfulRegisterUserdata",
          "methodAnnotations": [
            "@Test"
          ]
        }
      }
    ],
    "pattern_id": 1
  },
  {
    "variableName": "cmd",
    "variableType": "RegisterUserDataCmd",
    "mockedClass": "RegisterUserDataCmd",
    "isReuseableMock": false,
    "mockPattern": "Creation:\n\u2014 Local Mock Creation in Test Case\n\nStubbing:\n\u2014 Test Case\n\nVerification:\n\u2014 None",
    "classContext": {
      "packageName": "com.cloud.server",
      "filePath": "C:\\java tool\\Apache\\cloudstack\\server\\src\\test\\java\\com\\cloud\\server\\ManagementServerImplTest.java",
      "className": "ManagementServerImplTest"
    },
    "statements": [
      {
        "type": "DECLARATION",
        "code": "RegisterUserDataCmd cmd = Mockito.mock(RegisterUserDataCmd.class);",
        "line": 332,
        "locate": "Test Case",
        "locationContext": {
          "methodName": "testRegisterExistingUserdata",
          "methodAnnotations": [
            "@Test"
          ]
        }
      },
      {
        "type": "STUBBING",
        "code": "when(cmd.getUserData()).thenReturn(\"testUserdata\");",
        "line": 333,
        "locate": "Test Case",
        "locationContext": {
          "methodName": "testRegisterExistingUserdata",
          "methodAnnotations": [
            "@Test"
          ]
        }
      },
      {
        "type": "STUBBING",
        "code": "when(cmd.getName()).thenReturn(\"testName\");",
        "line": 334,
        "locate": "Test Case",
        "locationContext": {
          "methodName": "testRegisterExistingUserdata",
          "methodAnnotations": [
            "@Test"
          ]
        }
      }
    ],
    "pattern_id": 1
  },
  {
    "variableName": "cmd",
    "variableType": "RegisterUserDataCmd",
    "mockedClass": "RegisterUserDataCmd",
    "isReuseableMock": false,
    "mockPattern": "Creation:\n\u2014 Local Mock Creation in Test Case\n\nStubbing:\n\u2014 Test Case\n\nVerification:\n\u2014 None",
    "classContext": {
      "packageName": "com.cloud.server",
      "filePath": "C:\\java tool\\Apache\\cloudstack\\server\\src\\test\\java\\com\\cloud\\server\\ManagementServerImplTest.java",
      "className": "ManagementServerImplTest"
    },
    "statements": [
      {
        "type": "DECLARATION",
        "code": "RegisterUserDataCmd cmd = Mockito.mock(RegisterUserDataCmd.class);",
        "line": 353,
        "locate": "Test Case",
        "locationContext": {
          "methodName": "testRegisterExistingName",
          "methodAnnotations": [
            "@Test"
          ]
        }
      },
      {
        "type": "STUBBING",
        "code": "when(cmd.getUserData()).thenReturn(\"testUserdata\");",
        "line": 354,
        "locate": "Test Case",
        "locationContext": {
          "methodName": "testRegisterExistingName",
          "methodAnnotations": [
            "@Test"
          ]
        }
      },
      {
        "type": "STUBBING",
        "code": "when(cmd.getName()).thenReturn(\"testName\");",
        "line": 355,
        "locate": "Test Case",
        "locationContext": {
          "methodName": "testRegisterExistingName",
          "methodAnnotations": [
            "@Test"
          ]
        }
      }
    ],
    "pattern_id": 1
  }
]