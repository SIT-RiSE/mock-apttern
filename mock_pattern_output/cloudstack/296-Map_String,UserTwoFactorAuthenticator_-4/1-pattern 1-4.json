[
  {
    "variableName": "userTwoFactorAuthenticationProvidersMap",
    "variableType": "Map<String,UserTwoFactorAuthenticator>",
    "mockedClass": "HashMap",
    "isReuseableMock": false,
    "mockPattern": "Creation:\n\u2014 Local Mock Creation in Test Case\n\nStubbing:\n\u2014 Test Case\n\nVerification:\n\u2014 None",
    "classContext": {
      "packageName": "com.cloud.user",
      "filePath": "C:\\java tool\\Apache\\cloudstack\\server\\src\\test\\java\\com\\cloud\\user\\AccountManagerImplTest.java",
      "className": "AccountManagerImplTest"
    },
    "statements": [
      {
        "type": "DECLARATION",
        "code": "Map<String, UserTwoFactorAuthenticator> userTwoFactorAuthenticationProvidersMap = Mockito.mock(HashMap.class);",
        "line": 891,
        "locate": "Test Case",
        "locationContext": {
          "methodName": "testEnableUserTwoFactorAuthenticationWhenProviderNameIsNullExpectedDefaultProviderTOTP",
          "methodAnnotations": [
            "@Test"
          ]
        }
      },
      {
        "type": "STUBBING",
        "code": "Mockito.when(userTwoFactorAuthenticationProvidersMap.containsKey(\"totp\")).thenReturn(true);",
        "line": 892,
        "locate": "Test Case",
        "locationContext": {
          "methodName": "testEnableUserTwoFactorAuthenticationWhenProviderNameIsNullExpectedDefaultProviderTOTP",
          "methodAnnotations": [
            "@Test"
          ]
        }
      },
      {
        "type": "STUBBING",
        "code": "Mockito.when(userTwoFactorAuthenticationProvidersMap.get(\"totp\")).thenReturn(totpProvider);",
        "line": 893,
        "locate": "Test Case",
        "locationContext": {
          "methodName": "testEnableUserTwoFactorAuthenticationWhenProviderNameIsNullExpectedDefaultProviderTOTP",
          "methodAnnotations": [
            "@Test"
          ]
        }
      }
    ],
    "pattern_id": 1
  },
  {
    "variableName": "userTwoFactorAuthenticationProvidersMap",
    "variableType": "Map<String,UserTwoFactorAuthenticator>",
    "mockedClass": "HashMap",
    "isReuseableMock": false,
    "mockPattern": "Creation:\n\u2014 Local Mock Creation in Test Case\n\nStubbing:\n\u2014 Test Case\n\nVerification:\n\u2014 None",
    "classContext": {
      "packageName": "com.cloud.user",
      "filePath": "C:\\java tool\\Apache\\cloudstack\\server\\src\\test\\java\\com\\cloud\\user\\AccountManagerImplTest.java",
      "className": "AccountManagerImplTest"
    },
    "statements": [
      {
        "type": "DECLARATION",
        "code": "Map<String, UserTwoFactorAuthenticator> userTwoFactorAuthenticationProvidersMap = Mockito.mock(HashMap.class);",
        "line": 920,
        "locate": "Test Case",
        "locationContext": {
          "methodName": "testEnableUserTwoFactorAuthentication",
          "methodAnnotations": [
            "@Test"
          ]
        }
      },
      {
        "type": "STUBBING",
        "code": "Mockito.when(userTwoFactorAuthenticationProvidersMap.containsKey(\"totp\")).thenReturn(true);",
        "line": 921,
        "locate": "Test Case",
        "locationContext": {
          "methodName": "testEnableUserTwoFactorAuthentication",
          "methodAnnotations": [
            "@Test"
          ]
        }
      },
      {
        "type": "STUBBING",
        "code": "Mockito.when(userTwoFactorAuthenticationProvidersMap.get(\"totp\")).thenReturn(totpProvider);",
        "line": 922,
        "locate": "Test Case",
        "locationContext": {
          "methodName": "testEnableUserTwoFactorAuthentication",
          "methodAnnotations": [
            "@Test"
          ]
        }
      }
    ],
    "pattern_id": 1
  },
  {
    "variableName": "userTwoFactorAuthenticationProvidersMap",
    "variableType": "Map<String,UserTwoFactorAuthenticator>",
    "mockedClass": "HashMap",
    "isReuseableMock": false,
    "mockPattern": "Creation:\n\u2014 Local Mock Creation in Test Case\n\nStubbing:\n\u2014 Test Case\n\nVerification:\n\u2014 None",
    "classContext": {
      "packageName": "com.cloud.user",
      "filePath": "C:\\java tool\\Apache\\cloudstack\\server\\src\\test\\java\\com\\cloud\\user\\AccountManagerImplTest.java",
      "className": "AccountManagerImplTest"
    },
    "statements": [
      {
        "type": "DECLARATION",
        "code": "Map<String, UserTwoFactorAuthenticator> userTwoFactorAuthenticationProvidersMap = Mockito.mock(HashMap.class);",
        "line": 999,
        "locate": "Test Case",
        "locationContext": {
          "methodName": "testVerify2FAcode",
          "methodAnnotations": [
            "@Test"
          ]
        }
      },
      {
        "type": "STUBBING",
        "code": "Mockito.when(userTwoFactorAuthenticationProvidersMap.containsKey(\"staticpin\")).thenReturn(true);",
        "line": 1000,
        "locate": "Test Case",
        "locationContext": {
          "methodName": "testVerify2FAcode",
          "methodAnnotations": [
            "@Test"
          ]
        }
      },
      {
        "type": "STUBBING",
        "code": "Mockito.when(userTwoFactorAuthenticationProvidersMap.get(\"staticpin\")).thenReturn(staticpinProvider);",
        "line": 1001,
        "locate": "Test Case",
        "locationContext": {
          "methodName": "testVerify2FAcode",
          "methodAnnotations": [
            "@Test"
          ]
        }
      }
    ],
    "pattern_id": 1
  },
  {
    "variableName": "userTwoFactorAuthenticationProvidersMap",
    "variableType": "Map<String,UserTwoFactorAuthenticator>",
    "mockedClass": "HashMap",
    "isReuseableMock": false,
    "mockPattern": "Creation:\n\u2014 Local Mock Creation in Test Case\n\nStubbing:\n\u2014 Test Case\n\nVerification:\n\u2014 None",
    "classContext": {
      "packageName": "com.cloud.user",
      "filePath": "C:\\java tool\\Apache\\cloudstack\\server\\src\\test\\java\\com\\cloud\\user\\AccountManagerImplTest.java",
      "className": "AccountManagerImplTest"
    },
    "statements": [
      {
        "type": "DECLARATION",
        "code": "Map<String, UserTwoFactorAuthenticator> userTwoFactorAuthenticationProvidersMap = Mockito.mock(HashMap.class);",
        "line": 1024,
        "locate": "Test Case",
        "locationContext": {
          "methodName": "testEnable2FAcode",
          "methodAnnotations": [
            "@Test"
          ]
        }
      },
      {
        "type": "STUBBING",
        "code": "Mockito.when(userTwoFactorAuthenticationProvidersMap.containsKey(\"staticpin\")).thenReturn(true);",
        "line": 1025,
        "locate": "Test Case",
        "locationContext": {
          "methodName": "testEnable2FAcode",
          "methodAnnotations": [
            "@Test"
          ]
        }
      },
      {
        "type": "STUBBING",
        "code": "Mockito.when(userTwoFactorAuthenticationProvidersMap.get(\"staticpin\")).thenReturn(staticpinProvider);",
        "line": 1026,
        "locate": "Test Case",
        "locationContext": {
          "methodName": "testEnable2FAcode",
          "methodAnnotations": [
            "@Test"
          ]
        }
      }
    ],
    "pattern_id": 1
  }
]