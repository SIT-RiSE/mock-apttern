[
  {
    "variableName": "tungstenProviderDao",
    "variableType": "TungstenProviderDao",
    "mockedClass": "TungstenProviderDao",
    "isReuseableMock": "Hybrid",
    "mockPattern": "Creation:\n\u2014 Attribute Mock Creation\n\nStubbing:\n\u2014 Test Case\n\nVerification:\n\u2014 None",
    "classContext": {
      "packageName": "org.apache.cloudstack.network.tungsten.service",
      "filePath": "C:\\java tool\\Apache\\cloudstack\\plugins\\network-elements\\tungsten\\src\\test\\java\\org\\apache\\cloudstack\\network\\tungsten\\service\\TungstenElementTest.java",
      "className": "TungstenElementTest"
    },
    "statements": [
      {
        "type": "FIELD_MOCK_CREATION",
        "code": "@Mock\r\nTungstenProviderDao tungstenProviderDao;",
        "line": 160,
        "locate": "Attribute",
        "locationContext": {
          "methodName": "[FieldDeclaration]",
          "methodAnnotations": [
            "@Mock"
          ]
        }
      },
      {
        "type": "STUBBING",
        "code": "when(tungstenProviderDao.findByZoneId(anyLong())).thenReturn(tungstenProviderVO);",
        "line": 808,
        "locate": "Test Case",
        "locationContext": {
          "methodName": "shutdownProviderInstancesTest",
          "methodAnnotations": [
            "@Test"
          ]
        }
      },
      {
        "type": "STUBBING",
        "code": "when(tungstenProviderDao.findByZoneId(anyLong())).thenReturn(tungstenProvider);",
        "line": 884,
        "locate": "Test Case",
        "locationContext": {
          "methodName": "processHostAboutToBeRemovedWithSecurityGroupTest",
          "methodAnnotations": [
            "@Test"
          ]
        }
      },
      {
        "type": "STUBBING",
        "code": "when(tungstenProviderDao.findByZoneId(anyLong())).thenReturn(tungstenProvider);",
        "line": 903,
        "locate": "Test Case",
        "locationContext": {
          "methodName": "processHostAboutToBeRemovedWithoutSecurityGroupTest",
          "methodAnnotations": [
            "@Test"
          ]
        }
      }
    ],
    "pattern_id": 4
  },
  {
    "variableName": "tungstenProviderDao",
    "variableType": "TungstenProviderDao",
    "mockedClass": "TungstenProviderDao",
    "isReuseableMock": "Hybrid",
    "mockPattern": "Creation:\n\u2014 Attribute Mock Creation\n\nStubbing:\n\u2014 Test Case\n\nVerification:\n\u2014 None",
    "classContext": {
      "packageName": "org.apache.cloudstack.network.tungsten.service",
      "filePath": "C:\\java tool\\Apache\\cloudstack\\plugins\\network-elements\\tungsten\\src\\test\\java\\org\\apache\\cloudstack\\network\\tungsten\\service\\TungstenFabricUtilsTest.java",
      "className": "TungstenFabricUtilsTest"
    },
    "statements": [
      {
        "type": "FIELD_MOCK_CREATION",
        "code": "@Mock\r\nTungstenProviderDao tungstenProviderDao;",
        "line": 39,
        "locate": "Attribute",
        "locationContext": {
          "methodName": "[FieldDeclaration]",
          "methodAnnotations": [
            "@Mock"
          ]
        }
      },
      {
        "type": "STUBBING",
        "code": "when(tungstenProviderDao.findByZoneId(anyLong())).thenReturn(tungstenProviderVO);",
        "line": 58,
        "locate": "Test Case",
        "locationContext": {
          "methodName": "sendTungstenCommandSuccessTest",
          "methodAnnotations": [
            "@Test"
          ]
        }
      },
      {
        "type": "STUBBING",
        "code": "when(tungstenProviderDao.findByZoneId(anyLong())).thenReturn(tungstenProviderVO);",
        "line": 77,
        "locate": "Test Case",
        "locationContext": {
          "methodName": "sendTungstenCommandWithNullAnswer",
          "methodAnnotations": [
            "@Test"
          ]
        }
      },
      {
        "type": "STUBBING",
        "code": "when(tungstenProviderDao.findByZoneId(anyLong())).thenReturn(tungstenProviderVO);",
        "line": 88,
        "locate": "Test Case",
        "locationContext": {
          "methodName": "sendTungstenCommandWithFalseAnswer",
          "methodAnnotations": [
            "@Test"
          ]
        }
      }
    ],
    "pattern_id": 4
  },
  {
    "variableName": "tungstenProviderDao",
    "variableType": "TungstenProviderDao",
    "mockedClass": "TungstenProviderDao",
    "isReuseableMock": "Hybrid",
    "mockPattern": "Creation:\n\u2014 Attribute Mock Creation\n\nStubbing:\n\u2014 Test Case\n\nVerification:\n\u2014 None",
    "classContext": {
      "packageName": "org.apache.cloudstack.network.tungsten.service",
      "filePath": "C:\\java tool\\Apache\\cloudstack\\plugins\\network-elements\\tungsten\\src\\test\\java\\org\\apache\\cloudstack\\network\\tungsten\\service\\TungstenGuestNetworkGuruTest.java",
      "className": "TungstenGuestNetworkGuruTest"
    },
    "statements": [
      {
        "type": "FIELD_MOCK_CREATION",
        "code": "@Mock\r\nTungstenProviderDao tungstenProviderDao;",
        "line": 149,
        "locate": "Attribute",
        "locationContext": {
          "methodName": "[FieldDeclaration]",
          "methodAnnotations": [
            "@Mock"
          ]
        }
      },
      {
        "type": "STUBBING",
        "code": "when(tungstenProviderDao.findByZoneId(anyLong())).thenReturn(tungstenProviderVO);",
        "line": 461,
        "locate": "Test Case",
        "locationContext": {
          "methodName": "testTrashSharedNetwork",
          "methodAnnotations": [
            "@Test"
          ]
        }
      }
    ],
    "pattern_id": 4
  },
  {
    "variableName": "tungstenProviderDao",
    "variableType": "TungstenProviderDao",
    "mockedClass": "TungstenProviderDao",
    "isReuseableMock": "Hybrid",
    "mockPattern": "Creation:\n\u2014 Attribute Mock Creation\n\nStubbing:\n\u2014 Test Case\n\nVerification:\n\u2014 None",
    "classContext": {
      "packageName": "org.apache.cloudstack.network.tungsten.service",
      "filePath": "C:\\java tool\\Apache\\cloudstack\\plugins\\network-elements\\tungsten\\src\\test\\java\\org\\apache\\cloudstack\\network\\tungsten\\service\\TungstenProviderServiceTest.java",
      "className": "TungstenProviderServiceTest"
    },
    "statements": [
      {
        "type": "FIELD_MOCK_CREATION",
        "code": "@Mock\r\nTungstenProviderDao tungstenProviderDao;",
        "line": 64,
        "locate": "Attribute",
        "locationContext": {
          "methodName": "[FieldDeclaration]",
          "methodAnnotations": [
            "@Mock"
          ]
        }
      },
      {
        "type": "STUBBING",
        "code": "when(tungstenProviderDao.findByZoneId(anyLong())).thenReturn(tungstenProviderVO);",
        "line": 117,
        "locate": "Test Case",
        "locationContext": {
          "methodName": "listTungstenProviderWithZoneIdTest",
          "methodAnnotations": [
            "@Test"
          ]
        }
      },
      {
        "type": "STUBBING",
        "code": "when(tungstenProviderDao.listAll()).thenReturn(Arrays.asList(tungstenProviderVO1, tungstenProviderVO2));",
        "line": 128,
        "locate": "Test Case",
        "locationContext": {
          "methodName": "listTungstenProviderWithoutZoneIdTest",
          "methodAnnotations": [
            "@Test"
          ]
        }
      }
    ],
    "pattern_id": 4
  },
  {
    "variableName": "tungstenProviderDao",
    "variableType": "TungstenProviderDao",
    "mockedClass": "TungstenProviderDao",
    "isReuseableMock": "Hybrid",
    "mockPattern": "Creation:\n\u2014 Attribute Mock Creation\n\nStubbing:\n\u2014 Test Case\n\nVerification:\n\u2014 None",
    "classContext": {
      "packageName": "org.apache.cloudstack.network.tungsten.service",
      "filePath": "C:\\java tool\\Apache\\cloudstack\\plugins\\network-elements\\tungsten\\src\\test\\java\\org\\apache\\cloudstack\\network\\tungsten\\service\\TungstenServiceImplTest.java",
      "className": "TungstenServiceImplTest"
    },
    "statements": [
      {
        "type": "FIELD_MOCK_CREATION",
        "code": "@Mock\r\nTungstenProviderDao tungstenProviderDao;",
        "line": 248,
        "locate": "Attribute",
        "locationContext": {
          "methodName": "[FieldDeclaration]",
          "methodAnnotations": [
            "@Mock"
          ]
        }
      },
      {
        "type": "STUBBING",
        "code": "when(tungstenProviderDao.findAll()).thenReturn(List.of(tungstenProviderVO));",
        "line": 348,
        "locate": "Test Case",
        "locationContext": {
          "methodName": "deleteTungstenDomainTest",
          "methodAnnotations": [
            "@Test"
          ]
        }
      },
      {
        "type": "STUBBING",
        "code": "when(tungstenProviderDao.findAll()).thenReturn(List.of(tungstenProviderVO));",
        "line": 361,
        "locate": "Test Case",
        "locationContext": {
          "methodName": "deleteTungstenProjectTest",
          "methodAnnotations": [
            "@Test"
          ]
        }
      },
      {
        "type": "STUBBING",
        "code": "when(tungstenProviderDao.findAll()).thenReturn(List.of(tungstenProviderVO));",
        "line": 664,
        "locate": "Test Case",
        "locationContext": {
          "methodName": "syncTungstenDbWithCloudstackProjectsAndDomainsTest",
          "methodAnnotations": [
            "@Test"
          ]
        }
      },
      {
        "type": "STUBBING",
        "code": "when(tungstenProviderDao.findAll()).thenReturn(List.of(tungstenProviderVO));",
        "line": 735,
        "locate": "Test Case",
        "locationContext": {
          "methodName": "createTungstenSecurityGroupTest",
          "methodAnnotations": [
            "@Test"
          ]
        }
      },
      {
        "type": "STUBBING",
        "code": "when(tungstenProviderDao.findAll()).thenReturn(List.of(tungstenProviderVO));",
        "line": 753,
        "locate": "Test Case",
        "locationContext": {
          "methodName": "deleteTungstenSecurityGroupTest",
          "methodAnnotations": [
            "@Test"
          ]
        }
      },
      {
        "type": "STUBBING",
        "code": "when(tungstenProviderDao.findAll()).thenReturn(List.of(tungstenProviderVO));",
        "line": 772,
        "locate": "Test Case",
        "locationContext": {
          "methodName": "addTungstenSecurityGroupEgressRuleTest",
          "methodAnnotations": [
            "@Test"
          ]
        }
      },
      {
        "type": "STUBBING",
        "code": "when(tungstenProviderDao.findAll()).thenReturn(List.of(tungstenProviderVO));",
        "line": 806,
        "locate": "Test Case",
        "locationContext": {
          "methodName": "addTungstenSecurityGroupIngressRuleTest",
          "methodAnnotations": [
            "@Test"
          ]
        }
      },
      {
        "type": "STUBBING",
        "code": "when(tungstenProviderDao.findAll()).thenReturn(List.of(tungstenProviderVO));",
        "line": 831,
        "locate": "Test Case",
        "locationContext": {
          "methodName": "removeTungstenSecurityGroupEgressRuleTest",
          "methodAnnotations": [
            "@Test"
          ]
        }
      },
      {
        "type": "STUBBING",
        "code": "when(tungstenProviderDao.findAll()).thenReturn(List.of(tungstenProviderVO));",
        "line": 860,
        "locate": "Test Case",
        "locationContext": {
          "methodName": "removeTungstenSecurityGroupIngressRuleTest",
          "methodAnnotations": [
            "@Test"
          ]
        }
      },
      {
        "type": "STUBBING",
        "code": "when(tungstenProviderDao.findAll()).thenReturn(List.of(tungstenProviderVO));",
        "line": 899,
        "locate": "Test Case",
        "locationContext": {
          "methodName": "addTungstenNicSecondaryIpAddressTest",
          "methodAnnotations": [
            "@Test"
          ]
        }
      },
      {
        "type": "STUBBING",
        "code": "when(tungstenProviderDao.findByZoneId(anyLong())).thenReturn(tungstenProviderVO);",
        "line": 1612,
        "locate": "Test Case",
        "locationContext": {
          "methodName": "createSharedNetworkTest",
          "methodAnnotations": [
            "@Test"
          ]
        }
      },
      {
        "type": "STUBBING",
        "code": "when(tungstenProviderDao.findAll()).thenReturn(List.of(tungstenProviderVO));",
        "line": 1647,
        "locate": "Test Case",
        "locationContext": {
          "methodName": "addTungstenVmSecurityGroupTest",
          "methodAnnotations": [
            "@Test"
          ]
        }
      }
    ],
    "pattern_id": 4
  }
]