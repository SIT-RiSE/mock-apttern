[
  {
    "variableName": "_networkAclElements",
    "variableType": "List<NetworkACLServiceProvider>",
    "mockedClass": "List<NetworkACLServiceProvider>",
    "isReuseableMock": false,
    "mockPattern": "Creation:\n\u2014 Declaration Attribute\n\nStubbing:\n\u2014 Test Case\n\nVerification:\n\u2014 None",
    "classContext": {
      "packageName": "com.cloud.network.vpc",
      "filePath": "C:\\java tool\\Apache\\cloudstack\\server\\src\\test\\java\\com\\cloud\\network\\vpc\\NetworkACLManagerTest.java",
      "className": "NetworkACLManagerTest"
    },
    "statements": [
      {
        "type": "FIELD_DECLARATION",
        "code": "@Inject\r\nList<NetworkACLServiceProvider> _networkAclElements;",
        "line": 97,
        "locate": "Attribute",
        "locationContext": {
          "methodName": "[FieldDeclaration]",
          "methodAnnotations": [
            "@Inject"
          ]
        }
      },
      {
        "type": "STUBBING",
        "code": "Mockito.when(_networkAclElements.get(0).applyNetworkACLs(Matchers.any(Network.class), Matchers.anyList())).thenReturn(true);",
        "line": 140,
        "locate": "Test Case",
        "locationContext": {
          "methodName": "testApplyACL",
          "methodAnnotations": [
            "@Test",
            "@SuppressWarnings"
          ]
        }
      },
      {
        "type": "STUBBING",
        "code": "Mockito.when(_networkAclElements.get(0).getProvider()).thenReturn(Mockito.mock(Network.Provider.class));",
        "line": 181,
        "locate": "Test Case",
        "locationContext": {
          "methodName": "driveTestApplyNetworkACL",
          "methodAnnotations": [
            "@SuppressWarnings"
          ]
        }
      },
      {
        "type": "STUBBING",
        "code": "Mockito.when(_networkAclElements.get(0).applyNetworkACLs(any(Network.class), anyList())).thenReturn(applyNetworkACLs);",
        "line": 182,
        "locate": "Test Case",
        "locationContext": {
          "methodName": "driveTestApplyNetworkACL",
          "methodAnnotations": [
            "@SuppressWarnings"
          ]
        }
      }
    ],
    "pattern_id": 36
  },
  {
    "variableName": "_networkAclElements",
    "variableType": "List<NetworkACLServiceProvider>",
    "mockedClass": "List<NetworkACLServiceProvider>",
    "isReuseableMock": false,
    "mockPattern": "Creation:\n\u2014 Declaration Attribute\n\nStubbing:\n\u2014 Test Case\n\nVerification:\n\u2014 None",
    "classContext": {
      "packageName": "com.cloud.network.vpc",
      "filePath": "C:\\java tool\\Apache\\cloudstack\\server\\src\\test\\java\\com\\cloud\\network\\vpc\\NetworkACLManagerTest.java",
      "className": "NetworkACLManagerTest"
    },
    "statements": [
      {
        "type": "FIELD_DECLARATION",
        "code": "@Inject\r\nList<NetworkACLServiceProvider> _networkAclElements;",
        "line": 97,
        "locate": "Attribute",
        "locationContext": {
          "methodName": "[FieldDeclaration]",
          "methodAnnotations": [
            "@Inject"
          ]
        }
      },
      {
        "type": "STUBBING",
        "code": "Mockito.when(_networkAclElements.get(0).applyNetworkACLs(Matchers.any(Network.class), Matchers.anyList())).thenReturn(true);",
        "line": 140,
        "locate": "Test Case",
        "locationContext": {
          "methodName": "testApplyACL",
          "methodAnnotations": [
            "@Test",
            "@SuppressWarnings"
          ]
        }
      },
      {
        "type": "STUBBING",
        "code": "Mockito.when(_networkAclElements.get(0).getProvider()).thenReturn(Mockito.mock(Network.Provider.class));",
        "line": 181,
        "locate": "Test Case",
        "locationContext": {
          "methodName": "driveTestApplyNetworkACL",
          "methodAnnotations": [
            "@SuppressWarnings"
          ]
        }
      },
      {
        "type": "STUBBING",
        "code": "Mockito.when(_networkAclElements.get(0).applyNetworkACLs(any(Network.class), anyList())).thenReturn(applyNetworkACLs);",
        "line": 182,
        "locate": "Test Case",
        "locationContext": {
          "methodName": "driveTestApplyNetworkACL",
          "methodAnnotations": [
            "@SuppressWarnings"
          ]
        }
      }
    ],
    "pattern_id": 36
  },
  {
    "variableName": "_networkAclElements",
    "variableType": "List<NetworkACLServiceProvider>",
    "mockedClass": "List<NetworkACLServiceProvider>",
    "isReuseableMock": false,
    "mockPattern": "Creation:\n\u2014 Declaration Attribute\n\nStubbing:\n\u2014 Test Case\n\nVerification:\n\u2014 None",
    "classContext": {
      "packageName": "com.cloud.network.vpc",
      "filePath": "C:\\java tool\\Apache\\cloudstack\\server\\src\\test\\java\\com\\cloud\\network\\vpc\\NetworkACLManagerTest.java",
      "className": "NetworkACLManagerTest"
    },
    "statements": [
      {
        "type": "FIELD_DECLARATION",
        "code": "@Inject\r\nList<NetworkACLServiceProvider> _networkAclElements;",
        "line": 97,
        "locate": "Attribute",
        "locationContext": {
          "methodName": "[FieldDeclaration]",
          "methodAnnotations": [
            "@Inject"
          ]
        }
      },
      {
        "type": "STUBBING",
        "code": "Mockito.when(_networkAclElements.get(0).applyNetworkACLs(Matchers.any(Network.class), Matchers.anyList())).thenReturn(true);",
        "line": 140,
        "locate": "Test Case",
        "locationContext": {
          "methodName": "testApplyACL",
          "methodAnnotations": [
            "@Test",
            "@SuppressWarnings"
          ]
        }
      },
      {
        "type": "STUBBING",
        "code": "Mockito.when(_networkAclElements.get(0).getProvider()).thenReturn(Mockito.mock(Network.Provider.class));",
        "line": 181,
        "locate": "Test Case",
        "locationContext": {
          "methodName": "driveTestApplyNetworkACL",
          "methodAnnotations": [
            "@SuppressWarnings"
          ]
        }
      },
      {
        "type": "STUBBING",
        "code": "Mockito.when(_networkAclElements.get(0).applyNetworkACLs(any(Network.class), anyList())).thenReturn(applyNetworkACLs);",
        "line": 182,
        "locate": "Test Case",
        "locationContext": {
          "methodName": "driveTestApplyNetworkACL",
          "methodAnnotations": [
            "@SuppressWarnings"
          ]
        }
      }
    ],
    "pattern_id": 36
  }
]