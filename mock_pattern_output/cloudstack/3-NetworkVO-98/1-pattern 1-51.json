[
  {
    "variableName": "network",
    "variableType": "NetworkVO",
    "mockedClass": "NetworkVO",
    "isReuseableMock": false,
    "mockPattern": "Creation:\n\u2014 Local Mock Creation in Test Case\n\nStubbing:\n\u2014 Test Case\n\nVerification:\n\u2014 None",
    "classContext": {
      "packageName": "org.apache.cloudstack.engine.orchestration",
      "filePath": "C:\\java tool\\Apache\\cloudstack\\engine\\orchestration\\src\\test\\java\\org\\apache\\cloudstack\\engine\\orchestration\\NetworkOrchestratorTest.java",
      "className": "NetworkOrchestratorTest"
    },
    "statements": [
      {
        "type": "DECLARATION",
        "code": "NetworkVO network = mock(NetworkVO.class);",
        "line": 153,
        "locate": "Test Case",
        "locationContext": {
          "methodName": "testRemoveDhcpServiceWithNic",
          "methodAnnotations": [
            "@Test"
          ]
        }
      },
      {
        "type": "STUBBING",
        "code": "when(network.getTrafficType()).thenReturn(TrafficType.Guest);",
        "line": 158,
        "locate": "Test Case",
        "locationContext": {
          "methodName": "testRemoveDhcpServiceWithNic",
          "methodAnnotations": [
            "@Test"
          ]
        }
      },
      {
        "type": "STUBBING",
        "code": "when(network.getGuestType()).thenReturn(GuestType.Shared);",
        "line": 159,
        "locate": "Test Case",
        "locationContext": {
          "methodName": "testRemoveDhcpServiceWithNic",
          "methodAnnotations": [
            "@Test"
          ]
        }
      },
      {
        "type": "STUBBING",
        "code": "when(network.getGuruName()).thenReturn(guruName);",
        "line": 163,
        "locate": "Test Case",
        "locationContext": {
          "methodName": "testRemoveDhcpServiceWithNic",
          "methodAnnotations": [
            "@Test"
          ]
        }
      }
    ],
    "pattern_id": 1
  },
  {
    "variableName": "network",
    "variableType": "NetworkVO",
    "mockedClass": "NetworkVO",
    "isReuseableMock": false,
    "mockPattern": "Creation:\n\u2014 Local Mock Creation in Test Case\n\nStubbing:\n\u2014 Test Case\n\nVerification:\n\u2014 None",
    "classContext": {
      "packageName": "org.apache.cloudstack.engine.orchestration",
      "filePath": "C:\\java tool\\Apache\\cloudstack\\engine\\orchestration\\src\\test\\java\\org\\apache\\cloudstack\\engine\\orchestration\\NetworkOrchestratorTest.java",
      "className": "NetworkOrchestratorTest"
    },
    "statements": [
      {
        "type": "DECLARATION",
        "code": "NetworkVO network = mock(NetworkVO.class);",
        "line": 178,
        "locate": "Test Case",
        "locationContext": {
          "methodName": "testDontRemoveDhcpServiceFromDomainRouter",
          "methodAnnotations": [
            "@Test"
          ]
        }
      },
      {
        "type": "STUBBING",
        "code": "when(network.getGuruName()).thenReturn(guruName);",
        "line": 183,
        "locate": "Test Case",
        "locationContext": {
          "methodName": "testDontRemoveDhcpServiceFromDomainRouter",
          "methodAnnotations": [
            "@Test"
          ]
        }
      }
    ],
    "pattern_id": 1
  },
  {
    "variableName": "network",
    "variableType": "NetworkVO",
    "mockedClass": "NetworkVO",
    "isReuseableMock": false,
    "mockPattern": "Creation:\n\u2014 Local Mock Creation in Test Case\n\nStubbing:\n\u2014 Test Case\n\nVerification:\n\u2014 None",
    "classContext": {
      "packageName": "org.apache.cloudstack.engine.orchestration",
      "filePath": "C:\\java tool\\Apache\\cloudstack\\engine\\orchestration\\src\\test\\java\\org\\apache\\cloudstack\\engine\\orchestration\\NetworkOrchestratorTest.java",
      "className": "NetworkOrchestratorTest"
    },
    "statements": [
      {
        "type": "DECLARATION",
        "code": "NetworkVO network = mock(NetworkVO.class);",
        "line": 198,
        "locate": "Test Case",
        "locationContext": {
          "methodName": "testDontRemoveDhcpServiceWhenNotProvided",
          "methodAnnotations": [
            "@Test"
          ]
        }
      },
      {
        "type": "STUBBING",
        "code": "when(network.getGuruName()).thenReturn(guruName);",
        "line": 204,
        "locate": "Test Case",
        "locationContext": {
          "methodName": "testDontRemoveDhcpServiceWhenNotProvided",
          "methodAnnotations": [
            "@Test"
          ]
        }
      }
    ],
    "pattern_id": 1
  },
  {
    "variableName": "network",
    "variableType": "NetworkVO",
    "mockedClass": "NetworkVO",
    "isReuseableMock": false,
    "mockPattern": "Creation:\n\u2014 Local Mock Creation in Test Case\n\nStubbing:\n\u2014 Test Case\n\nVerification:\n\u2014 None",
    "classContext": {
      "packageName": "org.apache.cloudstack.engine.orchestration",
      "filePath": "C:\\java tool\\Apache\\cloudstack\\engine\\orchestration\\src\\test\\java\\org\\apache\\cloudstack\\engine\\orchestration\\NetworkOrchestratorTest.java",
      "className": "NetworkOrchestratorTest"
    },
    "statements": [
      {
        "type": "DECLARATION",
        "code": "NetworkVO network = mock(NetworkVO.class);",
        "line": 497,
        "locate": "Test Case",
        "locationContext": {
          "methodName": "testDontReleaseNicWhenPreserveNicsSettingEnabled",
          "methodAnnotations": [
            "@Test"
          ]
        }
      },
      {
        "type": "STUBBING",
        "code": "when(network.getGuruName()).thenReturn(guruName);",
        "line": 500,
        "locate": "Test Case",
        "locationContext": {
          "methodName": "testDontReleaseNicWhenPreserveNicsSettingEnabled",
          "methodAnnotations": [
            "@Test"
          ]
        }
      }
    ],
    "pattern_id": 1
  },
  {
    "variableName": "network",
    "variableType": "NetworkVO",
    "mockedClass": "NetworkVO",
    "isReuseableMock": false,
    "mockPattern": "Creation:\n\u2014 Local Mock Creation in Test Case\n\nStubbing:\n\u2014 Test Case\n\nVerification:\n\u2014 None",
    "classContext": {
      "packageName": "com.cloud.network.guru",
      "filePath": "C:\\java tool\\Apache\\cloudstack\\plugins\\network-elements\\brocade-vcs\\src\\test\\java\\com\\cloud\\network\\guru\\BrocadeVcsGuestNetworkGuruTest.java",
      "className": "BrocadeVcsGuestNetworkGuruTest"
    },
    "statements": [
      {
        "type": "DECLARATION",
        "code": "final NetworkVO network = mock(NetworkVO.class);",
        "line": 236,
        "locate": "Test Case",
        "locationContext": {
          "methodName": "testImplement",
          "methodAnnotations": [
            "@Test"
          ]
        }
      },
      {
        "type": "STUBBING",
        "code": "when(network.getName()).thenReturn(\"testnetwork\");",
        "line": 237,
        "locate": "Test Case",
        "locationContext": {
          "methodName": "testImplement",
          "methodAnnotations": [
            "@Test"
          ]
        }
      },
      {
        "type": "STUBBING",
        "code": "when(network.getState()).thenReturn(State.Implementing);",
        "line": 238,
        "locate": "Test Case",
        "locationContext": {
          "methodName": "testImplement",
          "methodAnnotations": [
            "@Test"
          ]
        }
      },
      {
        "type": "STUBBING",
        "code": "when(network.getPhysicalNetworkId()).thenReturn(NETWORK_ID);",
        "line": 239,
        "locate": "Test Case",
        "locationContext": {
          "methodName": "testImplement",
          "methodAnnotations": [
            "@Test"
          ]
        }
      },
      {
        "type": "STUBBING",
        "code": "when(network.getBroadcastUri()).thenReturn(new URI(\"vlan://14\"));",
        "line": 240,
        "locate": "Test Case",
        "locationContext": {
          "methodName": "testImplement",
          "methodAnnotations": [
            "@Test"
          ]
        }
      }
    ],
    "pattern_id": 1
  },
  {
    "variableName": "network",
    "variableType": "NetworkVO",
    "mockedClass": "NetworkVO",
    "isReuseableMock": false,
    "mockPattern": "Creation:\n\u2014 Local Mock Creation in Test Case\n\nStubbing:\n\u2014 Test Case\n\nVerification:\n\u2014 None",
    "classContext": {
      "packageName": "com.cloud.network.guru",
      "filePath": "C:\\java tool\\Apache\\cloudstack\\plugins\\network-elements\\brocade-vcs\\src\\test\\java\\com\\cloud\\network\\guru\\BrocadeVcsGuestNetworkGuruTest.java",
      "className": "BrocadeVcsGuestNetworkGuruTest"
    },
    "statements": [
      {
        "type": "DECLARATION",
        "code": "final NetworkVO network = mock(NetworkVO.class);",
        "line": 296,
        "locate": "Test Case",
        "locationContext": {
          "methodName": "testImplementFail",
          "methodAnnotations": [
            "@Test"
          ]
        }
      },
      {
        "type": "STUBBING",
        "code": "when(network.getName()).thenReturn(\"testnetwork\");",
        "line": 297,
        "locate": "Test Case",
        "locationContext": {
          "methodName": "testImplementFail",
          "methodAnnotations": [
            "@Test"
          ]
        }
      },
      {
        "type": "STUBBING",
        "code": "when(network.getState()).thenReturn(State.Implementing);",
        "line": 298,
        "locate": "Test Case",
        "locationContext": {
          "methodName": "testImplementFail",
          "methodAnnotations": [
            "@Test"
          ]
        }
      },
      {
        "type": "STUBBING",
        "code": "when(network.getPhysicalNetworkId()).thenReturn(NETWORK_ID);",
        "line": 299,
        "locate": "Test Case",
        "locationContext": {
          "methodName": "testImplementFail",
          "methodAnnotations": [
            "@Test"
          ]
        }
      },
      {
        "type": "STUBBING",
        "code": "when(network.getBroadcastUri()).thenReturn(new URI(\"vlan://14\"));",
        "line": 300,
        "locate": "Test Case",
        "locationContext": {
          "methodName": "testImplementFail",
          "methodAnnotations": [
            "@Test"
          ]
        }
      }
    ],
    "pattern_id": 1
  },
  {
    "variableName": "network",
    "variableType": "NetworkVO",
    "mockedClass": "NetworkVO",
    "isReuseableMock": false,
    "mockPattern": "Creation:\n\u2014 Local Mock Creation in Test Case\n\nStubbing:\n\u2014 Test Case\n\nVerification:\n\u2014 None",
    "classContext": {
      "packageName": "com.cloud.network.guru",
      "filePath": "C:\\java tool\\Apache\\cloudstack\\plugins\\network-elements\\brocade-vcs\\src\\test\\java\\com\\cloud\\network\\guru\\BrocadeVcsGuestNetworkGuruTest.java",
      "className": "BrocadeVcsGuestNetworkGuruTest"
    },
    "statements": [
      {
        "type": "DECLARATION",
        "code": "final NetworkVO network = mock(NetworkVO.class);",
        "line": 342,
        "locate": "Test Case",
        "locationContext": {
          "methodName": "testReserve",
          "methodAnnotations": [
            "@Test"
          ]
        }
      },
      {
        "type": "STUBBING",
        "code": "when(network.getName()).thenReturn(\"testnetwork\");",
        "line": 343,
        "locate": "Test Case",
        "locationContext": {
          "methodName": "testReserve",
          "methodAnnotations": [
            "@Test"
          ]
        }
      },
      {
        "type": "STUBBING",
        "code": "when(network.getState()).thenReturn(State.Implementing);",
        "line": 344,
        "locate": "Test Case",
        "locationContext": {
          "methodName": "testReserve",
          "methodAnnotations": [
            "@Test"
          ]
        }
      },
      {
        "type": "STUBBING",
        "code": "when(network.getPhysicalNetworkId()).thenReturn(NETWORK_ID);",
        "line": 345,
        "locate": "Test Case",
        "locationContext": {
          "methodName": "testReserve",
          "methodAnnotations": [
            "@Test"
          ]
        }
      },
      {
        "type": "STUBBING",
        "code": "when(network.getBroadcastUri()).thenReturn(new URI(\"vlan://14\"));",
        "line": 346,
        "locate": "Test Case",
        "locationContext": {
          "methodName": "testReserve",
          "methodAnnotations": [
            "@Test"
          ]
        }
      },
      {
        "type": "STUBBING",
        "code": "when(network.getDataCenterId()).thenReturn(NETWORK_ID);",
        "line": 347,
        "locate": "Test Case",
        "locationContext": {
          "methodName": "testReserve",
          "methodAnnotations": [
            "@Test"
          ]
        }
      }
    ],
    "pattern_id": 1
  },
  {
    "variableName": "network",
    "variableType": "NetworkVO",
    "mockedClass": "NetworkVO",
    "isReuseableMock": false,
    "mockPattern": "Creation:\n\u2014 Local Mock Creation in Test Case\n\nStubbing:\n\u2014 Test Case\n\nVerification:\n\u2014 None",
    "classContext": {
      "packageName": "com.cloud.network.guru",
      "filePath": "C:\\java tool\\Apache\\cloudstack\\plugins\\network-elements\\brocade-vcs\\src\\test\\java\\com\\cloud\\network\\guru\\BrocadeVcsGuestNetworkGuruTest.java",
      "className": "BrocadeVcsGuestNetworkGuruTest"
    },
    "statements": [
      {
        "type": "DECLARATION",
        "code": "final NetworkVO network = mock(NetworkVO.class);",
        "line": 394,
        "locate": "Test Case",
        "locationContext": {
          "methodName": "testReserveFail",
          "methodAnnotations": [
            "@Test"
          ]
        }
      },
      {
        "type": "STUBBING",
        "code": "when(network.getName()).thenReturn(\"testnetwork\");",
        "line": 395,
        "locate": "Test Case",
        "locationContext": {
          "methodName": "testReserveFail",
          "methodAnnotations": [
            "@Test"
          ]
        }
      },
      {
        "type": "STUBBING",
        "code": "when(network.getState()).thenReturn(State.Implementing);",
        "line": 396,
        "locate": "Test Case",
        "locationContext": {
          "methodName": "testReserveFail",
          "methodAnnotations": [
            "@Test"
          ]
        }
      },
      {
        "type": "STUBBING",
        "code": "when(network.getPhysicalNetworkId()).thenReturn(NETWORK_ID);",
        "line": 397,
        "locate": "Test Case",
        "locationContext": {
          "methodName": "testReserveFail",
          "methodAnnotations": [
            "@Test"
          ]
        }
      },
      {
        "type": "STUBBING",
        "code": "when(network.getBroadcastUri()).thenReturn(new URI(\"vlan://14\"));",
        "line": 398,
        "locate": "Test Case",
        "locationContext": {
          "methodName": "testReserveFail",
          "methodAnnotations": [
            "@Test"
          ]
        }
      },
      {
        "type": "STUBBING",
        "code": "when(network.getDataCenterId()).thenReturn(NETWORK_ID);",
        "line": 399,
        "locate": "Test Case",
        "locationContext": {
          "methodName": "testReserveFail",
          "methodAnnotations": [
            "@Test"
          ]
        }
      }
    ],
    "pattern_id": 1
  },
  {
    "variableName": "network",
    "variableType": "NetworkVO",
    "mockedClass": "NetworkVO",
    "isReuseableMock": false,
    "mockPattern": "Creation:\n\u2014 Local Mock Creation in Test Case\n\nStubbing:\n\u2014 Test Case\n\nVerification:\n\u2014 None",
    "classContext": {
      "packageName": "com.cloud.network.guru",
      "filePath": "C:\\java tool\\Apache\\cloudstack\\plugins\\network-elements\\brocade-vcs\\src\\test\\java\\com\\cloud\\network\\guru\\BrocadeVcsGuestNetworkGuruTest.java",
      "className": "BrocadeVcsGuestNetworkGuruTest"
    },
    "statements": [
      {
        "type": "DECLARATION",
        "code": "final NetworkVO network = mock(NetworkVO.class);",
        "line": 446,
        "locate": "Test Case",
        "locationContext": {
          "methodName": "testDeallocate",
          "methodAnnotations": [
            "@Test"
          ]
        }
      },
      {
        "type": "STUBBING",
        "code": "when(network.getName()).thenReturn(\"testnetwork\");",
        "line": 447,
        "locate": "Test Case",
        "locationContext": {
          "methodName": "testDeallocate",
          "methodAnnotations": [
            "@Test"
          ]
        }
      },
      {
        "type": "STUBBING",
        "code": "when(network.getState()).thenReturn(State.Implementing);",
        "line": 448,
        "locate": "Test Case",
        "locationContext": {
          "methodName": "testDeallocate",
          "methodAnnotations": [
            "@Test"
          ]
        }
      },
      {
        "type": "STUBBING",
        "code": "when(network.getPhysicalNetworkId()).thenReturn(NETWORK_ID);",
        "line": 449,
        "locate": "Test Case",
        "locationContext": {
          "methodName": "testDeallocate",
          "methodAnnotations": [
            "@Test"
          ]
        }
      },
      {
        "type": "STUBBING",
        "code": "when(network.getDataCenterId()).thenReturn(NETWORK_ID);",
        "line": 450,
        "locate": "Test Case",
        "locationContext": {
          "methodName": "testDeallocate",
          "methodAnnotations": [
            "@Test"
          ]
        }
      }
    ],
    "pattern_id": 1
  },
  {
    "variableName": "network",
    "variableType": "NetworkVO",
    "mockedClass": "NetworkVO",
    "isReuseableMock": false,
    "mockPattern": "Creation:\n\u2014 Local Mock Creation in Test Case\n\nStubbing:\n\u2014 Test Case\n\nVerification:\n\u2014 None",
    "classContext": {
      "packageName": "com.cloud.network.guru",
      "filePath": "C:\\java tool\\Apache\\cloudstack\\plugins\\network-elements\\brocade-vcs\\src\\test\\java\\com\\cloud\\network\\guru\\BrocadeVcsGuestNetworkGuruTest.java",
      "className": "BrocadeVcsGuestNetworkGuruTest"
    },
    "statements": [
      {
        "type": "DECLARATION",
        "code": "final NetworkVO network = mock(NetworkVO.class);",
        "line": 482,
        "locate": "Test Case",
        "locationContext": {
          "methodName": "testDeallocateFail",
          "methodAnnotations": [
            "@Test"
          ]
        }
      },
      {
        "type": "STUBBING",
        "code": "when(network.getName()).thenReturn(\"testnetwork\");",
        "line": 483,
        "locate": "Test Case",
        "locationContext": {
          "methodName": "testDeallocateFail",
          "methodAnnotations": [
            "@Test"
          ]
        }
      },
      {
        "type": "STUBBING",
        "code": "when(network.getState()).thenReturn(State.Implementing);",
        "line": 484,
        "locate": "Test Case",
        "locationContext": {
          "methodName": "testDeallocateFail",
          "methodAnnotations": [
            "@Test"
          ]
        }
      },
      {
        "type": "STUBBING",
        "code": "when(network.getPhysicalNetworkId()).thenReturn(NETWORK_ID);",
        "line": 485,
        "locate": "Test Case",
        "locationContext": {
          "methodName": "testDeallocateFail",
          "methodAnnotations": [
            "@Test"
          ]
        }
      },
      {
        "type": "STUBBING",
        "code": "when(network.getDataCenterId()).thenReturn(NETWORK_ID);",
        "line": 486,
        "locate": "Test Case",
        "locationContext": {
          "methodName": "testDeallocateFail",
          "methodAnnotations": [
            "@Test"
          ]
        }
      }
    ],
    "pattern_id": 1
  },
  {
    "variableName": "network",
    "variableType": "NetworkVO",
    "mockedClass": "NetworkVO",
    "isReuseableMock": false,
    "mockPattern": "Creation:\n\u2014 Local Mock Creation in Test Case\n\nStubbing:\n\u2014 Test Case\n\nVerification:\n\u2014 None",
    "classContext": {
      "packageName": "com.cloud.network.guru",
      "filePath": "C:\\java tool\\Apache\\cloudstack\\plugins\\network-elements\\brocade-vcs\\src\\test\\java\\com\\cloud\\network\\guru\\BrocadeVcsGuestNetworkGuruTest.java",
      "className": "BrocadeVcsGuestNetworkGuruTest"
    },
    "statements": [
      {
        "type": "DECLARATION",
        "code": "final NetworkVO network = mock(NetworkVO.class);",
        "line": 518,
        "locate": "Test Case",
        "locationContext": {
          "methodName": "testTrash",
          "methodAnnotations": [
            "@Test"
          ]
        }
      },
      {
        "type": "STUBBING",
        "code": "when(network.getName()).thenReturn(\"testnetwork\");",
        "line": 519,
        "locate": "Test Case",
        "locationContext": {
          "methodName": "testTrash",
          "methodAnnotations": [
            "@Test"
          ]
        }
      },
      {
        "type": "STUBBING",
        "code": "when(network.getState()).thenReturn(State.Implementing);",
        "line": 520,
        "locate": "Test Case",
        "locationContext": {
          "methodName": "testTrash",
          "methodAnnotations": [
            "@Test"
          ]
        }
      },
      {
        "type": "STUBBING",
        "code": "when(network.getId()).thenReturn(NETWORK_ID);",
        "line": 521,
        "locate": "Test Case",
        "locationContext": {
          "methodName": "testTrash",
          "methodAnnotations": [
            "@Test"
          ]
        }
      },
      {
        "type": "STUBBING",
        "code": "when(network.getDataCenterId()).thenReturn(NETWORK_ID);",
        "line": 522,
        "locate": "Test Case",
        "locationContext": {
          "methodName": "testTrash",
          "methodAnnotations": [
            "@Test"
          ]
        }
      }
    ],
    "pattern_id": 1
  },
  {
    "variableName": "network",
    "variableType": "NetworkVO",
    "mockedClass": "NetworkVO",
    "isReuseableMock": false,
    "mockPattern": "Creation:\n\u2014 Local Mock Creation in Test Case\n\nStubbing:\n\u2014 Test Case\n\nVerification:\n\u2014 None",
    "classContext": {
      "packageName": "com.cloud.network.guru",
      "filePath": "C:\\java tool\\Apache\\cloudstack\\plugins\\network-elements\\brocade-vcs\\src\\test\\java\\com\\cloud\\network\\guru\\BrocadeVcsGuestNetworkGuruTest.java",
      "className": "BrocadeVcsGuestNetworkGuruTest"
    },
    "statements": [
      {
        "type": "DECLARATION",
        "code": "final NetworkVO network = mock(NetworkVO.class);",
        "line": 560,
        "locate": "Test Case",
        "locationContext": {
          "methodName": "testTrashFail",
          "methodAnnotations": [
            "@Test"
          ]
        }
      },
      {
        "type": "STUBBING",
        "code": "when(network.getName()).thenReturn(\"testnetwork\");",
        "line": 561,
        "locate": "Test Case",
        "locationContext": {
          "methodName": "testTrashFail",
          "methodAnnotations": [
            "@Test"
          ]
        }
      },
      {
        "type": "STUBBING",
        "code": "when(network.getState()).thenReturn(State.Implementing);",
        "line": 562,
        "locate": "Test Case",
        "locationContext": {
          "methodName": "testTrashFail",
          "methodAnnotations": [
            "@Test"
          ]
        }
      },
      {
        "type": "STUBBING",
        "code": "when(network.getId()).thenReturn(NETWORK_ID);",
        "line": 563,
        "locate": "Test Case",
        "locationContext": {
          "methodName": "testTrashFail",
          "methodAnnotations": [
            "@Test"
          ]
        }
      },
      {
        "type": "STUBBING",
        "code": "when(network.getDataCenterId()).thenReturn(NETWORK_ID);",
        "line": 564,
        "locate": "Test Case",
        "locationContext": {
          "methodName": "testTrashFail",
          "methodAnnotations": [
            "@Test"
          ]
        }
      }
    ],
    "pattern_id": 1
  },
  {
    "variableName": "network",
    "variableType": "NetworkVO",
    "mockedClass": "NetworkVO",
    "isReuseableMock": false,
    "mockPattern": "Creation:\n\u2014 Local Mock Creation in Test Case\n\nStubbing:\n\u2014 Test Case\n\nVerification:\n\u2014 None",
    "classContext": {
      "packageName": "org.apache.cloudstack.network.contrail.model",
      "filePath": "C:\\java tool\\Apache\\cloudstack\\plugins\\network-elements\\juniper-contrail\\src\\test\\java\\org\\apache\\cloudstack\\network\\contrail\\model\\InstanceIpModelTest.java",
      "className": "InstanceIpModelTest"
    },
    "statements": [
      {
        "type": "DECLARATION",
        "code": "// Create Virtual-Network (VN)\r\nNetworkVO network = mock(NetworkVO.class);",
        "line": 59,
        "locate": "Test Case",
        "locationContext": {
          "methodName": "testCreateInstanceIp",
          "methodAnnotations": [
            "@Test"
          ]
        }
      },
      {
        "type": "STUBBING",
        "code": "when(network.getName()).thenReturn(\"testnetwork\");",
        "line": 60,
        "locate": "Test Case",
        "locationContext": {
          "methodName": "testCreateInstanceIp",
          "methodAnnotations": [
            "@Test"
          ]
        }
      },
      {
        "type": "STUBBING",
        "code": "when(network.getState()).thenReturn(Network.State.Implemented);",
        "line": 61,
        "locate": "Test Case",
        "locationContext": {
          "methodName": "testCreateInstanceIp",
          "methodAnnotations": [
            "@Test"
          ]
        }
      },
      {
        "type": "STUBBING",
        "code": "when(network.getGateway()).thenReturn(\"10.1.1.1\");",
        "line": 62,
        "locate": "Test Case",
        "locationContext": {
          "methodName": "testCreateInstanceIp",
          "methodAnnotations": [
            "@Test"
          ]
        }
      },
      {
        "type": "STUBBING",
        "code": "when(network.getCidr()).thenReturn(\"10.1.1.0/24\");",
        "line": 63,
        "locate": "Test Case",
        "locationContext": {
          "methodName": "testCreateInstanceIp",
          "methodAnnotations": [
            "@Test"
          ]
        }
      },
      {
        "type": "STUBBING",
        "code": "when(network.getPhysicalNetworkId()).thenReturn(42L);",
        "line": 64,
        "locate": "Test Case",
        "locationContext": {
          "methodName": "testCreateInstanceIp",
          "methodAnnotations": [
            "@Test"
          ]
        }
      },
      {
        "type": "STUBBING",
        "code": "when(network.getDomainId()).thenReturn(10L);",
        "line": 65,
        "locate": "Test Case",
        "locationContext": {
          "methodName": "testCreateInstanceIp",
          "methodAnnotations": [
            "@Test"
          ]
        }
      },
      {
        "type": "STUBBING",
        "code": "when(network.getAccountId()).thenReturn(42L);",
        "line": 66,
        "locate": "Test Case",
        "locationContext": {
          "methodName": "testCreateInstanceIp",
          "methodAnnotations": [
            "@Test"
          ]
        }
      }
    ],
    "pattern_id": 1
  },
  {
    "variableName": "network",
    "variableType": "NetworkVO",
    "mockedClass": "NetworkVO",
    "isReuseableMock": false,
    "mockPattern": "Creation:\n\u2014 Local Mock Creation in Test Case\n\nStubbing:\n\u2014 Test Case\n\nVerification:\n\u2014 None",
    "classContext": {
      "packageName": "org.apache.cloudstack.network.contrail.model",
      "filePath": "C:\\java tool\\Apache\\cloudstack\\plugins\\network-elements\\juniper-contrail\\src\\test\\java\\org\\apache\\cloudstack\\network\\contrail\\model\\VirtualMachineModelTest.java",
      "className": "VirtualMachineModelTest"
    },
    "statements": [
      {
        "type": "DECLARATION",
        "code": "// Create Virtual-Network (VN)\r\nNetworkVO network = mock(NetworkVO.class);",
        "line": 83,
        "locate": "Test Case",
        "locationContext": {
          "methodName": "testCreateVirtualMachine",
          "methodAnnotations": [
            "@Test"
          ]
        }
      },
      {
        "type": "STUBBING",
        "code": "when(network.getName()).thenReturn(\"testnetwork\");",
        "line": 84,
        "locate": "Test Case",
        "locationContext": {
          "methodName": "testCreateVirtualMachine",
          "methodAnnotations": [
            "@Test"
          ]
        }
      },
      {
        "type": "STUBBING",
        "code": "when(network.getState()).thenReturn(Network.State.Allocated);",
        "line": 85,
        "locate": "Test Case",
        "locationContext": {
          "methodName": "testCreateVirtualMachine",
          "methodAnnotations": [
            "@Test"
          ]
        }
      },
      {
        "type": "STUBBING",
        "code": "when(network.getGateway()).thenReturn(\"10.1.1.1\");",
        "line": 86,
        "locate": "Test Case",
        "locationContext": {
          "methodName": "testCreateVirtualMachine",
          "methodAnnotations": [
            "@Test"
          ]
        }
      },
      {
        "type": "STUBBING",
        "code": "when(network.getCidr()).thenReturn(\"10.1.1.0/24\");",
        "line": 87,
        "locate": "Test Case",
        "locationContext": {
          "methodName": "testCreateVirtualMachine",
          "methodAnnotations": [
            "@Test"
          ]
        }
      },
      {
        "type": "STUBBING",
        "code": "when(network.getPhysicalNetworkId()).thenReturn(42L);",
        "line": 88,
        "locate": "Test Case",
        "locationContext": {
          "methodName": "testCreateVirtualMachine",
          "methodAnnotations": [
            "@Test"
          ]
        }
      },
      {
        "type": "STUBBING",
        "code": "when(network.getDomainId()).thenReturn(10L);",
        "line": 89,
        "locate": "Test Case",
        "locationContext": {
          "methodName": "testCreateVirtualMachine",
          "methodAnnotations": [
            "@Test"
          ]
        }
      },
      {
        "type": "STUBBING",
        "code": "when(network.getAccountId()).thenReturn(42L);",
        "line": 90,
        "locate": "Test Case",
        "locationContext": {
          "methodName": "testCreateVirtualMachine",
          "methodAnnotations": [
            "@Test"
          ]
        }
      }
    ],
    "pattern_id": 1
  },
  {
    "variableName": "network",
    "variableType": "NetworkVO",
    "mockedClass": "NetworkVO",
    "isReuseableMock": false,
    "mockPattern": "Creation:\n\u2014 Local Mock Creation in Test Case\n\nStubbing:\n\u2014 Test Case\n\nVerification:\n\u2014 None",
    "classContext": {
      "packageName": "org.apache.cloudstack.network.contrail.model",
      "filePath": "C:\\java tool\\Apache\\cloudstack\\plugins\\network-elements\\juniper-contrail\\src\\test\\java\\org\\apache\\cloudstack\\network\\contrail\\model\\VirtualNetworkModelTest.java",
      "className": "VirtualNetworkModelTest"
    },
    "statements": [
      {
        "type": "DECLARATION",
        "code": "// Create Virtual-Network (VN)\r\nNetworkVO network = mock(NetworkVO.class);",
        "line": 188,
        "locate": "Test Case",
        "locationContext": {
          "methodName": "testCreateVirtualNetwork",
          "methodAnnotations": [
            "@Test"
          ]
        }
      },
      {
        "type": "STUBBING",
        "code": "when(network.getName()).thenReturn(\"testnetwork\");",
        "line": 189,
        "locate": "Test Case",
        "locationContext": {
          "methodName": "testCreateVirtualNetwork",
          "methodAnnotations": [
            "@Test"
          ]
        }
      },
      {
        "type": "STUBBING",
        "code": "when(network.getState()).thenReturn(State.Allocated);",
        "line": 190,
        "locate": "Test Case",
        "locationContext": {
          "methodName": "testCreateVirtualNetwork",
          "methodAnnotations": [
            "@Test"
          ]
        }
      },
      {
        "type": "STUBBING",
        "code": "when(network.getGateway()).thenReturn(\"10.1.1.1\");",
        "line": 191,
        "locate": "Test Case",
        "locationContext": {
          "methodName": "testCreateVirtualNetwork",
          "methodAnnotations": [
            "@Test"
          ]
        }
      },
      {
        "type": "STUBBING",
        "code": "when(network.getCidr()).thenReturn(\"10.1.1.0/24\");",
        "line": 192,
        "locate": "Test Case",
        "locationContext": {
          "methodName": "testCreateVirtualNetwork",
          "methodAnnotations": [
            "@Test"
          ]
        }
      },
      {
        "type": "STUBBING",
        "code": "when(network.getPhysicalNetworkId()).thenReturn(42L);",
        "line": 193,
        "locate": "Test Case",
        "locationContext": {
          "methodName": "testCreateVirtualNetwork",
          "methodAnnotations": [
            "@Test"
          ]
        }
      },
      {
        "type": "STUBBING",
        "code": "when(network.getDomainId()).thenReturn(10L);",
        "line": 194,
        "locate": "Test Case",
        "locationContext": {
          "methodName": "testCreateVirtualNetwork",
          "methodAnnotations": [
            "@Test"
          ]
        }
      },
      {
        "type": "STUBBING",
        "code": "when(network.getAccountId()).thenReturn(42L);",
        "line": 195,
        "locate": "Test Case",
        "locationContext": {
          "methodName": "testCreateVirtualNetwork",
          "methodAnnotations": [
            "@Test"
          ]
        }
      }
    ],
    "pattern_id": 1
  },
  {
    "variableName": "network",
    "variableType": "NetworkVO",
    "mockedClass": "NetworkVO",
    "isReuseableMock": false,
    "mockPattern": "Creation:\n\u2014 Local Mock Creation in Test Case\n\nStubbing:\n\u2014 Test Case\n\nVerification:\n\u2014 None",
    "classContext": {
      "packageName": "org.apache.cloudstack.network.contrail.model",
      "filePath": "C:\\java tool\\Apache\\cloudstack\\plugins\\network-elements\\juniper-contrail\\src\\test\\java\\org\\apache\\cloudstack\\network\\contrail\\model\\VMInterfaceModelTest.java",
      "className": "VMInterfaceModelTest"
    },
    "statements": [
      {
        "type": "DECLARATION",
        "code": "// Create Virtual-Network (VN)\r\nNetworkVO network = mock(NetworkVO.class);",
        "line": 61,
        "locate": "Test Case",
        "locationContext": {
          "methodName": "testCreateVMInterface",
          "methodAnnotations": [
            "@Test"
          ]
        }
      },
      {
        "type": "STUBBING",
        "code": "when(network.getName()).thenReturn(\"testnetwork\");",
        "line": 62,
        "locate": "Test Case",
        "locationContext": {
          "methodName": "testCreateVMInterface",
          "methodAnnotations": [
            "@Test"
          ]
        }
      },
      {
        "type": "STUBBING",
        "code": "when(network.getState()).thenReturn(Network.State.Implemented);",
        "line": 63,
        "locate": "Test Case",
        "locationContext": {
          "methodName": "testCreateVMInterface",
          "methodAnnotations": [
            "@Test"
          ]
        }
      },
      {
        "type": "STUBBING",
        "code": "when(network.getGateway()).thenReturn(\"10.1.1.1\");",
        "line": 64,
        "locate": "Test Case",
        "locationContext": {
          "methodName": "testCreateVMInterface",
          "methodAnnotations": [
            "@Test"
          ]
        }
      },
      {
        "type": "STUBBING",
        "code": "when(network.getCidr()).thenReturn(\"10.1.1.0/24\");",
        "line": 65,
        "locate": "Test Case",
        "locationContext": {
          "methodName": "testCreateVMInterface",
          "methodAnnotations": [
            "@Test"
          ]
        }
      },
      {
        "type": "STUBBING",
        "code": "when(network.getPhysicalNetworkId()).thenReturn(42L);",
        "line": 66,
        "locate": "Test Case",
        "locationContext": {
          "methodName": "testCreateVMInterface",
          "methodAnnotations": [
            "@Test"
          ]
        }
      },
      {
        "type": "STUBBING",
        "code": "when(network.getDomainId()).thenReturn(10L);",
        "line": 67,
        "locate": "Test Case",
        "locationContext": {
          "methodName": "testCreateVMInterface",
          "methodAnnotations": [
            "@Test"
          ]
        }
      },
      {
        "type": "STUBBING",
        "code": "when(network.getAccountId()).thenReturn(42L);",
        "line": 68,
        "locate": "Test Case",
        "locationContext": {
          "methodName": "testCreateVMInterface",
          "methodAnnotations": [
            "@Test"
          ]
        }
      }
    ],
    "pattern_id": 1
  },
  {
    "variableName": "network",
    "variableType": "NetworkVO",
    "mockedClass": "NetworkVO",
    "isReuseableMock": false,
    "mockPattern": "Creation:\n\u2014 Local Mock Creation in Test Case\n\nStubbing:\n\u2014 Test Case\n\nVerification:\n\u2014 None",
    "classContext": {
      "packageName": "com.cloud.network.guru",
      "filePath": "C:\\java tool\\Apache\\cloudstack\\plugins\\network-elements\\nicira-nvp\\src\\test\\java\\com\\cloud\\network\\guru\\NiciraNvpGuestNetworkGuruTest.java",
      "className": "NiciraNvpGuestNetworkGuruTest"
    },
    "statements": [
      {
        "type": "DECLARATION",
        "code": "final NetworkVO network = mock(NetworkVO.class);",
        "line": 268,
        "locate": "Test Case",
        "locationContext": {
          "methodName": "testImplement",
          "methodAnnotations": [
            "@Test"
          ]
        }
      },
      {
        "type": "STUBBING",
        "code": "when(network.getName()).thenReturn(\"testnetwork\");",
        "line": 269,
        "locate": "Test Case",
        "locationContext": {
          "methodName": "testImplement",
          "methodAnnotations": [
            "@Test"
          ]
        }
      },
      {
        "type": "STUBBING",
        "code": "when(network.getState()).thenReturn(State.Implementing);",
        "line": 270,
        "locate": "Test Case",
        "locationContext": {
          "methodName": "testImplement",
          "methodAnnotations": [
            "@Test"
          ]
        }
      },
      {
        "type": "STUBBING",
        "code": "when(network.getPhysicalNetworkId()).thenReturn(NETWORK_ID);",
        "line": 271,
        "locate": "Test Case",
        "locationContext": {
          "methodName": "testImplement",
          "methodAnnotations": [
            "@Test"
          ]
        }
      }
    ],
    "pattern_id": 1
  },
  {
    "variableName": "network",
    "variableType": "NetworkVO",
    "mockedClass": "NetworkVO",
    "isReuseableMock": false,
    "mockPattern": "Creation:\n\u2014 Local Mock Creation in Test Case\n\nStubbing:\n\u2014 Test Case\n\nVerification:\n\u2014 None",
    "classContext": {
      "packageName": "com.cloud.network.guru",
      "filePath": "C:\\java tool\\Apache\\cloudstack\\plugins\\network-elements\\nicira-nvp\\src\\test\\java\\com\\cloud\\network\\guru\\NiciraNvpGuestNetworkGuruTest.java",
      "className": "NiciraNvpGuestNetworkGuruTest"
    },
    "statements": [
      {
        "type": "DECLARATION",
        "code": "final NetworkVO network = mock(NetworkVO.class);",
        "line": 323,
        "locate": "Test Case",
        "locationContext": {
          "methodName": "testImplementWithCidr",
          "methodAnnotations": [
            "@Test"
          ]
        }
      },
      {
        "type": "STUBBING",
        "code": "when(network.getName()).thenReturn(\"testnetwork\");",
        "line": 324,
        "locate": "Test Case",
        "locationContext": {
          "methodName": "testImplementWithCidr",
          "methodAnnotations": [
            "@Test"
          ]
        }
      },
      {
        "type": "STUBBING",
        "code": "when(network.getState()).thenReturn(State.Implementing);",
        "line": 325,
        "locate": "Test Case",
        "locationContext": {
          "methodName": "testImplementWithCidr",
          "methodAnnotations": [
            "@Test"
          ]
        }
      },
      {
        "type": "STUBBING",
        "code": "when(network.getGateway()).thenReturn(\"10.1.1.1\");",
        "line": 326,
        "locate": "Test Case",
        "locationContext": {
          "methodName": "testImplementWithCidr",
          "methodAnnotations": [
            "@Test"
          ]
        }
      },
      {
        "type": "STUBBING",
        "code": "when(network.getCidr()).thenReturn(\"10.1.1.0/24\");",
        "line": 327,
        "locate": "Test Case",
        "locationContext": {
          "methodName": "testImplementWithCidr",
          "methodAnnotations": [
            "@Test"
          ]
        }
      },
      {
        "type": "STUBBING",
        "code": "when(network.getPhysicalNetworkId()).thenReturn(NETWORK_ID);",
        "line": 328,
        "locate": "Test Case",
        "locationContext": {
          "methodName": "testImplementWithCidr",
          "methodAnnotations": [
            "@Test"
          ]
        }
      }
    ],
    "pattern_id": 1
  },
  {
    "variableName": "network",
    "variableType": "NetworkVO",
    "mockedClass": "NetworkVO",
    "isReuseableMock": false,
    "mockPattern": "Creation:\n\u2014 Local Mock Creation in Test Case\n\nStubbing:\n\u2014 Test Case\n\nVerification:\n\u2014 None",
    "classContext": {
      "packageName": "com.cloud.network.guru",
      "filePath": "C:\\java tool\\Apache\\cloudstack\\plugins\\network-elements\\nicira-nvp\\src\\test\\java\\com\\cloud\\network\\guru\\NiciraNvpGuestNetworkGuruTest.java",
      "className": "NiciraNvpGuestNetworkGuruTest"
    },
    "statements": [
      {
        "type": "DECLARATION",
        "code": "final NetworkVO network = mock(NetworkVO.class);",
        "line": 382,
        "locate": "Test Case",
        "locationContext": {
          "methodName": "testImplementURIException",
          "methodAnnotations": [
            "@Test"
          ]
        }
      },
      {
        "type": "STUBBING",
        "code": "when(network.getName()).thenReturn(\"testnetwork\");",
        "line": 383,
        "locate": "Test Case",
        "locationContext": {
          "methodName": "testImplementURIException",
          "methodAnnotations": [
            "@Test"
          ]
        }
      },
      {
        "type": "STUBBING",
        "code": "when(network.getState()).thenReturn(State.Implementing);",
        "line": 384,
        "locate": "Test Case",
        "locationContext": {
          "methodName": "testImplementURIException",
          "methodAnnotations": [
            "@Test"
          ]
        }
      },
      {
        "type": "STUBBING",
        "code": "when(network.getPhysicalNetworkId()).thenReturn(NETWORK_ID);",
        "line": 385,
        "locate": "Test Case",
        "locationContext": {
          "methodName": "testImplementURIException",
          "methodAnnotations": [
            "@Test"
          ]
        }
      }
    ],
    "pattern_id": 1
  },
  {
    "variableName": "network",
    "variableType": "NetworkVO",
    "mockedClass": "NetworkVO",
    "isReuseableMock": false,
    "mockPattern": "Creation:\n\u2014 Local Mock Creation in Test Case\n\nStubbing:\n\u2014 Test Case\n\nVerification:\n\u2014 None",
    "classContext": {
      "packageName": "com.cloud.network.guru",
      "filePath": "C:\\java tool\\Apache\\cloudstack\\plugins\\network-elements\\nicira-nvp\\src\\test\\java\\com\\cloud\\network\\guru\\NiciraNvpGuestNetworkGuruTest.java",
      "className": "NiciraNvpGuestNetworkGuruTest"
    },
    "statements": [
      {
        "type": "DECLARATION",
        "code": "final NetworkVO network = mock(NetworkVO.class);",
        "line": 437,
        "locate": "Test Case",
        "locationContext": {
          "methodName": "testShutdown",
          "methodAnnotations": [
            "@Test"
          ]
        }
      },
      {
        "type": "STUBBING",
        "code": "when(network.getName()).thenReturn(\"testnetwork\");",
        "line": 438,
        "locate": "Test Case",
        "locationContext": {
          "methodName": "testShutdown",
          "methodAnnotations": [
            "@Test"
          ]
        }
      },
      {
        "type": "STUBBING",
        "code": "when(network.getState()).thenReturn(State.Implementing);",
        "line": 439,
        "locate": "Test Case",
        "locationContext": {
          "methodName": "testShutdown",
          "methodAnnotations": [
            "@Test"
          ]
        }
      },
      {
        "type": "STUBBING",
        "code": "when(network.getBroadcastDomainType()).thenReturn(BroadcastDomainType.Lswitch);",
        "line": 440,
        "locate": "Test Case",
        "locationContext": {
          "methodName": "testShutdown",
          "methodAnnotations": [
            "@Test"
          ]
        }
      },
      {
        "type": "STUBBING",
        "code": "when(network.getBroadcastUri()).thenReturn(new URI(\"lswitch:aaaaa\"));",
        "line": 441,
        "locate": "Test Case",
        "locationContext": {
          "methodName": "testShutdown",
          "methodAnnotations": [
            "@Test"
          ]
        }
      },
      {
        "type": "STUBBING",
        "code": "when(network.getPhysicalNetworkId()).thenReturn(NETWORK_ID);",
        "line": 442,
        "locate": "Test Case",
        "locationContext": {
          "methodName": "testShutdown",
          "methodAnnotations": [
            "@Test"
          ]
        }
      }
    ],
    "pattern_id": 1
  },
  {
    "variableName": "networkVO",
    "variableType": "NetworkVO",
    "mockedClass": "NetworkVO",
    "isReuseableMock": false,
    "mockPattern": "Creation:\n\u2014 Local Mock Creation in Test Case\n\nStubbing:\n\u2014 Test Case\n\nVerification:\n\u2014 None",
    "classContext": {
      "packageName": "org.apache.cloudstack.network.tungsten.service",
      "filePath": "C:\\java tool\\Apache\\cloudstack\\plugins\\network-elements\\tungsten\\src\\test\\java\\org\\apache\\cloudstack\\network\\tungsten\\service\\TungstenServiceImplTest.java",
      "className": "TungstenServiceImplTest"
    },
    "statements": [
      {
        "type": "DECLARATION",
        "code": "NetworkVO networkVO = mock(NetworkVO.class);",
        "line": 596,
        "locate": "Test Case",
        "locationContext": {
          "methodName": "allocateDnsIpAddressTest",
          "methodAnnotations": [
            "@Test"
          ]
        }
      },
      {
        "type": "STUBBING",
        "code": "when(networkVO.getTrafficType()).thenReturn(Networks.TrafficType.Guest);",
        "line": 602,
        "locate": "Test Case",
        "locationContext": {
          "methodName": "allocateDnsIpAddressTest",
          "methodAnnotations": [
            "@Test"
          ]
        }
      },
      {
        "type": "STUBBING",
        "code": "when(networkVO.getGuestType()).thenReturn(Network.GuestType.Isolated);",
        "line": 603,
        "locate": "Test Case",
        "locationContext": {
          "methodName": "allocateDnsIpAddressTest",
          "methodAnnotations": [
            "@Test"
          ]
        }
      },
      {
        "type": "STUBBING",
        "code": "when(networkVO.getCidr()).thenReturn(\"192.168.100.0/24\");",
        "line": 605,
        "locate": "Test Case",
        "locationContext": {
          "methodName": "allocateDnsIpAddressTest",
          "methodAnnotations": [
            "@Test"
          ]
        }
      }
    ],
    "pattern_id": 1
  },
  {
    "variableName": "networkVO",
    "variableType": "NetworkVO",
    "mockedClass": "NetworkVO",
    "isReuseableMock": false,
    "mockPattern": "Creation:\n\u2014 Local Mock Creation in Test Case\n\nStubbing:\n\u2014 Test Case\n\nVerification:\n\u2014 None",
    "classContext": {
      "packageName": "org.apache.cloudstack.network.tungsten.service",
      "filePath": "C:\\java tool\\Apache\\cloudstack\\plugins\\network-elements\\tungsten\\src\\test\\java\\org\\apache\\cloudstack\\network\\tungsten\\service\\TungstenServiceImplTest.java",
      "className": "TungstenServiceImplTest"
    },
    "statements": [
      {
        "type": "DECLARATION",
        "code": "NetworkVO networkVO = mock(NetworkVO.class);",
        "line": 613,
        "locate": "Test Case",
        "locationContext": {
          "methodName": "deallocateDnsIpAddressTest",
          "methodAnnotations": [
            "@Test"
          ]
        }
      },
      {
        "type": "STUBBING",
        "code": "when(networkVO.getTrafficType()).thenReturn(Networks.TrafficType.Guest);",
        "line": 619,
        "locate": "Test Case",
        "locationContext": {
          "methodName": "deallocateDnsIpAddressTest",
          "methodAnnotations": [
            "@Test"
          ]
        }
      },
      {
        "type": "STUBBING",
        "code": "when(networkVO.getGuestType()).thenReturn(Network.GuestType.Isolated);",
        "line": 620,
        "locate": "Test Case",
        "locationContext": {
          "methodName": "deallocateDnsIpAddressTest",
          "methodAnnotations": [
            "@Test"
          ]
        }
      }
    ],
    "pattern_id": 1
  },
  {
    "variableName": "network",
    "variableType": "NetworkVO",
    "mockedClass": "NetworkVO",
    "isReuseableMock": false,
    "mockPattern": "Creation:\n\u2014 Local Mock Creation in Test Case\n\nStubbing:\n\u2014 Test Case\n\nVerification:\n\u2014 None",
    "classContext": {
      "packageName": "com.cloud.network.guru",
      "filePath": "C:\\java tool\\Apache\\cloudstack\\plugins\\network-elements\\vxlan\\src\\test\\java\\com\\cloud\\network\\guru\\VxlanGuestNetworkGuruTest.java",
      "className": "VxlanGuestNetworkGuruTest"
    },
    "statements": [
      {
        "type": "DECLARATION",
        "code": "NetworkVO network = mock(NetworkVO.class);",
        "line": 158,
        "locate": "Test Case",
        "locationContext": {
          "methodName": "testImplement",
          "methodAnnotations": [
            "@Test"
          ]
        }
      },
      {
        "type": "STUBBING",
        "code": "when(network.getName()).thenReturn(\"testnetwork\");",
        "line": 159,
        "locate": "Test Case",
        "locationContext": {
          "methodName": "testImplement",
          "methodAnnotations": [
            "@Test"
          ]
        }
      },
      {
        "type": "STUBBING",
        "code": "when(network.getState()).thenReturn(State.Implementing);",
        "line": 160,
        "locate": "Test Case",
        "locationContext": {
          "methodName": "testImplement",
          "methodAnnotations": [
            "@Test"
          ]
        }
      },
      {
        "type": "STUBBING",
        "code": "when(network.getPhysicalNetworkId()).thenReturn(42L);",
        "line": 161,
        "locate": "Test Case",
        "locationContext": {
          "methodName": "testImplement",
          "methodAnnotations": [
            "@Test"
          ]
        }
      }
    ],
    "pattern_id": 1
  },
  {
    "variableName": "network",
    "variableType": "NetworkVO",
    "mockedClass": "NetworkVO",
    "isReuseableMock": false,
    "mockPattern": "Creation:\n\u2014 Local Mock Creation in Test Case\n\nStubbing:\n\u2014 Test Case\n\nVerification:\n\u2014 None",
    "classContext": {
      "packageName": "com.cloud.network.guru",
      "filePath": "C:\\java tool\\Apache\\cloudstack\\plugins\\network-elements\\vxlan\\src\\test\\java\\com\\cloud\\network\\guru\\VxlanGuestNetworkGuruTest.java",
      "className": "VxlanGuestNetworkGuruTest"
    },
    "statements": [
      {
        "type": "DECLARATION",
        "code": "NetworkVO network = mock(NetworkVO.class);",
        "line": 200,
        "locate": "Test Case",
        "locationContext": {
          "methodName": "testImplementWithCidr",
          "methodAnnotations": [
            "@Test"
          ]
        }
      },
      {
        "type": "STUBBING",
        "code": "when(network.getName()).thenReturn(\"testnetwork\");",
        "line": 201,
        "locate": "Test Case",
        "locationContext": {
          "methodName": "testImplementWithCidr",
          "methodAnnotations": [
            "@Test"
          ]
        }
      },
      {
        "type": "STUBBING",
        "code": "when(network.getState()).thenReturn(State.Implementing);",
        "line": 202,
        "locate": "Test Case",
        "locationContext": {
          "methodName": "testImplementWithCidr",
          "methodAnnotations": [
            "@Test"
          ]
        }
      },
      {
        "type": "STUBBING",
        "code": "when(network.getGateway()).thenReturn(\"10.1.1.1\");",
        "line": 203,
        "locate": "Test Case",
        "locationContext": {
          "methodName": "testImplementWithCidr",
          "methodAnnotations": [
            "@Test"
          ]
        }
      },
      {
        "type": "STUBBING",
        "code": "when(network.getCidr()).thenReturn(\"10.1.1.0/24\");",
        "line": 204,
        "locate": "Test Case",
        "locationContext": {
          "methodName": "testImplementWithCidr",
          "methodAnnotations": [
            "@Test"
          ]
        }
      },
      {
        "type": "STUBBING",
        "code": "when(network.getPhysicalNetworkId()).thenReturn(42L);",
        "line": 205,
        "locate": "Test Case",
        "locationContext": {
          "methodName": "testImplementWithCidr",
          "methodAnnotations": [
            "@Test"
          ]
        }
      }
    ],
    "pattern_id": 1
  },
  {
    "variableName": "network",
    "variableType": "NetworkVO",
    "mockedClass": "NetworkVO",
    "isReuseableMock": false,
    "mockPattern": "Creation:\n\u2014 Local Mock Creation in Test Case\n\nStubbing:\n\u2014 Test Case\n\nVerification:\n\u2014 None",
    "classContext": {
      "packageName": "com.cloud.network.guru",
      "filePath": "C:\\java tool\\Apache\\cloudstack\\plugins\\network-elements\\vxlan\\src\\test\\java\\com\\cloud\\network\\guru\\VxlanGuestNetworkGuruTest.java",
      "className": "VxlanGuestNetworkGuruTest"
    },
    "statements": [
      {
        "type": "DECLARATION",
        "code": "NetworkVO network = mock(NetworkVO.class);",
        "line": 247,
        "locate": "Test Case",
        "locationContext": {
          "methodName": "testShutdown",
          "methodAnnotations": [
            "@Test"
          ]
        }
      },
      {
        "type": "STUBBING",
        "code": "when(network.getName()).thenReturn(\"testnetwork\");",
        "line": 248,
        "locate": "Test Case",
        "locationContext": {
          "methodName": "testShutdown",
          "methodAnnotations": [
            "@Test"
          ]
        }
      },
      {
        "type": "STUBBING",
        "code": "when(network.getState()).thenReturn(State.Implementing);",
        "line": 249,
        "locate": "Test Case",
        "locationContext": {
          "methodName": "testShutdown",
          "methodAnnotations": [
            "@Test"
          ]
        }
      },
      {
        "type": "STUBBING",
        "code": "when(network.getBroadcastDomainType()).thenReturn(BroadcastDomainType.Vxlan);",
        "line": 250,
        "locate": "Test Case",
        "locationContext": {
          "methodName": "testShutdown",
          "methodAnnotations": [
            "@Test"
          ]
        }
      },
      {
        "type": "STUBBING",
        "code": "when(network.getBroadcastUri()).thenReturn(new URI(\"vxlan:12345\"));",
        "line": 251,
        "locate": "Test Case",
        "locationContext": {
          "methodName": "testShutdown",
          "methodAnnotations": [
            "@Test"
          ]
        }
      },
      {
        "type": "STUBBING",
        "code": "when(network.getPhysicalNetworkId()).thenReturn(42L);",
        "line": 252,
        "locate": "Test Case",
        "locationContext": {
          "methodName": "testShutdown",
          "methodAnnotations": [
            "@Test"
          ]
        }
      }
    ],
    "pattern_id": 1
  },
  {
    "variableName": "network",
    "variableType": "NetworkVO",
    "mockedClass": "NetworkVO",
    "isReuseableMock": false,
    "mockPattern": "Creation:\n\u2014 Local Mock Creation in Test Case\n\nStubbing:\n\u2014 Test Case\n\nVerification:\n\u2014 None",
    "classContext": {
      "packageName": "com.cloud.api.query",
      "filePath": "C:\\java tool\\Apache\\cloudstack\\server\\src\\test\\java\\com\\cloud\\api\\query\\QueryManagerImplTest.java",
      "className": "QueryManagerImplTest"
    },
    "statements": [
      {
        "type": "DECLARATION",
        "code": "NetworkVO network = Mockito.mock(NetworkVO.class);",
        "line": 127,
        "locate": "Test Case",
        "locationContext": {
          "methodName": "searchForEventsSuccess",
          "methodAnnotations": [
            "@Test"
          ]
        }
      },
      {
        "type": "STUBBING",
        "code": "Mockito.when(network.getId()).thenReturn(1L);",
        "line": 128,
        "locate": "Test Case",
        "locationContext": {
          "methodName": "searchForEventsSuccess",
          "methodAnnotations": [
            "@Test"
          ]
        }
      },
      {
        "type": "STUBBING",
        "code": "Mockito.when(network.getAccountId()).thenReturn(account.getId());",
        "line": 129,
        "locate": "Test Case",
        "locationContext": {
          "methodName": "searchForEventsSuccess",
          "methodAnnotations": [
            "@Test"
          ]
        }
      }
    ],
    "pattern_id": 1
  },
  {
    "variableName": "network",
    "variableType": "NetworkVO",
    "mockedClass": "NetworkVO",
    "isReuseableMock": false,
    "mockPattern": "Creation:\n\u2014 Local Mock Creation in Test Case\n\nStubbing:\n\u2014 Test Case\n\nVerification:\n\u2014 None",
    "classContext": {
      "packageName": "com.cloud.api.query",
      "filePath": "C:\\java tool\\Apache\\cloudstack\\server\\src\\test\\java\\com\\cloud\\api\\query\\QueryManagerImplTest.java",
      "className": "QueryManagerImplTest"
    },
    "statements": [
      {
        "type": "DECLARATION",
        "code": "NetworkVO network = Mockito.mock(NetworkVO.class);",
        "line": 183,
        "locate": "Test Case",
        "locationContext": {
          "methodName": "searchForEventsFailPermissionDenied",
          "methodAnnotations": [
            "@Test"
          ]
        }
      },
      {
        "type": "STUBBING",
        "code": "Mockito.when(network.getId()).thenReturn(1L);",
        "line": 184,
        "locate": "Test Case",
        "locationContext": {
          "methodName": "searchForEventsFailPermissionDenied",
          "methodAnnotations": [
            "@Test"
          ]
        }
      },
      {
        "type": "STUBBING",
        "code": "Mockito.when(network.getAccountId()).thenReturn(2L);",
        "line": 185,
        "locate": "Test Case",
        "locationContext": {
          "methodName": "searchForEventsFailPermissionDenied",
          "methodAnnotations": [
            "@Test"
          ]
        }
      }
    ],
    "pattern_id": 1
  },
  {
    "variableName": "networkMock",
    "variableType": "NetworkVO",
    "mockedClass": "NetworkVO",
    "isReuseableMock": false,
    "mockPattern": "Creation:\n\u2014 Local Mock Creation in Test Case\n\nStubbing:\n\u2014 Test Case\n\nVerification:\n\u2014 None",
    "classContext": {
      "packageName": "com.cloud.network.as",
      "filePath": "C:\\java tool\\Apache\\cloudstack\\server\\src\\test\\java\\com\\cloud\\network\\as\\AutoScaleManagerImplTest.java",
      "className": "AutoScaleManagerImplTest"
    },
    "statements": [
      {
        "type": "DECLARATION",
        "code": "NetworkVO networkMock = Mockito.mock(NetworkVO.class);",
        "line": 1400,
        "locate": "Test Case",
        "locationContext": {
          "methodName": "getVmNetworkIds1",
          "methodAnnotations": [
            "@Test"
          ]
        }
      },
      {
        "type": "STUBBING",
        "code": "when(networkMock.getId()).thenReturn(networkId);",
        "line": 1402,
        "locate": "Test Case",
        "locationContext": {
          "methodName": "getVmNetworkIds1",
          "methodAnnotations": [
            "@Test"
          ]
        }
      }
    ],
    "pattern_id": 1
  },
  {
    "variableName": "networkMock",
    "variableType": "NetworkVO",
    "mockedClass": "NetworkVO",
    "isReuseableMock": false,
    "mockPattern": "Creation:\n\u2014 Local Mock Creation in Test Case\n\nStubbing:\n\u2014 Test Case\n\nVerification:\n\u2014 None",
    "classContext": {
      "packageName": "com.cloud.network.as",
      "filePath": "C:\\java tool\\Apache\\cloudstack\\server\\src\\test\\java\\com\\cloud\\network\\as\\AutoScaleManagerImplTest.java",
      "className": "AutoScaleManagerImplTest"
    },
    "statements": [
      {
        "type": "DECLARATION",
        "code": "NetworkVO networkMock = Mockito.mock(NetworkVO.class);",
        "line": 1413,
        "locate": "Test Case",
        "locationContext": {
          "methodName": "getVmNetworkIds2",
          "methodAnnotations": [
            "@Test"
          ]
        }
      },
      {
        "type": "STUBBING",
        "code": "when(networkMock.getId()).thenReturn(networkId);",
        "line": 1415,
        "locate": "Test Case",
        "locationContext": {
          "methodName": "getVmNetworkIds2",
          "methodAnnotations": [
            "@Test"
          ]
        }
      }
    ],
    "pattern_id": 1
  },
  {
    "variableName": "networkImplemented",
    "variableType": "NetworkVO",
    "mockedClass": "NetworkVO",
    "isReuseableMock": false,
    "mockPattern": "Creation:\n\u2014 Local Mock Creation in Test Case\n\nStubbing:\n\u2014 Test Case\n\nVerification:\n\u2014 None",
    "classContext": {
      "packageName": "com.cloud.network",
      "filePath": "C:\\java tool\\Apache\\cloudstack\\server\\src\\test\\java\\com\\cloud\\network\\IpAddressManagerTest.java",
      "className": "IpAddressManagerTest"
    },
    "statements": [
      {
        "type": "DECLARATION",
        "code": "NetworkVO networkImplemented = Mockito.mock(NetworkVO.class);",
        "line": 161,
        "locate": "Test Case",
        "locationContext": {
          "methodName": "assertSourceNatImplementedNetwork",
          "methodAnnotations": [
            "@Test"
          ]
        }
      },
      {
        "type": "STUBBING",
        "code": "lenient().when(networkImplemented.getTrafficType()).thenReturn(Networks.TrafficType.Guest);",
        "line": 162,
        "locate": "Test Case",
        "locationContext": {
          "methodName": "assertSourceNatImplementedNetwork",
          "methodAnnotations": [
            "@Test"
          ]
        }
      },
      {
        "type": "STUBBING",
        "code": "lenient().when(networkImplemented.getNetworkOfferingId()).thenReturn(8L);",
        "line": 163,
        "locate": "Test Case",
        "locationContext": {
          "methodName": "assertSourceNatImplementedNetwork",
          "methodAnnotations": [
            "@Test"
          ]
        }
      },
      {
        "type": "STUBBING",
        "code": "lenient().when(networkImplemented.getState()).thenReturn(Network.State.Implemented);",
        "line": 164,
        "locate": "Test Case",
        "locationContext": {
          "methodName": "assertSourceNatImplementedNetwork",
          "methodAnnotations": [
            "@Test"
          ]
        }
      },
      {
        "type": "STUBBING",
        "code": "when(networkImplemented.getGuestType()).thenReturn(Network.GuestType.Isolated);",
        "line": 165,
        "locate": "Test Case",
        "locationContext": {
          "methodName": "assertSourceNatImplementedNetwork",
          "methodAnnotations": [
            "@Test"
          ]
        }
      },
      {
        "type": "STUBBING",
        "code": "when(networkImplemented.getVpcId()).thenReturn(null);",
        "line": 166,
        "locate": "Test Case",
        "locationContext": {
          "methodName": "assertSourceNatImplementedNetwork",
          "methodAnnotations": [
            "@Test"
          ]
        }
      },
      {
        "type": "STUBBING",
        "code": "when(networkImplemented.getId()).thenReturn(1L);",
        "line": 167,
        "locate": "Test Case",
        "locationContext": {
          "methodName": "assertSourceNatImplementedNetwork",
          "methodAnnotations": [
            "@Test"
          ]
        }
      }
    ],
    "pattern_id": 1
  },
  {
    "variableName": "networkAllocated",
    "variableType": "NetworkVO",
    "mockedClass": "NetworkVO",
    "isReuseableMock": false,
    "mockPattern": "Creation:\n\u2014 Local Mock Creation in Test Case\n\nStubbing:\n\u2014 Test Case\n\nVerification:\n\u2014 None",
    "classContext": {
      "packageName": "com.cloud.network",
      "filePath": "C:\\java tool\\Apache\\cloudstack\\server\\src\\test\\java\\com\\cloud\\network\\IpAddressManagerTest.java",
      "className": "IpAddressManagerTest"
    },
    "statements": [
      {
        "type": "DECLARATION",
        "code": "NetworkVO networkAllocated = Mockito.mock(NetworkVO.class);",
        "line": 180,
        "locate": "Test Case",
        "locationContext": {
          "methodName": "assertSourceNatAllocatedNetwork",
          "methodAnnotations": [
            "@Test"
          ]
        }
      },
      {
        "type": "STUBBING",
        "code": "lenient().when(networkAllocated.getTrafficType()).thenReturn(Networks.TrafficType.Guest);",
        "line": 181,
        "locate": "Test Case",
        "locationContext": {
          "methodName": "assertSourceNatAllocatedNetwork",
          "methodAnnotations": [
            "@Test"
          ]
        }
      },
      {
        "type": "STUBBING",
        "code": "when(networkAllocated.getNetworkOfferingId()).thenReturn(8L);",
        "line": 182,
        "locate": "Test Case",
        "locationContext": {
          "methodName": "assertSourceNatAllocatedNetwork",
          "methodAnnotations": [
            "@Test"
          ]
        }
      },
      {
        "type": "STUBBING",
        "code": "lenient().when(networkAllocated.getState()).thenReturn(Network.State.Allocated);",
        "line": 183,
        "locate": "Test Case",
        "locationContext": {
          "methodName": "assertSourceNatAllocatedNetwork",
          "methodAnnotations": [
            "@Test"
          ]
        }
      },
      {
        "type": "STUBBING",
        "code": "when(networkAllocated.getGuestType()).thenReturn(Network.GuestType.Isolated);",
        "line": 184,
        "locate": "Test Case",
        "locationContext": {
          "methodName": "assertSourceNatAllocatedNetwork",
          "methodAnnotations": [
            "@Test"
          ]
        }
      },
      {
        "type": "STUBBING",
        "code": "when(networkAllocated.getVpcId()).thenReturn(null);",
        "line": 185,
        "locate": "Test Case",
        "locationContext": {
          "methodName": "assertSourceNatAllocatedNetwork",
          "methodAnnotations": [
            "@Test"
          ]
        }
      },
      {
        "type": "STUBBING",
        "code": "when(networkAllocated.getId()).thenReturn(2L);",
        "line": 186,
        "locate": "Test Case",
        "locationContext": {
          "methodName": "assertSourceNatAllocatedNetwork",
          "methodAnnotations": [
            "@Test"
          ]
        }
      }
    ],
    "pattern_id": 1
  },
  {
    "variableName": "networkNat",
    "variableType": "NetworkVO",
    "mockedClass": "NetworkVO",
    "isReuseableMock": false,
    "mockPattern": "Creation:\n\u2014 Local Mock Creation in Test Case\n\nStubbing:\n\u2014 Test Case\n\nVerification:\n\u2014 None",
    "classContext": {
      "packageName": "com.cloud.network",
      "filePath": "C:\\java tool\\Apache\\cloudstack\\server\\src\\test\\java\\com\\cloud\\network\\IpAddressManagerTest.java",
      "className": "IpAddressManagerTest"
    },
    "statements": [
      {
        "type": "DECLARATION",
        "code": "NetworkVO networkNat = Mockito.mock(NetworkVO.class);",
        "line": 197,
        "locate": "Test Case",
        "locationContext": {
          "methodName": "assertExistingSourceNatAllocatedNetwork",
          "methodAnnotations": [
            "@Test"
          ]
        }
      },
      {
        "type": "STUBBING",
        "code": "lenient().when(networkNat.getTrafficType()).thenReturn(Networks.TrafficType.Guest);",
        "line": 198,
        "locate": "Test Case",
        "locationContext": {
          "methodName": "assertExistingSourceNatAllocatedNetwork",
          "methodAnnotations": [
            "@Test"
          ]
        }
      },
      {
        "type": "STUBBING",
        "code": "when(networkNat.getNetworkOfferingId()).thenReturn(8L);",
        "line": 199,
        "locate": "Test Case",
        "locationContext": {
          "methodName": "assertExistingSourceNatAllocatedNetwork",
          "methodAnnotations": [
            "@Test"
          ]
        }
      },
      {
        "type": "STUBBING",
        "code": "lenient().when(networkNat.getState()).thenReturn(Network.State.Implemented);",
        "line": 200,
        "locate": "Test Case",
        "locationContext": {
          "methodName": "assertExistingSourceNatAllocatedNetwork",
          "methodAnnotations": [
            "@Test"
          ]
        }
      },
      {
        "type": "STUBBING",
        "code": "lenient().when(networkNat.getGuestType()).thenReturn(Network.GuestType.Isolated);",
        "line": 201,
        "locate": "Test Case",
        "locationContext": {
          "methodName": "assertExistingSourceNatAllocatedNetwork",
          "methodAnnotations": [
            "@Test"
          ]
        }
      },
      {
        "type": "STUBBING",
        "code": "when(networkNat.getId()).thenReturn(3L);",
        "line": 202,
        "locate": "Test Case",
        "locationContext": {
          "methodName": "assertExistingSourceNatAllocatedNetwork",
          "methodAnnotations": [
            "@Test"
          ]
        }
      },
      {
        "type": "STUBBING",
        "code": "lenient().when(networkNat.getVpcId()).thenReturn(null);",
        "line": 203,
        "locate": "Test Case",
        "locationContext": {
          "methodName": "assertExistingSourceNatAllocatedNetwork",
          "methodAnnotations": [
            "@Test"
          ]
        }
      },
      {
        "type": "STUBBING",
        "code": "when(networkNat.getId()).thenReturn(3L);",
        "line": 204,
        "locate": "Test Case",
        "locationContext": {
          "methodName": "assertExistingSourceNatAllocatedNetwork",
          "methodAnnotations": [
            "@Test"
          ]
        }
      }
    ],
    "pattern_id": 1
  },
  {
    "variableName": "network",
    "variableType": "NetworkVO",
    "mockedClass": "NetworkVO",
    "isReuseableMock": false,
    "mockPattern": "Creation:\n\u2014 Local Mock Creation in Test Case\n\nStubbing:\n\u2014 Test Case\n\nVerification:\n\u2014 None",
    "classContext": {
      "packageName": "com.cloud.network",
      "filePath": "C:\\java tool\\Apache\\cloudstack\\server\\src\\test\\java\\com\\cloud\\network\\Ipv6ServiceImplTest.java",
      "className": "Ipv6ServiceImplTest"
    },
    "statements": [
      {
        "type": "DECLARATION",
        "code": "NetworkVO network = Mockito.mock(NetworkVO.class);",
        "line": 567,
        "locate": "Test Case",
        "locationContext": {
          "methodName": "testUpdateIpv6RoutesForVpcResponse",
          "methodAnnotations": [
            "@Test"
          ]
        }
      },
      {
        "type": "STUBBING",
        "code": "Mockito.when(network.getIp6Cidr()).thenReturn(cidr);",
        "line": 568,
        "locate": "Test Case",
        "locationContext": {
          "methodName": "testUpdateIpv6RoutesForVpcResponse",
          "methodAnnotations": [
            "@Test"
          ]
        }
      }
    ],
    "pattern_id": 1
  },
  {
    "variableName": "network",
    "variableType": "NetworkVO",
    "mockedClass": "NetworkVO",
    "isReuseableMock": false,
    "mockPattern": "Creation:\n\u2014 Local Mock Creation in Test Case\n\nStubbing:\n\u2014 Test Case\n\nVerification:\n\u2014 None",
    "classContext": {
      "packageName": "com.cloud.network",
      "filePath": "C:\\java tool\\Apache\\cloudstack\\server\\src\\test\\java\\com\\cloud\\network\\NetworkModelTest.java",
      "className": "NetworkModelTest"
    },
    "statements": [
      {
        "type": "DECLARATION",
        "code": "NetworkVO network = mock(NetworkVO.class);",
        "line": 304,
        "locate": "Test Case",
        "locationContext": {
          "methodName": "testCheckNetworkPermissions",
          "methodAnnotations": [
            "@Test"
          ]
        }
      },
      {
        "type": "STUBBING",
        "code": "when(network.getGuestType()).thenReturn(Network.GuestType.Isolated);",
        "line": 305,
        "locate": "Test Case",
        "locationContext": {
          "methodName": "testCheckNetworkPermissions",
          "methodAnnotations": [
            "@Test"
          ]
        }
      },
      {
        "type": "STUBBING",
        "code": "when(network.getAccountId()).thenReturn(accountId);",
        "line": 306,
        "locate": "Test Case",
        "locationContext": {
          "methodName": "testCheckNetworkPermissions",
          "methodAnnotations": [
            "@Test"
          ]
        }
      }
    ],
    "pattern_id": 1
  },
  {
    "variableName": "network",
    "variableType": "NetworkVO",
    "mockedClass": "NetworkVO",
    "isReuseableMock": false,
    "mockPattern": "Creation:\n\u2014 Local Mock Creation in Test Case\n\nStubbing:\n\u2014 Test Case\n\nVerification:\n\u2014 None",
    "classContext": {
      "packageName": "com.cloud.network",
      "filePath": "C:\\java tool\\Apache\\cloudstack\\server\\src\\test\\java\\com\\cloud\\network\\NetworkModelTest.java",
      "className": "NetworkModelTest"
    },
    "statements": [
      {
        "type": "DECLARATION",
        "code": "NetworkVO network = mock(NetworkVO.class);",
        "line": 319,
        "locate": "Test Case",
        "locationContext": {
          "methodName": "testCheckNetworkPermissionsForAdmin",
          "methodAnnotations": [
            "@Test"
          ]
        }
      },
      {
        "type": "STUBBING",
        "code": "when(network.getGuestType()).thenReturn(Network.GuestType.Isolated);",
        "line": 320,
        "locate": "Test Case",
        "locationContext": {
          "methodName": "testCheckNetworkPermissionsForAdmin",
          "methodAnnotations": [
            "@Test"
          ]
        }
      },
      {
        "type": "STUBBING",
        "code": "when(network.getAccountId()).thenReturn(accountId);",
        "line": 321,
        "locate": "Test Case",
        "locationContext": {
          "methodName": "testCheckNetworkPermissionsForAdmin",
          "methodAnnotations": [
            "@Test"
          ]
        }
      }
    ],
    "pattern_id": 1
  },
  {
    "variableName": "network",
    "variableType": "NetworkVO",
    "mockedClass": "NetworkVO",
    "isReuseableMock": false,
    "mockPattern": "Creation:\n\u2014 Local Mock Creation in Test Case\n\nStubbing:\n\u2014 Test Case\n\nVerification:\n\u2014 None",
    "classContext": {
      "packageName": "com.cloud.network",
      "filePath": "C:\\java tool\\Apache\\cloudstack\\server\\src\\test\\java\\com\\cloud\\network\\NetworkModelTest.java",
      "className": "NetworkModelTest"
    },
    "statements": [
      {
        "type": "DECLARATION",
        "code": "NetworkVO network = mock(NetworkVO.class);",
        "line": 341,
        "locate": "Test Case",
        "locationContext": {
          "methodName": "testCheckNetworkPermissionsNoOwner",
          "methodAnnotations": [
            "@Test"
          ]
        }
      },
      {
        "type": "STUBBING",
        "code": "when(network.getGuestType()).thenReturn(Network.GuestType.Isolated);",
        "line": 342,
        "locate": "Test Case",
        "locationContext": {
          "methodName": "testCheckNetworkPermissionsNoOwner",
          "methodAnnotations": [
            "@Test"
          ]
        }
      },
      {
        "type": "STUBBING",
        "code": "when(network.getAccountId()).thenReturn(accountId);",
        "line": 343,
        "locate": "Test Case",
        "locationContext": {
          "methodName": "testCheckNetworkPermissionsNoOwner",
          "methodAnnotations": [
            "@Test"
          ]
        }
      }
    ],
    "pattern_id": 1
  },
  {
    "variableName": "network",
    "variableType": "NetworkVO",
    "mockedClass": "NetworkVO",
    "isReuseableMock": false,
    "mockPattern": "Creation:\n\u2014 Local Mock Creation in Test Case\n\nStubbing:\n\u2014 Test Case\n\nVerification:\n\u2014 None",
    "classContext": {
      "packageName": "com.cloud.network",
      "filePath": "C:\\java tool\\Apache\\cloudstack\\server\\src\\test\\java\\com\\cloud\\network\\NetworkModelTest.java",
      "className": "NetworkModelTest"
    },
    "statements": [
      {
        "type": "DECLARATION",
        "code": "NetworkVO network = mock(NetworkVO.class);",
        "line": 354,
        "locate": "Test Case",
        "locationContext": {
          "methodName": "testCheckNetworkPermissionsNoPermission",
          "methodAnnotations": [
            "@Test"
          ]
        }
      },
      {
        "type": "STUBBING",
        "code": "when(network.getGuestType()).thenReturn(Network.GuestType.Isolated);",
        "line": 355,
        "locate": "Test Case",
        "locationContext": {
          "methodName": "testCheckNetworkPermissionsNoPermission",
          "methodAnnotations": [
            "@Test"
          ]
        }
      },
      {
        "type": "STUBBING",
        "code": "when(network.getAccountId()).thenReturn(accountId);",
        "line": 356,
        "locate": "Test Case",
        "locationContext": {
          "methodName": "testCheckNetworkPermissionsNoPermission",
          "methodAnnotations": [
            "@Test"
          ]
        }
      }
    ],
    "pattern_id": 1
  },
  {
    "variableName": "network",
    "variableType": "NetworkVO",
    "mockedClass": "NetworkVO",
    "isReuseableMock": false,
    "mockPattern": "Creation:\n\u2014 Local Mock Creation in Test Case\n\nStubbing:\n\u2014 Test Case\n\nVerification:\n\u2014 None",
    "classContext": {
      "packageName": "com.cloud.network",
      "filePath": "C:\\java tool\\Apache\\cloudstack\\server\\src\\test\\java\\com\\cloud\\network\\NetworkModelTest.java",
      "className": "NetworkModelTest"
    },
    "statements": [
      {
        "type": "DECLARATION",
        "code": "NetworkVO network = mock(NetworkVO.class);",
        "line": 371,
        "locate": "Test Case",
        "locationContext": {
          "methodName": "testCheckNetworkPermissionsSharedNetwork",
          "methodAnnotations": [
            "@Test"
          ]
        }
      },
      {
        "type": "STUBBING",
        "code": "when(network.getGuestType()).thenReturn(Network.GuestType.Shared);",
        "line": 372,
        "locate": "Test Case",
        "locationContext": {
          "methodName": "testCheckNetworkPermissionsSharedNetwork",
          "methodAnnotations": [
            "@Test"
          ]
        }
      },
      {
        "type": "STUBBING",
        "code": "when(network.getId()).thenReturn(id);",
        "line": 373,
        "locate": "Test Case",
        "locationContext": {
          "methodName": "testCheckNetworkPermissionsSharedNetwork",
          "methodAnnotations": [
            "@Test"
          ]
        }
      }
    ],
    "pattern_id": 1
  },
  {
    "variableName": "network",
    "variableType": "NetworkVO",
    "mockedClass": "NetworkVO",
    "isReuseableMock": false,
    "mockPattern": "Creation:\n\u2014 Local Mock Creation in Test Case\n\nStubbing:\n\u2014 Test Case\n\nVerification:\n\u2014 None",
    "classContext": {
      "packageName": "com.cloud.network",
      "filePath": "C:\\java tool\\Apache\\cloudstack\\server\\src\\test\\java\\com\\cloud\\network\\NetworkModelTest.java",
      "className": "NetworkModelTest"
    },
    "statements": [
      {
        "type": "DECLARATION",
        "code": "NetworkVO network = mock(NetworkVO.class);",
        "line": 393,
        "locate": "Test Case",
        "locationContext": {
          "methodName": "testCheckNetworkPermissionsSharedNetworkNoSubDomainAccess",
          "methodAnnotations": [
            "@Test"
          ]
        }
      },
      {
        "type": "STUBBING",
        "code": "when(network.getGuestType()).thenReturn(Network.GuestType.Shared);",
        "line": 394,
        "locate": "Test Case",
        "locationContext": {
          "methodName": "testCheckNetworkPermissionsSharedNetworkNoSubDomainAccess",
          "methodAnnotations": [
            "@Test"
          ]
        }
      },
      {
        "type": "STUBBING",
        "code": "when(network.getId()).thenReturn(id);",
        "line": 395,
        "locate": "Test Case",
        "locationContext": {
          "methodName": "testCheckNetworkPermissionsSharedNetworkNoSubDomainAccess",
          "methodAnnotations": [
            "@Test"
          ]
        }
      }
    ],
    "pattern_id": 1
  },
  {
    "variableName": "network",
    "variableType": "NetworkVO",
    "mockedClass": "NetworkVO",
    "isReuseableMock": false,
    "mockPattern": "Creation:\n\u2014 Local Mock Creation in Test Case\n\nStubbing:\n\u2014 Test Case\n\nVerification:\n\u2014 None",
    "classContext": {
      "packageName": "com.cloud.network",
      "filePath": "C:\\java tool\\Apache\\cloudstack\\server\\src\\test\\java\\com\\cloud\\network\\NetworkModelTest.java",
      "className": "NetworkModelTest"
    },
    "statements": [
      {
        "type": "DECLARATION",
        "code": "NetworkVO network = mock(NetworkVO.class);",
        "line": 413,
        "locate": "Test Case",
        "locationContext": {
          "methodName": "testCheckNetworkPermissionsSharedNetworkNotSubDomain",
          "methodAnnotations": [
            "@Test"
          ]
        }
      },
      {
        "type": "STUBBING",
        "code": "when(network.getGuestType()).thenReturn(Network.GuestType.Shared);",
        "line": 414,
        "locate": "Test Case",
        "locationContext": {
          "methodName": "testCheckNetworkPermissionsSharedNetworkNotSubDomain",
          "methodAnnotations": [
            "@Test"
          ]
        }
      },
      {
        "type": "STUBBING",
        "code": "when(network.getId()).thenReturn(id);",
        "line": 415,
        "locate": "Test Case",
        "locationContext": {
          "methodName": "testCheckNetworkPermissionsSharedNetworkNotSubDomain",
          "methodAnnotations": [
            "@Test"
          ]
        }
      }
    ],
    "pattern_id": 1
  },
  {
    "variableName": "networkVO",
    "variableType": "NetworkVO",
    "mockedClass": "NetworkVO",
    "isReuseableMock": false,
    "mockPattern": "Creation:\n\u2014 Local Mock Creation in Test Case\n\nStubbing:\n\u2014 Test Case\n\nVerification:\n\u2014 None",
    "classContext": {
      "packageName": "com.cloud.network",
      "filePath": "C:\\java tool\\Apache\\cloudstack\\server\\src\\test\\java\\com\\cloud\\network\\NetworkServiceImplTest.java",
      "className": "NetworkServiceImplTest"
    },
    "statements": [
      {
        "type": "DECLARATION",
        "code": "NetworkVO networkVO = mock(NetworkVO.class);",
        "line": 436,
        "locate": "Test Case",
        "locationContext": {
          "methodName": "testUpdateSharedNetworkMtus",
          "methodAnnotations": [
            "@Test"
          ]
        }
      },
      {
        "type": "STUBBING",
        "code": "Mockito.when(networkVO.getTrafficType()).thenReturn(Networks.TrafficType.Guest);",
        "line": 454,
        "locate": "Test Case",
        "locationContext": {
          "methodName": "testUpdateSharedNetworkMtus",
          "methodAnnotations": [
            "@Test"
          ]
        }
      },
      {
        "type": "STUBBING",
        "code": "Mockito.when(networkVO.getGuestType()).thenReturn(Network.GuestType.Shared);",
        "line": 455,
        "locate": "Test Case",
        "locationContext": {
          "methodName": "testUpdateSharedNetworkMtus",
          "methodAnnotations": [
            "@Test"
          ]
        }
      },
      {
        "type": "STUBBING",
        "code": "Mockito.when(networkVO.getVpcId()).thenReturn(null);",
        "line": 457,
        "locate": "Test Case",
        "locationContext": {
          "methodName": "testUpdateSharedNetworkMtus",
          "methodAnnotations": [
            "@Test"
          ]
        }
      }
    ],
    "pattern_id": 1
  },
  {
    "variableName": "network1",
    "variableType": "NetworkVO",
    "mockedClass": "NetworkVO",
    "isReuseableMock": false,
    "mockPattern": "Creation:\n\u2014 Local Mock Creation in Test Case\n\nStubbing:\n\u2014 Test Case\n\nVerification:\n\u2014 None",
    "classContext": {
      "packageName": "com.cloud.network",
      "filePath": "C:\\java tool\\Apache\\cloudstack\\server\\src\\test\\java\\com\\cloud\\network\\NetworkServiceImplTest.java",
      "className": "NetworkServiceImplTest"
    },
    "statements": [
      {
        "type": "DECLARATION",
        "code": "NetworkVO network1 = Mockito.mock(NetworkVO.class);",
        "line": 596,
        "locate": "Test Case",
        "locationContext": {
          "methodName": "testCheckAndUpdateNetworkNoUpdate",
          "methodAnnotations": [
            "@Test"
          ]
        }
      },
      {
        "type": "STUBBING",
        "code": "Mockito.when(network1.getDns1()).thenReturn(ip4Dns[0]);",
        "line": 597,
        "locate": "Test Case",
        "locationContext": {
          "methodName": "testCheckAndUpdateNetworkNoUpdate",
          "methodAnnotations": [
            "@Test"
          ]
        }
      },
      {
        "type": "STUBBING",
        "code": "Mockito.when(network1.getIp6Dns1()).thenReturn(ip6Dns[0]);",
        "line": 604,
        "locate": "Test Case",
        "locationContext": {
          "methodName": "testCheckAndUpdateNetworkNoUpdate",
          "methodAnnotations": [
            "@Test"
          ]
        }
      }
    ],
    "pattern_id": 1
  },
  {
    "variableName": "networkVO",
    "variableType": "NetworkVO",
    "mockedClass": "NetworkVO",
    "isReuseableMock": false,
    "mockPattern": "Creation:\n\u2014 Local Mock Creation in Test Case\n\nStubbing:\n\u2014 Test Case\n\nVerification:\n\u2014 None",
    "classContext": {
      "packageName": "com.cloud.network",
      "filePath": "C:\\java tool\\Apache\\cloudstack\\server\\src\\test\\java\\com\\cloud\\network\\NetworkServiceImplTest.java",
      "className": "NetworkServiceImplTest"
    },
    "statements": [
      {
        "type": "DECLARATION",
        "code": "NetworkVO networkVO = Mockito.mock(NetworkVO.class);",
        "line": 633,
        "locate": "Test Case",
        "locationContext": {
          "methodName": "testCheckAndUpdateNetworkDnsVpcTierFailure",
          "methodAnnotations": [
            "@Test"
          ]
        }
      },
      {
        "type": "STUBBING",
        "code": "Mockito.when(networkVO.getVpcId()).thenReturn(1L);",
        "line": 634,
        "locate": "Test Case",
        "locationContext": {
          "methodName": "testCheckAndUpdateNetworkDnsVpcTierFailure",
          "methodAnnotations": [
            "@Test"
          ]
        }
      }
    ],
    "pattern_id": 1
  },
  {
    "variableName": "networkVO",
    "variableType": "NetworkVO",
    "mockedClass": "NetworkVO",
    "isReuseableMock": false,
    "mockPattern": "Creation:\n\u2014 Local Mock Creation in Test Case\n\nStubbing:\n\u2014 Test Case\n\nVerification:\n\u2014 None",
    "classContext": {
      "packageName": "com.cloud.network",
      "filePath": "C:\\java tool\\Apache\\cloudstack\\server\\src\\test\\java\\com\\cloud\\network\\NetworkServiceImplTest.java",
      "className": "NetworkServiceImplTest"
    },
    "statements": [
      {
        "type": "DECLARATION",
        "code": "NetworkVO networkVO = Mockito.mock(NetworkVO.class);",
        "line": 642,
        "locate": "Test Case",
        "locationContext": {
          "methodName": "testCheckAndUpdateNetworkDnsServiceFailure",
          "methodAnnotations": [
            "@Test"
          ]
        }
      },
      {
        "type": "STUBBING",
        "code": "Mockito.when(networkVO.getVpcId()).thenReturn(null);",
        "line": 643,
        "locate": "Test Case",
        "locationContext": {
          "methodName": "testCheckAndUpdateNetworkDnsServiceFailure",
          "methodAnnotations": [
            "@Test"
          ]
        }
      }
    ],
    "pattern_id": 1
  },
  {
    "variableName": "networkVO",
    "variableType": "NetworkVO",
    "mockedClass": "NetworkVO",
    "isReuseableMock": false,
    "mockPattern": "Creation:\n\u2014 Local Mock Creation in Test Case\n\nStubbing:\n\u2014 Test Case\n\nVerification:\n\u2014 None",
    "classContext": {
      "packageName": "com.cloud.network",
      "filePath": "C:\\java tool\\Apache\\cloudstack\\server\\src\\test\\java\\com\\cloud\\network\\NetworkServiceImplTest.java",
      "className": "NetworkServiceImplTest"
    },
    "statements": [
      {
        "type": "DECLARATION",
        "code": "NetworkVO networkVO = Mockito.mock(NetworkVO.class);",
        "line": 654,
        "locate": "Test Case",
        "locationContext": {
          "methodName": "testCheckAndUpdateNetworkNotSharedIp6Failure",
          "methodAnnotations": [
            "@Test"
          ]
        }
      },
      {
        "type": "STUBBING",
        "code": "Mockito.when(networkVO.getVpcId()).thenReturn(null);",
        "line": 655,
        "locate": "Test Case",
        "locationContext": {
          "methodName": "testCheckAndUpdateNetworkNotSharedIp6Failure",
          "methodAnnotations": [
            "@Test"
          ]
        }
      },
      {
        "type": "STUBBING",
        "code": "Mockito.when(networkVO.getIp6Cidr()).thenReturn(null);",
        "line": 656,
        "locate": "Test Case",
        "locationContext": {
          "methodName": "testCheckAndUpdateNetworkNotSharedIp6Failure",
          "methodAnnotations": [
            "@Test"
          ]
        }
      },
      {
        "type": "STUBBING",
        "code": "Mockito.when(networkVO.getGuestType()).thenReturn(Network.GuestType.Shared);",
        "line": 657,
        "locate": "Test Case",
        "locationContext": {
          "methodName": "testCheckAndUpdateNetworkNotSharedIp6Failure",
          "methodAnnotations": [
            "@Test"
          ]
        }
      }
    ],
    "pattern_id": 1
  },
  {
    "variableName": "networkVO",
    "variableType": "NetworkVO",
    "mockedClass": "NetworkVO",
    "isReuseableMock": false,
    "mockPattern": "Creation:\n\u2014 Local Mock Creation in Test Case\n\nStubbing:\n\u2014 Test Case\n\nVerification:\n\u2014 None",
    "classContext": {
      "packageName": "com.cloud.network",
      "filePath": "C:\\java tool\\Apache\\cloudstack\\server\\src\\test\\java\\com\\cloud\\network\\NetworkServiceImplTest.java",
      "className": "NetworkServiceImplTest"
    },
    "statements": [
      {
        "type": "DECLARATION",
        "code": "NetworkVO networkVO = Mockito.mock(NetworkVO.class);",
        "line": 667,
        "locate": "Test Case",
        "locationContext": {
          "methodName": "testCheckAndUpdateNetworkNotIsolatedIp6Failure",
          "methodAnnotations": [
            "@Test"
          ]
        }
      },
      {
        "type": "STUBBING",
        "code": "Mockito.when(networkVO.getVpcId()).thenReturn(null);",
        "line": 668,
        "locate": "Test Case",
        "locationContext": {
          "methodName": "testCheckAndUpdateNetworkNotIsolatedIp6Failure",
          "methodAnnotations": [
            "@Test"
          ]
        }
      },
      {
        "type": "STUBBING",
        "code": "Mockito.when(networkVO.getGuestType()).thenReturn(Network.GuestType.Isolated);",
        "line": 669,
        "locate": "Test Case",
        "locationContext": {
          "methodName": "testCheckAndUpdateNetworkNotIsolatedIp6Failure",
          "methodAnnotations": [
            "@Test"
          ]
        }
      }
    ],
    "pattern_id": 1
  },
  {
    "variableName": "nw2",
    "variableType": "NetworkVO",
    "mockedClass": "NetworkVO",
    "isReuseableMock": false,
    "mockPattern": "Creation:\n\u2014 Local Mock Creation in Test Case\n\nStubbing:\n\u2014 Test Case\n\nVerification:\n\u2014 None",
    "classContext": {
      "packageName": "com.cloud.network.router",
      "filePath": "C:\\java tool\\Apache\\cloudstack\\server\\src\\test\\java\\com\\cloud\\network\\router\\RouterControlHelperTest.java",
      "className": "RouterControlHelperTest"
    },
    "statements": [
      {
        "type": "DECLARATION",
        "code": "NetworkVO nw2 = mock(NetworkVO.class);",
        "line": 82,
        "locate": "Test Case",
        "locationContext": {
          "methodName": "testGetRouterControlIp",
          "methodAnnotations": [
            "@Test"
          ]
        }
      },
      {
        "type": "STUBBING",
        "code": "when(nw2.getTrafficType()).thenReturn(TrafficType.Control);",
        "line": 83,
        "locate": "Test Case",
        "locationContext": {
          "methodName": "testGetRouterControlIp",
          "methodAnnotations": [
            "@Test"
          ]
        }
      }
    ],
    "pattern_id": 1
  },
  {
    "variableName": "nw1",
    "variableType": "NetworkVO",
    "mockedClass": "NetworkVO",
    "isReuseableMock": false,
    "mockPattern": "Creation:\n\u2014 Local Mock Creation in Test Case\n\nStubbing:\n\u2014 Test Case\n\nVerification:\n\u2014 None",
    "classContext": {
      "packageName": "com.cloud.network.router",
      "filePath": "C:\\java tool\\Apache\\cloudstack\\server\\src\\test\\java\\com\\cloud\\network\\router\\RouterControlHelperTest.java",
      "className": "RouterControlHelperTest"
    },
    "statements": [
      {
        "type": "DECLARATION",
        "code": "NetworkVO nw1 = mock(NetworkVO.class);",
        "line": 80,
        "locate": "Test Case",
        "locationContext": {
          "methodName": "testGetRouterControlIp",
          "methodAnnotations": [
            "@Test"
          ]
        }
      },
      {
        "type": "STUBBING",
        "code": "when(nw1.getTrafficType()).thenReturn(TrafficType.Public);",
        "line": 81,
        "locate": "Test Case",
        "locationContext": {
          "methodName": "testGetRouterControlIp",
          "methodAnnotations": [
            "@Test"
          ]
        }
      }
    ],
    "pattern_id": 1
  },
  {
    "variableName": "nw3",
    "variableType": "NetworkVO",
    "mockedClass": "NetworkVO",
    "isReuseableMock": false,
    "mockPattern": "Creation:\n\u2014 Local Mock Creation in Test Case\n\nStubbing:\n\u2014 Test Case\n\nVerification:\n\u2014 None",
    "classContext": {
      "packageName": "com.cloud.network.router",
      "filePath": "C:\\java tool\\Apache\\cloudstack\\server\\src\\test\\java\\com\\cloud\\network\\router\\RouterControlHelperTest.java",
      "className": "RouterControlHelperTest"
    },
    "statements": [
      {
        "type": "DECLARATION",
        "code": "NetworkVO nw3 = mock(NetworkVO.class);",
        "line": 84,
        "locate": "Test Case",
        "locationContext": {
          "methodName": "testGetRouterControlIp",
          "methodAnnotations": [
            "@Test"
          ]
        }
      },
      {
        "type": "STUBBING",
        "code": "lenient().when(nw3.getTrafficType()).thenReturn(TrafficType.Control);",
        "line": 85,
        "locate": "Test Case",
        "locationContext": {
          "methodName": "testGetRouterControlIp",
          "methodAnnotations": [
            "@Test"
          ]
        }
      }
    ],
    "pattern_id": 1
  },
  {
    "variableName": "nw1",
    "variableType": "NetworkVO",
    "mockedClass": "NetworkVO",
    "isReuseableMock": false,
    "mockPattern": "Creation:\n\u2014 Local Mock Creation in Test Case\n\nStubbing:\n\u2014 Test Case\n\nVerification:\n\u2014 None",
    "classContext": {
      "packageName": "com.cloud.network.router",
      "filePath": "C:\\java tool\\Apache\\cloudstack\\server\\src\\test\\java\\com\\cloud\\network\\router\\RouterControlHelperTest.java",
      "className": "RouterControlHelperTest"
    },
    "statements": [
      {
        "type": "DECLARATION",
        "code": "NetworkVO nw1 = mock(NetworkVO.class);",
        "line": 107,
        "locate": "Test Case",
        "locationContext": {
          "methodName": "testGetRouterControlIpWithRouterIp",
          "methodAnnotations": [
            "@Test"
          ]
        }
      },
      {
        "type": "STUBBING",
        "code": "when(nw1.getTrafficType()).thenReturn(TrafficType.Public);",
        "line": 108,
        "locate": "Test Case",
        "locationContext": {
          "methodName": "testGetRouterControlIpWithRouterIp",
          "methodAnnotations": [
            "@Test"
          ]
        }
      }
    ],
    "pattern_id": 1
  },
  {
    "variableName": "network",
    "variableType": "NetworkVO",
    "mockedClass": "NetworkVO",
    "isReuseableMock": false,
    "mockPattern": "Creation:\n\u2014 Local Mock Creation in Test Case\n\nStubbing:\n\u2014 Test Case\n\nVerification:\n\u2014 None",
    "classContext": {
      "packageName": "com.cloud.resourceicon",
      "filePath": "C:\\java tool\\Apache\\cloudstack\\server\\src\\test\\java\\com\\cloud\\resourceicon\\ResourceIconManagerImplTest.java",
      "className": "ResourceIconManagerImplTest"
    },
    "statements": [
      {
        "type": "DECLARATION",
        "code": "NetworkVO network = Mockito.mock(NetworkVO.class);",
        "line": 92,
        "locate": "Test Case",
        "locationContext": {
          "methodName": "testUploadIconActionEventResourceDetailsUpdate",
          "methodAnnotations": [
            "@Test"
          ]
        }
      },
      {
        "type": "STUBBING",
        "code": "Mockito.when(network.getAccountId()).thenReturn(1L);",
        "line": 93,
        "locate": "Test Case",
        "locationContext": {
          "methodName": "testUploadIconActionEventResourceDetailsUpdate",
          "methodAnnotations": [
            "@Test"
          ]
        }
      }
    ],
    "pattern_id": 1
  }
]