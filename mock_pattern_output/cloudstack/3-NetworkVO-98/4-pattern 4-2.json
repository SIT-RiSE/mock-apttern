[
  {
    "variableName": "networkMock",
    "variableType": "NetworkVO",
    "mockedClass": "NetworkVO",
    "isReuseableMock": false,
    "mockPattern": "Creation:\n\u2014 Attribute Mock Creation\n\nStubbing:\n\u2014 Test Case\n\nVerification:\n\u2014 None",
    "classContext": {
      "packageName": "com.cloud.network.as",
      "filePath": "C:\\java tool\\Apache\\cloudstack\\server\\src\\test\\java\\com\\cloud\\network\\as\\AutoScaleManagerImplTest.java",
      "className": "AutoScaleManagerImplTest"
    },
    "statements": [
      {
        "type": "FIELD_MOCK_CREATION",
        "code": "@Mock\r\nNetworkVO networkMock;",
        "line": 357,
        "locate": "Attribute",
        "locationContext": {
          "methodName": "[FieldDeclaration]",
          "methodAnnotations": [
            "@Mock"
          ]
        }
      },
      {
        "type": "STUBBING",
        "code": "when(networkMock.getNetworkOfferingId()).thenReturn(networkOfferingId);",
        "line": 974,
        "locate": "Test Case",
        "locationContext": {
          "methodName": "testCreateAutoScaleVmGroup",
          "methodAnnotations": [
            "@Test"
          ]
        }
      },
      {
        "type": "STUBBING",
        "code": "when(networkMock.getNetworkOfferingId()).thenReturn(networkOfferingId);",
        "line": 1065,
        "locate": "Test Case",
        "locationContext": {
          "methodName": "testUpdateAutoScaleVmGroup",
          "methodAnnotations": [
            "@Test"
          ]
        }
      },
      {
        "type": "STUBBING",
        "code": "when(networkMock.getId()).thenReturn(networkId);",
        "line": 1279,
        "locate": "Test Case",
        "locationContext": {
          "methodName": "testCreateNewVM1",
          "methodAnnotations": [
            "@Test"
          ]
        }
      },
      {
        "type": "STUBBING",
        "code": "when(networkMock.getId()).thenReturn(networkId);",
        "line": 1327,
        "locate": "Test Case",
        "locationContext": {
          "methodName": "testCreateNewVM2",
          "methodAnnotations": [
            "@Test"
          ]
        }
      },
      {
        "type": "STUBBING",
        "code": "when(networkMock.getId()).thenReturn(networkId);",
        "line": 1376,
        "locate": "Test Case",
        "locationContext": {
          "methodName": "testCreateNewVM3",
          "methodAnnotations": [
            "@Test"
          ]
        }
      },
      {
        "type": "STUBBING",
        "code": "when(networkMock.getId()).thenReturn(networkId);",
        "line": 2336,
        "locate": "Test Case",
        "locationContext": {
          "methodName": "getNetworkStatsFromVirtualRouterWithoutRouter",
          "methodAnnotations": [
            "@Test"
          ]
        }
      },
      {
        "type": "STUBBING",
        "code": "when(networkMock.getId()).thenReturn(networkId);",
        "line": 2352,
        "locate": "Test Case",
        "locationContext": {
          "methodName": "getNetworkStatsFromVirtualRouterWithOneRouter",
          "methodAnnotations": [
            "@Test"
          ]
        }
      }
    ],
    "pattern_id": 4
  },
  {
    "variableName": "_networkMock",
    "variableType": "NetworkVO",
    "mockedClass": "NetworkVO",
    "isReuseableMock": false,
    "mockPattern": "Creation:\n\u2014 Attribute Mock Creation\n\nStubbing:\n\u2014 Test Case\n\nVerification:\n\u2014 None",
    "classContext": {
      "packageName": "com.cloud.vm",
      "filePath": "C:\\java tool\\Apache\\cloudstack\\server\\src\\test\\java\\com\\cloud\\vm\\UserVmManagerTest.java",
      "className": "UserVmManagerTest"
    },
    "statements": [
      {
        "type": "FIELD_MOCK_CREATION",
        "code": "@Mock\r\nprivate NetworkVO _networkMock;",
        "line": 205,
        "locate": "Attribute",
        "locationContext": {
          "methodName": "[FieldDeclaration]",
          "methodAnnotations": [
            "@Mock"
          ]
        }
      },
      {
        "type": "STUBBING",
        "code": "when(_networkMock.getState()).thenReturn(Network.State.Implemented);",
        "line": 568,
        "locate": "Test Case",
        "locationContext": {
          "methodName": "testUpdateVmNicIpSuccess1",
          "methodAnnotations": [
            "@Test"
          ]
        }
      },
      {
        "type": "STUBBING",
        "code": "when(_networkMock.getDataCenterId()).thenReturn(3L);",
        "line": 569,
        "locate": "Test Case",
        "locationContext": {
          "methodName": "testUpdateVmNicIpSuccess1",
          "methodAnnotations": [
            "@Test"
          ]
        }
      },
      {
        "type": "STUBBING",
        "code": "when(_networkMock.getGuestType()).thenReturn(GuestType.Isolated);",
        "line": 570,
        "locate": "Test Case",
        "locationContext": {
          "methodName": "testUpdateVmNicIpSuccess1",
          "methodAnnotations": [
            "@Test"
          ]
        }
      },
      {
        "type": "STUBBING",
        "code": "when(_networkMock.getState()).thenReturn(Network.State.Implemented);",
        "line": 615,
        "locate": "Test Case",
        "locationContext": {
          "methodName": "testUpdateVmNicIpSuccess2",
          "methodAnnotations": [
            "@Test"
          ]
        }
      },
      {
        "type": "STUBBING",
        "code": "when(_networkMock.getDataCenterId()).thenReturn(3L);",
        "line": 616,
        "locate": "Test Case",
        "locationContext": {
          "methodName": "testUpdateVmNicIpSuccess2",
          "methodAnnotations": [
            "@Test"
          ]
        }
      },
      {
        "type": "STUBBING",
        "code": "when(_networkMock.getGuestType()).thenReturn(GuestType.Shared);",
        "line": 617,
        "locate": "Test Case",
        "locationContext": {
          "methodName": "testUpdateVmNicIpSuccess2",
          "methodAnnotations": [
            "@Test"
          ]
        }
      },
      {
        "type": "STUBBING",
        "code": "when(_networkMock.getState()).thenReturn(Network.State.Implemented);",
        "line": 662,
        "locate": "Test Case",
        "locationContext": {
          "methodName": "testUpdateVmNicIpFailure1",
          "methodAnnotations": [
            "@Test"
          ]
        }
      },
      {
        "type": "STUBBING",
        "code": "when(_networkMock.getState()).thenReturn(Network.State.Implemented);",
        "line": 711,
        "locate": "Test Case",
        "locationContext": {
          "methodName": "testUpdateVmNicIpFailure2",
          "methodAnnotations": [
            "@Test"
          ]
        }
      },
      {
        "type": "STUBBING",
        "code": "when(_networkMock.getDataCenterId()).thenReturn(3L);",
        "line": 712,
        "locate": "Test Case",
        "locationContext": {
          "methodName": "testUpdateVmNicIpFailure2",
          "methodAnnotations": [
            "@Test"
          ]
        }
      },
      {
        "type": "STUBBING",
        "code": "when(_networkMock.getGuestType()).thenReturn(GuestType.Isolated);",
        "line": 713,
        "locate": "Test Case",
        "locationContext": {
          "methodName": "testUpdateVmNicIpFailure2",
          "methodAnnotations": [
            "@Test"
          ]
        }
      },
      {
        "type": "STUBBING",
        "code": "when(_networkMock.getState()).thenReturn(Network.State.Implemented);",
        "line": 758,
        "locate": "Test Case",
        "locationContext": {
          "methodName": "testUpdateVmNicIpFailure3",
          "methodAnnotations": [
            "@Test"
          ]
        }
      },
      {
        "type": "STUBBING",
        "code": "when(_networkMock.getDataCenterId()).thenReturn(3L);",
        "line": 759,
        "locate": "Test Case",
        "locationContext": {
          "methodName": "testUpdateVmNicIpFailure3",
          "methodAnnotations": [
            "@Test"
          ]
        }
      },
      {
        "type": "STUBBING",
        "code": "when(_networkMock.getGuestType()).thenReturn(GuestType.Shared);",
        "line": 760,
        "locate": "Test Case",
        "locationContext": {
          "methodName": "testUpdateVmNicIpFailure3",
          "methodAnnotations": [
            "@Test"
          ]
        }
      },
      {
        "type": "STUBBING",
        "code": "when(_networkMock.getNetworkOfferingId()).thenReturn(3L);",
        "line": 782,
        "locate": "Test Case",
        "locationContext": {
          "methodName": "testApplyUserDataInNetworkWithoutUserDataSupport",
          "methodAnnotations": [
            "@Test"
          ]
        }
      },
      {
        "type": "STUBBING",
        "code": "when(_networkMock.getNetworkOfferingId()).thenReturn(3L);",
        "line": 795,
        "locate": "Test Case",
        "locationContext": {
          "methodName": "testApplyUserDataInNetworkWithoutElement",
          "methodAnnotations": [
            "@Test"
          ]
        }
      },
      {
        "type": "STUBBING",
        "code": "when(_networkMock.getNetworkOfferingId()).thenReturn(3L);",
        "line": 812,
        "locate": "Test Case",
        "locationContext": {
          "methodName": "testApplyUserDataSuccessful",
          "methodAnnotations": [
            "@Test"
          ]
        }
      }
    ],
    "pattern_id": 4
  }
]