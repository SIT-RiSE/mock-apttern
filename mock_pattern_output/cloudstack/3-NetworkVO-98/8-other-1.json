[
  {
    "variableName": "mockNw",
    "variableType": "NetworkVO",
    "mockedClass": "NetworkVO",
    "isReuseableMock": false,
    "mockPattern": "Creation:\n\u2014 Attribute Mock Creation\n\nStubbing:\n\u2014 Helper Method\n\u2014 Test Case\n\nVerification:\n\u2014 None",
    "classContext": {
      "packageName": "org.apache.cloudstack.network.router.deployment",
      "filePath": "C:\\java tool\\Apache\\cloudstack\\server\\src\\test\\java\\org\\apache\\cloudstack\\network\\router\\deployment\\RouterDeploymentDefinitionTest.java",
      "className": "RouterDeploymentDefinitionTest"
    },
    "statements": [
      {
        "type": "FIELD_MOCK_CREATION",
        "code": "@Mock\r\nprotected NetworkVO mockNw;",
        "line": 75,
        "locate": "Attribute",
        "locationContext": {
          "methodName": "[FieldDeclaration]",
          "methodAnnotations": [
            "@Mock"
          ]
        }
      },
      {
        "type": "STUBBING",
        "code": "when(mockNw.getId()).thenReturn(NW_ID_1);",
        "line": 89,
        "locate": "Helper Method",
        "locationContext": {
          "methodName": "initMocks",
          "methodAnnotations": [
            "@Override"
          ]
        }
      },
      {
        "type": "STUBBING",
        "code": "// Set and confirm is redundant\r\nwhen(mockNw.isRedundant()).thenReturn(true);",
        "line": 107,
        "locate": "Test Case",
        "locationContext": {
          "methodName": "testRedundancyProperty",
          "methodAnnotations": [
            "@Test"
          ]
        }
      },
      {
        "type": "STUBBING",
        "code": "when(mockNw.isRedundant()).thenReturn(false);",
        "line": 113,
        "locate": "Test Case",
        "locationContext": {
          "methodName": "testRedundancyProperty",
          "methodAnnotations": [
            "@Test"
          ]
        }
      },
      {
        "type": "STUBBING",
        "code": "// Execute and assert, just the same but for redundant deployment\r\nwhen(mockNw.isRedundant()).thenReturn(true);",
        "line": 568,
        "locate": "Test Case",
        "locationContext": {
          "methodName": "testGetNumberOfRoutersToDeploy",
          "methodAnnotations": [
            "@Test"
          ]
        }
      },
      {
        "type": "STUBBING",
        "code": "when(mockNw.isRedundant()).thenReturn(false);",
        "line": 574,
        "locate": "Test Case",
        "locationContext": {
          "methodName": "testGetNumberOfRoutersToDeploy",
          "methodAnnotations": [
            "@Test"
          ]
        }
      },
      {
        "type": "STUBBING",
        "code": "when(mockNw.isRedundant()).thenReturn(true);",
        "line": 578,
        "locate": "Test Case",
        "locationContext": {
          "methodName": "testGetNumberOfRoutersToDeploy",
          "methodAnnotations": [
            "@Test"
          ]
        }
      },
      {
        "type": "STUBBING",
        "code": "when(mockNw.getNetworkOfferingId()).thenReturn(OFFERING_ID);",
        "line": 673,
        "locate": "Test Case",
        "locationContext": {
          "methodName": "testFindOfferingIdFromNetwork",
          "methodAnnotations": [
            "@Test"
          ]
        }
      },
      {
        "type": "STUBBING",
        "code": "when(mockNw.getNetworkOfferingId()).thenReturn(OFFERING_ID);",
        "line": 689,
        "locate": "Test Case",
        "locationContext": {
          "methodName": "testFindOfferingIdDefault",
          "methodAnnotations": [
            "@Test"
          ]
        }
      },
      {
        "type": "STUBBING",
        "code": "lenient().when(mockNw.isRedundant()).thenReturn(true);",
        "line": 709,
        "locate": "Test Case",
        "locationContext": {
          "methodName": "testDeployAllVirtualRouters",
          "methodAnnotations": [
            "@Test"
          ]
        }
      },
      {
        "type": "STUBBING",
        "code": "when(mockNw.getGuestType()).thenReturn(Network.GuestType.Shared);",
        "line": 747,
        "locate": "Test Case",
        "locationContext": {
          "methodName": "testSetupAccountOwnerNotNetworkSystem",
          "methodAnnotations": [
            "@Test"
          ]
        }
      },
      {
        "type": "STUBBING",
        "code": "when(mockNw.getGuestType()).thenReturn(Network.GuestType.Isolated);",
        "line": 760,
        "locate": "Test Case",
        "locationContext": {
          "methodName": "testSetupAccountOwnerNotSharedNeitherNetworkSystem",
          "methodAnnotations": [
            "@Test"
          ]
        }
      },
      {
        "type": "STUBBING",
        "code": "// Prepare\r\nwhen(mockNw.isRedundant()).thenReturn(isRedundant);",
        "line": 773,
        "locate": "Test Case",
        "locationContext": {
          "methodName": "driveTestPrepareDeployment",
          "methodAnnotations": []
        }
      }
    ],
    "pattern_id": 26
  }
]