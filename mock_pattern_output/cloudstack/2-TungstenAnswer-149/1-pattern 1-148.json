[
  {
    "variableName": "assignFloatingIpAnswer",
    "variableType": "TungstenAnswer",
    "mockedClass": "TungstenAnswer",
    "isReuseableMock": false,
    "mockPattern": "Creation:\n\u2014 Local Mock Creation in Test Case\n\nStubbing:\n\u2014 Test Case\n\nVerification:\n\u2014 None",
    "classContext": {
      "packageName": "org.apache.cloudstack.network.tungsten.service",
      "filePath": "C:\\java tool\\Apache\\cloudstack\\plugins\\network-elements\\tungsten\\src\\test\\java\\org\\apache\\cloudstack\\network\\tungsten\\service\\TungstenElementTest.java",
      "className": "TungstenElementTest"
    },
    "statements": [
      {
        "type": "DECLARATION",
        "code": "TungstenAnswer assignFloatingIpAnswer = mock(TungstenAnswer.class);",
        "line": 247,
        "locate": "Test Case",
        "locationContext": {
          "methodName": "applyStaticNatsAddRuleSuccessTest",
          "methodAnnotations": [
            "@Test"
          ]
        }
      },
      {
        "type": "STUBBING",
        "code": "when(assignFloatingIpAnswer.getResult()).thenReturn(true);",
        "line": 253,
        "locate": "Test Case",
        "locationContext": {
          "methodName": "applyStaticNatsAddRuleSuccessTest",
          "methodAnnotations": [
            "@Test"
          ]
        }
      }
    ],
    "pattern_id": 1
  },
  {
    "variableName": "assignFloatingIpAnswer",
    "variableType": "TungstenAnswer",
    "mockedClass": "TungstenAnswer",
    "isReuseableMock": false,
    "mockPattern": "Creation:\n\u2014 Local Mock Creation in Test Case\n\nStubbing:\n\u2014 Test Case\n\nVerification:\n\u2014 None",
    "classContext": {
      "packageName": "org.apache.cloudstack.network.tungsten.service",
      "filePath": "C:\\java tool\\Apache\\cloudstack\\plugins\\network-elements\\tungsten\\src\\test\\java\\org\\apache\\cloudstack\\network\\tungsten\\service\\TungstenElementTest.java",
      "className": "TungstenElementTest"
    },
    "statements": [
      {
        "type": "DECLARATION",
        "code": "TungstenAnswer assignFloatingIpAnswer = mock(TungstenAnswer.class);",
        "line": 269,
        "locate": "Test Case",
        "locationContext": {
          "methodName": "applyStaticNatsAddRuleFailTest",
          "methodAnnotations": [
            "@Test"
          ]
        }
      },
      {
        "type": "STUBBING",
        "code": "when(assignFloatingIpAnswer.getResult()).thenReturn(false);",
        "line": 275,
        "locate": "Test Case",
        "locationContext": {
          "methodName": "applyStaticNatsAddRuleFailTest",
          "methodAnnotations": [
            "@Test"
          ]
        }
      }
    ],
    "pattern_id": 1
  },
  {
    "variableName": "releaseFloatingIpAnswer",
    "variableType": "TungstenAnswer",
    "mockedClass": "TungstenAnswer",
    "isReuseableMock": false,
    "mockPattern": "Creation:\n\u2014 Local Mock Creation in Test Case\n\nStubbing:\n\u2014 Test Case\n\nVerification:\n\u2014 None",
    "classContext": {
      "packageName": "org.apache.cloudstack.network.tungsten.service",
      "filePath": "C:\\java tool\\Apache\\cloudstack\\plugins\\network-elements\\tungsten\\src\\test\\java\\org\\apache\\cloudstack\\network\\tungsten\\service\\TungstenElementTest.java",
      "className": "TungstenElementTest"
    },
    "statements": [
      {
        "type": "DECLARATION",
        "code": "TungstenAnswer releaseFloatingIpAnswer = mock(TungstenAnswer.class);",
        "line": 291,
        "locate": "Test Case",
        "locationContext": {
          "methodName": "applyStaticNatsRevokeRuleSuccessTest",
          "methodAnnotations": [
            "@Test"
          ]
        }
      },
      {
        "type": "STUBBING",
        "code": "when(releaseFloatingIpAnswer.getResult()).thenReturn(true);",
        "line": 297,
        "locate": "Test Case",
        "locationContext": {
          "methodName": "applyStaticNatsRevokeRuleSuccessTest",
          "methodAnnotations": [
            "@Test"
          ]
        }
      }
    ],
    "pattern_id": 1
  },
  {
    "variableName": "releaseFloatingIpAnswer",
    "variableType": "TungstenAnswer",
    "mockedClass": "TungstenAnswer",
    "isReuseableMock": false,
    "mockPattern": "Creation:\n\u2014 Local Mock Creation in Test Case\n\nStubbing:\n\u2014 Test Case\n\nVerification:\n\u2014 None",
    "classContext": {
      "packageName": "org.apache.cloudstack.network.tungsten.service",
      "filePath": "C:\\java tool\\Apache\\cloudstack\\plugins\\network-elements\\tungsten\\src\\test\\java\\org\\apache\\cloudstack\\network\\tungsten\\service\\TungstenElementTest.java",
      "className": "TungstenElementTest"
    },
    "statements": [
      {
        "type": "DECLARATION",
        "code": "TungstenAnswer releaseFloatingIpAnswer = mock(TungstenAnswer.class);",
        "line": 313,
        "locate": "Test Case",
        "locationContext": {
          "methodName": "applyStaticNatsRevokeRuleFailTest",
          "methodAnnotations": [
            "@Test"
          ]
        }
      },
      {
        "type": "STUBBING",
        "code": "when(releaseFloatingIpAnswer.getResult()).thenReturn(false);",
        "line": 319,
        "locate": "Test Case",
        "locationContext": {
          "methodName": "applyStaticNatsRevokeRuleFailTest",
          "methodAnnotations": [
            "@Test"
          ]
        }
      }
    ],
    "pattern_id": 1
  },
  {
    "variableName": "updateTungstenLoadBalancerPoolAnswer",
    "variableType": "TungstenAnswer",
    "mockedClass": "TungstenAnswer",
    "isReuseableMock": false,
    "mockPattern": "Creation:\n\u2014 Local Mock Creation in Test Case\n\nStubbing:\n\u2014 Test Case\n\nVerification:\n\u2014 None",
    "classContext": {
      "packageName": "org.apache.cloudstack.network.tungsten.service",
      "filePath": "C:\\java tool\\Apache\\cloudstack\\plugins\\network-elements\\tungsten\\src\\test\\java\\org\\apache\\cloudstack\\network\\tungsten\\service\\TungstenElementTest.java",
      "className": "TungstenElementTest"
    },
    "statements": [
      {
        "type": "DECLARATION",
        "code": "TungstenAnswer updateTungstenLoadBalancerPoolAnswer = mock(TungstenAnswer.class);",
        "line": 347,
        "locate": "Test Case",
        "locationContext": {
          "methodName": "applyLBRulesAddRuleSuccessTest",
          "methodAnnotations": [
            "@Test"
          ]
        }
      },
      {
        "type": "STUBBING",
        "code": "when(updateTungstenLoadBalancerPoolAnswer.getResult()).thenReturn(true);",
        "line": 381,
        "locate": "Test Case",
        "locationContext": {
          "methodName": "applyLBRulesAddRuleSuccessTest",
          "methodAnnotations": [
            "@Test"
          ]
        }
      }
    ],
    "pattern_id": 1
  },
  {
    "variableName": "updateTungstenHealthMonitorAnswer",
    "variableType": "TungstenAnswer",
    "mockedClass": "TungstenAnswer",
    "isReuseableMock": false,
    "mockPattern": "Creation:\n\u2014 Local Mock Creation in Test Case\n\nStubbing:\n\u2014 Test Case\n\nVerification:\n\u2014 None",
    "classContext": {
      "packageName": "org.apache.cloudstack.network.tungsten.service",
      "filePath": "C:\\java tool\\Apache\\cloudstack\\plugins\\network-elements\\tungsten\\src\\test\\java\\org\\apache\\cloudstack\\network\\tungsten\\service\\TungstenElementTest.java",
      "className": "TungstenElementTest"
    },
    "statements": [
      {
        "type": "DECLARATION",
        "code": "TungstenAnswer updateTungstenHealthMonitorAnswer = mock(TungstenAnswer.class);",
        "line": 350,
        "locate": "Test Case",
        "locationContext": {
          "methodName": "applyLBRulesAddRuleSuccessTest",
          "methodAnnotations": [
            "@Test"
          ]
        }
      },
      {
        "type": "STUBBING",
        "code": "when(updateTungstenHealthMonitorAnswer.getResult()).thenReturn(true);",
        "line": 384,
        "locate": "Test Case",
        "locationContext": {
          "methodName": "applyLBRulesAddRuleSuccessTest",
          "methodAnnotations": [
            "@Test"
          ]
        }
      }
    ],
    "pattern_id": 1
  },
  {
    "variableName": "updateTungstenLoadBalancerMemberAnswer",
    "variableType": "TungstenAnswer",
    "mockedClass": "TungstenAnswer",
    "isReuseableMock": false,
    "mockPattern": "Creation:\n\u2014 Local Mock Creation in Test Case\n\nStubbing:\n\u2014 Test Case\n\nVerification:\n\u2014 None",
    "classContext": {
      "packageName": "org.apache.cloudstack.network.tungsten.service",
      "filePath": "C:\\java tool\\Apache\\cloudstack\\plugins\\network-elements\\tungsten\\src\\test\\java\\org\\apache\\cloudstack\\network\\tungsten\\service\\TungstenElementTest.java",
      "className": "TungstenElementTest"
    },
    "statements": [
      {
        "type": "DECLARATION",
        "code": "TungstenAnswer updateTungstenLoadBalancerMemberAnswer = mock(TungstenAnswer.class);",
        "line": 348,
        "locate": "Test Case",
        "locationContext": {
          "methodName": "applyLBRulesAddRuleSuccessTest",
          "methodAnnotations": [
            "@Test"
          ]
        }
      },
      {
        "type": "STUBBING",
        "code": "when(updateTungstenLoadBalancerMemberAnswer.getResult()).thenReturn(true);",
        "line": 382,
        "locate": "Test Case",
        "locationContext": {
          "methodName": "applyLBRulesAddRuleSuccessTest",
          "methodAnnotations": [
            "@Test"
          ]
        }
      }
    ],
    "pattern_id": 1
  },
  {
    "variableName": "createTungstenNetworkLoadbalancerAnswer",
    "variableType": "TungstenAnswer",
    "mockedClass": "TungstenAnswer",
    "isReuseableMock": false,
    "mockPattern": "Creation:\n\u2014 Local Mock Creation in Test Case\n\nStubbing:\n\u2014 Test Case\n\nVerification:\n\u2014 None",
    "classContext": {
      "packageName": "org.apache.cloudstack.network.tungsten.service",
      "filePath": "C:\\java tool\\Apache\\cloudstack\\plugins\\network-elements\\tungsten\\src\\test\\java\\org\\apache\\cloudstack\\network\\tungsten\\service\\TungstenElementTest.java",
      "className": "TungstenElementTest"
    },
    "statements": [
      {
        "type": "DECLARATION",
        "code": "TungstenAnswer createTungstenNetworkLoadbalancerAnswer = mock(TungstenAnswer.class);",
        "line": 346,
        "locate": "Test Case",
        "locationContext": {
          "methodName": "applyLBRulesAddRuleSuccessTest",
          "methodAnnotations": [
            "@Test"
          ]
        }
      },
      {
        "type": "STUBBING",
        "code": "when(createTungstenNetworkLoadbalancerAnswer.getResult()).thenReturn(true);",
        "line": 380,
        "locate": "Test Case",
        "locationContext": {
          "methodName": "applyLBRulesAddRuleSuccessTest",
          "methodAnnotations": [
            "@Test"
          ]
        }
      }
    ],
    "pattern_id": 1
  },
  {
    "variableName": "updateTungstenLoadBalancerListenerAnswer",
    "variableType": "TungstenAnswer",
    "mockedClass": "TungstenAnswer",
    "isReuseableMock": false,
    "mockPattern": "Creation:\n\u2014 Local Mock Creation in Test Case\n\nStubbing:\n\u2014 Test Case\n\nVerification:\n\u2014 None",
    "classContext": {
      "packageName": "org.apache.cloudstack.network.tungsten.service",
      "filePath": "C:\\java tool\\Apache\\cloudstack\\plugins\\network-elements\\tungsten\\src\\test\\java\\org\\apache\\cloudstack\\network\\tungsten\\service\\TungstenElementTest.java",
      "className": "TungstenElementTest"
    },
    "statements": [
      {
        "type": "DECLARATION",
        "code": "TungstenAnswer updateTungstenLoadBalancerListenerAnswer = mock(TungstenAnswer.class);",
        "line": 349,
        "locate": "Test Case",
        "locationContext": {
          "methodName": "applyLBRulesAddRuleSuccessTest",
          "methodAnnotations": [
            "@Test"
          ]
        }
      },
      {
        "type": "STUBBING",
        "code": "when(updateTungstenLoadBalancerListenerAnswer.getResult()).thenReturn(true);",
        "line": 383,
        "locate": "Test Case",
        "locationContext": {
          "methodName": "applyLBRulesAddRuleSuccessTest",
          "methodAnnotations": [
            "@Test"
          ]
        }
      }
    ],
    "pattern_id": 1
  },
  {
    "variableName": "updateTungstenLoadBalancerPoolAnswer",
    "variableType": "TungstenAnswer",
    "mockedClass": "TungstenAnswer",
    "isReuseableMock": false,
    "mockPattern": "Creation:\n\u2014 Local Mock Creation in Test Case\n\nStubbing:\n\u2014 Test Case\n\nVerification:\n\u2014 None",
    "classContext": {
      "packageName": "org.apache.cloudstack.network.tungsten.service",
      "filePath": "C:\\java tool\\Apache\\cloudstack\\plugins\\network-elements\\tungsten\\src\\test\\java\\org\\apache\\cloudstack\\network\\tungsten\\service\\TungstenElementTest.java",
      "className": "TungstenElementTest"
    },
    "statements": [
      {
        "type": "DECLARATION",
        "code": "TungstenAnswer updateTungstenLoadBalancerPoolAnswer = mock(TungstenAnswer.class);",
        "line": 411,
        "locate": "Test Case",
        "locationContext": {
          "methodName": "applyLBRulesAddRuleFailTest",
          "methodAnnotations": [
            "@Test"
          ]
        }
      },
      {
        "type": "STUBBING",
        "code": "when(updateTungstenLoadBalancerPoolAnswer.getResult()).thenReturn(true);",
        "line": 437,
        "locate": "Test Case",
        "locationContext": {
          "methodName": "applyLBRulesAddRuleFailTest",
          "methodAnnotations": [
            "@Test"
          ]
        }
      }
    ],
    "pattern_id": 1
  },
  {
    "variableName": "updateTungstenHealthMonitorAnswer",
    "variableType": "TungstenAnswer",
    "mockedClass": "TungstenAnswer",
    "isReuseableMock": false,
    "mockPattern": "Creation:\n\u2014 Local Mock Creation in Test Case\n\nStubbing:\n\u2014 Test Case\n\nVerification:\n\u2014 None",
    "classContext": {
      "packageName": "org.apache.cloudstack.network.tungsten.service",
      "filePath": "C:\\java tool\\Apache\\cloudstack\\plugins\\network-elements\\tungsten\\src\\test\\java\\org\\apache\\cloudstack\\network\\tungsten\\service\\TungstenElementTest.java",
      "className": "TungstenElementTest"
    },
    "statements": [
      {
        "type": "DECLARATION",
        "code": "TungstenAnswer updateTungstenHealthMonitorAnswer = mock(TungstenAnswer.class);",
        "line": 413,
        "locate": "Test Case",
        "locationContext": {
          "methodName": "applyLBRulesAddRuleFailTest",
          "methodAnnotations": [
            "@Test"
          ]
        }
      },
      {
        "type": "STUBBING",
        "code": "when(updateTungstenHealthMonitorAnswer.getResult()).thenReturn(true);",
        "line": 443,
        "locate": "Test Case",
        "locationContext": {
          "methodName": "applyLBRulesAddRuleFailTest",
          "methodAnnotations": [
            "@Test"
          ]
        }
      }
    ],
    "pattern_id": 1
  },
  {
    "variableName": "updateTungstenLoadBalancerMemberAnswer",
    "variableType": "TungstenAnswer",
    "mockedClass": "TungstenAnswer",
    "isReuseableMock": false,
    "mockPattern": "Creation:\n\u2014 Local Mock Creation in Test Case\n\nStubbing:\n\u2014 Test Case\n\nVerification:\n\u2014 None",
    "classContext": {
      "packageName": "org.apache.cloudstack.network.tungsten.service",
      "filePath": "C:\\java tool\\Apache\\cloudstack\\plugins\\network-elements\\tungsten\\src\\test\\java\\org\\apache\\cloudstack\\network\\tungsten\\service\\TungstenElementTest.java",
      "className": "TungstenElementTest"
    },
    "statements": [
      {
        "type": "DECLARATION",
        "code": "TungstenAnswer updateTungstenLoadBalancerMemberAnswer = mock(TungstenAnswer.class);",
        "line": 412,
        "locate": "Test Case",
        "locationContext": {
          "methodName": "applyLBRulesAddRuleFailTest",
          "methodAnnotations": [
            "@Test"
          ]
        }
      },
      {
        "type": "STUBBING",
        "code": "when(updateTungstenLoadBalancerMemberAnswer.getResult()).thenReturn(true);",
        "line": 438,
        "locate": "Test Case",
        "locationContext": {
          "methodName": "applyLBRulesAddRuleFailTest",
          "methodAnnotations": [
            "@Test"
          ]
        }
      }
    ],
    "pattern_id": 1
  },
  {
    "variableName": "createTungstenNetworkLoadbalancerAnswer",
    "variableType": "TungstenAnswer",
    "mockedClass": "TungstenAnswer",
    "isReuseableMock": false,
    "mockPattern": "Creation:\n\u2014 Local Mock Creation in Test Case\n\nStubbing:\n\u2014 Test Case\n\nVerification:\n\u2014 None",
    "classContext": {
      "packageName": "org.apache.cloudstack.network.tungsten.service",
      "filePath": "C:\\java tool\\Apache\\cloudstack\\plugins\\network-elements\\tungsten\\src\\test\\java\\org\\apache\\cloudstack\\network\\tungsten\\service\\TungstenElementTest.java",
      "className": "TungstenElementTest"
    },
    "statements": [
      {
        "type": "DECLARATION",
        "code": "TungstenAnswer createTungstenNetworkLoadbalancerAnswer = mock(TungstenAnswer.class);",
        "line": 410,
        "locate": "Test Case",
        "locationContext": {
          "methodName": "applyLBRulesAddRuleFailTest",
          "methodAnnotations": [
            "@Test"
          ]
        }
      },
      {
        "type": "STUBBING",
        "code": "when(createTungstenNetworkLoadbalancerAnswer.getResult()).thenReturn(true);",
        "line": 436,
        "locate": "Test Case",
        "locationContext": {
          "methodName": "applyLBRulesAddRuleFailTest",
          "methodAnnotations": [
            "@Test"
          ]
        }
      }
    ],
    "pattern_id": 1
  },
  {
    "variableName": "deleteTungstenLoadBalancerListenerAnswer",
    "variableType": "TungstenAnswer",
    "mockedClass": "TungstenAnswer",
    "isReuseableMock": false,
    "mockPattern": "Creation:\n\u2014 Local Mock Creation in Test Case\n\nStubbing:\n\u2014 Test Case\n\nVerification:\n\u2014 None",
    "classContext": {
      "packageName": "org.apache.cloudstack.network.tungsten.service",
      "filePath": "C:\\java tool\\Apache\\cloudstack\\plugins\\network-elements\\tungsten\\src\\test\\java\\org\\apache\\cloudstack\\network\\tungsten\\service\\TungstenElementTest.java",
      "className": "TungstenElementTest"
    },
    "statements": [
      {
        "type": "DECLARATION",
        "code": "TungstenAnswer deleteTungstenLoadBalancerListenerAnswer = mock(TungstenAnswer.class);",
        "line": 460,
        "locate": "Test Case",
        "locationContext": {
          "methodName": "applyLBRulesRevokeRuleFailTest",
          "methodAnnotations": [
            "@Test"
          ]
        }
      },
      {
        "type": "STUBBING",
        "code": "when(deleteTungstenLoadBalancerListenerAnswer.getResult()).thenReturn(true);",
        "line": 471,
        "locate": "Test Case",
        "locationContext": {
          "methodName": "applyLBRulesRevokeRuleFailTest",
          "methodAnnotations": [
            "@Test"
          ]
        }
      }
    ],
    "pattern_id": 1
  },
  {
    "variableName": "deleteTungstenLoadBalancerCommand",
    "variableType": "TungstenAnswer",
    "mockedClass": "TungstenAnswer",
    "isReuseableMock": false,
    "mockPattern": "Creation:\n\u2014 Local Mock Creation in Test Case\n\nStubbing:\n\u2014 Test Case\n\nVerification:\n\u2014 None",
    "classContext": {
      "packageName": "org.apache.cloudstack.network.tungsten.service",
      "filePath": "C:\\java tool\\Apache\\cloudstack\\plugins\\network-elements\\tungsten\\src\\test\\java\\org\\apache\\cloudstack\\network\\tungsten\\service\\TungstenElementTest.java",
      "className": "TungstenElementTest"
    },
    "statements": [
      {
        "type": "DECLARATION",
        "code": "TungstenAnswer deleteTungstenLoadBalancerCommand = mock(TungstenAnswer.class);",
        "line": 461,
        "locate": "Test Case",
        "locationContext": {
          "methodName": "applyLBRulesRevokeRuleFailTest",
          "methodAnnotations": [
            "@Test"
          ]
        }
      },
      {
        "type": "STUBBING",
        "code": "when(deleteTungstenLoadBalancerCommand.getResult()).thenReturn(true);",
        "line": 472,
        "locate": "Test Case",
        "locationContext": {
          "methodName": "applyLBRulesRevokeRuleFailTest",
          "methodAnnotations": [
            "@Test"
          ]
        }
      }
    ],
    "pattern_id": 1
  },
  {
    "variableName": "deleteTungstenLoadBalancerListenerAnswer",
    "variableType": "TungstenAnswer",
    "mockedClass": "TungstenAnswer",
    "isReuseableMock": false,
    "mockPattern": "Creation:\n\u2014 Local Mock Creation in Test Case\n\nStubbing:\n\u2014 Test Case\n\nVerification:\n\u2014 None",
    "classContext": {
      "packageName": "org.apache.cloudstack.network.tungsten.service",
      "filePath": "C:\\java tool\\Apache\\cloudstack\\plugins\\network-elements\\tungsten\\src\\test\\java\\org\\apache\\cloudstack\\network\\tungsten\\service\\TungstenElementTest.java",
      "className": "TungstenElementTest"
    },
    "statements": [
      {
        "type": "DECLARATION",
        "code": "TungstenAnswer deleteTungstenLoadBalancerListenerAnswer = mock(TungstenAnswer.class);",
        "line": 491,
        "locate": "Test Case",
        "locationContext": {
          "methodName": "applyLBRulesRevokeRuleSuccessTest",
          "methodAnnotations": [
            "@Test"
          ]
        }
      },
      {
        "type": "STUBBING",
        "code": "when(deleteTungstenLoadBalancerListenerAnswer.getResult()).thenReturn(true);",
        "line": 504,
        "locate": "Test Case",
        "locationContext": {
          "methodName": "applyLBRulesRevokeRuleSuccessTest",
          "methodAnnotations": [
            "@Test"
          ]
        }
      }
    ],
    "pattern_id": 1
  },
  {
    "variableName": "deleteTungstenLoadBalancerCommand",
    "variableType": "TungstenAnswer",
    "mockedClass": "TungstenAnswer",
    "isReuseableMock": false,
    "mockPattern": "Creation:\n\u2014 Local Mock Creation in Test Case\n\nStubbing:\n\u2014 Test Case\n\nVerification:\n\u2014 None",
    "classContext": {
      "packageName": "org.apache.cloudstack.network.tungsten.service",
      "filePath": "C:\\java tool\\Apache\\cloudstack\\plugins\\network-elements\\tungsten\\src\\test\\java\\org\\apache\\cloudstack\\network\\tungsten\\service\\TungstenElementTest.java",
      "className": "TungstenElementTest"
    },
    "statements": [
      {
        "type": "DECLARATION",
        "code": "TungstenAnswer deleteTungstenLoadBalancerCommand = mock(TungstenAnswer.class);",
        "line": 492,
        "locate": "Test Case",
        "locationContext": {
          "methodName": "applyLBRulesRevokeRuleSuccessTest",
          "methodAnnotations": [
            "@Test"
          ]
        }
      },
      {
        "type": "STUBBING",
        "code": "when(deleteTungstenLoadBalancerCommand.getResult()).thenReturn(true);",
        "line": 505,
        "locate": "Test Case",
        "locationContext": {
          "methodName": "applyLBRulesRevokeRuleSuccessTest",
          "methodAnnotations": [
            "@Test"
          ]
        }
      }
    ],
    "pattern_id": 1
  },
  {
    "variableName": "applyTungstenPortForwardingAnswer",
    "variableType": "TungstenAnswer",
    "mockedClass": "TungstenAnswer",
    "isReuseableMock": false,
    "mockPattern": "Creation:\n\u2014 Local Mock Creation in Test Case\n\nStubbing:\n\u2014 Test Case\n\nVerification:\n\u2014 None",
    "classContext": {
      "packageName": "org.apache.cloudstack.network.tungsten.service",
      "filePath": "C:\\java tool\\Apache\\cloudstack\\plugins\\network-elements\\tungsten\\src\\test\\java\\org\\apache\\cloudstack\\network\\tungsten\\service\\TungstenElementTest.java",
      "className": "TungstenElementTest"
    },
    "statements": [
      {
        "type": "DECLARATION",
        "code": "TungstenAnswer applyTungstenPortForwardingAnswer = mock(TungstenAnswer.class);",
        "line": 521,
        "locate": "Test Case",
        "locationContext": {
          "methodName": "applyPFRulesAddRuleSuccessTest",
          "methodAnnotations": [
            "@Test"
          ]
        }
      },
      {
        "type": "STUBBING",
        "code": "when(applyTungstenPortForwardingAnswer.getResult()).thenReturn(true);",
        "line": 530,
        "locate": "Test Case",
        "locationContext": {
          "methodName": "applyPFRulesAddRuleSuccessTest",
          "methodAnnotations": [
            "@Test"
          ]
        }
      }
    ],
    "pattern_id": 1
  },
  {
    "variableName": "applyTungstenPortForwardingAnswer",
    "variableType": "TungstenAnswer",
    "mockedClass": "TungstenAnswer",
    "isReuseableMock": false,
    "mockPattern": "Creation:\n\u2014 Local Mock Creation in Test Case\n\nStubbing:\n\u2014 Test Case\n\nVerification:\n\u2014 None",
    "classContext": {
      "packageName": "org.apache.cloudstack.network.tungsten.service",
      "filePath": "C:\\java tool\\Apache\\cloudstack\\plugins\\network-elements\\tungsten\\src\\test\\java\\org\\apache\\cloudstack\\network\\tungsten\\service\\TungstenElementTest.java",
      "className": "TungstenElementTest"
    },
    "statements": [
      {
        "type": "DECLARATION",
        "code": "TungstenAnswer applyTungstenPortForwardingAnswer = mock(TungstenAnswer.class);",
        "line": 543,
        "locate": "Test Case",
        "locationContext": {
          "methodName": "applyPFRulesAddRuleFailTest",
          "methodAnnotations": [
            "@Test"
          ]
        }
      },
      {
        "type": "STUBBING",
        "code": "when(applyTungstenPortForwardingAnswer.getResult()).thenReturn(false);",
        "line": 552,
        "locate": "Test Case",
        "locationContext": {
          "methodName": "applyPFRulesAddRuleFailTest",
          "methodAnnotations": [
            "@Test"
          ]
        }
      }
    ],
    "pattern_id": 1
  },
  {
    "variableName": "applyTungstenPortForwardingAnswer",
    "variableType": "TungstenAnswer",
    "mockedClass": "TungstenAnswer",
    "isReuseableMock": false,
    "mockPattern": "Creation:\n\u2014 Local Mock Creation in Test Case\n\nStubbing:\n\u2014 Test Case\n\nVerification:\n\u2014 None",
    "classContext": {
      "packageName": "org.apache.cloudstack.network.tungsten.service",
      "filePath": "C:\\java tool\\Apache\\cloudstack\\plugins\\network-elements\\tungsten\\src\\test\\java\\org\\apache\\cloudstack\\network\\tungsten\\service\\TungstenElementTest.java",
      "className": "TungstenElementTest"
    },
    "statements": [
      {
        "type": "DECLARATION",
        "code": "TungstenAnswer applyTungstenPortForwardingAnswer = mock(TungstenAnswer.class);",
        "line": 565,
        "locate": "Test Case",
        "locationContext": {
          "methodName": "applyPFRulesRevokeRuleSuccessTest",
          "methodAnnotations": [
            "@Test"
          ]
        }
      },
      {
        "type": "STUBBING",
        "code": "when(applyTungstenPortForwardingAnswer.getResult()).thenReturn(true);",
        "line": 574,
        "locate": "Test Case",
        "locationContext": {
          "methodName": "applyPFRulesRevokeRuleSuccessTest",
          "methodAnnotations": [
            "@Test"
          ]
        }
      }
    ],
    "pattern_id": 1
  },
  {
    "variableName": "applyTungstenPortForwardingAnswer",
    "variableType": "TungstenAnswer",
    "mockedClass": "TungstenAnswer",
    "isReuseableMock": false,
    "mockPattern": "Creation:\n\u2014 Local Mock Creation in Test Case\n\nStubbing:\n\u2014 Test Case\n\nVerification:\n\u2014 None",
    "classContext": {
      "packageName": "org.apache.cloudstack.network.tungsten.service",
      "filePath": "C:\\java tool\\Apache\\cloudstack\\plugins\\network-elements\\tungsten\\src\\test\\java\\org\\apache\\cloudstack\\network\\tungsten\\service\\TungstenElementTest.java",
      "className": "TungstenElementTest"
    },
    "statements": [
      {
        "type": "DECLARATION",
        "code": "TungstenAnswer applyTungstenPortForwardingAnswer = mock(TungstenAnswer.class);",
        "line": 587,
        "locate": "Test Case",
        "locationContext": {
          "methodName": "applyPFRulesRevokeRuleFailTest",
          "methodAnnotations": [
            "@Test"
          ]
        }
      },
      {
        "type": "STUBBING",
        "code": "when(applyTungstenPortForwardingAnswer.getResult()).thenReturn(false);",
        "line": 596,
        "locate": "Test Case",
        "locationContext": {
          "methodName": "applyPFRulesRevokeRuleFailTest",
          "methodAnnotations": [
            "@Test"
          ]
        }
      }
    ],
    "pattern_id": 1
  },
  {
    "variableName": "createTungstenNetworkPolicyAnswer",
    "variableType": "TungstenAnswer",
    "mockedClass": "TungstenAnswer",
    "isReuseableMock": false,
    "mockPattern": "Creation:\n\u2014 Local Mock Creation in Test Case\n\nStubbing:\n\u2014 Test Case\n\nVerification:\n\u2014 None",
    "classContext": {
      "packageName": "org.apache.cloudstack.network.tungsten.service",
      "filePath": "C:\\java tool\\Apache\\cloudstack\\plugins\\network-elements\\tungsten\\src\\test\\java\\org\\apache\\cloudstack\\network\\tungsten\\service\\TungstenElementTest.java",
      "className": "TungstenElementTest"
    },
    "statements": [
      {
        "type": "DECLARATION",
        "code": "TungstenAnswer createTungstenNetworkPolicyAnswer = mock(TungstenAnswer.class);",
        "line": 612,
        "locate": "Test Case",
        "locationContext": {
          "methodName": "preparePublicNetworkTest",
          "methodAnnotations": [
            "@Test"
          ]
        }
      },
      {
        "type": "STUBBING",
        "code": "when(createTungstenNetworkPolicyAnswer.getResult()).thenReturn(true);",
        "line": 623,
        "locate": "Test Case",
        "locationContext": {
          "methodName": "preparePublicNetworkTest",
          "methodAnnotations": [
            "@Test"
          ]
        }
      }
    ],
    "pattern_id": 1
  },
  {
    "variableName": "createTungstenVMAnswer",
    "variableType": "TungstenAnswer",
    "mockedClass": "TungstenAnswer",
    "isReuseableMock": false,
    "mockPattern": "Creation:\n\u2014 Local Mock Creation in Test Case\n\nStubbing:\n\u2014 Test Case\n\nVerification:\n\u2014 None",
    "classContext": {
      "packageName": "org.apache.cloudstack.network.tungsten.service",
      "filePath": "C:\\java tool\\Apache\\cloudstack\\plugins\\network-elements\\tungsten\\src\\test\\java\\org\\apache\\cloudstack\\network\\tungsten\\service\\TungstenElementTest.java",
      "className": "TungstenElementTest"
    },
    "statements": [
      {
        "type": "DECLARATION",
        "code": "TungstenAnswer createTungstenVMAnswer = mock(TungstenAnswer.class);",
        "line": 610,
        "locate": "Test Case",
        "locationContext": {
          "methodName": "preparePublicNetworkTest",
          "methodAnnotations": [
            "@Test"
          ]
        }
      },
      {
        "type": "STUBBING",
        "code": "when(createTungstenVMAnswer.getResult()).thenReturn(true);",
        "line": 622,
        "locate": "Test Case",
        "locationContext": {
          "methodName": "preparePublicNetworkTest",
          "methodAnnotations": [
            "@Test"
          ]
        }
      }
    ],
    "pattern_id": 1
  },
  {
    "variableName": "createTungstenVMAnswer",
    "variableType": "TungstenAnswer",
    "mockedClass": "TungstenAnswer",
    "isReuseableMock": false,
    "mockPattern": "Creation:\n\u2014 Local Mock Creation in Test Case\n\nStubbing:\n\u2014 Test Case\n\nVerification:\n\u2014 None",
    "classContext": {
      "packageName": "org.apache.cloudstack.network.tungsten.service",
      "filePath": "C:\\java tool\\Apache\\cloudstack\\plugins\\network-elements\\tungsten\\src\\test\\java\\org\\apache\\cloudstack\\network\\tungsten\\service\\TungstenElementTest.java",
      "className": "TungstenElementTest"
    },
    "statements": [
      {
        "type": "DECLARATION",
        "code": "TungstenAnswer createTungstenVMAnswer = mock(TungstenAnswer.class);",
        "line": 641,
        "locate": "Test Case",
        "locationContext": {
          "methodName": "prepareManagementNetworkTest",
          "methodAnnotations": [
            "@Test"
          ]
        }
      },
      {
        "type": "STUBBING",
        "code": "when(createTungstenVMAnswer.getResult()).thenReturn(true);",
        "line": 649,
        "locate": "Test Case",
        "locationContext": {
          "methodName": "prepareManagementNetworkTest",
          "methodAnnotations": [
            "@Test"
          ]
        }
      }
    ],
    "pattern_id": 1
  },
  {
    "variableName": "deleteVmAnswer",
    "variableType": "TungstenAnswer",
    "mockedClass": "TungstenAnswer",
    "isReuseableMock": false,
    "mockPattern": "Creation:\n\u2014 Local Mock Creation in Test Case\n\nStubbing:\n\u2014 Test Case\n\nVerification:\n\u2014 None",
    "classContext": {
      "packageName": "org.apache.cloudstack.network.tungsten.service",
      "filePath": "C:\\java tool\\Apache\\cloudstack\\plugins\\network-elements\\tungsten\\src\\test\\java\\org\\apache\\cloudstack\\network\\tungsten\\service\\TungstenElementTest.java",
      "className": "TungstenElementTest"
    },
    "statements": [
      {
        "type": "DECLARATION",
        "code": "TungstenAnswer deleteVmAnswer = mock(TungstenAnswer.class);",
        "line": 690,
        "locate": "Test Case",
        "locationContext": {
          "methodName": "releasePublicNetworkTest",
          "methodAnnotations": [
            "@Test"
          ]
        }
      },
      {
        "type": "STUBBING",
        "code": "when(deleteVmAnswer.getResult()).thenReturn(true);",
        "line": 705,
        "locate": "Test Case",
        "locationContext": {
          "methodName": "releasePublicNetworkTest",
          "methodAnnotations": [
            "@Test"
          ]
        }
      }
    ],
    "pattern_id": 1
  },
  {
    "variableName": "deleteTungstenNetworkPolicyAnswer",
    "variableType": "TungstenAnswer",
    "mockedClass": "TungstenAnswer",
    "isReuseableMock": false,
    "mockPattern": "Creation:\n\u2014 Local Mock Creation in Test Case\n\nStubbing:\n\u2014 Test Case\n\nVerification:\n\u2014 None",
    "classContext": {
      "packageName": "org.apache.cloudstack.network.tungsten.service",
      "filePath": "C:\\java tool\\Apache\\cloudstack\\plugins\\network-elements\\tungsten\\src\\test\\java\\org\\apache\\cloudstack\\network\\tungsten\\service\\TungstenElementTest.java",
      "className": "TungstenElementTest"
    },
    "statements": [
      {
        "type": "DECLARATION",
        "code": "TungstenAnswer deleteTungstenNetworkPolicyAnswer = mock(TungstenAnswer.class);",
        "line": 691,
        "locate": "Test Case",
        "locationContext": {
          "methodName": "releasePublicNetworkTest",
          "methodAnnotations": [
            "@Test"
          ]
        }
      },
      {
        "type": "STUBBING",
        "code": "when(deleteTungstenNetworkPolicyAnswer.getResult()).thenReturn(true);",
        "line": 706,
        "locate": "Test Case",
        "locationContext": {
          "methodName": "releasePublicNetworkTest",
          "methodAnnotations": [
            "@Test"
          ]
        }
      }
    ],
    "pattern_id": 1
  },
  {
    "variableName": "deleteTungstenVRouterPortAnswer",
    "variableType": "TungstenAnswer",
    "mockedClass": "TungstenAnswer",
    "isReuseableMock": false,
    "mockPattern": "Creation:\n\u2014 Local Mock Creation in Test Case\n\nStubbing:\n\u2014 Test Case\n\nVerification:\n\u2014 None",
    "classContext": {
      "packageName": "org.apache.cloudstack.network.tungsten.service",
      "filePath": "C:\\java tool\\Apache\\cloudstack\\plugins\\network-elements\\tungsten\\src\\test\\java\\org\\apache\\cloudstack\\network\\tungsten\\service\\TungstenElementTest.java",
      "className": "TungstenElementTest"
    },
    "statements": [
      {
        "type": "DECLARATION",
        "code": "TungstenAnswer deleteTungstenVRouterPortAnswer = mock(TungstenAnswer.class);",
        "line": 688,
        "locate": "Test Case",
        "locationContext": {
          "methodName": "releasePublicNetworkTest",
          "methodAnnotations": [
            "@Test"
          ]
        }
      },
      {
        "type": "STUBBING",
        "code": "when(deleteTungstenVRouterPortAnswer.getResult()).thenReturn(true);",
        "line": 703,
        "locate": "Test Case",
        "locationContext": {
          "methodName": "releasePublicNetworkTest",
          "methodAnnotations": [
            "@Test"
          ]
        }
      }
    ],
    "pattern_id": 1
  },
  {
    "variableName": "deleteVmiAnswer",
    "variableType": "TungstenAnswer",
    "mockedClass": "TungstenAnswer",
    "isReuseableMock": false,
    "mockPattern": "Creation:\n\u2014 Local Mock Creation in Test Case\n\nStubbing:\n\u2014 Test Case\n\nVerification:\n\u2014 None",
    "classContext": {
      "packageName": "org.apache.cloudstack.network.tungsten.service",
      "filePath": "C:\\java tool\\Apache\\cloudstack\\plugins\\network-elements\\tungsten\\src\\test\\java\\org\\apache\\cloudstack\\network\\tungsten\\service\\TungstenElementTest.java",
      "className": "TungstenElementTest"
    },
    "statements": [
      {
        "type": "DECLARATION",
        "code": "TungstenAnswer deleteVmiAnswer = mock(TungstenAnswer.class);",
        "line": 689,
        "locate": "Test Case",
        "locationContext": {
          "methodName": "releasePublicNetworkTest",
          "methodAnnotations": [
            "@Test"
          ]
        }
      },
      {
        "type": "STUBBING",
        "code": "when(deleteVmiAnswer.getResult()).thenReturn(true);",
        "line": 704,
        "locate": "Test Case",
        "locationContext": {
          "methodName": "releasePublicNetworkTest",
          "methodAnnotations": [
            "@Test"
          ]
        }
      }
    ],
    "pattern_id": 1
  },
  {
    "variableName": "deleteVmAnswer",
    "variableType": "TungstenAnswer",
    "mockedClass": "TungstenAnswer",
    "isReuseableMock": false,
    "mockPattern": "Creation:\n\u2014 Local Mock Creation in Test Case\n\nStubbing:\n\u2014 Test Case\n\nVerification:\n\u2014 None",
    "classContext": {
      "packageName": "org.apache.cloudstack.network.tungsten.service",
      "filePath": "C:\\java tool\\Apache\\cloudstack\\plugins\\network-elements\\tungsten\\src\\test\\java\\org\\apache\\cloudstack\\network\\tungsten\\service\\TungstenElementTest.java",
      "className": "TungstenElementTest"
    },
    "statements": [
      {
        "type": "DECLARATION",
        "code": "TungstenAnswer deleteVmAnswer = mock(TungstenAnswer.class);",
        "line": 721,
        "locate": "Test Case",
        "locationContext": {
          "methodName": "releaseManagementNetworkTest",
          "methodAnnotations": [
            "@Test"
          ]
        }
      },
      {
        "type": "STUBBING",
        "code": "when(deleteVmAnswer.getResult()).thenReturn(true);",
        "line": 733,
        "locate": "Test Case",
        "locationContext": {
          "methodName": "releaseManagementNetworkTest",
          "methodAnnotations": [
            "@Test"
          ]
        }
      }
    ],
    "pattern_id": 1
  },
  {
    "variableName": "deleteTungstenVRouterPortAnswer",
    "variableType": "TungstenAnswer",
    "mockedClass": "TungstenAnswer",
    "isReuseableMock": false,
    "mockPattern": "Creation:\n\u2014 Local Mock Creation in Test Case\n\nStubbing:\n\u2014 Test Case\n\nVerification:\n\u2014 None",
    "classContext": {
      "packageName": "org.apache.cloudstack.network.tungsten.service",
      "filePath": "C:\\java tool\\Apache\\cloudstack\\plugins\\network-elements\\tungsten\\src\\test\\java\\org\\apache\\cloudstack\\network\\tungsten\\service\\TungstenElementTest.java",
      "className": "TungstenElementTest"
    },
    "statements": [
      {
        "type": "DECLARATION",
        "code": "TungstenAnswer deleteTungstenVRouterPortAnswer = mock(TungstenAnswer.class);",
        "line": 719,
        "locate": "Test Case",
        "locationContext": {
          "methodName": "releaseManagementNetworkTest",
          "methodAnnotations": [
            "@Test"
          ]
        }
      },
      {
        "type": "STUBBING",
        "code": "when(deleteTungstenVRouterPortAnswer.getResult()).thenReturn(true);",
        "line": 731,
        "locate": "Test Case",
        "locationContext": {
          "methodName": "releaseManagementNetworkTest",
          "methodAnnotations": [
            "@Test"
          ]
        }
      }
    ],
    "pattern_id": 1
  },
  {
    "variableName": "deleteVmiAnswer",
    "variableType": "TungstenAnswer",
    "mockedClass": "TungstenAnswer",
    "isReuseableMock": false,
    "mockPattern": "Creation:\n\u2014 Local Mock Creation in Test Case\n\nStubbing:\n\u2014 Test Case\n\nVerification:\n\u2014 None",
    "classContext": {
      "packageName": "org.apache.cloudstack.network.tungsten.service",
      "filePath": "C:\\java tool\\Apache\\cloudstack\\plugins\\network-elements\\tungsten\\src\\test\\java\\org\\apache\\cloudstack\\network\\tungsten\\service\\TungstenElementTest.java",
      "className": "TungstenElementTest"
    },
    "statements": [
      {
        "type": "DECLARATION",
        "code": "TungstenAnswer deleteVmiAnswer = mock(TungstenAnswer.class);",
        "line": 720,
        "locate": "Test Case",
        "locationContext": {
          "methodName": "releaseManagementNetworkTest",
          "methodAnnotations": [
            "@Test"
          ]
        }
      },
      {
        "type": "STUBBING",
        "code": "when(deleteVmiAnswer.getResult()).thenReturn(true);",
        "line": 732,
        "locate": "Test Case",
        "locationContext": {
          "methodName": "releaseManagementNetworkTest",
          "methodAnnotations": [
            "@Test"
          ]
        }
      }
    ],
    "pattern_id": 1
  },
  {
    "variableName": "deleteTungstenVRouterPortAnswer",
    "variableType": "TungstenAnswer",
    "mockedClass": "TungstenAnswer",
    "isReuseableMock": false,
    "mockPattern": "Creation:\n\u2014 Local Mock Creation in Test Case\n\nStubbing:\n\u2014 Test Case\n\nVerification:\n\u2014 None",
    "classContext": {
      "packageName": "org.apache.cloudstack.network.tungsten.service",
      "filePath": "C:\\java tool\\Apache\\cloudstack\\plugins\\network-elements\\tungsten\\src\\test\\java\\org\\apache\\cloudstack\\network\\tungsten\\service\\TungstenElementTest.java",
      "className": "TungstenElementTest"
    },
    "statements": [
      {
        "type": "DECLARATION",
        "code": "TungstenAnswer deleteTungstenVRouterPortAnswer = mock(TungstenAnswer.class);",
        "line": 746,
        "locate": "Test Case",
        "locationContext": {
          "methodName": "releaseWithExceptionTest",
          "methodAnnotations": [
            "@Test"
          ]
        }
      },
      {
        "type": "STUBBING",
        "code": "when(deleteTungstenVRouterPortAnswer.getResult()).thenReturn(true);",
        "line": 757,
        "locate": "Test Case",
        "locationContext": {
          "methodName": "releaseWithExceptionTest",
          "methodAnnotations": [
            "@Test"
          ]
        }
      }
    ],
    "pattern_id": 1
  },
  {
    "variableName": "deleteVmiAnswer",
    "variableType": "TungstenAnswer",
    "mockedClass": "TungstenAnswer",
    "isReuseableMock": false,
    "mockPattern": "Creation:\n\u2014 Local Mock Creation in Test Case\n\nStubbing:\n\u2014 Test Case\n\nVerification:\n\u2014 None",
    "classContext": {
      "packageName": "org.apache.cloudstack.network.tungsten.service",
      "filePath": "C:\\java tool\\Apache\\cloudstack\\plugins\\network-elements\\tungsten\\src\\test\\java\\org\\apache\\cloudstack\\network\\tungsten\\service\\TungstenElementTest.java",
      "className": "TungstenElementTest"
    },
    "statements": [
      {
        "type": "DECLARATION",
        "code": "TungstenAnswer deleteVmiAnswer = mock(TungstenAnswer.class);",
        "line": 747,
        "locate": "Test Case",
        "locationContext": {
          "methodName": "releaseWithExceptionTest",
          "methodAnnotations": [
            "@Test"
          ]
        }
      },
      {
        "type": "STUBBING",
        "code": "when(deleteVmiAnswer.getResult()).thenReturn(true);",
        "line": 758,
        "locate": "Test Case",
        "locationContext": {
          "methodName": "releaseWithExceptionTest",
          "methodAnnotations": [
            "@Test"
          ]
        }
      }
    ],
    "pattern_id": 1
  },
  {
    "variableName": "tungstenDeleteNPAnswer",
    "variableType": "TungstenAnswer",
    "mockedClass": "TungstenAnswer",
    "isReuseableMock": false,
    "mockPattern": "Creation:\n\u2014 Local Mock Creation in Test Case\n\nStubbing:\n\u2014 Test Case\n\nVerification:\n\u2014 None",
    "classContext": {
      "packageName": "org.apache.cloudstack.network.tungsten.service",
      "filePath": "C:\\java tool\\Apache\\cloudstack\\plugins\\network-elements\\tungsten\\src\\test\\java\\org\\apache\\cloudstack\\network\\tungsten\\service\\TungstenElementTest.java",
      "className": "TungstenElementTest"
    },
    "statements": [
      {
        "type": "DECLARATION",
        "code": "TungstenAnswer tungstenDeleteNPAnswer = mock(TungstenAnswer.class);",
        "line": 771,
        "locate": "Test Case",
        "locationContext": {
          "methodName": "destroyTest",
          "methodAnnotations": [
            "@Test"
          ]
        }
      },
      {
        "type": "STUBBING",
        "code": "when(tungstenDeleteNPAnswer.getResult()).thenReturn(true);",
        "line": 777,
        "locate": "Test Case",
        "locationContext": {
          "methodName": "destroyTest",
          "methodAnnotations": [
            "@Test"
          ]
        }
      }
    ],
    "pattern_id": 1
  },
  {
    "variableName": "tungstenDeleteFIPAnswer",
    "variableType": "TungstenAnswer",
    "mockedClass": "TungstenAnswer",
    "isReuseableMock": false,
    "mockPattern": "Creation:\n\u2014 Local Mock Creation in Test Case\n\nStubbing:\n\u2014 Test Case\n\nVerification:\n\u2014 None",
    "classContext": {
      "packageName": "org.apache.cloudstack.network.tungsten.service",
      "filePath": "C:\\java tool\\Apache\\cloudstack\\plugins\\network-elements\\tungsten\\src\\test\\java\\org\\apache\\cloudstack\\network\\tungsten\\service\\TungstenElementTest.java",
      "className": "TungstenElementTest"
    },
    "statements": [
      {
        "type": "DECLARATION",
        "code": "TungstenAnswer tungstenDeleteFIPAnswer = mock(TungstenAnswer.class);",
        "line": 770,
        "locate": "Test Case",
        "locationContext": {
          "methodName": "destroyTest",
          "methodAnnotations": [
            "@Test"
          ]
        }
      },
      {
        "type": "STUBBING",
        "code": "when(tungstenDeleteFIPAnswer.getResult()).thenReturn(true);",
        "line": 776,
        "locate": "Test Case",
        "locationContext": {
          "methodName": "destroyTest",
          "methodAnnotations": [
            "@Test"
          ]
        }
      }
    ],
    "pattern_id": 1
  },
  {
    "variableName": "applyNetworkPolicyAnswer",
    "variableType": "TungstenAnswer",
    "mockedClass": "TungstenAnswer",
    "isReuseableMock": false,
    "mockPattern": "Creation:\n\u2014 Local Mock Creation in Test Case\n\nStubbing:\n\u2014 Test Case\n\nVerification:\n\u2014 None",
    "classContext": {
      "packageName": "org.apache.cloudstack.network.tungsten.service",
      "filePath": "C:\\java tool\\Apache\\cloudstack\\plugins\\network-elements\\tungsten\\src\\test\\java\\org\\apache\\cloudstack\\network\\tungsten\\service\\TungstenElementTest.java",
      "className": "TungstenElementTest"
    },
    "statements": [
      {
        "type": "DECLARATION",
        "code": "TungstenAnswer applyNetworkPolicyAnswer = mock(TungstenAnswer.class);",
        "line": 920,
        "locate": "Test Case",
        "locationContext": {
          "methodName": "applyFWRulesWithAddEgressRuleTest",
          "methodAnnotations": [
            "@Test"
          ]
        }
      },
      {
        "type": "STUBBING",
        "code": "when(applyNetworkPolicyAnswer.getResult()).thenReturn(true);",
        "line": 931,
        "locate": "Test Case",
        "locationContext": {
          "methodName": "applyFWRulesWithAddEgressRuleTest",
          "methodAnnotations": [
            "@Test"
          ]
        }
      }
    ],
    "pattern_id": 1
  },
  {
    "variableName": "createNetworkPolicyAnswer",
    "variableType": "TungstenAnswer",
    "mockedClass": "TungstenAnswer",
    "isReuseableMock": false,
    "mockPattern": "Creation:\n\u2014 Local Mock Creation in Test Case\n\nStubbing:\n\u2014 Test Case\n\nVerification:\n\u2014 None",
    "classContext": {
      "packageName": "org.apache.cloudstack.network.tungsten.service",
      "filePath": "C:\\java tool\\Apache\\cloudstack\\plugins\\network-elements\\tungsten\\src\\test\\java\\org\\apache\\cloudstack\\network\\tungsten\\service\\TungstenElementTest.java",
      "className": "TungstenElementTest"
    },
    "statements": [
      {
        "type": "DECLARATION",
        "code": "TungstenAnswer createNetworkPolicyAnswer = mock(TungstenAnswer.class);",
        "line": 919,
        "locate": "Test Case",
        "locationContext": {
          "methodName": "applyFWRulesWithAddEgressRuleTest",
          "methodAnnotations": [
            "@Test"
          ]
        }
      },
      {
        "type": "STUBBING",
        "code": "when(createNetworkPolicyAnswer.getResult()).thenReturn(true);",
        "line": 930,
        "locate": "Test Case",
        "locationContext": {
          "methodName": "applyFWRulesWithAddEgressRuleTest",
          "methodAnnotations": [
            "@Test"
          ]
        }
      }
    ],
    "pattern_id": 1
  },
  {
    "variableName": "applyNetworkPolicyAnswer",
    "variableType": "TungstenAnswer",
    "mockedClass": "TungstenAnswer",
    "isReuseableMock": false,
    "mockPattern": "Creation:\n\u2014 Local Mock Creation in Test Case\n\nStubbing:\n\u2014 Test Case\n\nVerification:\n\u2014 None",
    "classContext": {
      "packageName": "org.apache.cloudstack.network.tungsten.service",
      "filePath": "C:\\java tool\\Apache\\cloudstack\\plugins\\network-elements\\tungsten\\src\\test\\java\\org\\apache\\cloudstack\\network\\tungsten\\service\\TungstenElementTest.java",
      "className": "TungstenElementTest"
    },
    "statements": [
      {
        "type": "DECLARATION",
        "code": "TungstenAnswer applyNetworkPolicyAnswer = mock(TungstenAnswer.class);",
        "line": 942,
        "locate": "Test Case",
        "locationContext": {
          "methodName": "applyFWRulesWithAddIngressRuleTest",
          "methodAnnotations": [
            "@Test"
          ]
        }
      },
      {
        "type": "STUBBING",
        "code": "when(applyNetworkPolicyAnswer.getResult()).thenReturn(true);",
        "line": 957,
        "locate": "Test Case",
        "locationContext": {
          "methodName": "applyFWRulesWithAddIngressRuleTest",
          "methodAnnotations": [
            "@Test"
          ]
        }
      }
    ],
    "pattern_id": 1
  },
  {
    "variableName": "createNetworkPolicyAnswer",
    "variableType": "TungstenAnswer",
    "mockedClass": "TungstenAnswer",
    "isReuseableMock": false,
    "mockPattern": "Creation:\n\u2014 Local Mock Creation in Test Case\n\nStubbing:\n\u2014 Test Case\n\nVerification:\n\u2014 None",
    "classContext": {
      "packageName": "org.apache.cloudstack.network.tungsten.service",
      "filePath": "C:\\java tool\\Apache\\cloudstack\\plugins\\network-elements\\tungsten\\src\\test\\java\\org\\apache\\cloudstack\\network\\tungsten\\service\\TungstenElementTest.java",
      "className": "TungstenElementTest"
    },
    "statements": [
      {
        "type": "DECLARATION",
        "code": "TungstenAnswer createNetworkPolicyAnswer = mock(TungstenAnswer.class);",
        "line": 941,
        "locate": "Test Case",
        "locationContext": {
          "methodName": "applyFWRulesWithAddIngressRuleTest",
          "methodAnnotations": [
            "@Test"
          ]
        }
      },
      {
        "type": "STUBBING",
        "code": "when(createNetworkPolicyAnswer.getResult()).thenReturn(true);",
        "line": 956,
        "locate": "Test Case",
        "locationContext": {
          "methodName": "applyFWRulesWithAddIngressRuleTest",
          "methodAnnotations": [
            "@Test"
          ]
        }
      }
    ],
    "pattern_id": 1
  },
  {
    "variableName": "deleteNetworkPolicyAnswer",
    "variableType": "TungstenAnswer",
    "mockedClass": "TungstenAnswer",
    "isReuseableMock": false,
    "mockPattern": "Creation:\n\u2014 Local Mock Creation in Test Case\n\nStubbing:\n\u2014 Test Case\n\nVerification:\n\u2014 None",
    "classContext": {
      "packageName": "org.apache.cloudstack.network.tungsten.service",
      "filePath": "C:\\java tool\\Apache\\cloudstack\\plugins\\network-elements\\tungsten\\src\\test\\java\\org\\apache\\cloudstack\\network\\tungsten\\service\\TungstenElementTest.java",
      "className": "TungstenElementTest"
    },
    "statements": [
      {
        "type": "DECLARATION",
        "code": "TungstenAnswer deleteNetworkPolicyAnswer = mock(TungstenAnswer.class);",
        "line": 967,
        "locate": "Test Case",
        "locationContext": {
          "methodName": "applyFWRulesWithRevokeRuleTest",
          "methodAnnotations": [
            "@Test"
          ]
        }
      },
      {
        "type": "STUBBING",
        "code": "when(deleteNetworkPolicyAnswer.getResult()).thenReturn(true);",
        "line": 974,
        "locate": "Test Case",
        "locationContext": {
          "methodName": "applyFWRulesWithRevokeRuleTest",
          "methodAnnotations": [
            "@Test"
          ]
        }
      }
    ],
    "pattern_id": 1
  },
  {
    "variableName": "tungstenAnswer",
    "variableType": "TungstenAnswer",
    "mockedClass": "TungstenAnswer",
    "isReuseableMock": false,
    "mockPattern": "Creation:\n\u2014 Local Mock Creation in Test Case\n\nStubbing:\n\u2014 Test Case\n\nVerification:\n\u2014 None",
    "classContext": {
      "packageName": "org.apache.cloudstack.network.tungsten.service",
      "filePath": "C:\\java tool\\Apache\\cloudstack\\plugins\\network-elements\\tungsten\\src\\test\\java\\org\\apache\\cloudstack\\network\\tungsten\\service\\TungstenElementTest.java",
      "className": "TungstenElementTest"
    },
    "statements": [
      {
        "type": "DECLARATION",
        "code": "TungstenAnswer tungstenAnswer = mock(TungstenAnswer.class);",
        "line": 1014,
        "locate": "Test Case",
        "locationContext": {
          "methodName": "prepareMigrationTest",
          "methodAnnotations": [
            "@Test"
          ]
        }
      },
      {
        "type": "STUBBING",
        "code": "when(tungstenAnswer.getResult()).thenReturn(true);",
        "line": 1021,
        "locate": "Test Case",
        "locationContext": {
          "methodName": "prepareMigrationTest",
          "methodAnnotations": [
            "@Test"
          ]
        }
      }
    ],
    "pattern_id": 1
  },
  {
    "variableName": "tungstenAnswer",
    "variableType": "TungstenAnswer",
    "mockedClass": "TungstenAnswer",
    "isReuseableMock": false,
    "mockPattern": "Creation:\n\u2014 Local Mock Creation in Test Case\n\nStubbing:\n\u2014 Test Case\n\nVerification:\n\u2014 None",
    "classContext": {
      "packageName": "org.apache.cloudstack.network.tungsten.service",
      "filePath": "C:\\java tool\\Apache\\cloudstack\\plugins\\network-elements\\tungsten\\src\\test\\java\\org\\apache\\cloudstack\\network\\tungsten\\service\\TungstenFabricUtilsTest.java",
      "className": "TungstenFabricUtilsTest"
    },
    "statements": [
      {
        "type": "DECLARATION",
        "code": "TungstenAnswer tungstenAnswer = mock(TungstenAnswer.class);",
        "line": 55,
        "locate": "Test Case",
        "locationContext": {
          "methodName": "sendTungstenCommandSuccessTest",
          "methodAnnotations": [
            "@Test"
          ]
        }
      },
      {
        "type": "STUBBING",
        "code": "when(tungstenAnswer.getResult()).thenReturn(true);",
        "line": 60,
        "locate": "Test Case",
        "locationContext": {
          "methodName": "sendTungstenCommandSuccessTest",
          "methodAnnotations": [
            "@Test"
          ]
        }
      }
    ],
    "pattern_id": 1
  },
  {
    "variableName": "tungstenAnswer",
    "variableType": "TungstenAnswer",
    "mockedClass": "TungstenAnswer",
    "isReuseableMock": false,
    "mockPattern": "Creation:\n\u2014 Local Mock Creation in Test Case\n\nStubbing:\n\u2014 Test Case\n\nVerification:\n\u2014 None",
    "classContext": {
      "packageName": "org.apache.cloudstack.network.tungsten.service",
      "filePath": "C:\\java tool\\Apache\\cloudstack\\plugins\\network-elements\\tungsten\\src\\test\\java\\org\\apache\\cloudstack\\network\\tungsten\\service\\TungstenFabricUtilsTest.java",
      "className": "TungstenFabricUtilsTest"
    },
    "statements": [
      {
        "type": "DECLARATION",
        "code": "TungstenAnswer tungstenAnswer = mock(TungstenAnswer.class);",
        "line": 85,
        "locate": "Test Case",
        "locationContext": {
          "methodName": "sendTungstenCommandWithFalseAnswer",
          "methodAnnotations": [
            "@Test"
          ]
        }
      },
      {
        "type": "STUBBING",
        "code": "when(tungstenAnswer.getResult()).thenReturn(false);",
        "line": 90,
        "locate": "Test Case",
        "locationContext": {
          "methodName": "sendTungstenCommandWithFalseAnswer",
          "methodAnnotations": [
            "@Test"
          ]
        }
      },
      {
        "type": "STUBBING",
        "code": "when(tungstenAnswer.getDetails()).thenReturn(\"\");",
        "line": 91,
        "locate": "Test Case",
        "locationContext": {
          "methodName": "sendTungstenCommandWithFalseAnswer",
          "methodAnnotations": [
            "@Test"
          ]
        }
      }
    ],
    "pattern_id": 1
  },
  {
    "variableName": "createTungstenFloatingIpAnswer",
    "variableType": "TungstenAnswer",
    "mockedClass": "TungstenAnswer",
    "isReuseableMock": false,
    "mockPattern": "Creation:\n\u2014 Local Mock Creation in Test Case\n\nStubbing:\n\u2014 Test Case\n\nVerification:\n\u2014 None",
    "classContext": {
      "packageName": "org.apache.cloudstack.network.tungsten.service",
      "filePath": "C:\\java tool\\Apache\\cloudstack\\plugins\\network-elements\\tungsten\\src\\test\\java\\org\\apache\\cloudstack\\network\\tungsten\\service\\TungstenServiceImplTest.java",
      "className": "TungstenServiceImplTest"
    },
    "statements": [
      {
        "type": "DECLARATION",
        "code": "TungstenAnswer createTungstenFloatingIpAnswer = mock(TungstenAnswer.class);",
        "line": 318,
        "locate": "Test Case",
        "locationContext": {
          "methodName": "createTungstenFloatingIpTest",
          "methodAnnotations": [
            "@Test"
          ]
        }
      },
      {
        "type": "STUBBING",
        "code": "when(createTungstenFloatingIpAnswer.getResult()).thenReturn(true);",
        "line": 323,
        "locate": "Test Case",
        "locationContext": {
          "methodName": "createTungstenFloatingIpTest",
          "methodAnnotations": [
            "@Test"
          ]
        }
      }
    ],
    "pattern_id": 1
  },
  {
    "variableName": "deleteTungstenFloatingIpAnswer",
    "variableType": "TungstenAnswer",
    "mockedClass": "TungstenAnswer",
    "isReuseableMock": false,
    "mockPattern": "Creation:\n\u2014 Local Mock Creation in Test Case\n\nStubbing:\n\u2014 Test Case\n\nVerification:\n\u2014 None",
    "classContext": {
      "packageName": "org.apache.cloudstack.network.tungsten.service",
      "filePath": "C:\\java tool\\Apache\\cloudstack\\plugins\\network-elements\\tungsten\\src\\test\\java\\org\\apache\\cloudstack\\network\\tungsten\\service\\TungstenServiceImplTest.java",
      "className": "TungstenServiceImplTest"
    },
    "statements": [
      {
        "type": "DECLARATION",
        "code": "TungstenAnswer deleteTungstenFloatingIpAnswer = mock(TungstenAnswer.class);",
        "line": 333,
        "locate": "Test Case",
        "locationContext": {
          "methodName": "deleteTungstenFloatingIpWithIpAddressTest",
          "methodAnnotations": [
            "@Test"
          ]
        }
      },
      {
        "type": "STUBBING",
        "code": "when(deleteTungstenFloatingIpAnswer.getResult()).thenReturn(true);",
        "line": 337,
        "locate": "Test Case",
        "locationContext": {
          "methodName": "deleteTungstenFloatingIpWithIpAddressTest",
          "methodAnnotations": [
            "@Test"
          ]
        }
      }
    ],
    "pattern_id": 1
  },
  {
    "variableName": "deleteTungstenDomainAnswer",
    "variableType": "TungstenAnswer",
    "mockedClass": "TungstenAnswer",
    "isReuseableMock": false,
    "mockPattern": "Creation:\n\u2014 Local Mock Creation in Test Case\n\nStubbing:\n\u2014 Test Case\n\nVerification:\n\u2014 None",
    "classContext": {
      "packageName": "org.apache.cloudstack.network.tungsten.service",
      "filePath": "C:\\java tool\\Apache\\cloudstack\\plugins\\network-elements\\tungsten\\src\\test\\java\\org\\apache\\cloudstack\\network\\tungsten\\service\\TungstenServiceImplTest.java",
      "className": "TungstenServiceImplTest"
    },
    "statements": [
      {
        "type": "DECLARATION",
        "code": "TungstenAnswer deleteTungstenDomainAnswer = mock(TungstenAnswer.class);",
        "line": 346,
        "locate": "Test Case",
        "locationContext": {
          "methodName": "deleteTungstenDomainTest",
          "methodAnnotations": [
            "@Test"
          ]
        }
      },
      {
        "type": "STUBBING",
        "code": "when(deleteTungstenDomainAnswer.getResult()).thenReturn(true);",
        "line": 350,
        "locate": "Test Case",
        "locationContext": {
          "methodName": "deleteTungstenDomainTest",
          "methodAnnotations": [
            "@Test"
          ]
        }
      }
    ],
    "pattern_id": 1
  },
  {
    "variableName": "deleteTungstenProjectAnswer",
    "variableType": "TungstenAnswer",
    "mockedClass": "TungstenAnswer",
    "isReuseableMock": false,
    "mockPattern": "Creation:\n\u2014 Local Mock Creation in Test Case\n\nStubbing:\n\u2014 Test Case\n\nVerification:\n\u2014 None",
    "classContext": {
      "packageName": "org.apache.cloudstack.network.tungsten.service",
      "filePath": "C:\\java tool\\Apache\\cloudstack\\plugins\\network-elements\\tungsten\\src\\test\\java\\org\\apache\\cloudstack\\network\\tungsten\\service\\TungstenServiceImplTest.java",
      "className": "TungstenServiceImplTest"
    },
    "statements": [
      {
        "type": "DECLARATION",
        "code": "TungstenAnswer deleteTungstenProjectAnswer = mock(TungstenAnswer.class);",
        "line": 359,
        "locate": "Test Case",
        "locationContext": {
          "methodName": "deleteTungstenProjectTest",
          "methodAnnotations": [
            "@Test"
          ]
        }
      },
      {
        "type": "STUBBING",
        "code": "when(deleteTungstenProjectAnswer.getResult()).thenReturn(true);",
        "line": 363,
        "locate": "Test Case",
        "locationContext": {
          "methodName": "deleteTungstenProjectTest",
          "methodAnnotations": [
            "@Test"
          ]
        }
      }
    ],
    "pattern_id": 1
  },
  {
    "variableName": "applyTungstenPolicyAnswer",
    "variableType": "TungstenAnswer",
    "mockedClass": "TungstenAnswer",
    "isReuseableMock": false,
    "mockPattern": "Creation:\n\u2014 Local Mock Creation in Test Case\n\nStubbing:\n\u2014 Test Case\n\nVerification:\n\u2014 None",
    "classContext": {
      "packageName": "org.apache.cloudstack.network.tungsten.service",
      "filePath": "C:\\java tool\\Apache\\cloudstack\\plugins\\network-elements\\tungsten\\src\\test\\java\\org\\apache\\cloudstack\\network\\tungsten\\service\\TungstenServiceImplTest.java",
      "className": "TungstenServiceImplTest"
    },
    "statements": [
      {
        "type": "DECLARATION",
        "code": "TungstenAnswer applyTungstenPolicyAnswer = mock(TungstenAnswer.class);",
        "line": 372,
        "locate": "Test Case",
        "locationContext": {
          "methodName": "addTungstenDefaultNetworkPolicyTest",
          "methodAnnotations": [
            "@Test"
          ]
        }
      },
      {
        "type": "STUBBING",
        "code": "when(applyTungstenPolicyAnswer.getResult()).thenReturn(true);",
        "line": 379,
        "locate": "Test Case",
        "locationContext": {
          "methodName": "addTungstenDefaultNetworkPolicyTest",
          "methodAnnotations": [
            "@Test"
          ]
        }
      }
    ],
    "pattern_id": 1
  },
  {
    "variableName": "createTungstenPolicyAnswer",
    "variableType": "TungstenAnswer",
    "mockedClass": "TungstenAnswer",
    "isReuseableMock": false,
    "mockPattern": "Creation:\n\u2014 Local Mock Creation in Test Case\n\nStubbing:\n\u2014 Test Case\n\nVerification:\n\u2014 None",
    "classContext": {
      "packageName": "org.apache.cloudstack.network.tungsten.service",
      "filePath": "C:\\java tool\\Apache\\cloudstack\\plugins\\network-elements\\tungsten\\src\\test\\java\\org\\apache\\cloudstack\\network\\tungsten\\service\\TungstenServiceImplTest.java",
      "className": "TungstenServiceImplTest"
    },
    "statements": [
      {
        "type": "DECLARATION",
        "code": "TungstenAnswer createTungstenPolicyAnswer = mock(TungstenAnswer.class);",
        "line": 371,
        "locate": "Test Case",
        "locationContext": {
          "methodName": "addTungstenDefaultNetworkPolicyTest",
          "methodAnnotations": [
            "@Test"
          ]
        }
      },
      {
        "type": "STUBBING",
        "code": "when(createTungstenPolicyAnswer.getApiObjectBase()).thenReturn(networkPolicy);",
        "line": 377,
        "locate": "Test Case",
        "locationContext": {
          "methodName": "addTungstenDefaultNetworkPolicyTest",
          "methodAnnotations": [
            "@Test"
          ]
        }
      },
      {
        "type": "STUBBING",
        "code": "when(createTungstenPolicyAnswer.getResult()).thenReturn(true);",
        "line": 378,
        "locate": "Test Case",
        "locationContext": {
          "methodName": "addTungstenDefaultNetworkPolicyTest",
          "methodAnnotations": [
            "@Test"
          ]
        }
      }
    ],
    "pattern_id": 1
  },
  {
    "variableName": "applyTungstenPolicyAnswer",
    "variableType": "TungstenAnswer",
    "mockedClass": "TungstenAnswer",
    "isReuseableMock": false,
    "mockPattern": "Creation:\n\u2014 Local Mock Creation in Test Case\n\nStubbing:\n\u2014 Test Case\n\nVerification:\n\u2014 None",
    "classContext": {
      "packageName": "org.apache.cloudstack.network.tungsten.service",
      "filePath": "C:\\java tool\\Apache\\cloudstack\\plugins\\network-elements\\tungsten\\src\\test\\java\\org\\apache\\cloudstack\\network\\tungsten\\service\\TungstenServiceImplTest.java",
      "className": "TungstenServiceImplTest"
    },
    "statements": [
      {
        "type": "DECLARATION",
        "code": "TungstenAnswer applyTungstenPolicyAnswer = mock(TungstenAnswer.class);",
        "line": 396,
        "locate": "Test Case",
        "locationContext": {
          "methodName": "createManagementNetworkTest",
          "methodAnnotations": [
            "@Test"
          ]
        }
      },
      {
        "type": "STUBBING",
        "code": "when(applyTungstenPolicyAnswer.getResult()).thenReturn(true);",
        "line": 414,
        "locate": "Test Case",
        "locationContext": {
          "methodName": "createManagementNetworkTest",
          "methodAnnotations": [
            "@Test"
          ]
        }
      }
    ],
    "pattern_id": 1
  },
  {
    "variableName": "createTungstenNetworkAnswer",
    "variableType": "TungstenAnswer",
    "mockedClass": "TungstenAnswer",
    "isReuseableMock": false,
    "mockPattern": "Creation:\n\u2014 Local Mock Creation in Test Case\n\nStubbing:\n\u2014 Test Case\n\nVerification:\n\u2014 None",
    "classContext": {
      "packageName": "org.apache.cloudstack.network.tungsten.service",
      "filePath": "C:\\java tool\\Apache\\cloudstack\\plugins\\network-elements\\tungsten\\src\\test\\java\\org\\apache\\cloudstack\\network\\tungsten\\service\\TungstenServiceImplTest.java",
      "className": "TungstenServiceImplTest"
    },
    "statements": [
      {
        "type": "DECLARATION",
        "code": "TungstenAnswer createTungstenNetworkAnswer = mock(TungstenAnswer.class);",
        "line": 391,
        "locate": "Test Case",
        "locationContext": {
          "methodName": "createManagementNetworkTest",
          "methodAnnotations": [
            "@Test"
          ]
        }
      },
      {
        "type": "STUBBING",
        "code": "when(createTungstenNetworkAnswer.getResult()).thenReturn(true);",
        "line": 406,
        "locate": "Test Case",
        "locationContext": {
          "methodName": "createManagementNetworkTest",
          "methodAnnotations": [
            "@Test"
          ]
        }
      },
      {
        "type": "STUBBING",
        "code": "when(createTungstenNetworkAnswer.getApiObjectBase()).thenReturn(managementVirtualNetwork);",
        "line": 407,
        "locate": "Test Case",
        "locationContext": {
          "methodName": "createManagementNetworkTest",
          "methodAnnotations": [
            "@Test"
          ]
        }
      }
    ],
    "pattern_id": 1
  },
  {
    "variableName": "createTungstenPolicyAnswer",
    "variableType": "TungstenAnswer",
    "mockedClass": "TungstenAnswer",
    "isReuseableMock": false,
    "mockPattern": "Creation:\n\u2014 Local Mock Creation in Test Case\n\nStubbing:\n\u2014 Test Case\n\nVerification:\n\u2014 None",
    "classContext": {
      "packageName": "org.apache.cloudstack.network.tungsten.service",
      "filePath": "C:\\java tool\\Apache\\cloudstack\\plugins\\network-elements\\tungsten\\src\\test\\java\\org\\apache\\cloudstack\\network\\tungsten\\service\\TungstenServiceImplTest.java",
      "className": "TungstenServiceImplTest"
    },
    "statements": [
      {
        "type": "DECLARATION",
        "code": "TungstenAnswer createTungstenPolicyAnswer = mock(TungstenAnswer.class);",
        "line": 395,
        "locate": "Test Case",
        "locationContext": {
          "methodName": "createManagementNetworkTest",
          "methodAnnotations": [
            "@Test"
          ]
        }
      },
      {
        "type": "STUBBING",
        "code": "when(createTungstenPolicyAnswer.getApiObjectBase()).thenReturn(networkPolicy);",
        "line": 408,
        "locate": "Test Case",
        "locationContext": {
          "methodName": "createManagementNetworkTest",
          "methodAnnotations": [
            "@Test"
          ]
        }
      },
      {
        "type": "STUBBING",
        "code": "when(createTungstenPolicyAnswer.getResult()).thenReturn(true);",
        "line": 413,
        "locate": "Test Case",
        "locationContext": {
          "methodName": "createManagementNetworkTest",
          "methodAnnotations": [
            "@Test"
          ]
        }
      }
    ],
    "pattern_id": 1
  },
  {
    "variableName": "getTungstenFabricNetworkAnswer",
    "variableType": "TungstenAnswer",
    "mockedClass": "TungstenAnswer",
    "isReuseableMock": false,
    "mockPattern": "Creation:\n\u2014 Local Mock Creation in Test Case\n\nStubbing:\n\u2014 Test Case\n\nVerification:\n\u2014 None",
    "classContext": {
      "packageName": "org.apache.cloudstack.network.tungsten.service",
      "filePath": "C:\\java tool\\Apache\\cloudstack\\plugins\\network-elements\\tungsten\\src\\test\\java\\org\\apache\\cloudstack\\network\\tungsten\\service\\TungstenServiceImplTest.java",
      "className": "TungstenServiceImplTest"
    },
    "statements": [
      {
        "type": "DECLARATION",
        "code": "TungstenAnswer getTungstenFabricNetworkAnswer = mock(TungstenAnswer.class);",
        "line": 394,
        "locate": "Test Case",
        "locationContext": {
          "methodName": "createManagementNetworkTest",
          "methodAnnotations": [
            "@Test"
          ]
        }
      },
      {
        "type": "STUBBING",
        "code": "when(getTungstenFabricNetworkAnswer.getApiObjectBase()).thenReturn(fabricVirtualNetwork);",
        "line": 409,
        "locate": "Test Case",
        "locationContext": {
          "methodName": "createManagementNetworkTest",
          "methodAnnotations": [
            "@Test"
          ]
        }
      },
      {
        "type": "STUBBING",
        "code": "when(getTungstenFabricNetworkAnswer.getResult()).thenReturn(true);",
        "line": 412,
        "locate": "Test Case",
        "locationContext": {
          "methodName": "createManagementNetworkTest",
          "methodAnnotations": [
            "@Test"
          ]
        }
      }
    ],
    "pattern_id": 1
  },
  {
    "variableName": "updateTungstenGlobalVrouterConfigAnswer",
    "variableType": "TungstenAnswer",
    "mockedClass": "TungstenAnswer",
    "isReuseableMock": false,
    "mockPattern": "Creation:\n\u2014 Local Mock Creation in Test Case\n\nStubbing:\n\u2014 Test Case\n\nVerification:\n\u2014 None",
    "classContext": {
      "packageName": "org.apache.cloudstack.network.tungsten.service",
      "filePath": "C:\\java tool\\Apache\\cloudstack\\plugins\\network-elements\\tungsten\\src\\test\\java\\org\\apache\\cloudstack\\network\\tungsten\\service\\TungstenServiceImplTest.java",
      "className": "TungstenServiceImplTest"
    },
    "statements": [
      {
        "type": "DECLARATION",
        "code": "TungstenAnswer updateTungstenGlobalVrouterConfigAnswer = mock(TungstenAnswer.class);",
        "line": 393,
        "locate": "Test Case",
        "locationContext": {
          "methodName": "createManagementNetworkTest",
          "methodAnnotations": [
            "@Test"
          ]
        }
      },
      {
        "type": "STUBBING",
        "code": "when(updateTungstenGlobalVrouterConfigAnswer.getResult()).thenReturn(true);",
        "line": 411,
        "locate": "Test Case",
        "locationContext": {
          "methodName": "createManagementNetworkTest",
          "methodAnnotations": [
            "@Test"
          ]
        }
      }
    ],
    "pattern_id": 1
  },
  {
    "variableName": "updateTungstenDefaultSecurityGroupAnswer",
    "variableType": "TungstenAnswer",
    "mockedClass": "TungstenAnswer",
    "isReuseableMock": false,
    "mockPattern": "Creation:\n\u2014 Local Mock Creation in Test Case\n\nStubbing:\n\u2014 Test Case\n\nVerification:\n\u2014 None",
    "classContext": {
      "packageName": "org.apache.cloudstack.network.tungsten.service",
      "filePath": "C:\\java tool\\Apache\\cloudstack\\plugins\\network-elements\\tungsten\\src\\test\\java\\org\\apache\\cloudstack\\network\\tungsten\\service\\TungstenServiceImplTest.java",
      "className": "TungstenServiceImplTest"
    },
    "statements": [
      {
        "type": "DECLARATION",
        "code": "TungstenAnswer updateTungstenDefaultSecurityGroupAnswer = mock(TungstenAnswer.class);",
        "line": 392,
        "locate": "Test Case",
        "locationContext": {
          "methodName": "createManagementNetworkTest",
          "methodAnnotations": [
            "@Test"
          ]
        }
      },
      {
        "type": "STUBBING",
        "code": "when(updateTungstenDefaultSecurityGroupAnswer.getResult()).thenReturn(true);",
        "line": 410,
        "locate": "Test Case",
        "locationContext": {
          "methodName": "createManagementNetworkTest",
          "methodAnnotations": [
            "@Test"
          ]
        }
      }
    ],
    "pattern_id": 1
  },
  {
    "variableName": "getTungstenNetworkDnsAnswer",
    "variableType": "TungstenAnswer",
    "mockedClass": "TungstenAnswer",
    "isReuseableMock": false,
    "mockPattern": "Creation:\n\u2014 Local Mock Creation in Test Case\n\nStubbing:\n\u2014 Test Case\n\nVerification:\n\u2014 None",
    "classContext": {
      "packageName": "org.apache.cloudstack.network.tungsten.service",
      "filePath": "C:\\java tool\\Apache\\cloudstack\\plugins\\network-elements\\tungsten\\src\\test\\java\\org\\apache\\cloudstack\\network\\tungsten\\service\\TungstenServiceImplTest.java",
      "className": "TungstenServiceImplTest"
    },
    "statements": [
      {
        "type": "DECLARATION",
        "code": "TungstenAnswer getTungstenNetworkDnsAnswer = mock(TungstenAnswer.class);",
        "line": 424,
        "locate": "Test Case",
        "locationContext": {
          "methodName": "addManagementNetworkSubnetTest",
          "methodAnnotations": [
            "@Test"
          ]
        }
      },
      {
        "type": "STUBBING",
        "code": "when(getTungstenNetworkDnsAnswer.getResult()).thenReturn(true);",
        "line": 433,
        "locate": "Test Case",
        "locationContext": {
          "methodName": "addManagementNetworkSubnetTest",
          "methodAnnotations": [
            "@Test"
          ]
        }
      },
      {
        "type": "STUBBING",
        "code": "when(getTungstenNetworkDnsAnswer.getDetails()).thenReturn(\"192.168.100.150\");",
        "line": 434,
        "locate": "Test Case",
        "locationContext": {
          "methodName": "addManagementNetworkSubnetTest",
          "methodAnnotations": [
            "@Test"
          ]
        }
      }
    ],
    "pattern_id": 1
  },
  {
    "variableName": "addTungstenNetworkSubnetAnswer",
    "variableType": "TungstenAnswer",
    "mockedClass": "TungstenAnswer",
    "isReuseableMock": false,
    "mockPattern": "Creation:\n\u2014 Local Mock Creation in Test Case\n\nStubbing:\n\u2014 Test Case\n\nVerification:\n\u2014 None",
    "classContext": {
      "packageName": "org.apache.cloudstack.network.tungsten.service",
      "filePath": "C:\\java tool\\Apache\\cloudstack\\plugins\\network-elements\\tungsten\\src\\test\\java\\org\\apache\\cloudstack\\network\\tungsten\\service\\TungstenServiceImplTest.java",
      "className": "TungstenServiceImplTest"
    },
    "statements": [
      {
        "type": "DECLARATION",
        "code": "TungstenAnswer addTungstenNetworkSubnetAnswer = mock(TungstenAnswer.class);",
        "line": 423,
        "locate": "Test Case",
        "locationContext": {
          "methodName": "addManagementNetworkSubnetTest",
          "methodAnnotations": [
            "@Test"
          ]
        }
      },
      {
        "type": "STUBBING",
        "code": "when(addTungstenNetworkSubnetAnswer.getResult()).thenReturn(true);",
        "line": 432,
        "locate": "Test Case",
        "locationContext": {
          "methodName": "addManagementNetworkSubnetTest",
          "methodAnnotations": [
            "@Test"
          ]
        }
      }
    ],
    "pattern_id": 1
  },
  {
    "variableName": "deleteTungstenFabricPolicyAnswer",
    "variableType": "TungstenAnswer",
    "mockedClass": "TungstenAnswer",
    "isReuseableMock": false,
    "mockPattern": "Creation:\n\u2014 Local Mock Creation in Test Case\n\nStubbing:\n\u2014 Test Case\n\nVerification:\n\u2014 None",
    "classContext": {
      "packageName": "org.apache.cloudstack.network.tungsten.service",
      "filePath": "C:\\java tool\\Apache\\cloudstack\\plugins\\network-elements\\tungsten\\src\\test\\java\\org\\apache\\cloudstack\\network\\tungsten\\service\\TungstenServiceImplTest.java",
      "className": "TungstenServiceImplTest"
    },
    "statements": [
      {
        "type": "DECLARATION",
        "code": "TungstenAnswer deleteTungstenFabricPolicyAnswer = mock(TungstenAnswer.class);",
        "line": 448,
        "locate": "Test Case",
        "locationContext": {
          "methodName": "deleteManagementNetworkTest",
          "methodAnnotations": [
            "@Test"
          ]
        }
      },
      {
        "type": "STUBBING",
        "code": "when(deleteTungstenFabricPolicyAnswer.getResult()).thenReturn(true);",
        "line": 461,
        "locate": "Test Case",
        "locationContext": {
          "methodName": "deleteManagementNetworkTest",
          "methodAnnotations": [
            "@Test"
          ]
        }
      }
    ],
    "pattern_id": 1
  },
  {
    "variableName": "deleteTungstenNetworkAnswer",
    "variableType": "TungstenAnswer",
    "mockedClass": "TungstenAnswer",
    "isReuseableMock": false,
    "mockPattern": "Creation:\n\u2014 Local Mock Creation in Test Case\n\nStubbing:\n\u2014 Test Case\n\nVerification:\n\u2014 None",
    "classContext": {
      "packageName": "org.apache.cloudstack.network.tungsten.service",
      "filePath": "C:\\java tool\\Apache\\cloudstack\\plugins\\network-elements\\tungsten\\src\\test\\java\\org\\apache\\cloudstack\\network\\tungsten\\service\\TungstenServiceImplTest.java",
      "className": "TungstenServiceImplTest"
    },
    "statements": [
      {
        "type": "DECLARATION",
        "code": "TungstenAnswer deleteTungstenNetworkAnswer = mock(TungstenAnswer.class);",
        "line": 449,
        "locate": "Test Case",
        "locationContext": {
          "methodName": "deleteManagementNetworkTest",
          "methodAnnotations": [
            "@Test"
          ]
        }
      },
      {
        "type": "STUBBING",
        "code": "when(deleteTungstenNetworkAnswer.getResult()).thenReturn(true);",
        "line": 462,
        "locate": "Test Case",
        "locationContext": {
          "methodName": "deleteManagementNetworkTest",
          "methodAnnotations": [
            "@Test"
          ]
        }
      }
    ],
    "pattern_id": 1
  },
  {
    "variableName": "getTungstenFabricNetworkAnswer",
    "variableType": "TungstenAnswer",
    "mockedClass": "TungstenAnswer",
    "isReuseableMock": false,
    "mockPattern": "Creation:\n\u2014 Local Mock Creation in Test Case\n\nStubbing:\n\u2014 Test Case\n\nVerification:\n\u2014 None",
    "classContext": {
      "packageName": "org.apache.cloudstack.network.tungsten.service",
      "filePath": "C:\\java tool\\Apache\\cloudstack\\plugins\\network-elements\\tungsten\\src\\test\\java\\org\\apache\\cloudstack\\network\\tungsten\\service\\TungstenServiceImplTest.java",
      "className": "TungstenServiceImplTest"
    },
    "statements": [
      {
        "type": "DECLARATION",
        "code": "TungstenAnswer getTungstenFabricNetworkAnswer = mock(TungstenAnswer.class);",
        "line": 447,
        "locate": "Test Case",
        "locationContext": {
          "methodName": "deleteManagementNetworkTest",
          "methodAnnotations": [
            "@Test"
          ]
        }
      },
      {
        "type": "STUBBING",
        "code": "when(getTungstenFabricNetworkAnswer.getApiObjectBase()).thenReturn(fabricVirtualNetwork);",
        "line": 458,
        "locate": "Test Case",
        "locationContext": {
          "methodName": "deleteManagementNetworkTest",
          "methodAnnotations": [
            "@Test"
          ]
        }
      },
      {
        "type": "STUBBING",
        "code": "when(getTungstenFabricNetworkAnswer.getResult()).thenReturn(true);",
        "line": 460,
        "locate": "Test Case",
        "locationContext": {
          "methodName": "deleteManagementNetworkTest",
          "methodAnnotations": [
            "@Test"
          ]
        }
      }
    ],
    "pattern_id": 1
  },
  {
    "variableName": "deleteTungstenManagementPolicyAnswer",
    "variableType": "TungstenAnswer",
    "mockedClass": "TungstenAnswer",
    "isReuseableMock": false,
    "mockPattern": "Creation:\n\u2014 Local Mock Creation in Test Case\n\nStubbing:\n\u2014 Test Case\n\nVerification:\n\u2014 None",
    "classContext": {
      "packageName": "org.apache.cloudstack.network.tungsten.service",
      "filePath": "C:\\java tool\\Apache\\cloudstack\\plugins\\network-elements\\tungsten\\src\\test\\java\\org\\apache\\cloudstack\\network\\tungsten\\service\\TungstenServiceImplTest.java",
      "className": "TungstenServiceImplTest"
    },
    "statements": [
      {
        "type": "DECLARATION",
        "code": "TungstenAnswer deleteTungstenManagementPolicyAnswer = mock(TungstenAnswer.class);",
        "line": 446,
        "locate": "Test Case",
        "locationContext": {
          "methodName": "deleteManagementNetworkTest",
          "methodAnnotations": [
            "@Test"
          ]
        }
      },
      {
        "type": "STUBBING",
        "code": "when(deleteTungstenManagementPolicyAnswer.getResult()).thenReturn(true);",
        "line": 459,
        "locate": "Test Case",
        "locationContext": {
          "methodName": "deleteManagementNetworkTest",
          "methodAnnotations": [
            "@Test"
          ]
        }
      }
    ],
    "pattern_id": 1
  },
  {
    "variableName": "getTungstenNetworkDnsAnswer",
    "variableType": "TungstenAnswer",
    "mockedClass": "TungstenAnswer",
    "isReuseableMock": false,
    "mockPattern": "Creation:\n\u2014 Local Mock Creation in Test Case\n\nStubbing:\n\u2014 Test Case\n\nVerification:\n\u2014 None",
    "classContext": {
      "packageName": "org.apache.cloudstack.network.tungsten.service",
      "filePath": "C:\\java tool\\Apache\\cloudstack\\plugins\\network-elements\\tungsten\\src\\test\\java\\org\\apache\\cloudstack\\network\\tungsten\\service\\TungstenServiceImplTest.java",
      "className": "TungstenServiceImplTest"
    },
    "statements": [
      {
        "type": "DECLARATION",
        "code": "TungstenAnswer getTungstenNetworkDnsAnswer = mock(TungstenAnswer.class);",
        "line": 472,
        "locate": "Test Case",
        "locationContext": {
          "methodName": "removeManagementNetworkSubnetTest",
          "methodAnnotations": [
            "@Test"
          ]
        }
      },
      {
        "type": "STUBBING",
        "code": "when(getTungstenNetworkDnsAnswer.getResult()).thenReturn(true);",
        "line": 481,
        "locate": "Test Case",
        "locationContext": {
          "methodName": "removeManagementNetworkSubnetTest",
          "methodAnnotations": [
            "@Test"
          ]
        }
      },
      {
        "type": "STUBBING",
        "code": "when(getTungstenNetworkDnsAnswer.getDetails()).thenReturn(\"192.168.100.150\");",
        "line": 482,
        "locate": "Test Case",
        "locationContext": {
          "methodName": "removeManagementNetworkSubnetTest",
          "methodAnnotations": [
            "@Test"
          ]
        }
      }
    ],
    "pattern_id": 1
  },
  {
    "variableName": "removeTungstenNetworkSubnetAnswer",
    "variableType": "TungstenAnswer",
    "mockedClass": "TungstenAnswer",
    "isReuseableMock": false,
    "mockPattern": "Creation:\n\u2014 Local Mock Creation in Test Case\n\nStubbing:\n\u2014 Test Case\n\nVerification:\n\u2014 None",
    "classContext": {
      "packageName": "org.apache.cloudstack.network.tungsten.service",
      "filePath": "C:\\java tool\\Apache\\cloudstack\\plugins\\network-elements\\tungsten\\src\\test\\java\\org\\apache\\cloudstack\\network\\tungsten\\service\\TungstenServiceImplTest.java",
      "className": "TungstenServiceImplTest"
    },
    "statements": [
      {
        "type": "DECLARATION",
        "code": "TungstenAnswer removeTungstenNetworkSubnetAnswer = mock(TungstenAnswer.class);",
        "line": 471,
        "locate": "Test Case",
        "locationContext": {
          "methodName": "removeManagementNetworkSubnetTest",
          "methodAnnotations": [
            "@Test"
          ]
        }
      },
      {
        "type": "STUBBING",
        "code": "when(removeTungstenNetworkSubnetAnswer.getResult()).thenReturn(true);",
        "line": 480,
        "locate": "Test Case",
        "locationContext": {
          "methodName": "removeManagementNetworkSubnetTest",
          "methodAnnotations": [
            "@Test"
          ]
        }
      }
    ],
    "pattern_id": 1
  },
  {
    "variableName": "createPublicNetworkAnswer",
    "variableType": "TungstenAnswer",
    "mockedClass": "TungstenAnswer",
    "isReuseableMock": false,
    "mockPattern": "Creation:\n\u2014 Local Mock Creation in Test Case\n\nStubbing:\n\u2014 Test Case\n\nVerification:\n\u2014 None",
    "classContext": {
      "packageName": "org.apache.cloudstack.network.tungsten.service",
      "filePath": "C:\\java tool\\Apache\\cloudstack\\plugins\\network-elements\\tungsten\\src\\test\\java\\org\\apache\\cloudstack\\network\\tungsten\\service\\TungstenServiceImplTest.java",
      "className": "TungstenServiceImplTest"
    },
    "statements": [
      {
        "type": "DECLARATION",
        "code": "TungstenAnswer createPublicNetworkAnswer = mock(TungstenAnswer.class);",
        "line": 496,
        "locate": "Test Case",
        "locationContext": {
          "methodName": "createPublicNetworkTest",
          "methodAnnotations": [
            "@Test"
          ]
        }
      },
      {
        "type": "STUBBING",
        "code": "when(createPublicNetworkAnswer.getResult()).thenReturn(true);",
        "line": 506,
        "locate": "Test Case",
        "locationContext": {
          "methodName": "createPublicNetworkTest",
          "methodAnnotations": [
            "@Test"
          ]
        }
      },
      {
        "type": "STUBBING",
        "code": "when(createPublicNetworkAnswer.getApiObjectBase()).thenReturn(virtualNetwork);",
        "line": 510,
        "locate": "Test Case",
        "locationContext": {
          "methodName": "createPublicNetworkTest",
          "methodAnnotations": [
            "@Test"
          ]
        }
      }
    ],
    "pattern_id": 1
  },
  {
    "variableName": "applyTungstenPolicyAnswer",
    "variableType": "TungstenAnswer",
    "mockedClass": "TungstenAnswer",
    "isReuseableMock": false,
    "mockPattern": "Creation:\n\u2014 Local Mock Creation in Test Case\n\nStubbing:\n\u2014 Test Case\n\nVerification:\n\u2014 None",
    "classContext": {
      "packageName": "org.apache.cloudstack.network.tungsten.service",
      "filePath": "C:\\java tool\\Apache\\cloudstack\\plugins\\network-elements\\tungsten\\src\\test\\java\\org\\apache\\cloudstack\\network\\tungsten\\service\\TungstenServiceImplTest.java",
      "className": "TungstenServiceImplTest"
    },
    "statements": [
      {
        "type": "DECLARATION",
        "code": "TungstenAnswer applyTungstenPolicyAnswer = mock(TungstenAnswer.class);",
        "line": 499,
        "locate": "Test Case",
        "locationContext": {
          "methodName": "createPublicNetworkTest",
          "methodAnnotations": [
            "@Test"
          ]
        }
      },
      {
        "type": "STUBBING",
        "code": "when(applyTungstenPolicyAnswer.getResult()).thenReturn(true);",
        "line": 509,
        "locate": "Test Case",
        "locationContext": {
          "methodName": "createPublicNetworkTest",
          "methodAnnotations": [
            "@Test"
          ]
        }
      }
    ],
    "pattern_id": 1
  },
  {
    "variableName": "createTungstenPolicyAnswer",
    "variableType": "TungstenAnswer",
    "mockedClass": "TungstenAnswer",
    "isReuseableMock": false,
    "mockPattern": "Creation:\n\u2014 Local Mock Creation in Test Case\n\nStubbing:\n\u2014 Test Case\n\nVerification:\n\u2014 None",
    "classContext": {
      "packageName": "org.apache.cloudstack.network.tungsten.service",
      "filePath": "C:\\java tool\\Apache\\cloudstack\\plugins\\network-elements\\tungsten\\src\\test\\java\\org\\apache\\cloudstack\\network\\tungsten\\service\\TungstenServiceImplTest.java",
      "className": "TungstenServiceImplTest"
    },
    "statements": [
      {
        "type": "DECLARATION",
        "code": "TungstenAnswer createTungstenPolicyAnswer = mock(TungstenAnswer.class);",
        "line": 498,
        "locate": "Test Case",
        "locationContext": {
          "methodName": "createPublicNetworkTest",
          "methodAnnotations": [
            "@Test"
          ]
        }
      },
      {
        "type": "STUBBING",
        "code": "when(createTungstenPolicyAnswer.getResult()).thenReturn(true);",
        "line": 508,
        "locate": "Test Case",
        "locationContext": {
          "methodName": "createPublicNetworkTest",
          "methodAnnotations": [
            "@Test"
          ]
        }
      },
      {
        "type": "STUBBING",
        "code": "when(createTungstenPolicyAnswer.getApiObjectBase()).thenReturn(networkPolicy);",
        "line": 511,
        "locate": "Test Case",
        "locationContext": {
          "methodName": "createPublicNetworkTest",
          "methodAnnotations": [
            "@Test"
          ]
        }
      }
    ],
    "pattern_id": 1
  },
  {
    "variableName": "createFloatingIpPoolAnswer",
    "variableType": "TungstenAnswer",
    "mockedClass": "TungstenAnswer",
    "isReuseableMock": false,
    "mockPattern": "Creation:\n\u2014 Local Mock Creation in Test Case\n\nStubbing:\n\u2014 Test Case\n\nVerification:\n\u2014 None",
    "classContext": {
      "packageName": "org.apache.cloudstack.network.tungsten.service",
      "filePath": "C:\\java tool\\Apache\\cloudstack\\plugins\\network-elements\\tungsten\\src\\test\\java\\org\\apache\\cloudstack\\network\\tungsten\\service\\TungstenServiceImplTest.java",
      "className": "TungstenServiceImplTest"
    },
    "statements": [
      {
        "type": "DECLARATION",
        "code": "TungstenAnswer createFloatingIpPoolAnswer = mock(TungstenAnswer.class);",
        "line": 497,
        "locate": "Test Case",
        "locationContext": {
          "methodName": "createPublicNetworkTest",
          "methodAnnotations": [
            "@Test"
          ]
        }
      },
      {
        "type": "STUBBING",
        "code": "when(createFloatingIpPoolAnswer.getResult()).thenReturn(true);",
        "line": 507,
        "locate": "Test Case",
        "locationContext": {
          "methodName": "createPublicNetworkTest",
          "methodAnnotations": [
            "@Test"
          ]
        }
      }
    ],
    "pattern_id": 1
  },
  {
    "variableName": "applyTungstenPolicyAnswer",
    "variableType": "TungstenAnswer",
    "mockedClass": "TungstenAnswer",
    "isReuseableMock": false,
    "mockPattern": "Creation:\n\u2014 Local Mock Creation in Test Case\n\nStubbing:\n\u2014 Test Case\n\nVerification:\n\u2014 None",
    "classContext": {
      "packageName": "org.apache.cloudstack.network.tungsten.service",
      "filePath": "C:\\java tool\\Apache\\cloudstack\\plugins\\network-elements\\tungsten\\src\\test\\java\\org\\apache\\cloudstack\\network\\tungsten\\service\\TungstenServiceImplTest.java",
      "className": "TungstenServiceImplTest"
    },
    "statements": [
      {
        "type": "DECLARATION",
        "code": "TungstenAnswer applyTungstenPolicyAnswer = mock(TungstenAnswer.class);",
        "line": 524,
        "locate": "Test Case",
        "locationContext": {
          "methodName": "addPublicNetworkSubnetTest",
          "methodAnnotations": [
            "@Test"
          ]
        }
      },
      {
        "type": "STUBBING",
        "code": "when(applyTungstenPolicyAnswer.getResult()).thenReturn(true);",
        "line": 543,
        "locate": "Test Case",
        "locationContext": {
          "methodName": "addPublicNetworkSubnetTest",
          "methodAnnotations": [
            "@Test"
          ]
        }
      }
    ],
    "pattern_id": 1
  },
  {
    "variableName": "getTungstenNetworkDnsAnswer",
    "variableType": "TungstenAnswer",
    "mockedClass": "TungstenAnswer",
    "isReuseableMock": false,
    "mockPattern": "Creation:\n\u2014 Local Mock Creation in Test Case\n\nStubbing:\n\u2014 Test Case\n\nVerification:\n\u2014 None",
    "classContext": {
      "packageName": "org.apache.cloudstack.network.tungsten.service",
      "filePath": "C:\\java tool\\Apache\\cloudstack\\plugins\\network-elements\\tungsten\\src\\test\\java\\org\\apache\\cloudstack\\network\\tungsten\\service\\TungstenServiceImplTest.java",
      "className": "TungstenServiceImplTest"
    },
    "statements": [
      {
        "type": "DECLARATION",
        "code": "TungstenAnswer getTungstenNetworkDnsAnswer = mock(TungstenAnswer.class);",
        "line": 526,
        "locate": "Test Case",
        "locationContext": {
          "methodName": "addPublicNetworkSubnetTest",
          "methodAnnotations": [
            "@Test"
          ]
        }
      },
      {
        "type": "STUBBING",
        "code": "when(getTungstenNetworkDnsAnswer.getDetails()).thenReturn(\"192.168.100.150\");",
        "line": 534,
        "locate": "Test Case",
        "locationContext": {
          "methodName": "addPublicNetworkSubnetTest",
          "methodAnnotations": [
            "@Test"
          ]
        }
      },
      {
        "type": "STUBBING",
        "code": "when(getTungstenNetworkDnsAnswer.getResult()).thenReturn(true);",
        "line": 540,
        "locate": "Test Case",
        "locationContext": {
          "methodName": "addPublicNetworkSubnetTest",
          "methodAnnotations": [
            "@Test"
          ]
        }
      }
    ],
    "pattern_id": 1
  },
  {
    "variableName": "createTungstenPolicyAnswer",
    "variableType": "TungstenAnswer",
    "mockedClass": "TungstenAnswer",
    "isReuseableMock": false,
    "mockPattern": "Creation:\n\u2014 Local Mock Creation in Test Case\n\nStubbing:\n\u2014 Test Case\n\nVerification:\n\u2014 None",
    "classContext": {
      "packageName": "org.apache.cloudstack.network.tungsten.service",
      "filePath": "C:\\java tool\\Apache\\cloudstack\\plugins\\network-elements\\tungsten\\src\\test\\java\\org\\apache\\cloudstack\\network\\tungsten\\service\\TungstenServiceImplTest.java",
      "className": "TungstenServiceImplTest"
    },
    "statements": [
      {
        "type": "DECLARATION",
        "code": "TungstenAnswer createTungstenPolicyAnswer = mock(TungstenAnswer.class);",
        "line": 523,
        "locate": "Test Case",
        "locationContext": {
          "methodName": "addPublicNetworkSubnetTest",
          "methodAnnotations": [
            "@Test"
          ]
        }
      },
      {
        "type": "STUBBING",
        "code": "when(createTungstenPolicyAnswer.getResult()).thenReturn(true);",
        "line": 542,
        "locate": "Test Case",
        "locationContext": {
          "methodName": "addPublicNetworkSubnetTest",
          "methodAnnotations": [
            "@Test"
          ]
        }
      },
      {
        "type": "STUBBING",
        "code": "when(createTungstenPolicyAnswer.getApiObjectBase()).thenReturn(networkPolicy);",
        "line": 545,
        "locate": "Test Case",
        "locationContext": {
          "methodName": "addPublicNetworkSubnetTest",
          "methodAnnotations": [
            "@Test"
          ]
        }
      }
    ],
    "pattern_id": 1
  },
  {
    "variableName": "addTungstenNetworkSubnetAnswer",
    "variableType": "TungstenAnswer",
    "mockedClass": "TungstenAnswer",
    "isReuseableMock": false,
    "mockPattern": "Creation:\n\u2014 Local Mock Creation in Test Case\n\nStubbing:\n\u2014 Test Case\n\nVerification:\n\u2014 None",
    "classContext": {
      "packageName": "org.apache.cloudstack.network.tungsten.service",
      "filePath": "C:\\java tool\\Apache\\cloudstack\\plugins\\network-elements\\tungsten\\src\\test\\java\\org\\apache\\cloudstack\\network\\tungsten\\service\\TungstenServiceImplTest.java",
      "className": "TungstenServiceImplTest"
    },
    "statements": [
      {
        "type": "DECLARATION",
        "code": "TungstenAnswer addTungstenNetworkSubnetAnswer = mock(TungstenAnswer.class);",
        "line": 522,
        "locate": "Test Case",
        "locationContext": {
          "methodName": "addPublicNetworkSubnetTest",
          "methodAnnotations": [
            "@Test"
          ]
        }
      },
      {
        "type": "STUBBING",
        "code": "when(addTungstenNetworkSubnetAnswer.getResult()).thenReturn(true);",
        "line": 539,
        "locate": "Test Case",
        "locationContext": {
          "methodName": "addPublicNetworkSubnetTest",
          "methodAnnotations": [
            "@Test"
          ]
        }
      },
      {
        "type": "STUBBING",
        "code": "when(addTungstenNetworkSubnetAnswer.getResult()).thenReturn(true);",
        "line": 541,
        "locate": "Test Case",
        "locationContext": {
          "methodName": "addPublicNetworkSubnetTest",
          "methodAnnotations": [
            "@Test"
          ]
        }
      }
    ],
    "pattern_id": 1
  },
  {
    "variableName": "deleteTungstenNetworkAnswer",
    "variableType": "TungstenAnswer",
    "mockedClass": "TungstenAnswer",
    "isReuseableMock": false,
    "mockPattern": "Creation:\n\u2014 Local Mock Creation in Test Case\n\nStubbing:\n\u2014 Test Case\n\nVerification:\n\u2014 None",
    "classContext": {
      "packageName": "org.apache.cloudstack.network.tungsten.service",
      "filePath": "C:\\java tool\\Apache\\cloudstack\\plugins\\network-elements\\tungsten\\src\\test\\java\\org\\apache\\cloudstack\\network\\tungsten\\service\\TungstenServiceImplTest.java",
      "className": "TungstenServiceImplTest"
    },
    "statements": [
      {
        "type": "DECLARATION",
        "code": "TungstenAnswer deleteTungstenNetworkAnswer = mock(TungstenAnswer.class);",
        "line": 557,
        "locate": "Test Case",
        "locationContext": {
          "methodName": "deletePublicNetworkTest",
          "methodAnnotations": [
            "@Test"
          ]
        }
      },
      {
        "type": "STUBBING",
        "code": "when(deleteTungstenNetworkAnswer.getResult()).thenReturn(true);",
        "line": 565,
        "locate": "Test Case",
        "locationContext": {
          "methodName": "deletePublicNetworkTest",
          "methodAnnotations": [
            "@Test"
          ]
        }
      }
    ],
    "pattern_id": 1
  },
  {
    "variableName": "deleteTungstenNetworkPolicyAnswer",
    "variableType": "TungstenAnswer",
    "mockedClass": "TungstenAnswer",
    "isReuseableMock": false,
    "mockPattern": "Creation:\n\u2014 Local Mock Creation in Test Case\n\nStubbing:\n\u2014 Test Case\n\nVerification:\n\u2014 None",
    "classContext": {
      "packageName": "org.apache.cloudstack.network.tungsten.service",
      "filePath": "C:\\java tool\\Apache\\cloudstack\\plugins\\network-elements\\tungsten\\src\\test\\java\\org\\apache\\cloudstack\\network\\tungsten\\service\\TungstenServiceImplTest.java",
      "className": "TungstenServiceImplTest"
    },
    "statements": [
      {
        "type": "DECLARATION",
        "code": "TungstenAnswer deleteTungstenNetworkPolicyAnswer = mock(TungstenAnswer.class);",
        "line": 555,
        "locate": "Test Case",
        "locationContext": {
          "methodName": "deletePublicNetworkTest",
          "methodAnnotations": [
            "@Test"
          ]
        }
      },
      {
        "type": "STUBBING",
        "code": "when(deleteTungstenNetworkPolicyAnswer.getResult()).thenReturn(true);",
        "line": 563,
        "locate": "Test Case",
        "locationContext": {
          "methodName": "deletePublicNetworkTest",
          "methodAnnotations": [
            "@Test"
          ]
        }
      }
    ],
    "pattern_id": 1
  },
  {
    "variableName": "deleteTungstenFloatingIpPoolAnswer",
    "variableType": "TungstenAnswer",
    "mockedClass": "TungstenAnswer",
    "isReuseableMock": false,
    "mockPattern": "Creation:\n\u2014 Local Mock Creation in Test Case\n\nStubbing:\n\u2014 Test Case\n\nVerification:\n\u2014 None",
    "classContext": {
      "packageName": "org.apache.cloudstack.network.tungsten.service",
      "filePath": "C:\\java tool\\Apache\\cloudstack\\plugins\\network-elements\\tungsten\\src\\test\\java\\org\\apache\\cloudstack\\network\\tungsten\\service\\TungstenServiceImplTest.java",
      "className": "TungstenServiceImplTest"
    },
    "statements": [
      {
        "type": "DECLARATION",
        "code": "TungstenAnswer deleteTungstenFloatingIpPoolAnswer = mock(TungstenAnswer.class);",
        "line": 556,
        "locate": "Test Case",
        "locationContext": {
          "methodName": "deletePublicNetworkTest",
          "methodAnnotations": [
            "@Test"
          ]
        }
      },
      {
        "type": "STUBBING",
        "code": "when(deleteTungstenFloatingIpPoolAnswer.getResult()).thenReturn(true);",
        "line": 564,
        "locate": "Test Case",
        "locationContext": {
          "methodName": "deletePublicNetworkTest",
          "methodAnnotations": [
            "@Test"
          ]
        }
      }
    ],
    "pattern_id": 1
  },
  {
    "variableName": "getTungstenNetworkDnsAnswer",
    "variableType": "TungstenAnswer",
    "mockedClass": "TungstenAnswer",
    "isReuseableMock": false,
    "mockPattern": "Creation:\n\u2014 Local Mock Creation in Test Case\n\nStubbing:\n\u2014 Test Case\n\nVerification:\n\u2014 None",
    "classContext": {
      "packageName": "org.apache.cloudstack.network.tungsten.service",
      "filePath": "C:\\java tool\\Apache\\cloudstack\\plugins\\network-elements\\tungsten\\src\\test\\java\\org\\apache\\cloudstack\\network\\tungsten\\service\\TungstenServiceImplTest.java",
      "className": "TungstenServiceImplTest"
    },
    "statements": [
      {
        "type": "DECLARATION",
        "code": "TungstenAnswer getTungstenNetworkDnsAnswer = mock(TungstenAnswer.class);",
        "line": 576,
        "locate": "Test Case",
        "locationContext": {
          "methodName": "removePublicNetworkSubnetTest",
          "methodAnnotations": [
            "@Test"
          ]
        }
      },
      {
        "type": "STUBBING",
        "code": "when(getTungstenNetworkDnsAnswer.getResult()).thenReturn(true);",
        "line": 585,
        "locate": "Test Case",
        "locationContext": {
          "methodName": "removePublicNetworkSubnetTest",
          "methodAnnotations": [
            "@Test"
          ]
        }
      },
      {
        "type": "STUBBING",
        "code": "when(getTungstenNetworkDnsAnswer.getDetails()).thenReturn(\"192.168.100.150\");",
        "line": 586,
        "locate": "Test Case",
        "locationContext": {
          "methodName": "removePublicNetworkSubnetTest",
          "methodAnnotations": [
            "@Test"
          ]
        }
      }
    ],
    "pattern_id": 1
  },
  {
    "variableName": "deleteTungstenNetworkPolicyAnswer",
    "variableType": "TungstenAnswer",
    "mockedClass": "TungstenAnswer",
    "isReuseableMock": false,
    "mockPattern": "Creation:\n\u2014 Local Mock Creation in Test Case\n\nStubbing:\n\u2014 Test Case\n\nVerification:\n\u2014 None",
    "classContext": {
      "packageName": "org.apache.cloudstack.network.tungsten.service",
      "filePath": "C:\\java tool\\Apache\\cloudstack\\plugins\\network-elements\\tungsten\\src\\test\\java\\org\\apache\\cloudstack\\network\\tungsten\\service\\TungstenServiceImplTest.java",
      "className": "TungstenServiceImplTest"
    },
    "statements": [
      {
        "type": "DECLARATION",
        "code": "TungstenAnswer deleteTungstenNetworkPolicyAnswer = mock(TungstenAnswer.class);",
        "line": 574,
        "locate": "Test Case",
        "locationContext": {
          "methodName": "removePublicNetworkSubnetTest",
          "methodAnnotations": [
            "@Test"
          ]
        }
      },
      {
        "type": "STUBBING",
        "code": "when(deleteTungstenNetworkPolicyAnswer.getResult()).thenReturn(true);",
        "line": 583,
        "locate": "Test Case",
        "locationContext": {
          "methodName": "removePublicNetworkSubnetTest",
          "methodAnnotations": [
            "@Test"
          ]
        }
      }
    ],
    "pattern_id": 1
  },
  {
    "variableName": "removeTungstenNetworkSubnetAnswer",
    "variableType": "TungstenAnswer",
    "mockedClass": "TungstenAnswer",
    "isReuseableMock": false,
    "mockPattern": "Creation:\n\u2014 Local Mock Creation in Test Case\n\nStubbing:\n\u2014 Test Case\n\nVerification:\n\u2014 None",
    "classContext": {
      "packageName": "org.apache.cloudstack.network.tungsten.service",
      "filePath": "C:\\java tool\\Apache\\cloudstack\\plugins\\network-elements\\tungsten\\src\\test\\java\\org\\apache\\cloudstack\\network\\tungsten\\service\\TungstenServiceImplTest.java",
      "className": "TungstenServiceImplTest"
    },
    "statements": [
      {
        "type": "DECLARATION",
        "code": "TungstenAnswer removeTungstenNetworkSubnetAnswer = mock(TungstenAnswer.class);",
        "line": 575,
        "locate": "Test Case",
        "locationContext": {
          "methodName": "removePublicNetworkSubnetTest",
          "methodAnnotations": [
            "@Test"
          ]
        }
      },
      {
        "type": "STUBBING",
        "code": "when(removeTungstenNetworkSubnetAnswer.getResult()).thenReturn(true);",
        "line": 584,
        "locate": "Test Case",
        "locationContext": {
          "methodName": "removePublicNetworkSubnetTest",
          "methodAnnotations": [
            "@Test"
          ]
        }
      }
    ],
    "pattern_id": 1
  },
  {
    "variableName": "getTungstenNetworkDnsAnswer",
    "variableType": "TungstenAnswer",
    "mockedClass": "TungstenAnswer",
    "isReuseableMock": false,
    "mockPattern": "Creation:\n\u2014 Local Mock Creation in Test Case\n\nStubbing:\n\u2014 Test Case\n\nVerification:\n\u2014 None",
    "classContext": {
      "packageName": "org.apache.cloudstack.network.tungsten.service",
      "filePath": "C:\\java tool\\Apache\\cloudstack\\plugins\\network-elements\\tungsten\\src\\test\\java\\org\\apache\\cloudstack\\network\\tungsten\\service\\TungstenServiceImplTest.java",
      "className": "TungstenServiceImplTest"
    },
    "statements": [
      {
        "type": "DECLARATION",
        "code": "TungstenAnswer getTungstenNetworkDnsAnswer = mock(TungstenAnswer.class);",
        "line": 597,
        "locate": "Test Case",
        "locationContext": {
          "methodName": "allocateDnsIpAddressTest",
          "methodAnnotations": [
            "@Test"
          ]
        }
      },
      {
        "type": "STUBBING",
        "code": "when(getTungstenNetworkDnsAnswer.getResult()).thenReturn(true);",
        "line": 601,
        "locate": "Test Case",
        "locationContext": {
          "methodName": "allocateDnsIpAddressTest",
          "methodAnnotations": [
            "@Test"
          ]
        }
      },
      {
        "type": "STUBBING",
        "code": "when(getTungstenNetworkDnsAnswer.getDetails()).thenReturn(\"192.168.100.100\");",
        "line": 606,
        "locate": "Test Case",
        "locationContext": {
          "methodName": "allocateDnsIpAddressTest",
          "methodAnnotations": [
            "@Test"
          ]
        }
      }
    ],
    "pattern_id": 1
  },
  {
    "variableName": "getTungstenNetworkDnsAnswer",
    "variableType": "TungstenAnswer",
    "mockedClass": "TungstenAnswer",
    "isReuseableMock": false,
    "mockPattern": "Creation:\n\u2014 Local Mock Creation in Test Case\n\nStubbing:\n\u2014 Test Case\n\nVerification:\n\u2014 None",
    "classContext": {
      "packageName": "org.apache.cloudstack.network.tungsten.service",
      "filePath": "C:\\java tool\\Apache\\cloudstack\\plugins\\network-elements\\tungsten\\src\\test\\java\\org\\apache\\cloudstack\\network\\tungsten\\service\\TungstenServiceImplTest.java",
      "className": "TungstenServiceImplTest"
    },
    "statements": [
      {
        "type": "DECLARATION",
        "code": "TungstenAnswer getTungstenNetworkDnsAnswer = mock(TungstenAnswer.class);",
        "line": 614,
        "locate": "Test Case",
        "locationContext": {
          "methodName": "deallocateDnsIpAddressTest",
          "methodAnnotations": [
            "@Test"
          ]
        }
      },
      {
        "type": "STUBBING",
        "code": "when(getTungstenNetworkDnsAnswer.getResult()).thenReturn(true);",
        "line": 618,
        "locate": "Test Case",
        "locationContext": {
          "methodName": "deallocateDnsIpAddressTest",
          "methodAnnotations": [
            "@Test"
          ]
        }
      },
      {
        "type": "STUBBING",
        "code": "when(getTungstenNetworkDnsAnswer.getDetails()).thenReturn(\"192.168.100.100\");",
        "line": 622,
        "locate": "Test Case",
        "locationContext": {
          "methodName": "deallocateDnsIpAddressTest",
          "methodAnnotations": [
            "@Test"
          ]
        }
      }
    ],
    "pattern_id": 1
  },
  {
    "variableName": "createTungstenProjectAnswer",
    "variableType": "TungstenAnswer",
    "mockedClass": "TungstenAnswer",
    "isReuseableMock": false,
    "mockPattern": "Creation:\n\u2014 Local Mock Creation in Test Case\n\nStubbing:\n\u2014 Test Case\n\nVerification:\n\u2014 None",
    "classContext": {
      "packageName": "org.apache.cloudstack.network.tungsten.service",
      "filePath": "C:\\java tool\\Apache\\cloudstack\\plugins\\network-elements\\tungsten\\src\\test\\java\\org\\apache\\cloudstack\\network\\tungsten\\service\\TungstenServiceImplTest.java",
      "className": "TungstenServiceImplTest"
    },
    "statements": [
      {
        "type": "DECLARATION",
        "code": "TungstenAnswer createTungstenProjectAnswer = mock(TungstenAnswer.class);",
        "line": 658,
        "locate": "Test Case",
        "locationContext": {
          "methodName": "syncTungstenDbWithCloudstackProjectsAndDomainsTest",
          "methodAnnotations": [
            "@Test"
          ]
        }
      },
      {
        "type": "STUBBING",
        "code": "when(createTungstenProjectAnswer.getResult()).thenReturn(true);",
        "line": 668,
        "locate": "Test Case",
        "locationContext": {
          "methodName": "syncTungstenDbWithCloudstackProjectsAndDomainsTest",
          "methodAnnotations": [
            "@Test"
          ]
        }
      }
    ],
    "pattern_id": 1
  },
  {
    "variableName": "createTungstenDefaultProjectAnswer",
    "variableType": "TungstenAnswer",
    "mockedClass": "TungstenAnswer",
    "isReuseableMock": false,
    "mockPattern": "Creation:\n\u2014 Local Mock Creation in Test Case\n\nStubbing:\n\u2014 Test Case\n\nVerification:\n\u2014 None",
    "classContext": {
      "packageName": "org.apache.cloudstack.network.tungsten.service",
      "filePath": "C:\\java tool\\Apache\\cloudstack\\plugins\\network-elements\\tungsten\\src\\test\\java\\org\\apache\\cloudstack\\network\\tungsten\\service\\TungstenServiceImplTest.java",
      "className": "TungstenServiceImplTest"
    },
    "statements": [
      {
        "type": "DECLARATION",
        "code": "TungstenAnswer createTungstenDefaultProjectAnswer = mock(TungstenAnswer.class);",
        "line": 659,
        "locate": "Test Case",
        "locationContext": {
          "methodName": "syncTungstenDbWithCloudstackProjectsAndDomainsTest",
          "methodAnnotations": [
            "@Test"
          ]
        }
      },
      {
        "type": "STUBBING",
        "code": "when(createTungstenDefaultProjectAnswer.getResult()).thenReturn(true);",
        "line": 672,
        "locate": "Test Case",
        "locationContext": {
          "methodName": "syncTungstenDbWithCloudstackProjectsAndDomainsTest",
          "methodAnnotations": [
            "@Test"
          ]
        }
      }
    ],
    "pattern_id": 1
  },
  {
    "variableName": "updateTungstenDefaultSecurityGroupAnswer",
    "variableType": "TungstenAnswer",
    "mockedClass": "TungstenAnswer",
    "isReuseableMock": false,
    "mockPattern": "Creation:\n\u2014 Local Mock Creation in Test Case\n\nStubbing:\n\u2014 Test Case\n\nVerification:\n\u2014 None",
    "classContext": {
      "packageName": "org.apache.cloudstack.network.tungsten.service",
      "filePath": "C:\\java tool\\Apache\\cloudstack\\plugins\\network-elements\\tungsten\\src\\test\\java\\org\\apache\\cloudstack\\network\\tungsten\\service\\TungstenServiceImplTest.java",
      "className": "TungstenServiceImplTest"
    },
    "statements": [
      {
        "type": "DECLARATION",
        "code": "TungstenAnswer updateTungstenDefaultSecurityGroupAnswer = mock(TungstenAnswer.class);",
        "line": 660,
        "locate": "Test Case",
        "locationContext": {
          "methodName": "syncTungstenDbWithCloudstackProjectsAndDomainsTest",
          "methodAnnotations": [
            "@Test"
          ]
        }
      },
      {
        "type": "STUBBING",
        "code": "when(updateTungstenDefaultSecurityGroupAnswer.getResult()).thenReturn(true);",
        "line": 670,
        "locate": "Test Case",
        "locationContext": {
          "methodName": "syncTungstenDbWithCloudstackProjectsAndDomainsTest",
          "methodAnnotations": [
            "@Test"
          ]
        }
      }
    ],
    "pattern_id": 1
  },
  {
    "variableName": "createTungstenDomainAnswer",
    "variableType": "TungstenAnswer",
    "mockedClass": "TungstenAnswer",
    "isReuseableMock": false,
    "mockPattern": "Creation:\n\u2014 Local Mock Creation in Test Case\n\nStubbing:\n\u2014 Test Case\n\nVerification:\n\u2014 None",
    "classContext": {
      "packageName": "org.apache.cloudstack.network.tungsten.service",
      "filePath": "C:\\java tool\\Apache\\cloudstack\\plugins\\network-elements\\tungsten\\src\\test\\java\\org\\apache\\cloudstack\\network\\tungsten\\service\\TungstenServiceImplTest.java",
      "className": "TungstenServiceImplTest"
    },
    "statements": [
      {
        "type": "DECLARATION",
        "code": "TungstenAnswer createTungstenDomainAnswer = mock(TungstenAnswer.class);",
        "line": 657,
        "locate": "Test Case",
        "locationContext": {
          "methodName": "syncTungstenDbWithCloudstackProjectsAndDomainsTest",
          "methodAnnotations": [
            "@Test"
          ]
        }
      },
      {
        "type": "STUBBING",
        "code": "when(createTungstenDomainAnswer.getResult()).thenReturn(true);",
        "line": 666,
        "locate": "Test Case",
        "locationContext": {
          "methodName": "syncTungstenDbWithCloudstackProjectsAndDomainsTest",
          "methodAnnotations": [
            "@Test"
          ]
        }
      }
    ],
    "pattern_id": 1
  },
  {
    "variableName": "getTungstenLoadBalancerAnswer",
    "variableType": "TungstenAnswer",
    "mockedClass": "TungstenAnswer",
    "isReuseableMock": false,
    "mockPattern": "Creation:\n\u2014 Local Mock Creation in Test Case\n\nStubbing:\n\u2014 Test Case\n\nVerification:\n\u2014 None",
    "classContext": {
      "packageName": "org.apache.cloudstack.network.tungsten.service",
      "filePath": "C:\\java tool\\Apache\\cloudstack\\plugins\\network-elements\\tungsten\\src\\test\\java\\org\\apache\\cloudstack\\network\\tungsten\\service\\TungstenServiceImplTest.java",
      "className": "TungstenServiceImplTest"
    },
    "statements": [
      {
        "type": "DECLARATION",
        "code": "TungstenAnswer getTungstenLoadBalancerAnswer = mock(TungstenAnswer.class);",
        "line": 685,
        "locate": "Test Case",
        "locationContext": {
          "methodName": "updateLoadBalancerTest",
          "methodAnnotations": [
            "@Test"
          ]
        }
      },
      {
        "type": "STUBBING",
        "code": "when(getTungstenLoadBalancerAnswer.getResult()).thenReturn(true);",
        "line": 704,
        "locate": "Test Case",
        "locationContext": {
          "methodName": "updateLoadBalancerTest",
          "methodAnnotations": [
            "@Test"
          ]
        }
      },
      {
        "type": "STUBBING",
        "code": "when(getTungstenLoadBalancerAnswer.getApiObjectBase()).thenReturn(loadbalancer);",
        "line": 716,
        "locate": "Test Case",
        "locationContext": {
          "methodName": "updateLoadBalancerTest",
          "methodAnnotations": [
            "@Test"
          ]
        }
      }
    ],
    "pattern_id": 1
  },
  {
    "variableName": "updateLoadBalancerServiceInstanceAnswer",
    "variableType": "TungstenAnswer",
    "mockedClass": "TungstenAnswer",
    "isReuseableMock": false,
    "mockPattern": "Creation:\n\u2014 Local Mock Creation in Test Case\n\nStubbing:\n\u2014 Test Case\n\nVerification:\n\u2014 None",
    "classContext": {
      "packageName": "org.apache.cloudstack.network.tungsten.service",
      "filePath": "C:\\java tool\\Apache\\cloudstack\\plugins\\network-elements\\tungsten\\src\\test\\java\\org\\apache\\cloudstack\\network\\tungsten\\service\\TungstenServiceImplTest.java",
      "className": "TungstenServiceImplTest"
    },
    "statements": [
      {
        "type": "DECLARATION",
        "code": "TungstenAnswer updateLoadBalancerServiceInstanceAnswer = mock(TungstenAnswer.class);",
        "line": 686,
        "locate": "Test Case",
        "locationContext": {
          "methodName": "updateLoadBalancerTest",
          "methodAnnotations": [
            "@Test"
          ]
        }
      },
      {
        "type": "STUBBING",
        "code": "when(updateLoadBalancerServiceInstanceAnswer.getResult()).thenReturn(true);",
        "line": 705,
        "locate": "Test Case",
        "locationContext": {
          "methodName": "updateLoadBalancerTest",
          "methodAnnotations": [
            "@Test"
          ]
        }
      }
    ],
    "pattern_id": 1
  },
  {
    "variableName": "addTungstenSecurityGroupRuleAnswer",
    "variableType": "TungstenAnswer",
    "mockedClass": "TungstenAnswer",
    "isReuseableMock": false,
    "mockPattern": "Creation:\n\u2014 Local Mock Creation in Test Case\n\nStubbing:\n\u2014 Test Case\n\nVerification:\n\u2014 None",
    "classContext": {
      "packageName": "org.apache.cloudstack.network.tungsten.service",
      "filePath": "C:\\java tool\\Apache\\cloudstack\\plugins\\network-elements\\tungsten\\src\\test\\java\\org\\apache\\cloudstack\\network\\tungsten\\service\\TungstenServiceImplTest.java",
      "className": "TungstenServiceImplTest"
    },
    "statements": [
      {
        "type": "DECLARATION",
        "code": "TungstenAnswer addTungstenSecurityGroupRuleAnswer = mock(TungstenAnswer.class);",
        "line": 731,
        "locate": "Test Case",
        "locationContext": {
          "methodName": "createTungstenSecurityGroupTest",
          "methodAnnotations": [
            "@Test"
          ]
        }
      },
      {
        "type": "STUBBING",
        "code": "when(addTungstenSecurityGroupRuleAnswer.getResult()).thenReturn(true);",
        "line": 741,
        "locate": "Test Case",
        "locationContext": {
          "methodName": "createTungstenSecurityGroupTest",
          "methodAnnotations": [
            "@Test"
          ]
        }
      }
    ],
    "pattern_id": 1
  },
  {
    "variableName": "createTungstenSecurityGroupAnswer",
    "variableType": "TungstenAnswer",
    "mockedClass": "TungstenAnswer",
    "isReuseableMock": false,
    "mockPattern": "Creation:\n\u2014 Local Mock Creation in Test Case\n\nStubbing:\n\u2014 Test Case\n\nVerification:\n\u2014 None",
    "classContext": {
      "packageName": "org.apache.cloudstack.network.tungsten.service",
      "filePath": "C:\\java tool\\Apache\\cloudstack\\plugins\\network-elements\\tungsten\\src\\test\\java\\org\\apache\\cloudstack\\network\\tungsten\\service\\TungstenServiceImplTest.java",
      "className": "TungstenServiceImplTest"
    },
    "statements": [
      {
        "type": "DECLARATION",
        "code": "TungstenAnswer createTungstenSecurityGroupAnswer = mock(TungstenAnswer.class);",
        "line": 730,
        "locate": "Test Case",
        "locationContext": {
          "methodName": "createTungstenSecurityGroupTest",
          "methodAnnotations": [
            "@Test"
          ]
        }
      },
      {
        "type": "STUBBING",
        "code": "when(createTungstenSecurityGroupAnswer.getResult()).thenReturn(true);",
        "line": 740,
        "locate": "Test Case",
        "locationContext": {
          "methodName": "createTungstenSecurityGroupTest",
          "methodAnnotations": [
            "@Test"
          ]
        }
      }
    ],
    "pattern_id": 1
  },
  {
    "variableName": "deleteTungstenSecurityGroupAnswer",
    "variableType": "TungstenAnswer",
    "mockedClass": "TungstenAnswer",
    "isReuseableMock": false,
    "mockPattern": "Creation:\n\u2014 Local Mock Creation in Test Case\n\nStubbing:\n\u2014 Test Case\n\nVerification:\n\u2014 None",
    "classContext": {
      "packageName": "org.apache.cloudstack.network.tungsten.service",
      "filePath": "C:\\java tool\\Apache\\cloudstack\\plugins\\network-elements\\tungsten\\src\\test\\java\\org\\apache\\cloudstack\\network\\tungsten\\service\\TungstenServiceImplTest.java",
      "className": "TungstenServiceImplTest"
    },
    "statements": [
      {
        "type": "DECLARATION",
        "code": "TungstenAnswer deleteTungstenSecurityGroupAnswer = mock(TungstenAnswer.class);",
        "line": 751,
        "locate": "Test Case",
        "locationContext": {
          "methodName": "deleteTungstenSecurityGroupTest",
          "methodAnnotations": [
            "@Test"
          ]
        }
      },
      {
        "type": "STUBBING",
        "code": "when(deleteTungstenSecurityGroupAnswer.getResult()).thenReturn(true);",
        "line": 755,
        "locate": "Test Case",
        "locationContext": {
          "methodName": "deleteTungstenSecurityGroupTest",
          "methodAnnotations": [
            "@Test"
          ]
        }
      }
    ],
    "pattern_id": 1
  },
  {
    "variableName": "removeTungstenSecurityGroupRuleAnswer",
    "variableType": "TungstenAnswer",
    "mockedClass": "TungstenAnswer",
    "isReuseableMock": false,
    "mockPattern": "Creation:\n\u2014 Local Mock Creation in Test Case\n\nStubbing:\n\u2014 Test Case\n\nVerification:\n\u2014 None",
    "classContext": {
      "packageName": "org.apache.cloudstack.network.tungsten.service",
      "filePath": "C:\\java tool\\Apache\\cloudstack\\plugins\\network-elements\\tungsten\\src\\test\\java\\org\\apache\\cloudstack\\network\\tungsten\\service\\TungstenServiceImplTest.java",
      "className": "TungstenServiceImplTest"
    },
    "statements": [
      {
        "type": "DECLARATION",
        "code": "TungstenAnswer removeTungstenSecurityGroupRuleAnswer = mock(TungstenAnswer.class);",
        "line": 765,
        "locate": "Test Case",
        "locationContext": {
          "methodName": "addTungstenSecurityGroupEgressRuleTest",
          "methodAnnotations": [
            "@Test"
          ]
        }
      },
      {
        "type": "STUBBING",
        "code": "when(removeTungstenSecurityGroupRuleAnswer.getResult()).thenReturn(true);",
        "line": 778,
        "locate": "Test Case",
        "locationContext": {
          "methodName": "addTungstenSecurityGroupEgressRuleTest",
          "methodAnnotations": [
            "@Test"
          ]
        }
      }
    ],
    "pattern_id": 1
  },
  {
    "variableName": "getTungstenSecurityGroupAnswer",
    "variableType": "TungstenAnswer",
    "mockedClass": "TungstenAnswer",
    "isReuseableMock": false,
    "mockPattern": "Creation:\n\u2014 Local Mock Creation in Test Case\n\nStubbing:\n\u2014 Test Case\n\nVerification:\n\u2014 None",
    "classContext": {
      "packageName": "org.apache.cloudstack.network.tungsten.service",
      "filePath": "C:\\java tool\\Apache\\cloudstack\\plugins\\network-elements\\tungsten\\src\\test\\java\\org\\apache\\cloudstack\\network\\tungsten\\service\\TungstenServiceImplTest.java",
      "className": "TungstenServiceImplTest"
    },
    "statements": [
      {
        "type": "DECLARATION",
        "code": "TungstenAnswer getTungstenSecurityGroupAnswer = mock(TungstenAnswer.class);",
        "line": 764,
        "locate": "Test Case",
        "locationContext": {
          "methodName": "addTungstenSecurityGroupEgressRuleTest",
          "methodAnnotations": [
            "@Test"
          ]
        }
      },
      {
        "type": "STUBBING",
        "code": "when(getTungstenSecurityGroupAnswer.getResult()).thenReturn(true);",
        "line": 777,
        "locate": "Test Case",
        "locationContext": {
          "methodName": "addTungstenSecurityGroupEgressRuleTest",
          "methodAnnotations": [
            "@Test"
          ]
        }
      },
      {
        "type": "STUBBING",
        "code": "when(getTungstenSecurityGroupAnswer.getApiObjectBase()).thenReturn(securityGroup);",
        "line": 780,
        "locate": "Test Case",
        "locationContext": {
          "methodName": "addTungstenSecurityGroupEgressRuleTest",
          "methodAnnotations": [
            "@Test"
          ]
        }
      }
    ],
    "pattern_id": 1
  },
  {
    "variableName": "addTungstenSecurityGroupRuleAnswer",
    "variableType": "TungstenAnswer",
    "mockedClass": "TungstenAnswer",
    "isReuseableMock": false,
    "mockPattern": "Creation:\n\u2014 Local Mock Creation in Test Case\n\nStubbing:\n\u2014 Test Case\n\nVerification:\n\u2014 None",
    "classContext": {
      "packageName": "org.apache.cloudstack.network.tungsten.service",
      "filePath": "C:\\java tool\\Apache\\cloudstack\\plugins\\network-elements\\tungsten\\src\\test\\java\\org\\apache\\cloudstack\\network\\tungsten\\service\\TungstenServiceImplTest.java",
      "className": "TungstenServiceImplTest"
    },
    "statements": [
      {
        "type": "DECLARATION",
        "code": "TungstenAnswer addTungstenSecurityGroupRuleAnswer = mock(TungstenAnswer.class);",
        "line": 766,
        "locate": "Test Case",
        "locationContext": {
          "methodName": "addTungstenSecurityGroupEgressRuleTest",
          "methodAnnotations": [
            "@Test"
          ]
        }
      },
      {
        "type": "STUBBING",
        "code": "when(addTungstenSecurityGroupRuleAnswer.getResult()).thenReturn(true);",
        "line": 779,
        "locate": "Test Case",
        "locationContext": {
          "methodName": "addTungstenSecurityGroupEgressRuleTest",
          "methodAnnotations": [
            "@Test"
          ]
        }
      }
    ],
    "pattern_id": 1
  },
  {
    "variableName": "getTungstenSecurityGroupAnswer",
    "variableType": "TungstenAnswer",
    "mockedClass": "TungstenAnswer",
    "isReuseableMock": false,
    "mockPattern": "Creation:\n\u2014 Local Mock Creation in Test Case\n\nStubbing:\n\u2014 Test Case\n\nVerification:\n\u2014 None",
    "classContext": {
      "packageName": "org.apache.cloudstack.network.tungsten.service",
      "filePath": "C:\\java tool\\Apache\\cloudstack\\plugins\\network-elements\\tungsten\\src\\test\\java\\org\\apache\\cloudstack\\network\\tungsten\\service\\TungstenServiceImplTest.java",
      "className": "TungstenServiceImplTest"
    },
    "statements": [
      {
        "type": "DECLARATION",
        "code": "TungstenAnswer getTungstenSecurityGroupAnswer = mock(TungstenAnswer.class);",
        "line": 801,
        "locate": "Test Case",
        "locationContext": {
          "methodName": "addTungstenSecurityGroupIngressRuleTest",
          "methodAnnotations": [
            "@Test"
          ]
        }
      },
      {
        "type": "STUBBING",
        "code": "when(getTungstenSecurityGroupAnswer.getResult()).thenReturn(true);",
        "line": 810,
        "locate": "Test Case",
        "locationContext": {
          "methodName": "addTungstenSecurityGroupIngressRuleTest",
          "methodAnnotations": [
            "@Test"
          ]
        }
      },
      {
        "type": "STUBBING",
        "code": "when(getTungstenSecurityGroupAnswer.getApiObjectBase()).thenReturn(securityGroup);",
        "line": 812,
        "locate": "Test Case",
        "locationContext": {
          "methodName": "addTungstenSecurityGroupIngressRuleTest",
          "methodAnnotations": [
            "@Test"
          ]
        }
      }
    ],
    "pattern_id": 1
  },
  {
    "variableName": "addTungstenSecurityGroupRuleAnswer",
    "variableType": "TungstenAnswer",
    "mockedClass": "TungstenAnswer",
    "isReuseableMock": false,
    "mockPattern": "Creation:\n\u2014 Local Mock Creation in Test Case\n\nStubbing:\n\u2014 Test Case\n\nVerification:\n\u2014 None",
    "classContext": {
      "packageName": "org.apache.cloudstack.network.tungsten.service",
      "filePath": "C:\\java tool\\Apache\\cloudstack\\plugins\\network-elements\\tungsten\\src\\test\\java\\org\\apache\\cloudstack\\network\\tungsten\\service\\TungstenServiceImplTest.java",
      "className": "TungstenServiceImplTest"
    },
    "statements": [
      {
        "type": "DECLARATION",
        "code": "TungstenAnswer addTungstenSecurityGroupRuleAnswer = mock(TungstenAnswer.class);",
        "line": 802,
        "locate": "Test Case",
        "locationContext": {
          "methodName": "addTungstenSecurityGroupIngressRuleTest",
          "methodAnnotations": [
            "@Test"
          ]
        }
      },
      {
        "type": "STUBBING",
        "code": "when(addTungstenSecurityGroupRuleAnswer.getResult()).thenReturn(true);",
        "line": 811,
        "locate": "Test Case",
        "locationContext": {
          "methodName": "addTungstenSecurityGroupIngressRuleTest",
          "methodAnnotations": [
            "@Test"
          ]
        }
      }
    ],
    "pattern_id": 1
  },
  {
    "variableName": "removeTungstenSecurityGroupRuleAnswer",
    "variableType": "TungstenAnswer",
    "mockedClass": "TungstenAnswer",
    "isReuseableMock": false,
    "mockPattern": "Creation:\n\u2014 Local Mock Creation in Test Case\n\nStubbing:\n\u2014 Test Case\n\nVerification:\n\u2014 None",
    "classContext": {
      "packageName": "org.apache.cloudstack.network.tungsten.service",
      "filePath": "C:\\java tool\\Apache\\cloudstack\\plugins\\network-elements\\tungsten\\src\\test\\java\\org\\apache\\cloudstack\\network\\tungsten\\service\\TungstenServiceImplTest.java",
      "className": "TungstenServiceImplTest"
    },
    "statements": [
      {
        "type": "DECLARATION",
        "code": "TungstenAnswer removeTungstenSecurityGroupRuleAnswer = mock(TungstenAnswer.class);",
        "line": 828,
        "locate": "Test Case",
        "locationContext": {
          "methodName": "removeTungstenSecurityGroupEgressRuleTest",
          "methodAnnotations": [
            "@Test"
          ]
        }
      },
      {
        "type": "STUBBING",
        "code": "when(removeTungstenSecurityGroupRuleAnswer.getResult()).thenReturn(true);",
        "line": 839,
        "locate": "Test Case",
        "locationContext": {
          "methodName": "removeTungstenSecurityGroupEgressRuleTest",
          "methodAnnotations": [
            "@Test"
          ]
        }
      }
    ],
    "pattern_id": 1
  },
  {
    "variableName": "addTungstenSecurityGroupRuleAnswer",
    "variableType": "TungstenAnswer",
    "mockedClass": "TungstenAnswer",
    "isReuseableMock": false,
    "mockPattern": "Creation:\n\u2014 Local Mock Creation in Test Case\n\nStubbing:\n\u2014 Test Case\n\nVerification:\n\u2014 None",
    "classContext": {
      "packageName": "org.apache.cloudstack.network.tungsten.service",
      "filePath": "C:\\java tool\\Apache\\cloudstack\\plugins\\network-elements\\tungsten\\src\\test\\java\\org\\apache\\cloudstack\\network\\tungsten\\service\\TungstenServiceImplTest.java",
      "className": "TungstenServiceImplTest"
    },
    "statements": [
      {
        "type": "DECLARATION",
        "code": "TungstenAnswer addTungstenSecurityGroupRuleAnswer = mock(TungstenAnswer.class);",
        "line": 827,
        "locate": "Test Case",
        "locationContext": {
          "methodName": "removeTungstenSecurityGroupEgressRuleTest",
          "methodAnnotations": [
            "@Test"
          ]
        }
      },
      {
        "type": "STUBBING",
        "code": "when(addTungstenSecurityGroupRuleAnswer.getResult()).thenReturn(true);",
        "line": 838,
        "locate": "Test Case",
        "locationContext": {
          "methodName": "removeTungstenSecurityGroupEgressRuleTest",
          "methodAnnotations": [
            "@Test"
          ]
        }
      }
    ],
    "pattern_id": 1
  },
  {
    "variableName": "removeTungstenSecurityGroupRuleAnswer",
    "variableType": "TungstenAnswer",
    "mockedClass": "TungstenAnswer",
    "isReuseableMock": false,
    "mockPattern": "Creation:\n\u2014 Local Mock Creation in Test Case\n\nStubbing:\n\u2014 Test Case\n\nVerification:\n\u2014 None",
    "classContext": {
      "packageName": "org.apache.cloudstack.network.tungsten.service",
      "filePath": "C:\\java tool\\Apache\\cloudstack\\plugins\\network-elements\\tungsten\\src\\test\\java\\org\\apache\\cloudstack\\network\\tungsten\\service\\TungstenServiceImplTest.java",
      "className": "TungstenServiceImplTest"
    },
    "statements": [
      {
        "type": "DECLARATION",
        "code": "TungstenAnswer removeTungstenSecurityGroupRuleAnswer = mock(TungstenAnswer.class);",
        "line": 858,
        "locate": "Test Case",
        "locationContext": {
          "methodName": "removeTungstenSecurityGroupIngressRuleTest",
          "methodAnnotations": [
            "@Test"
          ]
        }
      },
      {
        "type": "STUBBING",
        "code": "when(removeTungstenSecurityGroupRuleAnswer.getResult()).thenReturn(true);",
        "line": 865,
        "locate": "Test Case",
        "locationContext": {
          "methodName": "removeTungstenSecurityGroupIngressRuleTest",
          "methodAnnotations": [
            "@Test"
          ]
        }
      }
    ],
    "pattern_id": 1
  },
  {
    "variableName": "addTungstenSecurityGroupRuleAnswer",
    "variableType": "TungstenAnswer",
    "mockedClass": "TungstenAnswer",
    "isReuseableMock": false,
    "mockPattern": "Creation:\n\u2014 Local Mock Creation in Test Case\n\nStubbing:\n\u2014 Test Case\n\nVerification:\n\u2014 None",
    "classContext": {
      "packageName": "org.apache.cloudstack.network.tungsten.service",
      "filePath": "C:\\java tool\\Apache\\cloudstack\\plugins\\network-elements\\tungsten\\src\\test\\java\\org\\apache\\cloudstack\\network\\tungsten\\service\\TungstenServiceImplTest.java",
      "className": "TungstenServiceImplTest"
    },
    "statements": [
      {
        "type": "DECLARATION",
        "code": "TungstenAnswer addTungstenSecurityGroupRuleAnswer = mock(TungstenAnswer.class);",
        "line": 882,
        "locate": "Test Case",
        "locationContext": {
          "methodName": "addTungstenNicSecondaryIpAddressTest",
          "methodAnnotations": [
            "@Test"
          ]
        }
      },
      {
        "type": "STUBBING",
        "code": "when(addTungstenSecurityGroupRuleAnswer.getResult()).thenReturn(true);",
        "line": 892,
        "locate": "Test Case",
        "locationContext": {
          "methodName": "addTungstenNicSecondaryIpAddressTest",
          "methodAnnotations": [
            "@Test"
          ]
        }
      }
    ],
    "pattern_id": 1
  },
  {
    "variableName": "addTungstenSecondaryIpAddressAnswer",
    "variableType": "TungstenAnswer",
    "mockedClass": "TungstenAnswer",
    "isReuseableMock": false,
    "mockPattern": "Creation:\n\u2014 Local Mock Creation in Test Case\n\nStubbing:\n\u2014 Test Case\n\nVerification:\n\u2014 None",
    "classContext": {
      "packageName": "org.apache.cloudstack.network.tungsten.service",
      "filePath": "C:\\java tool\\Apache\\cloudstack\\plugins\\network-elements\\tungsten\\src\\test\\java\\org\\apache\\cloudstack\\network\\tungsten\\service\\TungstenServiceImplTest.java",
      "className": "TungstenServiceImplTest"
    },
    "statements": [
      {
        "type": "DECLARATION",
        "code": "TungstenAnswer addTungstenSecondaryIpAddressAnswer = mock(TungstenAnswer.class);",
        "line": 881,
        "locate": "Test Case",
        "locationContext": {
          "methodName": "addTungstenNicSecondaryIpAddressTest",
          "methodAnnotations": [
            "@Test"
          ]
        }
      },
      {
        "type": "STUBBING",
        "code": "when(addTungstenSecondaryIpAddressAnswer.getResult()).thenReturn(true);",
        "line": 891,
        "locate": "Test Case",
        "locationContext": {
          "methodName": "addTungstenNicSecondaryIpAddressTest",
          "methodAnnotations": [
            "@Test"
          ]
        }
      }
    ],
    "pattern_id": 1
  },
  {
    "variableName": "removeTungstenSecurityGroupRuleAnswer",
    "variableType": "TungstenAnswer",
    "mockedClass": "TungstenAnswer",
    "isReuseableMock": false,
    "mockPattern": "Creation:\n\u2014 Local Mock Creation in Test Case\n\nStubbing:\n\u2014 Test Case\n\nVerification:\n\u2014 None",
    "classContext": {
      "packageName": "org.apache.cloudstack.network.tungsten.service",
      "filePath": "C:\\java tool\\Apache\\cloudstack\\plugins\\network-elements\\tungsten\\src\\test\\java\\org\\apache\\cloudstack\\network\\tungsten\\service\\TungstenServiceImplTest.java",
      "className": "TungstenServiceImplTest"
    },
    "statements": [
      {
        "type": "DECLARATION",
        "code": "TungstenAnswer removeTungstenSecurityGroupRuleAnswer = mock(TungstenAnswer.class);",
        "line": 912,
        "locate": "Test Case",
        "locationContext": {
          "methodName": "removeTungstenNicSecondaryIpAddressTest",
          "methodAnnotations": [
            "@Test"
          ]
        }
      },
      {
        "type": "STUBBING",
        "code": "when(removeTungstenSecurityGroupRuleAnswer.getResult()).thenReturn(true);",
        "line": 919,
        "locate": "Test Case",
        "locationContext": {
          "methodName": "removeTungstenNicSecondaryIpAddressTest",
          "methodAnnotations": [
            "@Test"
          ]
        }
      }
    ],
    "pattern_id": 1
  },
  {
    "variableName": "removeTungstenSecondaryIpAddressAnswer",
    "variableType": "TungstenAnswer",
    "mockedClass": "TungstenAnswer",
    "isReuseableMock": false,
    "mockPattern": "Creation:\n\u2014 Local Mock Creation in Test Case\n\nStubbing:\n\u2014 Test Case\n\nVerification:\n\u2014 None",
    "classContext": {
      "packageName": "org.apache.cloudstack.network.tungsten.service",
      "filePath": "C:\\java tool\\Apache\\cloudstack\\plugins\\network-elements\\tungsten\\src\\test\\java\\org\\apache\\cloudstack\\network\\tungsten\\service\\TungstenServiceImplTest.java",
      "className": "TungstenServiceImplTest"
    },
    "statements": [
      {
        "type": "DECLARATION",
        "code": "TungstenAnswer removeTungstenSecondaryIpAddressAnswer = mock(TungstenAnswer.class);",
        "line": 909,
        "locate": "Test Case",
        "locationContext": {
          "methodName": "removeTungstenNicSecondaryIpAddressTest",
          "methodAnnotations": [
            "@Test"
          ]
        }
      },
      {
        "type": "STUBBING",
        "code": "when(removeTungstenSecondaryIpAddressAnswer.getResult()).thenReturn(true);",
        "line": 918,
        "locate": "Test Case",
        "locationContext": {
          "methodName": "removeTungstenNicSecondaryIpAddressTest",
          "methodAnnotations": [
            "@Test"
          ]
        }
      }
    ],
    "pattern_id": 1
  },
  {
    "variableName": "createTungstenPolicyAnswer",
    "variableType": "TungstenAnswer",
    "mockedClass": "TungstenAnswer",
    "isReuseableMock": false,
    "mockPattern": "Creation:\n\u2014 Local Mock Creation in Test Case\n\nStubbing:\n\u2014 Test Case\n\nVerification:\n\u2014 None",
    "classContext": {
      "packageName": "org.apache.cloudstack.network.tungsten.service",
      "filePath": "C:\\java tool\\Apache\\cloudstack\\plugins\\network-elements\\tungsten\\src\\test\\java\\org\\apache\\cloudstack\\network\\tungsten\\service\\TungstenServiceImplTest.java",
      "className": "TungstenServiceImplTest"
    },
    "statements": [
      {
        "type": "DECLARATION",
        "code": "TungstenAnswer createTungstenPolicyAnswer = mock(TungstenAnswer.class);",
        "line": 932,
        "locate": "Test Case",
        "locationContext": {
          "methodName": "createTungstenPolicyTest",
          "methodAnnotations": [
            "@Test"
          ]
        }
      },
      {
        "type": "STUBBING",
        "code": "when(createTungstenPolicyAnswer.getResult()).thenReturn(true);",
        "line": 939,
        "locate": "Test Case",
        "locationContext": {
          "methodName": "createTungstenPolicyTest",
          "methodAnnotations": [
            "@Test"
          ]
        }
      },
      {
        "type": "STUBBING",
        "code": "when(createTungstenPolicyAnswer.getTungstenModel()).thenReturn(tungstenNetworkPolicy);",
        "line": 940,
        "locate": "Test Case",
        "locationContext": {
          "methodName": "createTungstenPolicyTest",
          "methodAnnotations": [
            "@Test"
          ]
        }
      }
    ],
    "pattern_id": 1
  },
  {
    "variableName": "addTungstenPolicyRuleAnswer",
    "variableType": "TungstenAnswer",
    "mockedClass": "TungstenAnswer",
    "isReuseableMock": false,
    "mockPattern": "Creation:\n\u2014 Local Mock Creation in Test Case\n\nStubbing:\n\u2014 Test Case\n\nVerification:\n\u2014 None",
    "classContext": {
      "packageName": "org.apache.cloudstack.network.tungsten.service",
      "filePath": "C:\\java tool\\Apache\\cloudstack\\plugins\\network-elements\\tungsten\\src\\test\\java\\org\\apache\\cloudstack\\network\\tungsten\\service\\TungstenServiceImplTest.java",
      "className": "TungstenServiceImplTest"
    },
    "statements": [
      {
        "type": "DECLARATION",
        "code": "TungstenAnswer addTungstenPolicyRuleAnswer = mock(TungstenAnswer.class);",
        "line": 949,
        "locate": "Test Case",
        "locationContext": {
          "methodName": "addTungstenPolicyRuleTest",
          "methodAnnotations": [
            "@Test"
          ]
        }
      },
      {
        "type": "STUBBING",
        "code": "when(addTungstenPolicyRuleAnswer.getResult()).thenReturn(true);",
        "line": 961,
        "locate": "Test Case",
        "locationContext": {
          "methodName": "addTungstenPolicyRuleTest",
          "methodAnnotations": [
            "@Test"
          ]
        }
      },
      {
        "type": "STUBBING",
        "code": "when(addTungstenPolicyRuleAnswer.getApiObjectBase()).thenReturn(networkPolicy);",
        "line": 962,
        "locate": "Test Case",
        "locationContext": {
          "methodName": "addTungstenPolicyRuleTest",
          "methodAnnotations": [
            "@Test"
          ]
        }
      }
    ],
    "pattern_id": 1
  },
  {
    "variableName": "listTungstenPolicyAnswer",
    "variableType": "TungstenAnswer",
    "mockedClass": "TungstenAnswer",
    "isReuseableMock": false,
    "mockPattern": "Creation:\n\u2014 Local Mock Creation in Test Case\n\nStubbing:\n\u2014 Test Case\n\nVerification:\n\u2014 None",
    "classContext": {
      "packageName": "org.apache.cloudstack.network.tungsten.service",
      "filePath": "C:\\java tool\\Apache\\cloudstack\\plugins\\network-elements\\tungsten\\src\\test\\java\\org\\apache\\cloudstack\\network\\tungsten\\service\\TungstenServiceImplTest.java",
      "className": "TungstenServiceImplTest"
    },
    "statements": [
      {
        "type": "DECLARATION",
        "code": "TungstenAnswer listTungstenPolicyAnswer = mock(TungstenAnswer.class);",
        "line": 984,
        "locate": "Test Case",
        "locationContext": {
          "methodName": "listTungstenPolicyTest",
          "methodAnnotations": [
            "@Test"
          ]
        }
      },
      {
        "type": "STUBBING",
        "code": "when(listTungstenPolicyAnswer.getResult()).thenReturn(true);",
        "line": 993,
        "locate": "Test Case",
        "locationContext": {
          "methodName": "listTungstenPolicyTest",
          "methodAnnotations": [
            "@Test"
          ]
        }
      },
      {
        "type": "STUBBING",
        "code": "when(listTungstenPolicyAnswer.getTungstenModelList()).thenReturn(List.of(tungstenNetworkPolicy));",
        "line": 994,
        "locate": "Test Case",
        "locationContext": {
          "methodName": "listTungstenPolicyTest",
          "methodAnnotations": [
            "@Test"
          ]
        }
      }
    ],
    "pattern_id": 1
  },
  {
    "variableName": "listTungstenNetworkAnswer",
    "variableType": "TungstenAnswer",
    "mockedClass": "TungstenAnswer",
    "isReuseableMock": false,
    "mockPattern": "Creation:\n\u2014 Local Mock Creation in Test Case\n\nStubbing:\n\u2014 Test Case\n\nVerification:\n\u2014 None",
    "classContext": {
      "packageName": "org.apache.cloudstack.network.tungsten.service",
      "filePath": "C:\\java tool\\Apache\\cloudstack\\plugins\\network-elements\\tungsten\\src\\test\\java\\org\\apache\\cloudstack\\network\\tungsten\\service\\TungstenServiceImplTest.java",
      "className": "TungstenServiceImplTest"
    },
    "statements": [
      {
        "type": "DECLARATION",
        "code": "TungstenAnswer listTungstenNetworkAnswer = mock(TungstenAnswer.class);",
        "line": 1004,
        "locate": "Test Case",
        "locationContext": {
          "methodName": "listTungstenNetworkTest",
          "methodAnnotations": [
            "@Test"
          ]
        }
      },
      {
        "type": "STUBBING",
        "code": "when(listTungstenNetworkAnswer.getResult()).thenReturn(true);",
        "line": 1010,
        "locate": "Test Case",
        "locationContext": {
          "methodName": "listTungstenNetworkTest",
          "methodAnnotations": [
            "@Test"
          ]
        }
      }
    ],
    "pattern_id": 1
  },
  {
    "variableName": "listTungstenNicAnswer",
    "variableType": "TungstenAnswer",
    "mockedClass": "TungstenAnswer",
    "isReuseableMock": false,
    "mockPattern": "Creation:\n\u2014 Local Mock Creation in Test Case\n\nStubbing:\n\u2014 Test Case\n\nVerification:\n\u2014 None",
    "classContext": {
      "packageName": "org.apache.cloudstack.network.tungsten.service",
      "filePath": "C:\\java tool\\Apache\\cloudstack\\plugins\\network-elements\\tungsten\\src\\test\\java\\org\\apache\\cloudstack\\network\\tungsten\\service\\TungstenServiceImplTest.java",
      "className": "TungstenServiceImplTest"
    },
    "statements": [
      {
        "type": "DECLARATION",
        "code": "TungstenAnswer listTungstenNicAnswer = mock(TungstenAnswer.class);",
        "line": 1019,
        "locate": "Test Case",
        "locationContext": {
          "methodName": "listTungstenNicTest",
          "methodAnnotations": [
            "@Test"
          ]
        }
      },
      {
        "type": "STUBBING",
        "code": "when(listTungstenNicAnswer.getResult()).thenReturn(true);",
        "line": 1025,
        "locate": "Test Case",
        "locationContext": {
          "methodName": "listTungstenNicTest",
          "methodAnnotations": [
            "@Test"
          ]
        }
      }
    ],
    "pattern_id": 1
  },
  {
    "variableName": "listTungstenVmAnswer",
    "variableType": "TungstenAnswer",
    "mockedClass": "TungstenAnswer",
    "isReuseableMock": false,
    "mockPattern": "Creation:\n\u2014 Local Mock Creation in Test Case\n\nStubbing:\n\u2014 Test Case\n\nVerification:\n\u2014 None",
    "classContext": {
      "packageName": "org.apache.cloudstack.network.tungsten.service",
      "filePath": "C:\\java tool\\Apache\\cloudstack\\plugins\\network-elements\\tungsten\\src\\test\\java\\org\\apache\\cloudstack\\network\\tungsten\\service\\TungstenServiceImplTest.java",
      "className": "TungstenServiceImplTest"
    },
    "statements": [
      {
        "type": "DECLARATION",
        "code": "TungstenAnswer listTungstenVmAnswer = mock(TungstenAnswer.class);",
        "line": 1033,
        "locate": "Test Case",
        "locationContext": {
          "methodName": "listTungstenVmTest",
          "methodAnnotations": [
            "@Test"
          ]
        }
      },
      {
        "type": "STUBBING",
        "code": "when(listTungstenVmAnswer.getResult()).thenReturn(true);",
        "line": 1039,
        "locate": "Test Case",
        "locationContext": {
          "methodName": "listTungstenVmTest",
          "methodAnnotations": [
            "@Test"
          ]
        }
      }
    ],
    "pattern_id": 1
  },
  {
    "variableName": "deleteTungstenPolicyAnswer",
    "variableType": "TungstenAnswer",
    "mockedClass": "TungstenAnswer",
    "isReuseableMock": false,
    "mockPattern": "Creation:\n\u2014 Local Mock Creation in Test Case\n\nStubbing:\n\u2014 Test Case\n\nVerification:\n\u2014 None",
    "classContext": {
      "packageName": "org.apache.cloudstack.network.tungsten.service",
      "filePath": "C:\\java tool\\Apache\\cloudstack\\plugins\\network-elements\\tungsten\\src\\test\\java\\org\\apache\\cloudstack\\network\\tungsten\\service\\TungstenServiceImplTest.java",
      "className": "TungstenServiceImplTest"
    },
    "statements": [
      {
        "type": "DECLARATION",
        "code": "TungstenAnswer deleteTungstenPolicyAnswer = mock(TungstenAnswer.class);",
        "line": 1047,
        "locate": "Test Case",
        "locationContext": {
          "methodName": "deleteTungstenPolicyTest",
          "methodAnnotations": [
            "@Test"
          ]
        }
      },
      {
        "type": "STUBBING",
        "code": "when(deleteTungstenPolicyAnswer.getResult()).thenReturn(true);",
        "line": 1050,
        "locate": "Test Case",
        "locationContext": {
          "methodName": "deleteTungstenPolicyTest",
          "methodAnnotations": [
            "@Test"
          ]
        }
      }
    ],
    "pattern_id": 1
  },
  {
    "variableName": "listTungstenPolicyRuleAnswer",
    "variableType": "TungstenAnswer",
    "mockedClass": "TungstenAnswer",
    "isReuseableMock": false,
    "mockPattern": "Creation:\n\u2014 Local Mock Creation in Test Case\n\nStubbing:\n\u2014 Test Case\n\nVerification:\n\u2014 None",
    "classContext": {
      "packageName": "org.apache.cloudstack.network.tungsten.service",
      "filePath": "C:\\java tool\\Apache\\cloudstack\\plugins\\network-elements\\tungsten\\src\\test\\java\\org\\apache\\cloudstack\\network\\tungsten\\service\\TungstenServiceImplTest.java",
      "className": "TungstenServiceImplTest"
    },
    "statements": [
      {
        "type": "DECLARATION",
        "code": "TungstenAnswer listTungstenPolicyRuleAnswer = mock(TungstenAnswer.class);",
        "line": 1057,
        "locate": "Test Case",
        "locationContext": {
          "methodName": "listTungstenPolicyRuleWithRuleUuidTest",
          "methodAnnotations": [
            "@Test"
          ]
        }
      },
      {
        "type": "STUBBING",
        "code": "when(listTungstenPolicyRuleAnswer.getResult()).thenReturn(true);",
        "line": 1069,
        "locate": "Test Case",
        "locationContext": {
          "methodName": "listTungstenPolicyRuleWithRuleUuidTest",
          "methodAnnotations": [
            "@Test"
          ]
        }
      }
    ],
    "pattern_id": 1
  },
  {
    "variableName": "listTungstenPolicyRuleAnswer",
    "variableType": "TungstenAnswer",
    "mockedClass": "TungstenAnswer",
    "isReuseableMock": false,
    "mockPattern": "Creation:\n\u2014 Local Mock Creation in Test Case\n\nStubbing:\n\u2014 Test Case\n\nVerification:\n\u2014 None",
    "classContext": {
      "packageName": "org.apache.cloudstack.network.tungsten.service",
      "filePath": "C:\\java tool\\Apache\\cloudstack\\plugins\\network-elements\\tungsten\\src\\test\\java\\org\\apache\\cloudstack\\network\\tungsten\\service\\TungstenServiceImplTest.java",
      "className": "TungstenServiceImplTest"
    },
    "statements": [
      {
        "type": "DECLARATION",
        "code": "TungstenAnswer listTungstenPolicyRuleAnswer = mock(TungstenAnswer.class);",
        "line": 1087,
        "locate": "Test Case",
        "locationContext": {
          "methodName": "listTungstenPolicyRuleWithAllRuleTest",
          "methodAnnotations": [
            "@Test"
          ]
        }
      },
      {
        "type": "STUBBING",
        "code": "when(listTungstenPolicyRuleAnswer.getResult()).thenReturn(true);",
        "line": 1099,
        "locate": "Test Case",
        "locationContext": {
          "methodName": "listTungstenPolicyRuleWithAllRuleTest",
          "methodAnnotations": [
            "@Test"
          ]
        }
      }
    ],
    "pattern_id": 1
  },
  {
    "variableName": "removeTungstenPolicyRuleAnswer",
    "variableType": "TungstenAnswer",
    "mockedClass": "TungstenAnswer",
    "isReuseableMock": false,
    "mockPattern": "Creation:\n\u2014 Local Mock Creation in Test Case\n\nStubbing:\n\u2014 Test Case\n\nVerification:\n\u2014 None",
    "classContext": {
      "packageName": "org.apache.cloudstack.network.tungsten.service",
      "filePath": "C:\\java tool\\Apache\\cloudstack\\plugins\\network-elements\\tungsten\\src\\test\\java\\org\\apache\\cloudstack\\network\\tungsten\\service\\TungstenServiceImplTest.java",
      "className": "TungstenServiceImplTest"
    },
    "statements": [
      {
        "type": "DECLARATION",
        "code": "TungstenAnswer removeTungstenPolicyRuleAnswer = mock(TungstenAnswer.class);",
        "line": 1117,
        "locate": "Test Case",
        "locationContext": {
          "methodName": "removeTungstenPolicyRuleTest",
          "methodAnnotations": [
            "@Test"
          ]
        }
      },
      {
        "type": "STUBBING",
        "code": "when(removeTungstenPolicyRuleAnswer.getResult()).thenReturn(true);",
        "line": 1125,
        "locate": "Test Case",
        "locationContext": {
          "methodName": "removeTungstenPolicyRuleTest",
          "methodAnnotations": [
            "@Test"
          ]
        }
      },
      {
        "type": "STUBBING",
        "code": "when(removeTungstenPolicyRuleAnswer.getTungstenModel()).thenReturn(tungstenNetworkPolicy);",
        "line": 1126,
        "locate": "Test Case",
        "locationContext": {
          "methodName": "removeTungstenPolicyRuleTest",
          "methodAnnotations": [
            "@Test"
          ]
        }
      }
    ],
    "pattern_id": 1
  },
  {
    "variableName": "createTungstenTagAnswer",
    "variableType": "TungstenAnswer",
    "mockedClass": "TungstenAnswer",
    "isReuseableMock": false,
    "mockPattern": "Creation:\n\u2014 Local Mock Creation in Test Case\n\nStubbing:\n\u2014 Test Case\n\nVerification:\n\u2014 None",
    "classContext": {
      "packageName": "org.apache.cloudstack.network.tungsten.service",
      "filePath": "C:\\java tool\\Apache\\cloudstack\\plugins\\network-elements\\tungsten\\src\\test\\java\\org\\apache\\cloudstack\\network\\tungsten\\service\\TungstenServiceImplTest.java",
      "className": "TungstenServiceImplTest"
    },
    "statements": [
      {
        "type": "DECLARATION",
        "code": "TungstenAnswer createTungstenTagAnswer = mock(TungstenAnswer.class);",
        "line": 1135,
        "locate": "Test Case",
        "locationContext": {
          "methodName": "createTungstenTagTest",
          "methodAnnotations": [
            "@Test"
          ]
        }
      },
      {
        "type": "STUBBING",
        "code": "when(createTungstenTagAnswer.getResult()).thenReturn(true);",
        "line": 1146,
        "locate": "Test Case",
        "locationContext": {
          "methodName": "createTungstenTagTest",
          "methodAnnotations": [
            "@Test"
          ]
        }
      },
      {
        "type": "STUBBING",
        "code": "when(createTungstenTagAnswer.getTungstenModel()).thenReturn(tungstenTag);",
        "line": 1147,
        "locate": "Test Case",
        "locationContext": {
          "methodName": "createTungstenTagTest",
          "methodAnnotations": [
            "@Test"
          ]
        }
      }
    ],
    "pattern_id": 1
  },
  {
    "variableName": "createTungstenTagTypeAnswer",
    "variableType": "TungstenAnswer",
    "mockedClass": "TungstenAnswer",
    "isReuseableMock": false,
    "mockPattern": "Creation:\n\u2014 Local Mock Creation in Test Case\n\nStubbing:\n\u2014 Test Case\n\nVerification:\n\u2014 None",
    "classContext": {
      "packageName": "org.apache.cloudstack.network.tungsten.service",
      "filePath": "C:\\java tool\\Apache\\cloudstack\\plugins\\network-elements\\tungsten\\src\\test\\java\\org\\apache\\cloudstack\\network\\tungsten\\service\\TungstenServiceImplTest.java",
      "className": "TungstenServiceImplTest"
    },
    "statements": [
      {
        "type": "DECLARATION",
        "code": "TungstenAnswer createTungstenTagTypeAnswer = mock(TungstenAnswer.class);",
        "line": 1159,
        "locate": "Test Case",
        "locationContext": {
          "methodName": "createTungstenTagTypeTest",
          "methodAnnotations": [
            "@Test"
          ]
        }
      },
      {
        "type": "STUBBING",
        "code": "when(createTungstenTagTypeAnswer.getResult()).thenReturn(true);",
        "line": 1165,
        "locate": "Test Case",
        "locationContext": {
          "methodName": "createTungstenTagTypeTest",
          "methodAnnotations": [
            "@Test"
          ]
        }
      },
      {
        "type": "STUBBING",
        "code": "when(createTungstenTagTypeAnswer.getApiObjectBase()).thenReturn(tagtype);",
        "line": 1166,
        "locate": "Test Case",
        "locationContext": {
          "methodName": "createTungstenTagTypeTest",
          "methodAnnotations": [
            "@Test"
          ]
        }
      }
    ],
    "pattern_id": 1
  },
  {
    "variableName": "listTungstenTagAnswer",
    "variableType": "TungstenAnswer",
    "mockedClass": "TungstenAnswer",
    "isReuseableMock": false,
    "mockPattern": "Creation:\n\u2014 Local Mock Creation in Test Case\n\nStubbing:\n\u2014 Test Case\n\nVerification:\n\u2014 None",
    "classContext": {
      "packageName": "org.apache.cloudstack.network.tungsten.service",
      "filePath": "C:\\java tool\\Apache\\cloudstack\\plugins\\network-elements\\tungsten\\src\\test\\java\\org\\apache\\cloudstack\\network\\tungsten\\service\\TungstenServiceImplTest.java",
      "className": "TungstenServiceImplTest"
    },
    "statements": [
      {
        "type": "DECLARATION",
        "code": "TungstenAnswer listTungstenTagAnswer = mock(TungstenAnswer.class);",
        "line": 1173,
        "locate": "Test Case",
        "locationContext": {
          "methodName": "listTungstenTagsTest",
          "methodAnnotations": [
            "@Test"
          ]
        }
      },
      {
        "type": "STUBBING",
        "code": "when(listTungstenTagAnswer.getResult()).thenReturn(true);",
        "line": 1185,
        "locate": "Test Case",
        "locationContext": {
          "methodName": "listTungstenTagsTest",
          "methodAnnotations": [
            "@Test"
          ]
        }
      },
      {
        "type": "STUBBING",
        "code": "when(listTungstenTagAnswer.getTungstenModelList()).thenReturn(List.of(tungstenTag));",
        "line": 1186,
        "locate": "Test Case",
        "locationContext": {
          "methodName": "listTungstenTagsTest",
          "methodAnnotations": [
            "@Test"
          ]
        }
      }
    ],
    "pattern_id": 1
  },
  {
    "variableName": "listTungstenTagTypeAnswer",
    "variableType": "TungstenAnswer",
    "mockedClass": "TungstenAnswer",
    "isReuseableMock": false,
    "mockPattern": "Creation:\n\u2014 Local Mock Creation in Test Case\n\nStubbing:\n\u2014 Test Case\n\nVerification:\n\u2014 None",
    "classContext": {
      "packageName": "org.apache.cloudstack.network.tungsten.service",
      "filePath": "C:\\java tool\\Apache\\cloudstack\\plugins\\network-elements\\tungsten\\src\\test\\java\\org\\apache\\cloudstack\\network\\tungsten\\service\\TungstenServiceImplTest.java",
      "className": "TungstenServiceImplTest"
    },
    "statements": [
      {
        "type": "DECLARATION",
        "code": "TungstenAnswer listTungstenTagTypeAnswer = mock(TungstenAnswer.class);",
        "line": 1201,
        "locate": "Test Case",
        "locationContext": {
          "methodName": "listTungstenTagTypesTest",
          "methodAnnotations": [
            "@Test"
          ]
        }
      },
      {
        "type": "STUBBING",
        "code": "when(listTungstenTagTypeAnswer.getResult()).thenReturn(true);",
        "line": 1207,
        "locate": "Test Case",
        "locationContext": {
          "methodName": "listTungstenTagTypesTest",
          "methodAnnotations": [
            "@Test"
          ]
        }
      }
    ],
    "pattern_id": 1
  },
  {
    "variableName": "deleteTungstenTagAnswer",
    "variableType": "TungstenAnswer",
    "mockedClass": "TungstenAnswer",
    "isReuseableMock": false,
    "mockPattern": "Creation:\n\u2014 Local Mock Creation in Test Case\n\nStubbing:\n\u2014 Test Case\n\nVerification:\n\u2014 None",
    "classContext": {
      "packageName": "org.apache.cloudstack.network.tungsten.service",
      "filePath": "C:\\java tool\\Apache\\cloudstack\\plugins\\network-elements\\tungsten\\src\\test\\java\\org\\apache\\cloudstack\\network\\tungsten\\service\\TungstenServiceImplTest.java",
      "className": "TungstenServiceImplTest"
    },
    "statements": [
      {
        "type": "DECLARATION",
        "code": "TungstenAnswer deleteTungstenTagAnswer = mock(TungstenAnswer.class);",
        "line": 1215,
        "locate": "Test Case",
        "locationContext": {
          "methodName": "deleteTungstenTagTest",
          "methodAnnotations": [
            "@Test"
          ]
        }
      },
      {
        "type": "STUBBING",
        "code": "when(deleteTungstenTagAnswer.getResult()).thenReturn(true);",
        "line": 1218,
        "locate": "Test Case",
        "locationContext": {
          "methodName": "deleteTungstenTagTest",
          "methodAnnotations": [
            "@Test"
          ]
        }
      }
    ],
    "pattern_id": 1
  },
  {
    "variableName": "deleteTungstenTagTypeAnswer",
    "variableType": "TungstenAnswer",
    "mockedClass": "TungstenAnswer",
    "isReuseableMock": false,
    "mockPattern": "Creation:\n\u2014 Local Mock Creation in Test Case\n\nStubbing:\n\u2014 Test Case\n\nVerification:\n\u2014 None",
    "classContext": {
      "packageName": "org.apache.cloudstack.network.tungsten.service",
      "filePath": "C:\\java tool\\Apache\\cloudstack\\plugins\\network-elements\\tungsten\\src\\test\\java\\org\\apache\\cloudstack\\network\\tungsten\\service\\TungstenServiceImplTest.java",
      "className": "TungstenServiceImplTest"
    },
    "statements": [
      {
        "type": "DECLARATION",
        "code": "TungstenAnswer deleteTungstenTagTypeAnswer = mock(TungstenAnswer.class);",
        "line": 1225,
        "locate": "Test Case",
        "locationContext": {
          "methodName": "deleteTungstenTagTypeTest",
          "methodAnnotations": [
            "@Test"
          ]
        }
      },
      {
        "type": "STUBBING",
        "code": "when(deleteTungstenTagTypeAnswer.getResult()).thenReturn(true);",
        "line": 1228,
        "locate": "Test Case",
        "locationContext": {
          "methodName": "deleteTungstenTagTypeTest",
          "methodAnnotations": [
            "@Test"
          ]
        }
      }
    ],
    "pattern_id": 1
  },
  {
    "variableName": "applyTungstenPolicyAnswer",
    "variableType": "TungstenAnswer",
    "mockedClass": "TungstenAnswer",
    "isReuseableMock": false,
    "mockPattern": "Creation:\n\u2014 Local Mock Creation in Test Case\n\nStubbing:\n\u2014 Test Case\n\nVerification:\n\u2014 None",
    "classContext": {
      "packageName": "org.apache.cloudstack.network.tungsten.service",
      "filePath": "C:\\java tool\\Apache\\cloudstack\\plugins\\network-elements\\tungsten\\src\\test\\java\\org\\apache\\cloudstack\\network\\tungsten\\service\\TungstenServiceImplTest.java",
      "className": "TungstenServiceImplTest"
    },
    "statements": [
      {
        "type": "DECLARATION",
        "code": "TungstenAnswer applyTungstenPolicyAnswer = mock(TungstenAnswer.class);",
        "line": 1235,
        "locate": "Test Case",
        "locationContext": {
          "methodName": "applyTungstenPolicyTest",
          "methodAnnotations": [
            "@Test"
          ]
        }
      },
      {
        "type": "STUBBING",
        "code": "when(applyTungstenPolicyAnswer.getResult()).thenReturn(true);",
        "line": 1243,
        "locate": "Test Case",
        "locationContext": {
          "methodName": "applyTungstenPolicyTest",
          "methodAnnotations": [
            "@Test"
          ]
        }
      },
      {
        "type": "STUBBING",
        "code": "when(applyTungstenPolicyAnswer.getTungstenModel()).thenReturn(tungstenNetworkPolicy);",
        "line": 1244,
        "locate": "Test Case",
        "locationContext": {
          "methodName": "applyTungstenPolicyTest",
          "methodAnnotations": [
            "@Test"
          ]
        }
      }
    ],
    "pattern_id": 1
  },
  {
    "variableName": "applyTungstenTagAnswer",
    "variableType": "TungstenAnswer",
    "mockedClass": "TungstenAnswer",
    "isReuseableMock": false,
    "mockPattern": "Creation:\n\u2014 Local Mock Creation in Test Case\n\nStubbing:\n\u2014 Test Case\n\nVerification:\n\u2014 None",
    "classContext": {
      "packageName": "org.apache.cloudstack.network.tungsten.service",
      "filePath": "C:\\java tool\\Apache\\cloudstack\\plugins\\network-elements\\tungsten\\src\\test\\java\\org\\apache\\cloudstack\\network\\tungsten\\service\\TungstenServiceImplTest.java",
      "className": "TungstenServiceImplTest"
    },
    "statements": [
      {
        "type": "DECLARATION",
        "code": "TungstenAnswer applyTungstenTagAnswer = mock(TungstenAnswer.class);",
        "line": 1253,
        "locate": "Test Case",
        "locationContext": {
          "methodName": "applyTungstenTagTest",
          "methodAnnotations": [
            "@Test"
          ]
        }
      },
      {
        "type": "STUBBING",
        "code": "when(applyTungstenTagAnswer.getResult()).thenReturn(true);",
        "line": 1264,
        "locate": "Test Case",
        "locationContext": {
          "methodName": "applyTungstenTagTest",
          "methodAnnotations": [
            "@Test"
          ]
        }
      },
      {
        "type": "STUBBING",
        "code": "when(applyTungstenTagAnswer.getTungstenModel()).thenReturn(tungstenTag);",
        "line": 1265,
        "locate": "Test Case",
        "locationContext": {
          "methodName": "applyTungstenTagTest",
          "methodAnnotations": [
            "@Test"
          ]
        }
      }
    ],
    "pattern_id": 1
  },
  {
    "variableName": "removeTungstenPolicyAnswer",
    "variableType": "TungstenAnswer",
    "mockedClass": "TungstenAnswer",
    "isReuseableMock": false,
    "mockPattern": "Creation:\n\u2014 Local Mock Creation in Test Case\n\nStubbing:\n\u2014 Test Case\n\nVerification:\n\u2014 None",
    "classContext": {
      "packageName": "org.apache.cloudstack.network.tungsten.service",
      "filePath": "C:\\java tool\\Apache\\cloudstack\\plugins\\network-elements\\tungsten\\src\\test\\java\\org\\apache\\cloudstack\\network\\tungsten\\service\\TungstenServiceImplTest.java",
      "className": "TungstenServiceImplTest"
    },
    "statements": [
      {
        "type": "DECLARATION",
        "code": "TungstenAnswer removeTungstenPolicyAnswer = mock(TungstenAnswer.class);",
        "line": 1279,
        "locate": "Test Case",
        "locationContext": {
          "methodName": "removeTungstenPolicyTest",
          "methodAnnotations": [
            "@Test"
          ]
        }
      },
      {
        "type": "STUBBING",
        "code": "when(removeTungstenPolicyAnswer.getResult()).thenReturn(true);",
        "line": 1287,
        "locate": "Test Case",
        "locationContext": {
          "methodName": "removeTungstenPolicyTest",
          "methodAnnotations": [
            "@Test"
          ]
        }
      },
      {
        "type": "STUBBING",
        "code": "when(removeTungstenPolicyAnswer.getTungstenModel()).thenReturn(tungstenNetworkPolicy);",
        "line": 1288,
        "locate": "Test Case",
        "locationContext": {
          "methodName": "removeTungstenPolicyTest",
          "methodAnnotations": [
            "@Test"
          ]
        }
      }
    ],
    "pattern_id": 1
  },
  {
    "variableName": "removeTungstenTagAnswer",
    "variableType": "TungstenAnswer",
    "mockedClass": "TungstenAnswer",
    "isReuseableMock": false,
    "mockPattern": "Creation:\n\u2014 Local Mock Creation in Test Case\n\nStubbing:\n\u2014 Test Case\n\nVerification:\n\u2014 None",
    "classContext": {
      "packageName": "org.apache.cloudstack.network.tungsten.service",
      "filePath": "C:\\java tool\\Apache\\cloudstack\\plugins\\network-elements\\tungsten\\src\\test\\java\\org\\apache\\cloudstack\\network\\tungsten\\service\\TungstenServiceImplTest.java",
      "className": "TungstenServiceImplTest"
    },
    "statements": [
      {
        "type": "DECLARATION",
        "code": "TungstenAnswer removeTungstenTagAnswer = mock(TungstenAnswer.class);",
        "line": 1297,
        "locate": "Test Case",
        "locationContext": {
          "methodName": "removeTungstenTagTest",
          "methodAnnotations": [
            "@Test"
          ]
        }
      },
      {
        "type": "STUBBING",
        "code": "when(removeTungstenTagAnswer.getResult()).thenReturn(true);",
        "line": 1308,
        "locate": "Test Case",
        "locationContext": {
          "methodName": "removeTungstenTagTest",
          "methodAnnotations": [
            "@Test"
          ]
        }
      },
      {
        "type": "STUBBING",
        "code": "when(removeTungstenTagAnswer.getTungstenModel()).thenReturn(tungstenTag);",
        "line": 1309,
        "locate": "Test Case",
        "locationContext": {
          "methodName": "removeTungstenTagTest",
          "methodAnnotations": [
            "@Test"
          ]
        }
      }
    ],
    "pattern_id": 1
  },
  {
    "variableName": "createTungstenAddressGroupAnswer",
    "variableType": "TungstenAnswer",
    "mockedClass": "TungstenAnswer",
    "isReuseableMock": false,
    "mockPattern": "Creation:\n\u2014 Local Mock Creation in Test Case\n\nStubbing:\n\u2014 Test Case\n\nVerification:\n\u2014 None",
    "classContext": {
      "packageName": "org.apache.cloudstack.network.tungsten.service",
      "filePath": "C:\\java tool\\Apache\\cloudstack\\plugins\\network-elements\\tungsten\\src\\test\\java\\org\\apache\\cloudstack\\network\\tungsten\\service\\TungstenServiceImplTest.java",
      "className": "TungstenServiceImplTest"
    },
    "statements": [
      {
        "type": "DECLARATION",
        "code": "TungstenAnswer createTungstenAddressGroupAnswer = mock(TungstenAnswer.class);",
        "line": 1324,
        "locate": "Test Case",
        "locationContext": {
          "methodName": "createTungstenAddressGroupTest",
          "methodAnnotations": [
            "@Test"
          ]
        }
      },
      {
        "type": "STUBBING",
        "code": "when(createTungstenAddressGroupAnswer.getResult()).thenReturn(true);",
        "line": 1332,
        "locate": "Test Case",
        "locationContext": {
          "methodName": "createTungstenAddressGroupTest",
          "methodAnnotations": [
            "@Test"
          ]
        }
      },
      {
        "type": "STUBBING",
        "code": "when(createTungstenAddressGroupAnswer.getApiObjectBase()).thenReturn(addressGroup);",
        "line": 1333,
        "locate": "Test Case",
        "locationContext": {
          "methodName": "createTungstenAddressGroupTest",
          "methodAnnotations": [
            "@Test"
          ]
        }
      }
    ],
    "pattern_id": 1
  },
  {
    "variableName": "createTungstenServiceGroupAnswer",
    "variableType": "TungstenAnswer",
    "mockedClass": "TungstenAnswer",
    "isReuseableMock": false,
    "mockPattern": "Creation:\n\u2014 Local Mock Creation in Test Case\n\nStubbing:\n\u2014 Test Case\n\nVerification:\n\u2014 None",
    "classContext": {
      "packageName": "org.apache.cloudstack.network.tungsten.service",
      "filePath": "C:\\java tool\\Apache\\cloudstack\\plugins\\network-elements\\tungsten\\src\\test\\java\\org\\apache\\cloudstack\\network\\tungsten\\service\\TungstenServiceImplTest.java",
      "className": "TungstenServiceImplTest"
    },
    "statements": [
      {
        "type": "DECLARATION",
        "code": "TungstenAnswer createTungstenServiceGroupAnswer = mock(TungstenAnswer.class);",
        "line": 1342,
        "locate": "Test Case",
        "locationContext": {
          "methodName": "createTungstenServiceGroupTest",
          "methodAnnotations": [
            "@Test"
          ]
        }
      },
      {
        "type": "STUBBING",
        "code": "when(createTungstenServiceGroupAnswer.getResult()).thenReturn(true);",
        "line": 1351,
        "locate": "Test Case",
        "locationContext": {
          "methodName": "createTungstenServiceGroupTest",
          "methodAnnotations": [
            "@Test"
          ]
        }
      },
      {
        "type": "STUBBING",
        "code": "when(createTungstenServiceGroupAnswer.getApiObjectBase()).thenReturn(serviceGroup);",
        "line": 1352,
        "locate": "Test Case",
        "locationContext": {
          "methodName": "createTungstenServiceGroupTest",
          "methodAnnotations": [
            "@Test"
          ]
        }
      }
    ],
    "pattern_id": 1
  },
  {
    "variableName": "createTungstenFirewallRuleAnswer",
    "variableType": "TungstenAnswer",
    "mockedClass": "TungstenAnswer",
    "isReuseableMock": false,
    "mockPattern": "Creation:\n\u2014 Local Mock Creation in Test Case\n\nStubbing:\n\u2014 Test Case\n\nVerification:\n\u2014 None",
    "classContext": {
      "packageName": "org.apache.cloudstack.network.tungsten.service",
      "filePath": "C:\\java tool\\Apache\\cloudstack\\plugins\\network-elements\\tungsten\\src\\test\\java\\org\\apache\\cloudstack\\network\\tungsten\\service\\TungstenServiceImplTest.java",
      "className": "TungstenServiceImplTest"
    },
    "statements": [
      {
        "type": "DECLARATION",
        "code": "TungstenAnswer createTungstenFirewallRuleAnswer = mock(TungstenAnswer.class);",
        "line": 1362,
        "locate": "Test Case",
        "locationContext": {
          "methodName": "createTungstenFirewallRuleTest",
          "methodAnnotations": [
            "@Test"
          ]
        }
      },
      {
        "type": "STUBBING",
        "code": "when(createTungstenFirewallRuleAnswer.getResult()).thenReturn(true);",
        "line": 1373,
        "locate": "Test Case",
        "locationContext": {
          "methodName": "createTungstenFirewallRuleTest",
          "methodAnnotations": [
            "@Test"
          ]
        }
      },
      {
        "type": "STUBBING",
        "code": "when(createTungstenFirewallRuleAnswer.getApiObjectBase()).thenReturn(firewallRule);",
        "line": 1374,
        "locate": "Test Case",
        "locationContext": {
          "methodName": "createTungstenFirewallRuleTest",
          "methodAnnotations": [
            "@Test"
          ]
        }
      }
    ],
    "pattern_id": 1
  },
  {
    "variableName": "createTungstenFirewallPolicyAnswer",
    "variableType": "TungstenAnswer",
    "mockedClass": "TungstenAnswer",
    "isReuseableMock": false,
    "mockPattern": "Creation:\n\u2014 Local Mock Creation in Test Case\n\nStubbing:\n\u2014 Test Case\n\nVerification:\n\u2014 None",
    "classContext": {
      "packageName": "org.apache.cloudstack.network.tungsten.service",
      "filePath": "C:\\java tool\\Apache\\cloudstack\\plugins\\network-elements\\tungsten\\src\\test\\java\\org\\apache\\cloudstack\\network\\tungsten\\service\\TungstenServiceImplTest.java",
      "className": "TungstenServiceImplTest"
    },
    "statements": [
      {
        "type": "DECLARATION",
        "code": "TungstenAnswer createTungstenFirewallPolicyAnswer = mock(TungstenAnswer.class);",
        "line": 1393,
        "locate": "Test Case",
        "locationContext": {
          "methodName": "createTungstenFirewallPolicyTest",
          "methodAnnotations": [
            "@Test"
          ]
        }
      },
      {
        "type": "STUBBING",
        "code": "when(createTungstenFirewallPolicyAnswer.getResult()).thenReturn(true);",
        "line": 1400,
        "locate": "Test Case",
        "locationContext": {
          "methodName": "createTungstenFirewallPolicyTest",
          "methodAnnotations": [
            "@Test"
          ]
        }
      },
      {
        "type": "STUBBING",
        "code": "when(createTungstenFirewallPolicyAnswer.getApiObjectBase()).thenReturn(firewallPolicy);",
        "line": 1401,
        "locate": "Test Case",
        "locationContext": {
          "methodName": "createTungstenFirewallPolicyTest",
          "methodAnnotations": [
            "@Test"
          ]
        }
      }
    ],
    "pattern_id": 1
  },
  {
    "variableName": "createTungstenApplicationPolicySetAnswer",
    "variableType": "TungstenAnswer",
    "mockedClass": "TungstenAnswer",
    "isReuseableMock": false,
    "mockPattern": "Creation:\n\u2014 Local Mock Creation in Test Case\n\nStubbing:\n\u2014 Test Case\n\nVerification:\n\u2014 None",
    "classContext": {
      "packageName": "org.apache.cloudstack.network.tungsten.service",
      "filePath": "C:\\java tool\\Apache\\cloudstack\\plugins\\network-elements\\tungsten\\src\\test\\java\\org\\apache\\cloudstack\\network\\tungsten\\service\\TungstenServiceImplTest.java",
      "className": "TungstenServiceImplTest"
    },
    "statements": [
      {
        "type": "DECLARATION",
        "code": "TungstenAnswer createTungstenApplicationPolicySetAnswer = mock(TungstenAnswer.class);",
        "line": 1410,
        "locate": "Test Case",
        "locationContext": {
          "methodName": "createTungstenApplicationPolicySetTest",
          "methodAnnotations": [
            "@Test"
          ]
        }
      },
      {
        "type": "STUBBING",
        "code": "when(createTungstenApplicationPolicySetAnswer.getResult()).thenReturn(true);",
        "line": 1418,
        "locate": "Test Case",
        "locationContext": {
          "methodName": "createTungstenApplicationPolicySetTest",
          "methodAnnotations": [
            "@Test"
          ]
        }
      },
      {
        "type": "STUBBING",
        "code": "when(createTungstenApplicationPolicySetAnswer.getApiObjectBase()).thenReturn(applicationPolicySet);",
        "line": 1419,
        "locate": "Test Case",
        "locationContext": {
          "methodName": "createTungstenApplicationPolicySetTest",
          "methodAnnotations": [
            "@Test"
          ]
        }
      }
    ],
    "pattern_id": 1
  },
  {
    "variableName": "listTungstenApplicationPolicySetAnswer",
    "variableType": "TungstenAnswer",
    "mockedClass": "TungstenAnswer",
    "isReuseableMock": false,
    "mockPattern": "Creation:\n\u2014 Local Mock Creation in Test Case\n\nStubbing:\n\u2014 Test Case\n\nVerification:\n\u2014 None",
    "classContext": {
      "packageName": "org.apache.cloudstack.network.tungsten.service",
      "filePath": "C:\\java tool\\Apache\\cloudstack\\plugins\\network-elements\\tungsten\\src\\test\\java\\org\\apache\\cloudstack\\network\\tungsten\\service\\TungstenServiceImplTest.java",
      "className": "TungstenServiceImplTest"
    },
    "statements": [
      {
        "type": "DECLARATION",
        "code": "TungstenAnswer listTungstenApplicationPolicySetAnswer = mock(TungstenAnswer.class);",
        "line": 1430,
        "locate": "Test Case",
        "locationContext": {
          "methodName": "listTungstenApplicationPolicySetTest",
          "methodAnnotations": [
            "@Test"
          ]
        }
      },
      {
        "type": "STUBBING",
        "code": "when(listTungstenApplicationPolicySetAnswer.getResult()).thenReturn(true);",
        "line": 1438,
        "locate": "Test Case",
        "locationContext": {
          "methodName": "listTungstenApplicationPolicySetTest",
          "methodAnnotations": [
            "@Test"
          ]
        }
      }
    ],
    "pattern_id": 1
  },
  {
    "variableName": "listTungstenFirewallPolicyAnswer",
    "variableType": "TungstenAnswer",
    "mockedClass": "TungstenAnswer",
    "isReuseableMock": false,
    "mockPattern": "Creation:\n\u2014 Local Mock Creation in Test Case\n\nStubbing:\n\u2014 Test Case\n\nVerification:\n\u2014 None",
    "classContext": {
      "packageName": "org.apache.cloudstack.network.tungsten.service",
      "filePath": "C:\\java tool\\Apache\\cloudstack\\plugins\\network-elements\\tungsten\\src\\test\\java\\org\\apache\\cloudstack\\network\\tungsten\\service\\TungstenServiceImplTest.java",
      "className": "TungstenServiceImplTest"
    },
    "statements": [
      {
        "type": "DECLARATION",
        "code": "TungstenAnswer listTungstenFirewallPolicyAnswer = mock(TungstenAnswer.class);",
        "line": 1450,
        "locate": "Test Case",
        "locationContext": {
          "methodName": "listTungstenFirewallPolicyTest",
          "methodAnnotations": [
            "@Test"
          ]
        }
      },
      {
        "type": "STUBBING",
        "code": "when(listTungstenFirewallPolicyAnswer.getResult()).thenReturn(true);",
        "line": 1457,
        "locate": "Test Case",
        "locationContext": {
          "methodName": "listTungstenFirewallPolicyTest",
          "methodAnnotations": [
            "@Test"
          ]
        }
      }
    ],
    "pattern_id": 1
  },
  {
    "variableName": "listTungstenFirewallRuleAnswer",
    "variableType": "TungstenAnswer",
    "mockedClass": "TungstenAnswer",
    "isReuseableMock": false,
    "mockPattern": "Creation:\n\u2014 Local Mock Creation in Test Case\n\nStubbing:\n\u2014 Test Case\n\nVerification:\n\u2014 None",
    "classContext": {
      "packageName": "org.apache.cloudstack.network.tungsten.service",
      "filePath": "C:\\java tool\\Apache\\cloudstack\\plugins\\network-elements\\tungsten\\src\\test\\java\\org\\apache\\cloudstack\\network\\tungsten\\service\\TungstenServiceImplTest.java",
      "className": "TungstenServiceImplTest"
    },
    "statements": [
      {
        "type": "DECLARATION",
        "code": "TungstenAnswer listTungstenFirewallRuleAnswer = mock(TungstenAnswer.class);",
        "line": 1467,
        "locate": "Test Case",
        "locationContext": {
          "methodName": "listTungstenFirewallRuleTest",
          "methodAnnotations": [
            "@Test"
          ]
        }
      },
      {
        "type": "STUBBING",
        "code": "when(listTungstenFirewallRuleAnswer.getResult()).thenReturn(true);",
        "line": 1478,
        "locate": "Test Case",
        "locationContext": {
          "methodName": "listTungstenFirewallRuleTest",
          "methodAnnotations": [
            "@Test"
          ]
        }
      }
    ],
    "pattern_id": 1
  },
  {
    "variableName": "listTungstenAddressGroupAnswer",
    "variableType": "TungstenAnswer",
    "mockedClass": "TungstenAnswer",
    "isReuseableMock": false,
    "mockPattern": "Creation:\n\u2014 Local Mock Creation in Test Case\n\nStubbing:\n\u2014 Test Case\n\nVerification:\n\u2014 None",
    "classContext": {
      "packageName": "org.apache.cloudstack.network.tungsten.service",
      "filePath": "C:\\java tool\\Apache\\cloudstack\\plugins\\network-elements\\tungsten\\src\\test\\java\\org\\apache\\cloudstack\\network\\tungsten\\service\\TungstenServiceImplTest.java",
      "className": "TungstenServiceImplTest"
    },
    "statements": [
      {
        "type": "DECLARATION",
        "code": "TungstenAnswer listTungstenAddressGroupAnswer = mock(TungstenAnswer.class);",
        "line": 1497,
        "locate": "Test Case",
        "locationContext": {
          "methodName": "listTungstenAddressGroupTest",
          "methodAnnotations": [
            "@Test"
          ]
        }
      },
      {
        "type": "STUBBING",
        "code": "when(listTungstenAddressGroupAnswer.getResult()).thenReturn(true);",
        "line": 1505,
        "locate": "Test Case",
        "locationContext": {
          "methodName": "listTungstenAddressGroupTest",
          "methodAnnotations": [
            "@Test"
          ]
        }
      }
    ],
    "pattern_id": 1
  },
  {
    "variableName": "listTungstenServiceGroupAnswer",
    "variableType": "TungstenAnswer",
    "mockedClass": "TungstenAnswer",
    "isReuseableMock": false,
    "mockPattern": "Creation:\n\u2014 Local Mock Creation in Test Case\n\nStubbing:\n\u2014 Test Case\n\nVerification:\n\u2014 None",
    "classContext": {
      "packageName": "org.apache.cloudstack.network.tungsten.service",
      "filePath": "C:\\java tool\\Apache\\cloudstack\\plugins\\network-elements\\tungsten\\src\\test\\java\\org\\apache\\cloudstack\\network\\tungsten\\service\\TungstenServiceImplTest.java",
      "className": "TungstenServiceImplTest"
    },
    "statements": [
      {
        "type": "DECLARATION",
        "code": "TungstenAnswer listTungstenServiceGroupAnswer = mock(TungstenAnswer.class);",
        "line": 1516,
        "locate": "Test Case",
        "locationContext": {
          "methodName": "listTungstenServiceGroupTest",
          "methodAnnotations": [
            "@Test"
          ]
        }
      },
      {
        "type": "STUBBING",
        "code": "when(listTungstenServiceGroupAnswer.getResult()).thenReturn(true);",
        "line": 1525,
        "locate": "Test Case",
        "locationContext": {
          "methodName": "listTungstenServiceGroupTest",
          "methodAnnotations": [
            "@Test"
          ]
        }
      }
    ],
    "pattern_id": 1
  },
  {
    "variableName": "tungstenAnswer",
    "variableType": "TungstenAnswer",
    "mockedClass": "TungstenAnswer",
    "isReuseableMock": false,
    "mockPattern": "Creation:\n\u2014 Local Mock Creation in Test Case\n\nStubbing:\n\u2014 Test Case\n\nVerification:\n\u2014 None",
    "classContext": {
      "packageName": "org.apache.cloudstack.network.tungsten.service",
      "filePath": "C:\\java tool\\Apache\\cloudstack\\plugins\\network-elements\\tungsten\\src\\test\\java\\org\\apache\\cloudstack\\network\\tungsten\\service\\TungstenServiceImplTest.java",
      "className": "TungstenServiceImplTest"
    },
    "statements": [
      {
        "type": "DECLARATION",
        "code": "TungstenAnswer tungstenAnswer = mock(TungstenAnswer.class);",
        "line": 1536,
        "locate": "Test Case",
        "locationContext": {
          "methodName": "deleteTungstenApplicationPolicySetTest",
          "methodAnnotations": [
            "@Test"
          ]
        }
      },
      {
        "type": "STUBBING",
        "code": "when(tungstenAnswer.getResult()).thenReturn(true);",
        "line": 1539,
        "locate": "Test Case",
        "locationContext": {
          "methodName": "deleteTungstenApplicationPolicySetTest",
          "methodAnnotations": [
            "@Test"
          ]
        }
      }
    ],
    "pattern_id": 1
  },
  {
    "variableName": "tungstenAnswer",
    "variableType": "TungstenAnswer",
    "mockedClass": "TungstenAnswer",
    "isReuseableMock": false,
    "mockPattern": "Creation:\n\u2014 Local Mock Creation in Test Case\n\nStubbing:\n\u2014 Test Case\n\nVerification:\n\u2014 None",
    "classContext": {
      "packageName": "org.apache.cloudstack.network.tungsten.service",
      "filePath": "C:\\java tool\\Apache\\cloudstack\\plugins\\network-elements\\tungsten\\src\\test\\java\\org\\apache\\cloudstack\\network\\tungsten\\service\\TungstenServiceImplTest.java",
      "className": "TungstenServiceImplTest"
    },
    "statements": [
      {
        "type": "DECLARATION",
        "code": "TungstenAnswer tungstenAnswer = mock(TungstenAnswer.class);",
        "line": 1546,
        "locate": "Test Case",
        "locationContext": {
          "methodName": "deleteTungstenFirewallPolicyTest",
          "methodAnnotations": [
            "@Test"
          ]
        }
      },
      {
        "type": "STUBBING",
        "code": "when(tungstenAnswer.getResult()).thenReturn(true);",
        "line": 1549,
        "locate": "Test Case",
        "locationContext": {
          "methodName": "deleteTungstenFirewallPolicyTest",
          "methodAnnotations": [
            "@Test"
          ]
        }
      }
    ],
    "pattern_id": 1
  },
  {
    "variableName": "tungstenAnswer",
    "variableType": "TungstenAnswer",
    "mockedClass": "TungstenAnswer",
    "isReuseableMock": false,
    "mockPattern": "Creation:\n\u2014 Local Mock Creation in Test Case\n\nStubbing:\n\u2014 Test Case\n\nVerification:\n\u2014 None",
    "classContext": {
      "packageName": "org.apache.cloudstack.network.tungsten.service",
      "filePath": "C:\\java tool\\Apache\\cloudstack\\plugins\\network-elements\\tungsten\\src\\test\\java\\org\\apache\\cloudstack\\network\\tungsten\\service\\TungstenServiceImplTest.java",
      "className": "TungstenServiceImplTest"
    },
    "statements": [
      {
        "type": "DECLARATION",
        "code": "TungstenAnswer tungstenAnswer = mock(TungstenAnswer.class);",
        "line": 1556,
        "locate": "Test Case",
        "locationContext": {
          "methodName": "deleteTungstenFirewallRuleTest",
          "methodAnnotations": [
            "@Test"
          ]
        }
      },
      {
        "type": "STUBBING",
        "code": "when(tungstenAnswer.getResult()).thenReturn(true);",
        "line": 1559,
        "locate": "Test Case",
        "locationContext": {
          "methodName": "deleteTungstenFirewallRuleTest",
          "methodAnnotations": [
            "@Test"
          ]
        }
      }
    ],
    "pattern_id": 1
  },
  {
    "variableName": "tungstenAnswer",
    "variableType": "TungstenAnswer",
    "mockedClass": "TungstenAnswer",
    "isReuseableMock": false,
    "mockPattern": "Creation:\n\u2014 Local Mock Creation in Test Case\n\nStubbing:\n\u2014 Test Case\n\nVerification:\n\u2014 None",
    "classContext": {
      "packageName": "org.apache.cloudstack.network.tungsten.service",
      "filePath": "C:\\java tool\\Apache\\cloudstack\\plugins\\network-elements\\tungsten\\src\\test\\java\\org\\apache\\cloudstack\\network\\tungsten\\service\\TungstenServiceImplTest.java",
      "className": "TungstenServiceImplTest"
    },
    "statements": [
      {
        "type": "DECLARATION",
        "code": "TungstenAnswer tungstenAnswer = mock(TungstenAnswer.class);",
        "line": 1566,
        "locate": "Test Case",
        "locationContext": {
          "methodName": "deleteTungstenServiceGroupTest",
          "methodAnnotations": [
            "@Test"
          ]
        }
      },
      {
        "type": "STUBBING",
        "code": "when(tungstenAnswer.getResult()).thenReturn(true);",
        "line": 1569,
        "locate": "Test Case",
        "locationContext": {
          "methodName": "deleteTungstenServiceGroupTest",
          "methodAnnotations": [
            "@Test"
          ]
        }
      }
    ],
    "pattern_id": 1
  },
  {
    "variableName": "tungstenAnswer",
    "variableType": "TungstenAnswer",
    "mockedClass": "TungstenAnswer",
    "isReuseableMock": false,
    "mockPattern": "Creation:\n\u2014 Local Mock Creation in Test Case\n\nStubbing:\n\u2014 Test Case\n\nVerification:\n\u2014 None",
    "classContext": {
      "packageName": "org.apache.cloudstack.network.tungsten.service",
      "filePath": "C:\\java tool\\Apache\\cloudstack\\plugins\\network-elements\\tungsten\\src\\test\\java\\org\\apache\\cloudstack\\network\\tungsten\\service\\TungstenServiceImplTest.java",
      "className": "TungstenServiceImplTest"
    },
    "statements": [
      {
        "type": "DECLARATION",
        "code": "TungstenAnswer tungstenAnswer = mock(TungstenAnswer.class);",
        "line": 1576,
        "locate": "Test Case",
        "locationContext": {
          "methodName": "deleteTungstenAddressGroupTest",
          "methodAnnotations": [
            "@Test"
          ]
        }
      },
      {
        "type": "STUBBING",
        "code": "when(tungstenAnswer.getResult()).thenReturn(true);",
        "line": 1579,
        "locate": "Test Case",
        "locationContext": {
          "methodName": "deleteTungstenAddressGroupTest",
          "methodAnnotations": [
            "@Test"
          ]
        }
      }
    ],
    "pattern_id": 1
  },
  {
    "variableName": "addNetworkSubnetAnswer",
    "variableType": "TungstenAnswer",
    "mockedClass": "TungstenAnswer",
    "isReuseableMock": false,
    "mockPattern": "Creation:\n\u2014 Local Mock Creation in Test Case\n\nStubbing:\n\u2014 Test Case\n\nVerification:\n\u2014 None",
    "classContext": {
      "packageName": "org.apache.cloudstack.network.tungsten.service",
      "filePath": "C:\\java tool\\Apache\\cloudstack\\plugins\\network-elements\\tungsten\\src\\test\\java\\org\\apache\\cloudstack\\network\\tungsten\\service\\TungstenServiceImplTest.java",
      "className": "TungstenServiceImplTest"
    },
    "statements": [
      {
        "type": "DECLARATION",
        "code": "TungstenAnswer addNetworkSubnetAnswer = mock(TungstenAnswer.class);",
        "line": 1590,
        "locate": "Test Case",
        "locationContext": {
          "methodName": "createSharedNetworkTest",
          "methodAnnotations": [
            "@Test"
          ]
        }
      },
      {
        "type": "STUBBING",
        "code": "when(addNetworkSubnetAnswer.getResult()).thenReturn(true);",
        "line": 1604,
        "locate": "Test Case",
        "locationContext": {
          "methodName": "createSharedNetworkTest",
          "methodAnnotations": [
            "@Test"
          ]
        }
      }
    ],
    "pattern_id": 1
  },
  {
    "variableName": "createTungstenSharedNetworkAnswer",
    "variableType": "TungstenAnswer",
    "mockedClass": "TungstenAnswer",
    "isReuseableMock": false,
    "mockPattern": "Creation:\n\u2014 Local Mock Creation in Test Case\n\nStubbing:\n\u2014 Test Case\n\nVerification:\n\u2014 None",
    "classContext": {
      "packageName": "org.apache.cloudstack.network.tungsten.service",
      "filePath": "C:\\java tool\\Apache\\cloudstack\\plugins\\network-elements\\tungsten\\src\\test\\java\\org\\apache\\cloudstack\\network\\tungsten\\service\\TungstenServiceImplTest.java",
      "className": "TungstenServiceImplTest"
    },
    "statements": [
      {
        "type": "DECLARATION",
        "code": "TungstenAnswer createTungstenSharedNetworkAnswer = mock(TungstenAnswer.class);",
        "line": 1589,
        "locate": "Test Case",
        "locationContext": {
          "methodName": "createSharedNetworkTest",
          "methodAnnotations": [
            "@Test"
          ]
        }
      },
      {
        "type": "STUBBING",
        "code": "when(createTungstenSharedNetworkAnswer.getResult()).thenReturn(true);",
        "line": 1603,
        "locate": "Test Case",
        "locationContext": {
          "methodName": "createSharedNetworkTest",
          "methodAnnotations": [
            "@Test"
          ]
        }
      },
      {
        "type": "STUBBING",
        "code": "when(createTungstenSharedNetworkAnswer.getApiObjectBase()).thenReturn(apiObjectBase);",
        "line": 1623,
        "locate": "Test Case",
        "locationContext": {
          "methodName": "createSharedNetworkTest",
          "methodAnnotations": [
            "@Test"
          ]
        }
      }
    ],
    "pattern_id": 1
  },
  {
    "variableName": "getTungstenNetworkDnsAnswer",
    "variableType": "TungstenAnswer",
    "mockedClass": "TungstenAnswer",
    "isReuseableMock": false,
    "mockPattern": "Creation:\n\u2014 Local Mock Creation in Test Case\n\nStubbing:\n\u2014 Test Case\n\nVerification:\n\u2014 None",
    "classContext": {
      "packageName": "org.apache.cloudstack.network.tungsten.service",
      "filePath": "C:\\java tool\\Apache\\cloudstack\\plugins\\network-elements\\tungsten\\src\\test\\java\\org\\apache\\cloudstack\\network\\tungsten\\service\\TungstenServiceImplTest.java",
      "className": "TungstenServiceImplTest"
    },
    "statements": [
      {
        "type": "DECLARATION",
        "code": "TungstenAnswer getTungstenNetworkDnsAnswer = mock(TungstenAnswer.class);",
        "line": 1591,
        "locate": "Test Case",
        "locationContext": {
          "methodName": "createSharedNetworkTest",
          "methodAnnotations": [
            "@Test"
          ]
        }
      },
      {
        "type": "STUBBING",
        "code": "when(getTungstenNetworkDnsAnswer.getResult()).thenReturn(true);",
        "line": 1605,
        "locate": "Test Case",
        "locationContext": {
          "methodName": "createSharedNetworkTest",
          "methodAnnotations": [
            "@Test"
          ]
        }
      },
      {
        "type": "STUBBING",
        "code": "when(getTungstenNetworkDnsAnswer.getDetails()).thenReturn(\"192.168.1.150\");",
        "line": 1618,
        "locate": "Test Case",
        "locationContext": {
          "methodName": "createSharedNetworkTest",
          "methodAnnotations": [
            "@Test"
          ]
        }
      }
    ],
    "pattern_id": 1
  },
  {
    "variableName": "getTungstenSecurityGroupAnswer",
    "variableType": "TungstenAnswer",
    "mockedClass": "TungstenAnswer",
    "isReuseableMock": false,
    "mockPattern": "Creation:\n\u2014 Local Mock Creation in Test Case\n\nStubbing:\n\u2014 Test Case\n\nVerification:\n\u2014 None",
    "classContext": {
      "packageName": "org.apache.cloudstack.network.tungsten.service",
      "filePath": "C:\\java tool\\Apache\\cloudstack\\plugins\\network-elements\\tungsten\\src\\test\\java\\org\\apache\\cloudstack\\network\\tungsten\\service\\TungstenServiceImplTest.java",
      "className": "TungstenServiceImplTest"
    },
    "statements": [
      {
        "type": "DECLARATION",
        "code": "TungstenAnswer getTungstenSecurityGroupAnswer = mock(TungstenAnswer.class);",
        "line": 1636,
        "locate": "Test Case",
        "locationContext": {
          "methodName": "addTungstenVmSecurityGroupTest",
          "methodAnnotations": [
            "@Test"
          ]
        }
      },
      {
        "type": "STUBBING",
        "code": "when(getTungstenSecurityGroupAnswer.getResult()).thenReturn(true);",
        "line": 1651,
        "locate": "Test Case",
        "locationContext": {
          "methodName": "addTungstenVmSecurityGroupTest",
          "methodAnnotations": [
            "@Test"
          ]
        }
      },
      {
        "type": "STUBBING",
        "code": "when(getTungstenSecurityGroupAnswer.getApiObjectBase()).thenReturn(securityGroup);",
        "line": 1654,
        "locate": "Test Case",
        "locationContext": {
          "methodName": "addTungstenVmSecurityGroupTest",
          "methodAnnotations": [
            "@Test"
          ]
        }
      }
    ],
    "pattern_id": 1
  },
  {
    "variableName": "addTungstenSecurityGroupRuleAnswer",
    "variableType": "TungstenAnswer",
    "mockedClass": "TungstenAnswer",
    "isReuseableMock": false,
    "mockPattern": "Creation:\n\u2014 Local Mock Creation in Test Case\n\nStubbing:\n\u2014 Test Case\n\nVerification:\n\u2014 None",
    "classContext": {
      "packageName": "org.apache.cloudstack.network.tungsten.service",
      "filePath": "C:\\java tool\\Apache\\cloudstack\\plugins\\network-elements\\tungsten\\src\\test\\java\\org\\apache\\cloudstack\\network\\tungsten\\service\\TungstenServiceImplTest.java",
      "className": "TungstenServiceImplTest"
    },
    "statements": [
      {
        "type": "DECLARATION",
        "code": "TungstenAnswer addTungstenSecurityGroupRuleAnswer = mock(TungstenAnswer.class);",
        "line": 1642,
        "locate": "Test Case",
        "locationContext": {
          "methodName": "addTungstenVmSecurityGroupTest",
          "methodAnnotations": [
            "@Test"
          ]
        }
      },
      {
        "type": "STUBBING",
        "code": "when(addTungstenSecurityGroupRuleAnswer.getResult()).thenReturn(true);",
        "line": 1653,
        "locate": "Test Case",
        "locationContext": {
          "methodName": "addTungstenVmSecurityGroupTest",
          "methodAnnotations": [
            "@Test"
          ]
        }
      }
    ],
    "pattern_id": 1
  },
  {
    "variableName": "addTungstenVmToSecurityGroupAnswer",
    "variableType": "TungstenAnswer",
    "mockedClass": "TungstenAnswer",
    "isReuseableMock": false,
    "mockPattern": "Creation:\n\u2014 Local Mock Creation in Test Case\n\nStubbing:\n\u2014 Test Case\n\nVerification:\n\u2014 None",
    "classContext": {
      "packageName": "org.apache.cloudstack.network.tungsten.service",
      "filePath": "C:\\java tool\\Apache\\cloudstack\\plugins\\network-elements\\tungsten\\src\\test\\java\\org\\apache\\cloudstack\\network\\tungsten\\service\\TungstenServiceImplTest.java",
      "className": "TungstenServiceImplTest"
    },
    "statements": [
      {
        "type": "DECLARATION",
        "code": "TungstenAnswer addTungstenVmToSecurityGroupAnswer = mock(TungstenAnswer.class);",
        "line": 1637,
        "locate": "Test Case",
        "locationContext": {
          "methodName": "addTungstenVmSecurityGroupTest",
          "methodAnnotations": [
            "@Test"
          ]
        }
      },
      {
        "type": "STUBBING",
        "code": "when(addTungstenVmToSecurityGroupAnswer.getResult()).thenReturn(true);",
        "line": 1652,
        "locate": "Test Case",
        "locationContext": {
          "methodName": "addTungstenVmSecurityGroupTest",
          "methodAnnotations": [
            "@Test"
          ]
        }
      }
    ],
    "pattern_id": 1
  },
  {
    "variableName": "removeTungstenSecurityGroupRuleAnswer",
    "variableType": "TungstenAnswer",
    "mockedClass": "TungstenAnswer",
    "isReuseableMock": false,
    "mockPattern": "Creation:\n\u2014 Local Mock Creation in Test Case\n\nStubbing:\n\u2014 Test Case\n\nVerification:\n\u2014 None",
    "classContext": {
      "packageName": "org.apache.cloudstack.network.tungsten.service",
      "filePath": "C:\\java tool\\Apache\\cloudstack\\plugins\\network-elements\\tungsten\\src\\test\\java\\org\\apache\\cloudstack\\network\\tungsten\\service\\TungstenServiceImplTest.java",
      "className": "TungstenServiceImplTest"
    },
    "statements": [
      {
        "type": "DECLARATION",
        "code": "TungstenAnswer removeTungstenSecurityGroupRuleAnswer = mock(TungstenAnswer.class);",
        "line": 1676,
        "locate": "Test Case",
        "locationContext": {
          "methodName": "removeTungstenVmSecurityGroupTest",
          "methodAnnotations": [
            "@Test"
          ]
        }
      },
      {
        "type": "STUBBING",
        "code": "when(removeTungstenSecurityGroupRuleAnswer.getResult()).thenReturn(true);",
        "line": 1685,
        "locate": "Test Case",
        "locationContext": {
          "methodName": "removeTungstenVmSecurityGroupTest",
          "methodAnnotations": [
            "@Test"
          ]
        }
      }
    ],
    "pattern_id": 1
  },
  {
    "variableName": "removeTungstenVmFromSecurityGroupAnswer",
    "variableType": "TungstenAnswer",
    "mockedClass": "TungstenAnswer",
    "isReuseableMock": false,
    "mockPattern": "Creation:\n\u2014 Local Mock Creation in Test Case\n\nStubbing:\n\u2014 Test Case\n\nVerification:\n\u2014 None",
    "classContext": {
      "packageName": "org.apache.cloudstack.network.tungsten.service",
      "filePath": "C:\\java tool\\Apache\\cloudstack\\plugins\\network-elements\\tungsten\\src\\test\\java\\org\\apache\\cloudstack\\network\\tungsten\\service\\TungstenServiceImplTest.java",
      "className": "TungstenServiceImplTest"
    },
    "statements": [
      {
        "type": "DECLARATION",
        "code": "TungstenAnswer removeTungstenVmFromSecurityGroupAnswer = mock(TungstenAnswer.class);",
        "line": 1673,
        "locate": "Test Case",
        "locationContext": {
          "methodName": "removeTungstenVmSecurityGroupTest",
          "methodAnnotations": [
            "@Test"
          ]
        }
      },
      {
        "type": "STUBBING",
        "code": "when(removeTungstenVmFromSecurityGroupAnswer.getResult()).thenReturn(true);",
        "line": 1684,
        "locate": "Test Case",
        "locationContext": {
          "methodName": "removeTungstenVmSecurityGroupTest",
          "methodAnnotations": [
            "@Test"
          ]
        }
      }
    ],
    "pattern_id": 1
  },
  {
    "variableName": "tungstenAnswer",
    "variableType": "TungstenAnswer",
    "mockedClass": "TungstenAnswer",
    "isReuseableMock": false,
    "mockPattern": "Creation:\n\u2014 Local Mock Creation in Test Case\n\nStubbing:\n\u2014 Test Case\n\nVerification:\n\u2014 None",
    "classContext": {
      "packageName": "org.apache.cloudstack.network.tungsten.service",
      "filePath": "C:\\java tool\\Apache\\cloudstack\\plugins\\network-elements\\tungsten\\src\\test\\java\\org\\apache\\cloudstack\\network\\tungsten\\service\\TungstenServiceImplTest.java",
      "className": "TungstenServiceImplTest"
    },
    "statements": [
      {
        "type": "DECLARATION",
        "code": "TungstenAnswer tungstenAnswer = mock(TungstenAnswer.class);",
        "line": 1703,
        "locate": "Test Case",
        "locationContext": {
          "methodName": "createRoutingLogicalRouterTest",
          "methodAnnotations": [
            "@Test"
          ]
        }
      },
      {
        "type": "STUBBING",
        "code": "when(tungstenAnswer.getResult()).thenReturn(true);",
        "line": 1711,
        "locate": "Test Case",
        "locationContext": {
          "methodName": "createRoutingLogicalRouterTest",
          "methodAnnotations": [
            "@Test"
          ]
        }
      },
      {
        "type": "STUBBING",
        "code": "when(tungstenAnswer.getTungstenModel()).thenReturn(tungstenLogicalRouter);",
        "line": 1712,
        "locate": "Test Case",
        "locationContext": {
          "methodName": "createRoutingLogicalRouterTest",
          "methodAnnotations": [
            "@Test"
          ]
        }
      }
    ],
    "pattern_id": 1
  },
  {
    "variableName": "tungstenAnswer",
    "variableType": "TungstenAnswer",
    "mockedClass": "TungstenAnswer",
    "isReuseableMock": false,
    "mockPattern": "Creation:\n\u2014 Local Mock Creation in Test Case\n\nStubbing:\n\u2014 Test Case\n\nVerification:\n\u2014 None",
    "classContext": {
      "packageName": "org.apache.cloudstack.network.tungsten.service",
      "filePath": "C:\\java tool\\Apache\\cloudstack\\plugins\\network-elements\\tungsten\\src\\test\\java\\org\\apache\\cloudstack\\network\\tungsten\\service\\TungstenServiceImplTest.java",
      "className": "TungstenServiceImplTest"
    },
    "statements": [
      {
        "type": "DECLARATION",
        "code": "TungstenAnswer tungstenAnswer = mock(TungstenAnswer.class);",
        "line": 1722,
        "locate": "Test Case",
        "locationContext": {
          "methodName": "addNetworkGatewayToLogicalRouterTest",
          "methodAnnotations": [
            "@Test"
          ]
        }
      },
      {
        "type": "STUBBING",
        "code": "when(tungstenAnswer.getResult()).thenReturn(true);",
        "line": 1732,
        "locate": "Test Case",
        "locationContext": {
          "methodName": "addNetworkGatewayToLogicalRouterTest",
          "methodAnnotations": [
            "@Test"
          ]
        }
      },
      {
        "type": "STUBBING",
        "code": "when(tungstenAnswer.getTungstenModel()).thenReturn(tungstenLogicalRouter);",
        "line": 1733,
        "locate": "Test Case",
        "locationContext": {
          "methodName": "addNetworkGatewayToLogicalRouterTest",
          "methodAnnotations": [
            "@Test"
          ]
        }
      }
    ],
    "pattern_id": 1
  },
  {
    "variableName": "tungstenAnswer",
    "variableType": "TungstenAnswer",
    "mockedClass": "TungstenAnswer",
    "isReuseableMock": false,
    "mockPattern": "Creation:\n\u2014 Local Mock Creation in Test Case\n\nStubbing:\n\u2014 Test Case\n\nVerification:\n\u2014 None",
    "classContext": {
      "packageName": "org.apache.cloudstack.network.tungsten.service",
      "filePath": "C:\\java tool\\Apache\\cloudstack\\plugins\\network-elements\\tungsten\\src\\test\\java\\org\\apache\\cloudstack\\network\\tungsten\\service\\TungstenServiceImplTest.java",
      "className": "TungstenServiceImplTest"
    },
    "statements": [
      {
        "type": "DECLARATION",
        "code": "TungstenAnswer tungstenAnswer = mock(TungstenAnswer.class);",
        "line": 1742,
        "locate": "Test Case",
        "locationContext": {
          "methodName": "listRoutingLogicalRouterTest",
          "methodAnnotations": [
            "@Test"
          ]
        }
      },
      {
        "type": "STUBBING",
        "code": "when(tungstenAnswer.getResult()).thenReturn(true);",
        "line": 1750,
        "locate": "Test Case",
        "locationContext": {
          "methodName": "listRoutingLogicalRouterTest",
          "methodAnnotations": [
            "@Test"
          ]
        }
      },
      {
        "type": "STUBBING",
        "code": "when(tungstenAnswer.getTungstenModelList()).thenReturn(List.of(tungstenLogicalRouter));",
        "line": 1751,
        "locate": "Test Case",
        "locationContext": {
          "methodName": "listRoutingLogicalRouterTest",
          "methodAnnotations": [
            "@Test"
          ]
        }
      }
    ],
    "pattern_id": 1
  },
  {
    "variableName": "tungstenAnswer",
    "variableType": "TungstenAnswer",
    "mockedClass": "TungstenAnswer",
    "isReuseableMock": false,
    "mockPattern": "Creation:\n\u2014 Local Mock Creation in Test Case\n\nStubbing:\n\u2014 Test Case\n\nVerification:\n\u2014 None",
    "classContext": {
      "packageName": "org.apache.cloudstack.network.tungsten.service",
      "filePath": "C:\\java tool\\Apache\\cloudstack\\plugins\\network-elements\\tungsten\\src\\test\\java\\org\\apache\\cloudstack\\network\\tungsten\\service\\TungstenServiceImplTest.java",
      "className": "TungstenServiceImplTest"
    },
    "statements": [
      {
        "type": "DECLARATION",
        "code": "TungstenAnswer tungstenAnswer = mock(TungstenAnswer.class);",
        "line": 1761,
        "locate": "Test Case",
        "locationContext": {
          "methodName": "removeNetworkGatewayFromLogicalRouterTest",
          "methodAnnotations": [
            "@Test"
          ]
        }
      },
      {
        "type": "STUBBING",
        "code": "when(tungstenAnswer.getResult()).thenReturn(true);",
        "line": 1772,
        "locate": "Test Case",
        "locationContext": {
          "methodName": "removeNetworkGatewayFromLogicalRouterTest",
          "methodAnnotations": [
            "@Test"
          ]
        }
      },
      {
        "type": "STUBBING",
        "code": "when(tungstenAnswer.getTungstenModel()).thenReturn(tungstenLogicalRouter);",
        "line": 1773,
        "locate": "Test Case",
        "locationContext": {
          "methodName": "removeNetworkGatewayFromLogicalRouterTest",
          "methodAnnotations": [
            "@Test"
          ]
        }
      }
    ],
    "pattern_id": 1
  },
  {
    "variableName": "tungstenAnswer",
    "variableType": "TungstenAnswer",
    "mockedClass": "TungstenAnswer",
    "isReuseableMock": false,
    "mockPattern": "Creation:\n\u2014 Local Mock Creation in Test Case\n\nStubbing:\n\u2014 Test Case\n\nVerification:\n\u2014 None",
    "classContext": {
      "packageName": "org.apache.cloudstack.network.tungsten.service",
      "filePath": "C:\\java tool\\Apache\\cloudstack\\plugins\\network-elements\\tungsten\\src\\test\\java\\org\\apache\\cloudstack\\network\\tungsten\\service\\TungstenServiceImplTest.java",
      "className": "TungstenServiceImplTest"
    },
    "statements": [
      {
        "type": "DECLARATION",
        "code": "TungstenAnswer tungstenAnswer = mock(TungstenAnswer.class);",
        "line": 1782,
        "locate": "Test Case",
        "locationContext": {
          "methodName": "deleteLogicalRouterTest",
          "methodAnnotations": [
            "@Test"
          ]
        }
      },
      {
        "type": "STUBBING",
        "code": "when(tungstenAnswer.getResult()).thenReturn(true);",
        "line": 1785,
        "locate": "Test Case",
        "locationContext": {
          "methodName": "deleteLogicalRouterTest",
          "methodAnnotations": [
            "@Test"
          ]
        }
      }
    ],
    "pattern_id": 1
  }
]