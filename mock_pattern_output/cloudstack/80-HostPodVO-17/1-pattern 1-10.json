[
  {
    "variableName": "hostPodVO",
    "variableType": "HostPodVO",
    "mockedClass": "HostPodVO",
    "isReuseableMock": "Fully Localized",
    "mockPattern": "Creation:\n\u2014 Local Mock Creation in Test Case\n\nStubbing:\n\u2014 Test Case\n\nVerification:\n\u2014 None",
    "classContext": {
      "packageName": "org.apache.cloudstack.network.tungsten.service",
      "filePath": "C:\\java tool\\Apache\\cloudstack\\plugins\\network-elements\\tungsten\\src\\test\\java\\org\\apache\\cloudstack\\network\\tungsten\\service\\TungstenServiceImplTest.java",
      "className": "TungstenServiceImplTest"
    },
    "statements": [
      {
        "type": "DECLARATION",
        "code": "HostPodVO hostPodVO = mock(HostPodVO.class);",
        "line": 421,
        "locate": "Test Case",
        "locationContext": {
          "methodName": "addManagementNetworkSubnetTest",
          "methodAnnotations": [
            "@Test"
          ]
        }
      },
      {
        "type": "STUBBING",
        "code": "when(hostPodVO.getDescription()).thenReturn(\"192.168.100.100-192.168.100.200\");",
        "line": 427,
        "locate": "Test Case",
        "locationContext": {
          "methodName": "addManagementNetworkSubnetTest",
          "methodAnnotations": [
            "@Test"
          ]
        }
      }
    ],
    "pattern_id": 1
  },
  {
    "variableName": "hostPodVO",
    "variableType": "HostPodVO",
    "mockedClass": "HostPodVO",
    "isReuseableMock": "Fully Localized",
    "mockPattern": "Creation:\n\u2014 Local Mock Creation in Test Case\n\nStubbing:\n\u2014 Test Case\n\nVerification:\n\u2014 None",
    "classContext": {
      "packageName": "org.apache.cloudstack.network.tungsten.service",
      "filePath": "C:\\java tool\\Apache\\cloudstack\\plugins\\network-elements\\tungsten\\src\\test\\java\\org\\apache\\cloudstack\\network\\tungsten\\service\\TungstenServiceImplTest.java",
      "className": "TungstenServiceImplTest"
    },
    "statements": [
      {
        "type": "DECLARATION",
        "code": "HostPodVO hostPodVO = mock(HostPodVO.class);",
        "line": 469,
        "locate": "Test Case",
        "locationContext": {
          "methodName": "removeManagementNetworkSubnetTest",
          "methodAnnotations": [
            "@Test"
          ]
        }
      },
      {
        "type": "STUBBING",
        "code": "when(hostPodVO.getDescription()).thenReturn(\"192.168.100.100-192.168.100.200\");",
        "line": 475,
        "locate": "Test Case",
        "locationContext": {
          "methodName": "removeManagementNetworkSubnetTest",
          "methodAnnotations": [
            "@Test"
          ]
        }
      }
    ],
    "pattern_id": 1
  },
  {
    "variableName": "hostPodVO",
    "variableType": "HostPodVO",
    "mockedClass": "HostPodVO",
    "isReuseableMock": "Fully Localized",
    "mockPattern": "Creation:\n\u2014 Local Mock Creation in Test Case\n\nStubbing:\n\u2014 Test Case\n\nVerification:\n\u2014 None",
    "classContext": {
      "packageName": "com.cloud.configuration",
      "filePath": "C:\\java tool\\Apache\\cloudstack\\server\\src\\test\\java\\com\\cloud\\configuration\\ConfigurationManagerTest.java",
      "className": "ConfigurationManagerTest"
    },
    "statements": [
      {
        "type": "DECLARATION",
        "code": "HostPodVO hostPodVO = Mockito.mock(HostPodVO.class);",
        "line": 634,
        "locate": "Test Case",
        "locationContext": {
          "methodName": "checkIfPodIsDeletableSuccessTest",
          "methodAnnotations": [
            "@Test"
          ]
        }
      },
      {
        "type": "STUBBING",
        "code": "Mockito.when(hostPodVO.getDataCenterId()).thenReturn(new Random().nextLong());",
        "line": 635,
        "locate": "Test Case",
        "locationContext": {
          "methodName": "checkIfPodIsDeletableSuccessTest",
          "methodAnnotations": [
            "@Test"
          ]
        }
      }
    ],
    "pattern_id": 1
  },
  {
    "variableName": "hostPodVO",
    "variableType": "HostPodVO",
    "mockedClass": "HostPodVO",
    "isReuseableMock": "Fully Localized",
    "mockPattern": "Creation:\n\u2014 Local Mock Creation in Test Case\n\nStubbing:\n\u2014 Test Case\n\nVerification:\n\u2014 None",
    "classContext": {
      "packageName": "com.cloud.configuration",
      "filePath": "C:\\java tool\\Apache\\cloudstack\\server\\src\\test\\java\\com\\cloud\\configuration\\ConfigurationManagerTest.java",
      "className": "ConfigurationManagerTest"
    },
    "statements": [
      {
        "type": "DECLARATION",
        "code": "HostPodVO hostPodVO = Mockito.mock(HostPodVO.class);",
        "line": 649,
        "locate": "Test Case",
        "locationContext": {
          "methodName": "checkIfPodIsDeletableFailureOnPrivateIpAddressTest",
          "methodAnnotations": [
            "@Test"
          ]
        }
      },
      {
        "type": "STUBBING",
        "code": "Mockito.when(hostPodVO.getDataCenterId()).thenReturn(new Random().nextLong());",
        "line": 650,
        "locate": "Test Case",
        "locationContext": {
          "methodName": "checkIfPodIsDeletableFailureOnPrivateIpAddressTest",
          "methodAnnotations": [
            "@Test"
          ]
        }
      }
    ],
    "pattern_id": 1
  },
  {
    "variableName": "hostPodVO",
    "variableType": "HostPodVO",
    "mockedClass": "HostPodVO",
    "isReuseableMock": "Fully Localized",
    "mockPattern": "Creation:\n\u2014 Local Mock Creation in Test Case\n\nStubbing:\n\u2014 Test Case\n\nVerification:\n\u2014 None",
    "classContext": {
      "packageName": "com.cloud.configuration",
      "filePath": "C:\\java tool\\Apache\\cloudstack\\server\\src\\test\\java\\com\\cloud\\configuration\\ConfigurationManagerTest.java",
      "className": "ConfigurationManagerTest"
    },
    "statements": [
      {
        "type": "DECLARATION",
        "code": "HostPodVO hostPodVO = Mockito.mock(HostPodVO.class);",
        "line": 664,
        "locate": "Test Case",
        "locationContext": {
          "methodName": "checkIfPodIsDeletableFailureOnVolumeTest",
          "methodAnnotations": [
            "@Test"
          ]
        }
      },
      {
        "type": "STUBBING",
        "code": "Mockito.when(hostPodVO.getDataCenterId()).thenReturn(new Random().nextLong());",
        "line": 665,
        "locate": "Test Case",
        "locationContext": {
          "methodName": "checkIfPodIsDeletableFailureOnVolumeTest",
          "methodAnnotations": [
            "@Test"
          ]
        }
      }
    ],
    "pattern_id": 1
  },
  {
    "variableName": "hostPodVO",
    "variableType": "HostPodVO",
    "mockedClass": "HostPodVO",
    "isReuseableMock": "Fully Localized",
    "mockPattern": "Creation:\n\u2014 Local Mock Creation in Test Case\n\nStubbing:\n\u2014 Test Case\n\nVerification:\n\u2014 None",
    "classContext": {
      "packageName": "com.cloud.configuration",
      "filePath": "C:\\java tool\\Apache\\cloudstack\\server\\src\\test\\java\\com\\cloud\\configuration\\ConfigurationManagerTest.java",
      "className": "ConfigurationManagerTest"
    },
    "statements": [
      {
        "type": "DECLARATION",
        "code": "HostPodVO hostPodVO = Mockito.mock(HostPodVO.class);",
        "line": 682,
        "locate": "Test Case",
        "locationContext": {
          "methodName": "checkIfPodIsDeletableFailureOnHostTest",
          "methodAnnotations": [
            "@Test"
          ]
        }
      },
      {
        "type": "STUBBING",
        "code": "Mockito.when(hostPodVO.getDataCenterId()).thenReturn(new Random().nextLong());",
        "line": 683,
        "locate": "Test Case",
        "locationContext": {
          "methodName": "checkIfPodIsDeletableFailureOnHostTest",
          "methodAnnotations": [
            "@Test"
          ]
        }
      }
    ],
    "pattern_id": 1
  },
  {
    "variableName": "hostPodVO",
    "variableType": "HostPodVO",
    "mockedClass": "HostPodVO",
    "isReuseableMock": "Fully Localized",
    "mockPattern": "Creation:\n\u2014 Local Mock Creation in Test Case\n\nStubbing:\n\u2014 Test Case\n\nVerification:\n\u2014 None",
    "classContext": {
      "packageName": "com.cloud.configuration",
      "filePath": "C:\\java tool\\Apache\\cloudstack\\server\\src\\test\\java\\com\\cloud\\configuration\\ConfigurationManagerTest.java",
      "className": "ConfigurationManagerTest"
    },
    "statements": [
      {
        "type": "DECLARATION",
        "code": "HostPodVO hostPodVO = Mockito.mock(HostPodVO.class);",
        "line": 700,
        "locate": "Test Case",
        "locationContext": {
          "methodName": "checkIfPodIsDeletableFailureOnVmInstanceTest",
          "methodAnnotations": [
            "@Test"
          ]
        }
      },
      {
        "type": "STUBBING",
        "code": "Mockito.when(hostPodVO.getDataCenterId()).thenReturn(new Random().nextLong());",
        "line": 701,
        "locate": "Test Case",
        "locationContext": {
          "methodName": "checkIfPodIsDeletableFailureOnVmInstanceTest",
          "methodAnnotations": [
            "@Test"
          ]
        }
      }
    ],
    "pattern_id": 1
  },
  {
    "variableName": "hostPodVO",
    "variableType": "HostPodVO",
    "mockedClass": "HostPodVO",
    "isReuseableMock": "Fully Localized",
    "mockPattern": "Creation:\n\u2014 Local Mock Creation in Test Case\n\nStubbing:\n\u2014 Test Case\n\nVerification:\n\u2014 None",
    "classContext": {
      "packageName": "com.cloud.configuration",
      "filePath": "C:\\java tool\\Apache\\cloudstack\\server\\src\\test\\java\\com\\cloud\\configuration\\ConfigurationManagerTest.java",
      "className": "ConfigurationManagerTest"
    },
    "statements": [
      {
        "type": "DECLARATION",
        "code": "HostPodVO hostPodVO = Mockito.mock(HostPodVO.class);",
        "line": 718,
        "locate": "Test Case",
        "locationContext": {
          "methodName": "checkIfPodIsDeletableFailureOnClusterTest",
          "methodAnnotations": [
            "@Test"
          ]
        }
      },
      {
        "type": "STUBBING",
        "code": "Mockito.when(hostPodVO.getDataCenterId()).thenReturn(new Random().nextLong());",
        "line": 719,
        "locate": "Test Case",
        "locationContext": {
          "methodName": "checkIfPodIsDeletableFailureOnClusterTest",
          "methodAnnotations": [
            "@Test"
          ]
        }
      }
    ],
    "pattern_id": 1
  },
  {
    "variableName": "podVo",
    "variableType": "HostPodVO",
    "mockedClass": "HostPodVO",
    "isReuseableMock": "Fully Localized",
    "mockPattern": "Creation:\n\u2014 Local Mock Creation in Test Case\n\nStubbing:\n\u2014 Test Case\n\nVerification:\n\u2014 None",
    "classContext": {
      "packageName": "com.cloud.deploy",
      "filePath": "C:\\java tool\\Apache\\cloudstack\\server\\src\\test\\java\\com\\cloud\\deploy\\DeploymentPlanningManagerImplTest.java",
      "className": "DeploymentPlanningManagerImplTest"
    },
    "statements": [
      {
        "type": "DECLARATION",
        "code": "HostPodVO podVo = Mockito.mock(HostPodVO.class);",
        "line": 771,
        "locate": "Test Case",
        "locationContext": {
          "methodName": "findSuitablePoolsForVolumesTest",
          "methodAnnotations": [
            "@Test"
          ]
        }
      },
      {
        "type": "STUBBING",
        "code": "Mockito.when(podVo.getAllocationState()).thenReturn(AllocationState.Enabled);",
        "line": 772,
        "locate": "Test Case",
        "locationContext": {
          "methodName": "findSuitablePoolsForVolumesTest",
          "methodAnnotations": [
            "@Test"
          ]
        }
      }
    ],
    "pattern_id": 1
  },
  {
    "variableName": "hostPodVO",
    "variableType": "HostPodVO",
    "mockedClass": "HostPodVO",
    "isReuseableMock": "Fully Localized",
    "mockPattern": "Creation:\n\u2014 Local Mock Creation in Test Case\n\nStubbing:\n\u2014 Test Case\n\nVerification:\n\u2014 None",
    "classContext": {
      "packageName": "org.apache.cloudstack.network.router.deployment",
      "filePath": "C:\\java tool\\Apache\\cloudstack\\server\\src\\test\\java\\org\\apache\\cloudstack\\network\\router\\deployment\\RouterDeploymentDefinitionTest.java",
      "className": "RouterDeploymentDefinitionTest"
    },
    "statements": [
      {
        "type": "DECLARATION",
        "code": "final HostPodVO hostPodVO = mock(HostPodVO.class);",
        "line": 451,
        "locate": "Test Case",
        "locationContext": {
          "methodName": "testListByDataCenterIdVMTypeAndStates",
          "methodAnnotations": [
            "@Test"
          ]
        }
      },
      {
        "type": "STUBBING",
        "code": "when(hostPodVO.getId()).thenReturn(POD_ID1);",
        "line": 453,
        "locate": "Test Case",
        "locationContext": {
          "methodName": "testListByDataCenterIdVMTypeAndStates",
          "methodAnnotations": [
            "@Test"
          ]
        }
      },
      {
        "type": "STUBBING",
        "code": "when(hostPodVO.getDataCenterId()).thenReturn(DATA_CENTER_ID);",
        "line": 454,
        "locate": "Test Case",
        "locationContext": {
          "methodName": "testListByDataCenterIdVMTypeAndStates",
          "methodAnnotations": [
            "@Test"
          ]
        }
      }
    ],
    "pattern_id": 1
  }
]