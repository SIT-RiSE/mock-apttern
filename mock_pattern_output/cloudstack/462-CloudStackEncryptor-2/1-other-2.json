[
  {
    "variableName": "oldEncryptor",
    "variableType": "CloudStackEncryptor",
    "mockedClass": "CloudStackEncryptor",
    "isReuseableMock": null,
    "mockPattern": "Creation:\n\u2014 Attribute Mock Creation\n\u2014 Global Init in @Before\n\nStubbing:\n\u2014 @Before\n\nVerification:\n\u2014 Test Case",
    "classContext": {
      "packageName": "com.cloud.utils.crypt",
      "filePath": "C:\\java tool\\Apache\\cloudstack\\framework\\db\\src\\test\\java\\com\\cloud\\utils\\crypt\\EncryptionSecretKeyChangerTest.java",
      "className": "EncryptionSecretKeyChangerTest"
    },
    "statements": [
      {
        "type": "FIELD_MOCK_CREATION",
        "code": "@Mock\r\nCloudStackEncryptor oldEncryptor;",
        "line": 33,
        "locate": "Attribute",
        "locationContext": {
          "methodName": "[FieldDeclaration]",
          "methodAnnotations": [
            "@Mock"
          ]
        }
      },
      {
        "type": "ASSIGNMENT",
        "code": "oldEncryptor = Mockito.mock(CloudStackEncryptor.class);",
        "line": 45,
        "locate": "@Before",
        "locationContext": {
          "methodName": "setUp",
          "methodAnnotations": [
            "@Before"
          ]
        }
      },
      {
        "type": "STUBBING",
        "code": "Mockito.when(oldEncryptor.decrypt(encryptedValue)).thenReturn(plainText);",
        "line": 51,
        "locate": "@Before",
        "locationContext": {
          "methodName": "setUp",
          "methodAnnotations": [
            "@Before"
          ]
        }
      },
      {
        "type": "VERIFICATION",
        "code": "Mockito.verify(oldEncryptor).decrypt(encryptedValue);",
        "line": 60,
        "locate": "Test Case",
        "locationContext": {
          "methodName": "migrateValueTest",
          "methodAnnotations": [
            "@Test"
          ]
        }
      }
    ],
    "pattern_id": 50
  },
  {
    "variableName": "newEncryptor",
    "variableType": "CloudStackEncryptor",
    "mockedClass": "CloudStackEncryptor",
    "isReuseableMock": null,
    "mockPattern": "Creation:\n\u2014 Attribute Mock Creation\n\u2014 Global Init in @Before\n\nStubbing:\n\u2014 @Before\n\nVerification:\n\u2014 Test Case",
    "classContext": {
      "packageName": "com.cloud.utils.crypt",
      "filePath": "C:\\java tool\\Apache\\cloudstack\\framework\\db\\src\\test\\java\\com\\cloud\\utils\\crypt\\EncryptionSecretKeyChangerTest.java",
      "className": "EncryptionSecretKeyChangerTest"
    },
    "statements": [
      {
        "type": "FIELD_MOCK_CREATION",
        "code": "@Mock\r\nCloudStackEncryptor newEncryptor;",
        "line": 35,
        "locate": "Attribute",
        "locationContext": {
          "methodName": "[FieldDeclaration]",
          "methodAnnotations": [
            "@Mock"
          ]
        }
      },
      {
        "type": "ASSIGNMENT",
        "code": "newEncryptor = Mockito.mock(CloudStackEncryptor.class);",
        "line": 46,
        "locate": "@Before",
        "locationContext": {
          "methodName": "setUp",
          "methodAnnotations": [
            "@Before"
          ]
        }
      },
      {
        "type": "STUBBING",
        "code": "Mockito.when(newEncryptor.encrypt(plainText)).thenReturn(newEncryptedValue);",
        "line": 52,
        "locate": "@Before",
        "locationContext": {
          "methodName": "setUp",
          "methodAnnotations": [
            "@Before"
          ]
        }
      },
      {
        "type": "VERIFICATION",
        "code": "Mockito.verify(newEncryptor).encrypt(plainText);",
        "line": 61,
        "locate": "Test Case",
        "locationContext": {
          "methodName": "migrateValueTest",
          "methodAnnotations": [
            "@Test"
          ]
        }
      }
    ],
    "pattern_id": 50
  }
]