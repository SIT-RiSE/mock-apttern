[
  {
    "variableName": "pool",
    "variableType": "StoragePool",
    "mockedClass": "StoragePool",
    "isReuseableMock": false,
    "mockPattern": "Creation:\n\u2014 Local Mock Creation in @Before\n\nStubbing:\n\u2014 None\n\nVerification:\n\u2014 None",
    "classContext": {
      "packageName": "org.apache.cloudstack.api.agent.test",
      "filePath": "C:\\java tool\\Apache\\cloudstack\\core\\src\\test\\java\\org\\apache\\cloudstack\\api\\agent\\test\\BackupSnapshotAnswerTest.java",
      "className": "BackupSnapshotAnswerTest"
    },
    "statements": [
      {
        "type": "DECLARATION",
        "code": "StoragePool pool = Mockito.mock(StoragePool.class);",
        "line": 40,
        "locate": "@Before",
        "locationContext": {
          "methodName": "setUp",
          "methodAnnotations": [
            "@Before"
          ]
        }
      }
    ],
    "pattern_id": 18
  },
  {
    "variableName": "storagePoolMock",
    "variableType": "StoragePool",
    "mockedClass": "StoragePool",
    "isReuseableMock": false,
    "mockPattern": "Creation:\n\u2014 Attribute Mock Creation\n\nStubbing:\n\u2014 @Before\n\u2014 Test Case\n\nVerification:\n\u2014 Test Case",
    "classContext": {
      "packageName": "com.cloud.storage",
      "filePath": "C:\\java tool\\Apache\\cloudstack\\server\\src\\test\\java\\com\\cloud\\storage\\VolumeApiServiceImplTest.java",
      "className": "VolumeApiServiceImplTest"
    },
    "statements": [
      {
        "type": "FIELD_MOCK_CREATION",
        "code": "@Mock\r\nprivate StoragePool storagePoolMock;",
        "line": 206,
        "locate": "Attribute",
        "locationContext": {
          "methodName": "[FieldDeclaration]",
          "methodAnnotations": [
            "@Mock"
          ]
        }
      },
      {
        "type": "STUBBING",
        "code": "Mockito.when(storagePoolMock.getId()).thenReturn(storagePoolMockId);",
        "line": 263,
        "locate": "@Before",
        "locationContext": {
          "methodName": "setup",
          "methodAnnotations": [
            "@Before"
          ]
        }
      },
      {
        "type": "STUBBING",
        "code": "Mockito.when(storagePoolMock.isShared()).thenReturn(true);",
        "line": 716,
        "locate": "Test Case",
        "locationContext": {
          "methodName": "validateConditionsToReplaceDiskOfferingOfVolumeTestTargetPoolSharedDiskOfferingLocal",
          "methodAnnotations": [
            "@Test"
          ]
        }
      },
      {
        "type": "STUBBING",
        "code": "Mockito.when(storagePoolMock.isLocal()).thenReturn(true);",
        "line": 725,
        "locate": "Test Case",
        "locationContext": {
          "methodName": "validateConditionsToReplaceDiskOfferingOfVolumeTestTargetPoolLocalDiskOfferingShared",
          "methodAnnotations": [
            "@Test"
          ]
        }
      },
      {
        "type": "STUBBING",
        "code": "Mockito.when(storagePoolMock.isShared()).thenReturn(true);",
        "line": 735,
        "locate": "Test Case",
        "locationContext": {
          "methodName": "validateConditionsToReplaceDiskOfferingOfVolumeTestTagsDoNotMatch",
          "methodAnnotations": [
            "@Test"
          ]
        }
      },
      {
        "type": "STUBBING",
        "code": "Mockito.when(storagePoolMock.isLocal()).thenReturn(false);",
        "line": 738,
        "locate": "Test Case",
        "locationContext": {
          "methodName": "validateConditionsToReplaceDiskOfferingOfVolumeTestTagsDoNotMatch",
          "methodAnnotations": [
            "@Test"
          ]
        }
      },
      {
        "type": "STUBBING",
        "code": "Mockito.when(storagePoolMock.isShared()).thenReturn(true);",
        "line": 752,
        "locate": "Test Case",
        "locationContext": {
          "methodName": "validateConditionsToReplaceDiskOfferingOfVolumeTestEverythingWorking",
          "methodAnnotations": [
            "@Test"
          ]
        }
      },
      {
        "type": "STUBBING",
        "code": "Mockito.when(storagePoolMock.isLocal()).thenReturn(false);",
        "line": 755,
        "locate": "Test Case",
        "locationContext": {
          "methodName": "validateConditionsToReplaceDiskOfferingOfVolumeTestEverythingWorking",
          "methodAnnotations": [
            "@Test"
          ]
        }
      },
      {
        "type": "VERIFICATION",
        "code": "inOrder.verify(storagePoolMock).isShared();",
        "line": 764,
        "locate": "Test Case",
        "locationContext": {
          "methodName": "validateConditionsToReplaceDiskOfferingOfVolumeTestEverythingWorking",
          "methodAnnotations": [
            "@Test"
          ]
        }
      },
      {
        "type": "VERIFICATION",
        "code": "inOrder.verify(storagePoolMock).isLocal();",
        "line": 766,
        "locate": "Test Case",
        "locationContext": {
          "methodName": "validateConditionsToReplaceDiskOfferingOfVolumeTestEverythingWorking",
          "methodAnnotations": [
            "@Test"
          ]
        }
      }
    ],
    "pattern_id": 21
  }
]