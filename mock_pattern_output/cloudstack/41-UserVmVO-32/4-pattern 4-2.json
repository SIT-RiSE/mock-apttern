[
  {
    "variableName": "userVmMock",
    "variableType": "UserVmVO",
    "mockedClass": "UserVmVO",
    "isReuseableMock": "Hybrid",
    "mockPattern": "Creation:\n\u2014 Attribute Mock Creation\n\nStubbing:\n\u2014 Test Case\n\nVerification:\n\u2014 None",
    "classContext": {
      "packageName": "com.cloud.network.as",
      "filePath": "C:\\java tool\\Apache\\cloudstack\\server\\src\\test\\java\\com\\cloud\\network\\as\\AutoScaleManagerImplTest.java",
      "className": "AutoScaleManagerImplTest"
    },
    "statements": [
      {
        "type": "FIELD_MOCK_CREATION",
        "code": "@Mock\r\nUserVmVO userVmMock;",
        "line": 385,
        "locate": "Attribute",
        "locationContext": {
          "methodName": "[FieldDeclaration]",
          "methodAnnotations": [
            "@Mock"
          ]
        }
      },
      {
        "type": "STUBBING",
        "code": "when(userVmMock.getId()).thenReturn(virtualMachineId);",
        "line": 1281,
        "locate": "Test Case",
        "locationContext": {
          "methodName": "testCreateNewVM1",
          "methodAnnotations": [
            "@Test"
          ]
        }
      },
      {
        "type": "STUBBING",
        "code": "when(userVmMock.getId()).thenReturn(virtualMachineId);",
        "line": 1329,
        "locate": "Test Case",
        "locationContext": {
          "methodName": "testCreateNewVM2",
          "methodAnnotations": [
            "@Test"
          ]
        }
      },
      {
        "type": "STUBBING",
        "code": "when(userVmMock.getId()).thenReturn(virtualMachineId);",
        "line": 1378,
        "locate": "Test Case",
        "locationContext": {
          "methodName": "testCreateNewVM3",
          "methodAnnotations": [
            "@Test"
          ]
        }
      },
      {
        "type": "STUBBING",
        "code": "when(userVmMock.getHostId()).thenReturn(null);",
        "line": 1701,
        "locate": "Test Case",
        "locationContext": {
          "methodName": "getHostAndVmIdsMap",
          "methodAnnotations": [
            "@Test"
          ]
        }
      },
      {
        "type": "STUBBING",
        "code": "when(userVmMock.getHostId()).thenReturn(hostId);",
        "line": 1958,
        "locate": "Test Case",
        "locationContext": {
          "methodName": "checkNetScalerAsGroup",
          "methodAnnotations": [
            "@Test"
          ]
        }
      },
      {
        "type": "STUBBING",
        "code": "when(userVmMock.getInstanceName()).thenReturn(vmName);",
        "line": 1959,
        "locate": "Test Case",
        "locationContext": {
          "methodName": "checkNetScalerAsGroup",
          "methodAnnotations": [
            "@Test"
          ]
        }
      }
    ],
    "pattern_id": 4
  },
  {
    "variableName": "vmMock",
    "variableType": "UserVmVO",
    "mockedClass": "UserVmVO",
    "isReuseableMock": "Hybrid",
    "mockPattern": "Creation:\n\u2014 Attribute Mock Creation\n\nStubbing:\n\u2014 Test Case\n\nVerification:\n\u2014 None",
    "classContext": {
      "packageName": "com.cloud.storage.snapshot",
      "filePath": "C:\\java tool\\Apache\\cloudstack\\server\\src\\test\\java\\com\\cloud\\storage\\snapshot\\SnapshotManagerTest.java",
      "className": "SnapshotManagerTest"
    },
    "statements": [
      {
        "type": "FIELD_MOCK_CREATION",
        "code": "@Mock\r\nUserVmVO vmMock;",
        "line": 125,
        "locate": "Attribute",
        "locationContext": {
          "methodName": "[FieldDeclaration]",
          "methodAnnotations": [
            "@Mock"
          ]
        }
      },
      {
        "type": "STUBBING",
        "code": "when(vmMock.getState()).thenReturn(State.Destroyed);",
        "line": 265,
        "locate": "Test Case",
        "locationContext": {
          "methodName": "testAllocSnapshotF1",
          "methodAnnotations": [
            "@Test"
          ]
        }
      },
      {
        "type": "STUBBING",
        "code": "when(vmMock.getId()).thenReturn(TEST_VM_ID);",
        "line": 274,
        "locate": "Test Case",
        "locationContext": {
          "methodName": "testAllocSnapshotF2",
          "methodAnnotations": [
            "@SuppressWarnings",
            "@Test"
          ]
        }
      },
      {
        "type": "STUBBING",
        "code": "when(vmMock.getState()).thenReturn(State.Stopped);",
        "line": 275,
        "locate": "Test Case",
        "locationContext": {
          "methodName": "testAllocSnapshotF2",
          "methodAnnotations": [
            "@SuppressWarnings",
            "@Test"
          ]
        }
      },
      {
        "type": "STUBBING",
        "code": "when(vmMock.getHypervisorType()).thenReturn(Hypervisor.HypervisorType.KVM);",
        "line": 276,
        "locate": "Test Case",
        "locationContext": {
          "methodName": "testAllocSnapshotF2",
          "methodAnnotations": [
            "@SuppressWarnings",
            "@Test"
          ]
        }
      },
      {
        "type": "STUBBING",
        "code": "when(vmMock.getId()).thenReturn(TEST_VM_ID);",
        "line": 289,
        "locate": "Test Case",
        "locationContext": {
          "methodName": "testAllocSnapshotF3",
          "methodAnnotations": [
            "@SuppressWarnings",
            "@Test"
          ]
        }
      },
      {
        "type": "STUBBING",
        "code": "when(vmMock.getState()).thenReturn(State.Stopped);",
        "line": 290,
        "locate": "Test Case",
        "locationContext": {
          "methodName": "testAllocSnapshotF3",
          "methodAnnotations": [
            "@SuppressWarnings",
            "@Test"
          ]
        }
      },
      {
        "type": "STUBBING",
        "code": "when(vmMock.getHypervisorType()).thenReturn(Hypervisor.HypervisorType.KVM);",
        "line": 291,
        "locate": "Test Case",
        "locationContext": {
          "methodName": "testAllocSnapshotF3",
          "methodAnnotations": [
            "@SuppressWarnings",
            "@Test"
          ]
        }
      },
      {
        "type": "STUBBING",
        "code": "when(vmMock.getId()).thenReturn(TEST_VM_ID);",
        "line": 307,
        "locate": "Test Case",
        "locationContext": {
          "methodName": "testAllocSnapshotF4",
          "methodAnnotations": [
            "@SuppressWarnings",
            "@Test"
          ]
        }
      },
      {
        "type": "STUBBING",
        "code": "when(vmMock.getState()).thenReturn(State.Stopped);",
        "line": 308,
        "locate": "Test Case",
        "locationContext": {
          "methodName": "testAllocSnapshotF4",
          "methodAnnotations": [
            "@SuppressWarnings",
            "@Test"
          ]
        }
      },
      {
        "type": "STUBBING",
        "code": "when(vmMock.getHypervisorType()).thenReturn(Hypervisor.HypervisorType.KVM);",
        "line": 309,
        "locate": "Test Case",
        "locationContext": {
          "methodName": "testAllocSnapshotF4",
          "methodAnnotations": [
            "@SuppressWarnings",
            "@Test"
          ]
        }
      },
      {
        "type": "STUBBING",
        "code": "when(vmMock.getState()).thenReturn(State.Running);",
        "line": 336,
        "locate": "Test Case",
        "locationContext": {
          "methodName": "testRevertSnapshotF1",
          "methodAnnotations": [
            "@Test"
          ]
        }
      },
      {
        "type": "STUBBING",
        "code": "when(vmMock.getState()).thenReturn(State.Stopped);",
        "line": 344,
        "locate": "Test Case",
        "locationContext": {
          "methodName": "testRevertSnapshotF2",
          "methodAnnotations": [
            "@Test"
          ]
        }
      },
      {
        "type": "STUBBING",
        "code": "when(vmMock.getHypervisorType()).thenReturn(Hypervisor.HypervisorType.XenServer);",
        "line": 345,
        "locate": "Test Case",
        "locationContext": {
          "methodName": "testRevertSnapshotF2",
          "methodAnnotations": [
            "@Test"
          ]
        }
      },
      {
        "type": "STUBBING",
        "code": "when(vmMock.getState()).thenReturn(State.Stopped);",
        "line": 356,
        "locate": "Test Case",
        "locationContext": {
          "methodName": "testRevertSnapshotF3",
          "methodAnnotations": [
            "@Test"
          ]
        }
      },
      {
        "type": "STUBBING",
        "code": "when(vmMock.getHypervisorType()).thenReturn(Hypervisor.HypervisorType.KVM);",
        "line": 357,
        "locate": "Test Case",
        "locationContext": {
          "methodName": "testRevertSnapshotF3",
          "methodAnnotations": [
            "@Test"
          ]
        }
      },
      {
        "type": "STUBBING",
        "code": "when(vmMock.getHypervisorType()).thenReturn(Hypervisor.HypervisorType.XenServer);",
        "line": 370,
        "locate": "Test Case",
        "locationContext": {
          "methodName": "testBackupSnapshotFromVmSnapshotF1",
          "methodAnnotations": [
            "@Test"
          ]
        }
      },
      {
        "type": "STUBBING",
        "code": "when(vmMock.getHypervisorType()).thenReturn(Hypervisor.HypervisorType.KVM);",
        "line": 379,
        "locate": "Test Case",
        "locationContext": {
          "methodName": "testBackupSnapshotFromVmSnapshotF2",
          "methodAnnotations": [
            "@Test"
          ]
        }
      },
      {
        "type": "STUBBING",
        "code": "when(vmMock.getAccountId()).thenReturn(2L);",
        "line": 387,
        "locate": "Test Case",
        "locationContext": {
          "methodName": "testBackupSnapshotFromVmSnapshotF2",
          "methodAnnotations": [
            "@Test"
          ]
        }
      },
      {
        "type": "STUBBING",
        "code": "when(vmMock.getHypervisorType()).thenReturn(Hypervisor.HypervisorType.KVM);",
        "line": 398,
        "locate": "Test Case",
        "locationContext": {
          "methodName": "testBackupSnapshotFromVmSnapshotF3",
          "methodAnnotations": [
            "@Test"
          ]
        }
      }
    ],
    "pattern_id": 4
  }
]