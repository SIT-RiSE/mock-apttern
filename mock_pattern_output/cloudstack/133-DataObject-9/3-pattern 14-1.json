[
  {
    "variableName": "destObj",
    "variableType": "DataObject",
    "mockedClass": "VolumeInfo",
    "isReuseableMock": null,
    "mockPattern": "Creation:\n\u2014 Attribute Mock Creation\n\nStubbing:\n\u2014 Other Methods\n\nVerification:\n\u2014 None",
    "classContext": {
      "packageName": "org.apache.cloudstack.storage.datastore.driver",
      "filePath": "C:\\java tool\\Apache\\cloudstack\\plugins\\storage\\volume\\storpool\\src\\test\\java\\org\\apache\\cloudstack\\storage\\datastore\\driver\\StorPoolPrimaryDataStoreDriverTest.java",
      "className": "StorPoolPrimaryDataStoreDriverTest"
    },
    "statements": [
      {
        "type": "FIELD_DECLARATION",
        "code": "DataObject destObj;",
        "line": 83,
        "locate": "Attribute",
        "locationContext": {
          "methodName": "[FieldDeclaration]",
          "methodAnnotations": []
        }
      },
      {
        "type": "ASSIGNMENT",
        "code": "destObj = mock(VolumeInfo.class);",
        "line": 101,
        "locate": "@Before",
        "locationContext": {
          "methodName": "setUp",
          "methodAnnotations": [
            "@Before"
          ]
        }
      },
      {
        "type": "STUBBING",
        "code": "when(destObj.getDataStore()).thenReturn(destStore);",
        "line": 223,
        "locate": "Other Methods",
        "locationContext": {
          "methodName": "setReturnsWhenSourceAndDestinationAreVolumes",
          "methodAnnotations": []
        }
      },
      {
        "type": "STUBBING",
        "code": "when(destObj.getType()).thenReturn(DataObjectType.VOLUME);",
        "line": 225,
        "locate": "Other Methods",
        "locationContext": {
          "methodName": "setReturnsWhenSourceAndDestinationAreVolumes",
          "methodAnnotations": []
        }
      },
      {
        "type": "STUBBING",
        "code": "when(destObj.getTO()).thenReturn(dstTO);",
        "line": 226,
        "locate": "Other Methods",
        "locationContext": {
          "methodName": "setReturnsWhenSourceAndDestinationAreVolumes",
          "methodAnnotations": []
        }
      },
      {
        "type": "STUBBING",
        "code": "when(destObj.getTO().getDataStore()).thenReturn(dstPrimaryTo);",
        "line": 230,
        "locate": "Other Methods",
        "locationContext": {
          "methodName": "setReturnsWhenSourceAndDestinationAreVolumes",
          "methodAnnotations": []
        }
      },
      {
        "type": "STUBBING",
        "code": "when(destObj.getDataStore().getUuid()).thenReturn(\"SP_API_HTTP=1.1.1.1:81;SP_AUTH_TOKEN=token;SP_TEMPLATE=template_name\");",
        "line": 231,
        "locate": "Other Methods",
        "locationContext": {
          "methodName": "setReturnsWhenSourceAndDestinationAreVolumes",
          "methodAnnotations": []
        }
      },
      {
        "type": "STUBBING",
        "code": "when(destObj.getDataStore().getId()).thenReturn(1L);",
        "line": 232,
        "locate": "Other Methods",
        "locationContext": {
          "methodName": "setReturnsWhenSourceAndDestinationAreVolumes",
          "methodAnnotations": []
        }
      }
    ],
    "pattern_id": 14
  }
]