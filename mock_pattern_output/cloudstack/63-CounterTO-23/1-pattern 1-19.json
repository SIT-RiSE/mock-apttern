[
  {
    "variableName": "counterTO",
    "variableType": "CounterTO",
    "mockedClass": "CounterTO",
    "isReuseableMock": false,
    "mockPattern": "Creation:\n\u2014 Local Mock Creation in Test Case\n\nStubbing:\n\u2014 Test Case\n\nVerification:\n\u2014 None",
    "classContext": {
      "packageName": "com.cloud.network.as",
      "filePath": "C:\\java tool\\Apache\\cloudstack\\server\\src\\test\\java\\com\\cloud\\network\\as\\AutoScaleManagerImplTest.java",
      "className": "AutoScaleManagerImplTest"
    },
    "statements": [
      {
        "type": "DECLARATION",
        "code": "CounterTO counterTO = Mockito.mock(CounterTO.class);",
        "line": 1631,
        "locate": "Test Case",
        "locationContext": {
          "methodName": "isNativeTrue",
          "methodAnnotations": [
            "@Test"
          ]
        }
      },
      {
        "type": "STUBBING",
        "code": "when(counterTO.getSource()).thenReturn(Counter.Source.CPU);",
        "line": 1637,
        "locate": "Test Case",
        "locationContext": {
          "methodName": "isNativeTrue",
          "methodAnnotations": [
            "@Test"
          ]
        }
      }
    ],
    "pattern_id": 1
  },
  {
    "variableName": "counterTO",
    "variableType": "CounterTO",
    "mockedClass": "CounterTO",
    "isReuseableMock": false,
    "mockPattern": "Creation:\n\u2014 Local Mock Creation in Test Case\n\nStubbing:\n\u2014 Test Case\n\nVerification:\n\u2014 None",
    "classContext": {
      "packageName": "com.cloud.network.as",
      "filePath": "C:\\java tool\\Apache\\cloudstack\\server\\src\\test\\java\\com\\cloud\\network\\as\\AutoScaleManagerImplTest.java",
      "className": "AutoScaleManagerImplTest"
    },
    "statements": [
      {
        "type": "DECLARATION",
        "code": "CounterTO counterTO = Mockito.mock(CounterTO.class);",
        "line": 1648,
        "locate": "Test Case",
        "locationContext": {
          "methodName": "isNativeFalse",
          "methodAnnotations": [
            "@Test"
          ]
        }
      },
      {
        "type": "STUBBING",
        "code": "when(counterTO.getSource()).thenReturn(Counter.Source.VIRTUALROUTER);",
        "line": 1654,
        "locate": "Test Case",
        "locationContext": {
          "methodName": "isNativeFalse",
          "methodAnnotations": [
            "@Test"
          ]
        }
      }
    ],
    "pattern_id": 1
  },
  {
    "variableName": "counterTO",
    "variableType": "CounterTO",
    "mockedClass": "CounterTO",
    "isReuseableMock": false,
    "mockPattern": "Creation:\n\u2014 Local Mock Creation in Test Case\n\nStubbing:\n\u2014 Test Case\n\nVerification:\n\u2014 None",
    "classContext": {
      "packageName": "com.cloud.network.as",
      "filePath": "C:\\java tool\\Apache\\cloudstack\\server\\src\\test\\java\\com\\cloud\\network\\as\\AutoScaleManagerImplTest.java",
      "className": "AutoScaleManagerImplTest"
    },
    "statements": [
      {
        "type": "DECLARATION",
        "code": "CounterTO counterTO = Mockito.mock(CounterTO.class);",
        "line": 1665,
        "locate": "Test Case",
        "locationContext": {
          "methodName": "hasSourceVirtualRouterTrue",
          "methodAnnotations": [
            "@Test"
          ]
        }
      },
      {
        "type": "STUBBING",
        "code": "when(counterTO.getSource()).thenReturn(Counter.Source.VIRTUALROUTER);",
        "line": 1671,
        "locate": "Test Case",
        "locationContext": {
          "methodName": "hasSourceVirtualRouterTrue",
          "methodAnnotations": [
            "@Test"
          ]
        }
      }
    ],
    "pattern_id": 1
  },
  {
    "variableName": "counterTO",
    "variableType": "CounterTO",
    "mockedClass": "CounterTO",
    "isReuseableMock": false,
    "mockPattern": "Creation:\n\u2014 Local Mock Creation in Test Case\n\nStubbing:\n\u2014 Test Case\n\nVerification:\n\u2014 None",
    "classContext": {
      "packageName": "com.cloud.network.as",
      "filePath": "C:\\java tool\\Apache\\cloudstack\\server\\src\\test\\java\\com\\cloud\\network\\as\\AutoScaleManagerImplTest.java",
      "className": "AutoScaleManagerImplTest"
    },
    "statements": [
      {
        "type": "DECLARATION",
        "code": "CounterTO counterTO = Mockito.mock(CounterTO.class);",
        "line": 1682,
        "locate": "Test Case",
        "locationContext": {
          "methodName": "hasSourceVirtualRouterFalse",
          "methodAnnotations": [
            "@Test"
          ]
        }
      },
      {
        "type": "STUBBING",
        "code": "when(counterTO.getSource()).thenReturn(Counter.Source.CPU);",
        "line": 1688,
        "locate": "Test Case",
        "locationContext": {
          "methodName": "hasSourceVirtualRouterFalse",
          "methodAnnotations": [
            "@Test"
          ]
        }
      }
    ],
    "pattern_id": 1
  },
  {
    "variableName": "counterTO1",
    "variableType": "CounterTO",
    "mockedClass": "CounterTO",
    "isReuseableMock": false,
    "mockPattern": "Creation:\n\u2014 Local Mock Creation in Test Case\n\nStubbing:\n\u2014 Test Case\n\nVerification:\n\u2014 None",
    "classContext": {
      "packageName": "com.cloud.network.as",
      "filePath": "C:\\java tool\\Apache\\cloudstack\\server\\src\\test\\java\\com\\cloud\\network\\as\\AutoScaleManagerImplTest.java",
      "className": "AutoScaleManagerImplTest"
    },
    "statements": [
      {
        "type": "DECLARATION",
        "code": "CounterTO counterTO1 = Mockito.mock(CounterTO.class);",
        "line": 1769,
        "locate": "Test Case",
        "locationContext": {
          "methodName": "checkConditionsForPolicy1",
          "methodAnnotations": [
            "@Test"
          ]
        }
      },
      {
        "type": "STUBBING",
        "code": "when(counterTO1.getId()).thenReturn(counterId);",
        "line": 1782,
        "locate": "Test Case",
        "locationContext": {
          "methodName": "checkConditionsForPolicy1",
          "methodAnnotations": [
            "@Test"
          ]
        }
      }
    ],
    "pattern_id": 1
  },
  {
    "variableName": "counterTO2",
    "variableType": "CounterTO",
    "mockedClass": "CounterTO",
    "isReuseableMock": false,
    "mockPattern": "Creation:\n\u2014 Local Mock Creation in Test Case\n\nStubbing:\n\u2014 Test Case\n\nVerification:\n\u2014 None",
    "classContext": {
      "packageName": "com.cloud.network.as",
      "filePath": "C:\\java tool\\Apache\\cloudstack\\server\\src\\test\\java\\com\\cloud\\network\\as\\AutoScaleManagerImplTest.java",
      "className": "AutoScaleManagerImplTest"
    },
    "statements": [
      {
        "type": "DECLARATION",
        "code": "CounterTO counterTO2 = Mockito.mock(CounterTO.class);",
        "line": 1771,
        "locate": "Test Case",
        "locationContext": {
          "methodName": "checkConditionsForPolicy1",
          "methodAnnotations": [
            "@Test"
          ]
        }
      },
      {
        "type": "STUBBING",
        "code": "when(counterTO2.getId()).thenReturn(counterId2);",
        "line": 1783,
        "locate": "Test Case",
        "locationContext": {
          "methodName": "checkConditionsForPolicy1",
          "methodAnnotations": [
            "@Test"
          ]
        }
      }
    ],
    "pattern_id": 1
  },
  {
    "variableName": "counterTO1",
    "variableType": "CounterTO",
    "mockedClass": "CounterTO",
    "isReuseableMock": false,
    "mockPattern": "Creation:\n\u2014 Local Mock Creation in Test Case\n\nStubbing:\n\u2014 Test Case\n\nVerification:\n\u2014 None",
    "classContext": {
      "packageName": "com.cloud.network.as",
      "filePath": "C:\\java tool\\Apache\\cloudstack\\server\\src\\test\\java\\com\\cloud\\network\\as\\AutoScaleManagerImplTest.java",
      "className": "AutoScaleManagerImplTest"
    },
    "statements": [
      {
        "type": "DECLARATION",
        "code": "CounterTO counterTO1 = Mockito.mock(CounterTO.class);",
        "line": 1814,
        "locate": "Test Case",
        "locationContext": {
          "methodName": "checkConditionsForPolicy2",
          "methodAnnotations": [
            "@Test"
          ]
        }
      },
      {
        "type": "STUBBING",
        "code": "when(counterTO1.getId()).thenReturn(counterId);",
        "line": 1827,
        "locate": "Test Case",
        "locationContext": {
          "methodName": "checkConditionsForPolicy2",
          "methodAnnotations": [
            "@Test"
          ]
        }
      }
    ],
    "pattern_id": 1
  },
  {
    "variableName": "counterTO2",
    "variableType": "CounterTO",
    "mockedClass": "CounterTO",
    "isReuseableMock": false,
    "mockPattern": "Creation:\n\u2014 Local Mock Creation in Test Case\n\nStubbing:\n\u2014 Test Case\n\nVerification:\n\u2014 None",
    "classContext": {
      "packageName": "com.cloud.network.as",
      "filePath": "C:\\java tool\\Apache\\cloudstack\\server\\src\\test\\java\\com\\cloud\\network\\as\\AutoScaleManagerImplTest.java",
      "className": "AutoScaleManagerImplTest"
    },
    "statements": [
      {
        "type": "DECLARATION",
        "code": "CounterTO counterTO2 = Mockito.mock(CounterTO.class);",
        "line": 1816,
        "locate": "Test Case",
        "locationContext": {
          "methodName": "checkConditionsForPolicy2",
          "methodAnnotations": [
            "@Test"
          ]
        }
      },
      {
        "type": "STUBBING",
        "code": "when(counterTO2.getId()).thenReturn(counterId2);",
        "line": 1828,
        "locate": "Test Case",
        "locationContext": {
          "methodName": "checkConditionsForPolicy2",
          "methodAnnotations": [
            "@Test"
          ]
        }
      }
    ],
    "pattern_id": 1
  },
  {
    "variableName": "counterTO1",
    "variableType": "CounterTO",
    "mockedClass": "CounterTO",
    "isReuseableMock": false,
    "mockPattern": "Creation:\n\u2014 Local Mock Creation in Test Case\n\nStubbing:\n\u2014 Test Case\n\nVerification:\n\u2014 None",
    "classContext": {
      "packageName": "com.cloud.network.as",
      "filePath": "C:\\java tool\\Apache\\cloudstack\\server\\src\\test\\java\\com\\cloud\\network\\as\\AutoScaleManagerImplTest.java",
      "className": "AutoScaleManagerImplTest"
    },
    "statements": [
      {
        "type": "DECLARATION",
        "code": "CounterTO counterTO1 = Mockito.mock(CounterTO.class);",
        "line": 1860,
        "locate": "Test Case",
        "locationContext": {
          "methodName": "setPerformanceMonitorCommandParams",
          "methodAnnotations": [
            "@Test"
          ]
        }
      },
      {
        "type": "STUBBING",
        "code": "when(counterTO1.getName()).thenReturn(counterName + \"-1\");",
        "line": 1871,
        "locate": "Test Case",
        "locationContext": {
          "methodName": "setPerformanceMonitorCommandParams",
          "methodAnnotations": [
            "@Test"
          ]
        }
      }
    ],
    "pattern_id": 1
  },
  {
    "variableName": "counterTO2",
    "variableType": "CounterTO",
    "mockedClass": "CounterTO",
    "isReuseableMock": false,
    "mockPattern": "Creation:\n\u2014 Local Mock Creation in Test Case\n\nStubbing:\n\u2014 Test Case\n\nVerification:\n\u2014 None",
    "classContext": {
      "packageName": "com.cloud.network.as",
      "filePath": "C:\\java tool\\Apache\\cloudstack\\server\\src\\test\\java\\com\\cloud\\network\\as\\AutoScaleManagerImplTest.java",
      "className": "AutoScaleManagerImplTest"
    },
    "statements": [
      {
        "type": "DECLARATION",
        "code": "CounterTO counterTO2 = Mockito.mock(CounterTO.class);",
        "line": 1862,
        "locate": "Test Case",
        "locationContext": {
          "methodName": "setPerformanceMonitorCommandParams",
          "methodAnnotations": [
            "@Test"
          ]
        }
      },
      {
        "type": "STUBBING",
        "code": "when(counterTO2.getName()).thenReturn(counterName + \"-2\");",
        "line": 1872,
        "locate": "Test Case",
        "locationContext": {
          "methodName": "setPerformanceMonitorCommandParams",
          "methodAnnotations": [
            "@Test"
          ]
        }
      }
    ],
    "pattern_id": 1
  },
  {
    "variableName": "scaleUpCounterTO",
    "variableType": "CounterTO",
    "mockedClass": "CounterTO",
    "isReuseableMock": false,
    "mockPattern": "Creation:\n\u2014 Local Mock Creation in Test Case\n\nStubbing:\n\u2014 Test Case\n\nVerification:\n\u2014 None",
    "classContext": {
      "packageName": "com.cloud.network.as",
      "filePath": "C:\\java tool\\Apache\\cloudstack\\server\\src\\test\\java\\com\\cloud\\network\\as\\AutoScaleManagerImplTest.java",
      "className": "AutoScaleManagerImplTest"
    },
    "statements": [
      {
        "type": "DECLARATION",
        "code": "CounterTO scaleUpCounterTO = Mockito.mock(CounterTO.class);",
        "line": 2040,
        "locate": "Test Case",
        "locationContext": {
          "methodName": "updateCountersMap1",
          "methodAnnotations": [
            "@Test"
          ]
        }
      },
      {
        "type": "STUBBING",
        "code": "when(scaleUpCounterTO.getId()).thenReturn(scaleUpCounterId);",
        "line": 2044,
        "locate": "Test Case",
        "locationContext": {
          "methodName": "updateCountersMap1",
          "methodAnnotations": [
            "@Test"
          ]
        }
      },
      {
        "type": "STUBBING",
        "code": "when(scaleUpCounterTO.getSource()).thenReturn(Counter.Source.CPU);",
        "line": 2045,
        "locate": "Test Case",
        "locationContext": {
          "methodName": "updateCountersMap1",
          "methodAnnotations": [
            "@Test"
          ]
        }
      }
    ],
    "pattern_id": 1
  },
  {
    "variableName": "scaleDownCounterTO",
    "variableType": "CounterTO",
    "mockedClass": "CounterTO",
    "isReuseableMock": false,
    "mockPattern": "Creation:\n\u2014 Local Mock Creation in Test Case\n\nStubbing:\n\u2014 Test Case\n\nVerification:\n\u2014 None",
    "classContext": {
      "packageName": "com.cloud.network.as",
      "filePath": "C:\\java tool\\Apache\\cloudstack\\server\\src\\test\\java\\com\\cloud\\network\\as\\AutoScaleManagerImplTest.java",
      "className": "AutoScaleManagerImplTest"
    },
    "statements": [
      {
        "type": "DECLARATION",
        "code": "CounterTO scaleDownCounterTO = Mockito.mock(CounterTO.class);",
        "line": 2051,
        "locate": "Test Case",
        "locationContext": {
          "methodName": "updateCountersMap1",
          "methodAnnotations": [
            "@Test"
          ]
        }
      },
      {
        "type": "STUBBING",
        "code": "when(scaleDownCounterTO.getId()).thenReturn(scaleDownCounterId);",
        "line": 2055,
        "locate": "Test Case",
        "locationContext": {
          "methodName": "updateCountersMap1",
          "methodAnnotations": [
            "@Test"
          ]
        }
      },
      {
        "type": "STUBBING",
        "code": "when(scaleDownCounterTO.getSource()).thenReturn(Counter.Source.VIRTUALROUTER);",
        "line": 2056,
        "locate": "Test Case",
        "locationContext": {
          "methodName": "updateCountersMap1",
          "methodAnnotations": [
            "@Test"
          ]
        }
      }
    ],
    "pattern_id": 1
  },
  {
    "variableName": "scaleUpCounterTO",
    "variableType": "CounterTO",
    "mockedClass": "CounterTO",
    "isReuseableMock": false,
    "mockPattern": "Creation:\n\u2014 Local Mock Creation in Test Case\n\nStubbing:\n\u2014 Test Case\n\nVerification:\n\u2014 None",
    "classContext": {
      "packageName": "com.cloud.network.as",
      "filePath": "C:\\java tool\\Apache\\cloudstack\\server\\src\\test\\java\\com\\cloud\\network\\as\\AutoScaleManagerImplTest.java",
      "className": "AutoScaleManagerImplTest"
    },
    "statements": [
      {
        "type": "DECLARATION",
        "code": "CounterTO scaleUpCounterTO = Mockito.mock(CounterTO.class);",
        "line": 2097,
        "locate": "Test Case",
        "locationContext": {
          "methodName": "updateCountersMap2",
          "methodAnnotations": [
            "@Test"
          ]
        }
      },
      {
        "type": "STUBBING",
        "code": "when(scaleUpCounterTO.getId()).thenReturn(scaleUpCounterId);",
        "line": 2101,
        "locate": "Test Case",
        "locationContext": {
          "methodName": "updateCountersMap2",
          "methodAnnotations": [
            "@Test"
          ]
        }
      },
      {
        "type": "STUBBING",
        "code": "when(scaleUpCounterTO.getSource()).thenReturn(Counter.Source.VIRTUALROUTER);",
        "line": 2102,
        "locate": "Test Case",
        "locationContext": {
          "methodName": "updateCountersMap2",
          "methodAnnotations": [
            "@Test"
          ]
        }
      }
    ],
    "pattern_id": 1
  },
  {
    "variableName": "scaleUpCounterTO",
    "variableType": "CounterTO",
    "mockedClass": "CounterTO",
    "isReuseableMock": false,
    "mockPattern": "Creation:\n\u2014 Local Mock Creation in Test Case\n\nStubbing:\n\u2014 Test Case\n\nVerification:\n\u2014 None",
    "classContext": {
      "packageName": "com.cloud.network.as",
      "filePath": "C:\\java tool\\Apache\\cloudstack\\server\\src\\test\\java\\com\\cloud\\network\\as\\AutoScaleManagerImplTest.java",
      "className": "AutoScaleManagerImplTest"
    },
    "statements": [
      {
        "type": "DECLARATION",
        "code": "CounterTO scaleUpCounterTO = Mockito.mock(CounterTO.class);",
        "line": 2219,
        "locate": "Test Case",
        "locationContext": {
          "methodName": "monitorVirtualRouterAsGroup",
          "methodAnnotations": [
            "@Test"
          ]
        }
      },
      {
        "type": "STUBBING",
        "code": "when(scaleUpCounterTO.getSource()).thenReturn(Counter.Source.CPU);",
        "line": 2222,
        "locate": "Test Case",
        "locationContext": {
          "methodName": "monitorVirtualRouterAsGroup",
          "methodAnnotations": [
            "@Test"
          ]
        }
      }
    ],
    "pattern_id": 1
  },
  {
    "variableName": "scaleDownCounterTO",
    "variableType": "CounterTO",
    "mockedClass": "CounterTO",
    "isReuseableMock": false,
    "mockPattern": "Creation:\n\u2014 Local Mock Creation in Test Case\n\nStubbing:\n\u2014 Test Case\n\nVerification:\n\u2014 None",
    "classContext": {
      "packageName": "com.cloud.network.as",
      "filePath": "C:\\java tool\\Apache\\cloudstack\\server\\src\\test\\java\\com\\cloud\\network\\as\\AutoScaleManagerImplTest.java",
      "className": "AutoScaleManagerImplTest"
    },
    "statements": [
      {
        "type": "DECLARATION",
        "code": "CounterTO scaleDownCounterTO = Mockito.mock(CounterTO.class);",
        "line": 2226,
        "locate": "Test Case",
        "locationContext": {
          "methodName": "monitorVirtualRouterAsGroup",
          "methodAnnotations": [
            "@Test"
          ]
        }
      },
      {
        "type": "STUBBING",
        "code": "when(scaleDownCounterTO.getSource()).thenReturn(Counter.Source.VIRTUALROUTER);",
        "line": 2229,
        "locate": "Test Case",
        "locationContext": {
          "methodName": "monitorVirtualRouterAsGroup",
          "methodAnnotations": [
            "@Test"
          ]
        }
      }
    ],
    "pattern_id": 1
  },
  {
    "variableName": "scaleUpCounterTO",
    "variableType": "CounterTO",
    "mockedClass": "CounterTO",
    "isReuseableMock": false,
    "mockPattern": "Creation:\n\u2014 Local Mock Creation in Test Case\n\nStubbing:\n\u2014 Test Case\n\nVerification:\n\u2014 None",
    "classContext": {
      "packageName": "com.cloud.network.as",
      "filePath": "C:\\java tool\\Apache\\cloudstack\\server\\src\\test\\java\\com\\cloud\\network\\as\\AutoScaleManagerImplTest.java",
      "className": "AutoScaleManagerImplTest"
    },
    "statements": [
      {
        "type": "DECLARATION",
        "code": "CounterTO scaleUpCounterTO = Mockito.mock(CounterTO.class);",
        "line": 2380,
        "locate": "Test Case",
        "locationContext": {
          "methodName": "setGetAutoScaleMetricsCommandMetrics",
          "methodAnnotations": [
            "@Test"
          ]
        }
      },
      {
        "type": "STUBBING",
        "code": "when(scaleUpCounterTO.getSource()).thenReturn(Counter.Source.CPU);",
        "line": 2384,
        "locate": "Test Case",
        "locationContext": {
          "methodName": "setGetAutoScaleMetricsCommandMetrics",
          "methodAnnotations": [
            "@Test"
          ]
        }
      },
      {
        "type": "STUBBING",
        "code": "when(scaleUpCounterTO.getProvider()).thenReturn(Network.Provider.VirtualRouter.getName());",
        "line": 2385,
        "locate": "Test Case",
        "locationContext": {
          "methodName": "setGetAutoScaleMetricsCommandMetrics",
          "methodAnnotations": [
            "@Test"
          ]
        }
      },
      {
        "type": "STUBBING",
        "code": "when(scaleUpCounterTO.getValue()).thenReturn(VirtualRouterAutoScaleCounter.NETWORK_RECEIVED_AVERAGE_MBPS.toString());",
        "line": 2386,
        "locate": "Test Case",
        "locationContext": {
          "methodName": "setGetAutoScaleMetricsCommandMetrics",
          "methodAnnotations": [
            "@Test"
          ]
        }
      }
    ],
    "pattern_id": 1
  },
  {
    "variableName": "scaleDownCounterTO",
    "variableType": "CounterTO",
    "mockedClass": "CounterTO",
    "isReuseableMock": false,
    "mockPattern": "Creation:\n\u2014 Local Mock Creation in Test Case\n\nStubbing:\n\u2014 Test Case\n\nVerification:\n\u2014 None",
    "classContext": {
      "packageName": "com.cloud.network.as",
      "filePath": "C:\\java tool\\Apache\\cloudstack\\server\\src\\test\\java\\com\\cloud\\network\\as\\AutoScaleManagerImplTest.java",
      "className": "AutoScaleManagerImplTest"
    },
    "statements": [
      {
        "type": "DECLARATION",
        "code": "CounterTO scaleDownCounterTO = Mockito.mock(CounterTO.class);",
        "line": 2390,
        "locate": "Test Case",
        "locationContext": {
          "methodName": "setGetAutoScaleMetricsCommandMetrics",
          "methodAnnotations": [
            "@Test"
          ]
        }
      },
      {
        "type": "STUBBING",
        "code": "when(scaleDownCounterTO.getSource()).thenReturn(Counter.Source.VIRTUALROUTER);",
        "line": 2394,
        "locate": "Test Case",
        "locationContext": {
          "methodName": "setGetAutoScaleMetricsCommandMetrics",
          "methodAnnotations": [
            "@Test"
          ]
        }
      },
      {
        "type": "STUBBING",
        "code": "when(scaleDownCounterTO.getProvider()).thenReturn(Network.Provider.VirtualRouter.getName());",
        "line": 2395,
        "locate": "Test Case",
        "locationContext": {
          "methodName": "setGetAutoScaleMetricsCommandMetrics",
          "methodAnnotations": [
            "@Test"
          ]
        }
      },
      {
        "type": "STUBBING",
        "code": "when(scaleDownCounterTO.getValue()).thenReturn(VirtualRouterAutoScaleCounter.NETWORK_TRANSMIT_AVERAGE_MBPS.toString());",
        "line": 2396,
        "locate": "Test Case",
        "locationContext": {
          "methodName": "setGetAutoScaleMetricsCommandMetrics",
          "methodAnnotations": [
            "@Test"
          ]
        }
      }
    ],
    "pattern_id": 1
  },
  {
    "variableName": "scaleUpCounter",
    "variableType": "CounterTO",
    "mockedClass": "CounterTO",
    "isReuseableMock": false,
    "mockPattern": "Creation:\n\u2014 Local Mock Creation in Test Case\n\nStubbing:\n\u2014 Test Case\n\nVerification:\n\u2014 None",
    "classContext": {
      "packageName": "com.cloud.network.as",
      "filePath": "C:\\java tool\\Apache\\cloudstack\\server\\src\\test\\java\\com\\cloud\\network\\as\\AutoScaleManagerImplTest.java",
      "className": "AutoScaleManagerImplTest"
    },
    "statements": [
      {
        "type": "DECLARATION",
        "code": "CounterTO scaleUpCounter = Mockito.mock(CounterTO.class);",
        "line": 2409,
        "locate": "Test Case",
        "locationContext": {
          "methodName": "processGetAutoScaleMetricsAnswer",
          "methodAnnotations": [
            "@Test"
          ]
        }
      },
      {
        "type": "STUBBING",
        "code": "when(scaleUpCounter.getSource()).thenReturn(Counter.Source.VIRTUALROUTER);",
        "line": 2418,
        "locate": "Test Case",
        "locationContext": {
          "methodName": "processGetAutoScaleMetricsAnswer",
          "methodAnnotations": [
            "@Test"
          ]
        }
      },
      {
        "type": "STUBBING",
        "code": "when(scaleUpCounter.getId()).thenReturn(counterId);",
        "line": 2419,
        "locate": "Test Case",
        "locationContext": {
          "methodName": "processGetAutoScaleMetricsAnswer",
          "methodAnnotations": [
            "@Test"
          ]
        }
      }
    ],
    "pattern_id": 1
  },
  {
    "variableName": "scaleDownCounter",
    "variableType": "CounterTO",
    "mockedClass": "CounterTO",
    "isReuseableMock": false,
    "mockPattern": "Creation:\n\u2014 Local Mock Creation in Test Case\n\nStubbing:\n\u2014 Test Case\n\nVerification:\n\u2014 None",
    "classContext": {
      "packageName": "com.cloud.network.as",
      "filePath": "C:\\java tool\\Apache\\cloudstack\\server\\src\\test\\java\\com\\cloud\\network\\as\\AutoScaleManagerImplTest.java",
      "className": "AutoScaleManagerImplTest"
    },
    "statements": [
      {
        "type": "DECLARATION",
        "code": "CounterTO scaleDownCounter = Mockito.mock(CounterTO.class);",
        "line": 2410,
        "locate": "Test Case",
        "locationContext": {
          "methodName": "processGetAutoScaleMetricsAnswer",
          "methodAnnotations": [
            "@Test"
          ]
        }
      },
      {
        "type": "STUBBING",
        "code": "when(scaleDownCounter.getSource()).thenReturn(Counter.Source.VIRTUALROUTER);",
        "line": 2420,
        "locate": "Test Case",
        "locationContext": {
          "methodName": "processGetAutoScaleMetricsAnswer",
          "methodAnnotations": [
            "@Test"
          ]
        }
      },
      {
        "type": "STUBBING",
        "code": "when(scaleDownCounter.getId()).thenReturn(counterId);",
        "line": 2421,
        "locate": "Test Case",
        "locationContext": {
          "methodName": "processGetAutoScaleMetricsAnswer",
          "methodAnnotations": [
            "@Test"
          ]
        }
      }
    ],
    "pattern_id": 1
  }
]