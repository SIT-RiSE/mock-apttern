[
  {
    "variableName": "parserMock",
    "variableType": "LibvirtDomainXMLParser",
    "mockedClass": "LibvirtDomainXMLParser",
    "isReuseableMock": "Hybrid",
    "mockPattern": "Creation:\n\u2014 Attribute Mock Creation\n\nStubbing:\n\u2014 Test Case\n\nVerification:\n\u2014 None",
    "classContext": {
      "packageName": "com.cloud.hypervisor.kvm.resource",
      "filePath": "C:\\java tool\\Apache\\cloudstack\\plugins\\hypervisors\\kvm\\src\\test\\java\\com\\cloud\\hypervisor\\kvm\\resource\\LibvirtComputingResourceTest.java",
      "className": "LibvirtComputingResourceTest"
    },
    "statements": [
      {
        "type": "FIELD_MOCK_CREATION",
        "code": "@Mock\r\nLibvirtDomainXMLParser parserMock;",
        "line": 244,
        "locate": "Attribute",
        "locationContext": {
          "methodName": "[FieldDeclaration]",
          "methodAnnotations": [
            "@Mock"
          ]
        }
      },
      {
        "type": "STUBBING",
        "code": "Mockito.when(parserMock.parseDomainXML(Mockito.anyString())).thenReturn(true);",
        "line": 6217,
        "locate": "Test Case",
        "locationContext": {
          "methodName": "setupMemoryBalloonStatsPeriodTestMemBalloonPropertyDisabled",
          "methodAnnotations": [
            "@Test"
          ]
        }
      },
      {
        "type": "STUBBING",
        "code": "Mockito.when(parserMock.getMemBalloon()).thenReturn(memBalloonDef);",
        "line": 6218,
        "locate": "Test Case",
        "locationContext": {
          "methodName": "setupMemoryBalloonStatsPeriodTestMemBalloonPropertyDisabled",
          "methodAnnotations": [
            "@Test"
          ]
        }
      },
      {
        "type": "STUBBING",
        "code": "Mockito.when(parserMock.parseDomainXML(Mockito.anyString())).thenReturn(true);",
        "line": 6232,
        "locate": "Test Case",
        "locationContext": {
          "methodName": "setupMemoryBalloonStatsPeriodTestErrorWhenSetNewPeriod",
          "methodAnnotations": [
            "@Test"
          ]
        }
      },
      {
        "type": "STUBBING",
        "code": "Mockito.when(parserMock.getMemBalloon()).thenReturn(memBalloonDef);",
        "line": 6233,
        "locate": "Test Case",
        "locationContext": {
          "methodName": "setupMemoryBalloonStatsPeriodTestErrorWhenSetNewPeriod",
          "methodAnnotations": [
            "@Test"
          ]
        }
      },
      {
        "type": "STUBBING",
        "code": "Mockito.when(parserMock.parseDomainXML(Mockito.anyString())).thenReturn(true);",
        "line": 6248,
        "locate": "Test Case",
        "locationContext": {
          "methodName": "setupMemoryBalloonStatsPeriodTestSetNewPeriodSuccessfully",
          "methodAnnotations": [
            "@Test"
          ]
        }
      },
      {
        "type": "STUBBING",
        "code": "Mockito.when(parserMock.getMemBalloon()).thenReturn(memBalloonDef);",
        "line": 6249,
        "locate": "Test Case",
        "locationContext": {
          "methodName": "setupMemoryBalloonStatsPeriodTestSetNewPeriodSuccessfully",
          "methodAnnotations": [
            "@Test"
          ]
        }
      },
      {
        "type": "STUBBING",
        "code": "Mockito.when(parserMock.parseDomainXML(Mockito.anyString())).thenReturn(true);",
        "line": 6265,
        "locate": "Test Case",
        "locationContext": {
          "methodName": "setupMemoryBalloonStatsPeriodTestSkipVm",
          "methodAnnotations": [
            "@Test"
          ]
        }
      },
      {
        "type": "STUBBING",
        "code": "Mockito.when(parserMock.getMemBalloon()).thenReturn(memBalloonDef);",
        "line": 6266,
        "locate": "Test Case",
        "locationContext": {
          "methodName": "setupMemoryBalloonStatsPeriodTestSkipVm",
          "methodAnnotations": [
            "@Test"
          ]
        }
      }
    ],
    "pattern_id": 4
  },
  {
    "variableName": "libvirtDomainXMLParserMock",
    "variableType": "LibvirtDomainXMLParser",
    "mockedClass": "LibvirtDomainXMLParser",
    "isReuseableMock": "Hybrid",
    "mockPattern": "Creation:\n\u2014 Attribute Mock Creation\n\nStubbing:\n\u2014 Test Case\n\nVerification:\n\u2014 None",
    "classContext": {
      "packageName": "com.cloud.hypervisor.kvm.storage",
      "filePath": "C:\\java tool\\Apache\\cloudstack\\plugins\\hypervisors\\kvm\\src\\test\\java\\com\\cloud\\hypervisor\\kvm\\storage\\KVMStorageProcessorTest.java",
      "className": "KVMStorageProcessorTest"
    },
    "statements": [
      {
        "type": "FIELD_MOCK_CREATION",
        "code": "@Mock\r\nLibvirtDomainXMLParser libvirtDomainXMLParserMock;",
        "line": 100,
        "locate": "Attribute",
        "locationContext": {
          "methodName": "[FieldDeclaration]",
          "methodAnnotations": [
            "@Mock"
          ]
        }
      },
      {
        "type": "STUBBING",
        "code": "PowerMockito.when(libvirtDomainXMLParserMock.parseDomainXML(Mockito.anyString())).thenReturn(true);",
        "line": 393,
        "locate": "Test Case",
        "locationContext": {
          "methodName": "checkDetachSucessTest",
          "methodAnnotations": []
        }
      },
      {
        "type": "STUBBING",
        "code": "PowerMockito.when(libvirtDomainXMLParserMock.getDisks()).thenReturn(disks);",
        "line": 394,
        "locate": "Test Case",
        "locationContext": {
          "methodName": "checkDetachSucessTest",
          "methodAnnotations": []
        }
      }
    ],
    "pattern_id": 4
  }
]