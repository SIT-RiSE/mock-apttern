[
  {
    "variableName": "vlanVO",
    "variableType": "VlanVO",
    "mockedClass": "VlanVO",
    "isReuseableMock": false,
    "mockPattern": "Creation:\n\u2014 Local Mock Creation in Test Case\n\nStubbing:\n\u2014 Test Case\n\nVerification:\n\u2014 None",
    "classContext": {
      "packageName": "com.cloud.network.element",
      "filePath": "C:\\java tool\\Apache\\cloudstack\\plugins\\network-elements\\cisco-vnmc\\src\\test\\java\\com\\cloud\\network\\element\\CiscoVnmcElementTest.java",
      "className": "CiscoVnmcElementTest"
    },
    "statements": [
      {
        "type": "DECLARATION",
        "code": "VlanVO vlanVO = mock(VlanVO.class);",
        "line": 219,
        "locate": "Test Case",
        "locationContext": {
          "methodName": "implementTest",
          "methodAnnotations": [
            "@Test"
          ]
        }
      },
      {
        "type": "STUBBING",
        "code": "when(vlanVO.getVlanGateway()).thenReturn(\"1.1.1.1\");",
        "line": 220,
        "locate": "Test Case",
        "locationContext": {
          "methodName": "implementTest",
          "methodAnnotations": [
            "@Test"
          ]
        }
      }
    ],
    "pattern_id": 1
  },
  {
    "variableName": "vlanVO",
    "variableType": "VlanVO",
    "mockedClass": "VlanVO",
    "isReuseableMock": false,
    "mockPattern": "Creation:\n\u2014 Local Mock Creation in Test Case\n\nStubbing:\n\u2014 Test Case\n\nVerification:\n\u2014 None",
    "classContext": {
      "packageName": "com.cloud.network.element",
      "filePath": "C:\\java tool\\Apache\\cloudstack\\plugins\\network-elements\\cisco-vnmc\\src\\test\\java\\com\\cloud\\network\\element\\CiscoVnmcElementTest.java",
      "className": "CiscoVnmcElementTest"
    },
    "statements": [
      {
        "type": "DECLARATION",
        "code": "VlanVO vlanVO = mock(VlanVO.class);",
        "line": 341,
        "locate": "Test Case",
        "locationContext": {
          "methodName": "applyPRulesTest",
          "methodAnnotations": [
            "@Test"
          ]
        }
      },
      {
        "type": "STUBBING",
        "code": "when(vlanVO.getVlanTag()).thenReturn(null);",
        "line": 342,
        "locate": "Test Case",
        "locationContext": {
          "methodName": "applyPRulesTest",
          "methodAnnotations": [
            "@Test"
          ]
        }
      }
    ],
    "pattern_id": 1
  },
  {
    "variableName": "vlanVO",
    "variableType": "VlanVO",
    "mockedClass": "VlanVO",
    "isReuseableMock": false,
    "mockPattern": "Creation:\n\u2014 Local Mock Creation in Test Case\n\nStubbing:\n\u2014 Test Case\n\nVerification:\n\u2014 None",
    "classContext": {
      "packageName": "com.cloud.network.element",
      "filePath": "C:\\java tool\\Apache\\cloudstack\\plugins\\network-elements\\cisco-vnmc\\src\\test\\java\\com\\cloud\\network\\element\\CiscoVnmcElementTest.java",
      "className": "CiscoVnmcElementTest"
    },
    "statements": [
      {
        "type": "DECLARATION",
        "code": "VlanVO vlanVO = mock(VlanVO.class);",
        "line": 391,
        "locate": "Test Case",
        "locationContext": {
          "methodName": "applyStaticNatsTest",
          "methodAnnotations": [
            "@Test"
          ]
        }
      },
      {
        "type": "STUBBING",
        "code": "when(vlanVO.getVlanTag()).thenReturn(null);",
        "line": 392,
        "locate": "Test Case",
        "locationContext": {
          "methodName": "applyStaticNatsTest",
          "methodAnnotations": [
            "@Test"
          ]
        }
      }
    ],
    "pattern_id": 1
  },
  {
    "variableName": "vlanVO",
    "variableType": "VlanVO",
    "mockedClass": "VlanVO",
    "isReuseableMock": false,
    "mockPattern": "Creation:\n\u2014 Local Mock Creation in Test Case\n\nStubbing:\n\u2014 Test Case\n\nVerification:\n\u2014 None",
    "classContext": {
      "packageName": "com.cloud.network.element",
      "filePath": "C:\\java tool\\Apache\\cloudstack\\plugins\\network-elements\\nicira-nvp\\src\\test\\java\\com\\cloud\\network\\element\\NiciraNvpElementTest.java",
      "className": "NiciraNvpElementTest"
    },
    "statements": [
      {
        "type": "DECLARATION",
        "code": "VlanVO vlanVO = mock(VlanVO.class);",
        "line": 361,
        "locate": "Test Case",
        "locationContext": {
          "methodName": "implementSharedNetworkNumericalVlanIdTest",
          "methodAnnotations": [
            "@Test"
          ]
        }
      },
      {
        "type": "STUBBING",
        "code": "when(vlanVO.getVlanTag()).thenReturn(\"111\");",
        "line": 362,
        "locate": "Test Case",
        "locationContext": {
          "methodName": "implementSharedNetworkNumericalVlanIdTest",
          "methodAnnotations": [
            "@Test"
          ]
        }
      }
    ],
    "pattern_id": 1
  },
  {
    "variableName": "vlanVO",
    "variableType": "VlanVO",
    "mockedClass": "VlanVO",
    "isReuseableMock": false,
    "mockPattern": "Creation:\n\u2014 Local Mock Creation in Test Case\n\nStubbing:\n\u2014 Test Case\n\nVerification:\n\u2014 None",
    "classContext": {
      "packageName": "com.cloud.network.element",
      "filePath": "C:\\java tool\\Apache\\cloudstack\\plugins\\network-elements\\nicira-nvp\\src\\test\\java\\com\\cloud\\network\\element\\NiciraNvpElementTest.java",
      "className": "NiciraNvpElementTest"
    },
    "statements": [
      {
        "type": "DECLARATION",
        "code": "VlanVO vlanVO = mock(VlanVO.class);",
        "line": 413,
        "locate": "Test Case",
        "locationContext": {
          "methodName": "implementSharedNetworkNumericalVlanIdWithoutL2GatewayService",
          "methodAnnotations": [
            "@Test"
          ]
        }
      },
      {
        "type": "STUBBING",
        "code": "when(vlanVO.getVlanTag()).thenReturn(\"111\");",
        "line": 414,
        "locate": "Test Case",
        "locationContext": {
          "methodName": "implementSharedNetworkNumericalVlanIdWithoutL2GatewayService",
          "methodAnnotations": [
            "@Test"
          ]
        }
      }
    ],
    "pattern_id": 1
  },
  {
    "variableName": "vlanVO",
    "variableType": "VlanVO",
    "mockedClass": "VlanVO",
    "isReuseableMock": false,
    "mockPattern": "Creation:\n\u2014 Local Mock Creation in Test Case\n\nStubbing:\n\u2014 Test Case\n\nVerification:\n\u2014 None",
    "classContext": {
      "packageName": "org.apache.cloudstack.network.tungsten.service",
      "filePath": "C:\\java tool\\Apache\\cloudstack\\plugins\\network-elements\\tungsten\\src\\test\\java\\org\\apache\\cloudstack\\network\\tungsten\\service\\TungstenServiceImplTest.java",
      "className": "TungstenServiceImplTest"
    },
    "statements": [
      {
        "type": "DECLARATION",
        "code": "VlanVO vlanVO = mock(VlanVO.class);",
        "line": 520,
        "locate": "Test Case",
        "locationContext": {
          "methodName": "addPublicNetworkSubnetTest",
          "methodAnnotations": [
            "@Test"
          ]
        }
      },
      {
        "type": "STUBBING",
        "code": "when(vlanVO.getIpRange()).thenReturn(\"192.168.100.100-192.168.100.200\");",
        "line": 535,
        "locate": "Test Case",
        "locationContext": {
          "methodName": "addPublicNetworkSubnetTest",
          "methodAnnotations": [
            "@Test"
          ]
        }
      },
      {
        "type": "STUBBING",
        "code": "when(vlanVO.getVlanGateway()).thenReturn(\"192.168.100.1\");",
        "line": 536,
        "locate": "Test Case",
        "locationContext": {
          "methodName": "addPublicNetworkSubnetTest",
          "methodAnnotations": [
            "@Test"
          ]
        }
      },
      {
        "type": "STUBBING",
        "code": "when(vlanVO.getVlanNetmask()).thenReturn(\"255.255.255.0\");",
        "line": 537,
        "locate": "Test Case",
        "locationContext": {
          "methodName": "addPublicNetworkSubnetTest",
          "methodAnnotations": [
            "@Test"
          ]
        }
      }
    ],
    "pattern_id": 1
  },
  {
    "variableName": "vlanVO",
    "variableType": "VlanVO",
    "mockedClass": "VlanVO",
    "isReuseableMock": false,
    "mockPattern": "Creation:\n\u2014 Local Mock Creation in Test Case\n\nStubbing:\n\u2014 Test Case\n\nVerification:\n\u2014 None",
    "classContext": {
      "packageName": "com.cloud.network",
      "filePath": "C:\\java tool\\Apache\\cloudstack\\server\\src\\test\\java\\com\\cloud\\network\\Ipv6ServiceImplTest.java",
      "className": "Ipv6ServiceImplTest"
    },
    "statements": [
      {
        "type": "DECLARATION",
        "code": "VlanVO vlanVO = Mockito.mock(VlanVO.class);",
        "line": 602,
        "locate": "Test Case",
        "locationContext": {
          "methodName": "testCheckNetworkIpv6UpgradeForNoIpv6Vlan",
          "methodAnnotations": [
            "@Test"
          ]
        }
      },
      {
        "type": "STUBBING",
        "code": "Mockito.when(vlanVO.getVlanTag()).thenReturn(vlan);",
        "line": 603,
        "locate": "Test Case",
        "locationContext": {
          "methodName": "testCheckNetworkIpv6UpgradeForNoIpv6Vlan",
          "methodAnnotations": [
            "@Test"
          ]
        }
      }
    ],
    "pattern_id": 1
  },
  {
    "variableName": "vlanVO",
    "variableType": "VlanVO",
    "mockedClass": "VlanVO",
    "isReuseableMock": false,
    "mockPattern": "Creation:\n\u2014 Local Mock Creation in Test Case\n\nStubbing:\n\u2014 Test Case\n\nVerification:\n\u2014 None",
    "classContext": {
      "packageName": "com.cloud.network",
      "filePath": "C:\\java tool\\Apache\\cloudstack\\server\\src\\test\\java\\com\\cloud\\network\\Ipv6ServiceImplTest.java",
      "className": "Ipv6ServiceImplTest"
    },
    "statements": [
      {
        "type": "DECLARATION",
        "code": "VlanVO vlanVO = Mockito.mock(VlanVO.class);",
        "line": 620,
        "locate": "Test Case",
        "locationContext": {
          "methodName": "testCheckNetworkIpv6UpgradeForNetwork",
          "methodAnnotations": [
            "@Test"
          ]
        }
      },
      {
        "type": "STUBBING",
        "code": "Mockito.when(vlanVO.getVlanTag()).thenReturn(vlan);",
        "line": 621,
        "locate": "Test Case",
        "locationContext": {
          "methodName": "testCheckNetworkIpv6UpgradeForNetwork",
          "methodAnnotations": [
            "@Test"
          ]
        }
      }
    ],
    "pattern_id": 1
  },
  {
    "variableName": "vlanVO",
    "variableType": "VlanVO",
    "mockedClass": "VlanVO",
    "isReuseableMock": false,
    "mockPattern": "Creation:\n\u2014 Local Mock Creation in Test Case\n\nStubbing:\n\u2014 Test Case\n\nVerification:\n\u2014 None",
    "classContext": {
      "packageName": "com.cloud.network.vpc",
      "filePath": "C:\\java tool\\Apache\\cloudstack\\server\\src\\test\\java\\com\\cloud\\network\\vpc\\VpcManagerImplTest.java",
      "className": "VpcManagerImplTest"
    },
    "statements": [
      {
        "type": "DECLARATION",
        "code": "VlanVO vlanVO = Mockito.mock(VlanVO.class);",
        "line": 382,
        "locate": "Test Case",
        "locationContext": {
          "methodName": "testUpdateVpcNetwork",
          "methodAnnotations": [
            "@Test"
          ]
        }
      },
      {
        "type": "STUBBING",
        "code": "Mockito.when(vlanVO.getVlanNetmask()).thenReturn(\"netmask\");",
        "line": 383,
        "locate": "Test Case",
        "locationContext": {
          "methodName": "testUpdateVpcNetwork",
          "methodAnnotations": [
            "@Test"
          ]
        }
      }
    ],
    "pattern_id": 1
  },
  {
    "variableName": "vlan",
    "variableType": "VlanVO",
    "mockedClass": "VlanVO",
    "isReuseableMock": false,
    "mockPattern": "Creation:\n\u2014 Local Mock Creation in Test Case\n\nStubbing:\n\u2014 Test Case\n\nVerification:\n\u2014 None",
    "classContext": {
      "packageName": "com.cloud.vm",
      "filePath": "C:\\java tool\\Apache\\cloudstack\\server\\src\\test\\java\\com\\cloud\\vm\\UserVmManagerTest.java",
      "className": "UserVmManagerTest"
    },
    "statements": [
      {
        "type": "DECLARATION",
        "code": "VlanVO vlan = mock(VlanVO.class);",
        "line": 624,
        "locate": "Test Case",
        "locationContext": {
          "methodName": "testUpdateVmNicIpSuccess2",
          "methodAnnotations": [
            "@Test"
          ]
        }
      },
      {
        "type": "STUBBING",
        "code": "when(vlan.getVlanGateway()).thenReturn(\"10.10.10.1\");",
        "line": 625,
        "locate": "Test Case",
        "locationContext": {
          "methodName": "testUpdateVmNicIpSuccess2",
          "methodAnnotations": [
            "@Test"
          ]
        }
      },
      {
        "type": "STUBBING",
        "code": "when(vlan.getVlanNetmask()).thenReturn(\"255.255.255.0\");",
        "line": 626,
        "locate": "Test Case",
        "locationContext": {
          "methodName": "testUpdateVmNicIpSuccess2",
          "methodAnnotations": [
            "@Test"
          ]
        }
      }
    ],
    "pattern_id": 1
  }
]