[
  {
    "variableName": "_exportApi",
    "variableType": "ExportAPI",
    "mockedClass": "ExportAPI",
    "isReuseableMock": false,
    "mockPattern": "Creation:\n\u2014 Attribute Mock Creation\n\nStubbing:\n\u2014 None\n\nVerification:\n\u2014 Test Case",
    "classContext": {
      "packageName": "com.globo.globodns.cloudstack.resource",
      "filePath": "C:\\java tool\\Apache\\cloudstack\\plugins\\network-elements\\globodns\\src\\test\\java\\com\\globo\\globodns\\cloudstack\\resource\\GloboDnsResourceTest.java",
      "className": "GloboDnsResourceTest"
    },
    "statements": [
      {
        "type": "FIELD_DECLARATION",
        "code": "private ExportAPI _exportApi;",
        "line": 64,
        "locate": "Attribute",
        "locationContext": {
          "methodName": "[FieldDeclaration]",
          "methodAnnotations": []
        }
      },
      {
        "type": "ASSIGNMENT",
        "code": "_exportApi = mock(ExportAPI.class);",
        "line": 94,
        "locate": "@Before",
        "locationContext": {
          "methodName": "setUp",
          "methodAnnotations": [
            "@Before"
          ]
        }
      },
      {
        "type": "VERIFICATION",
        "code": "verify(_exportApi, times(1)).scheduleExport();",
        "line": 156,
        "locate": "Test Case",
        "locationContext": {
          "methodName": "testCreateDomainWithSuccessWhenDomainDoesntExistAndOverrideIsTrue",
          "methodAnnotations": [
            "@Test"
          ]
        }
      },
      {
        "type": "VERIFICATION",
        "code": "verify(_exportApi, times(1)).scheduleExport();",
        "line": 196,
        "locate": "Test Case",
        "locationContext": {
          "methodName": "testCreateRecordAndReverseWithSuccessWhenDomainExistsAndRecordDoesntExistAndOverrideIsTrue",
          "methodAnnotations": [
            "@Test",
            "@SuppressWarnings"
          ]
        }
      },
      {
        "type": "VERIFICATION",
        "code": "verify(_exportApi, times(1)).scheduleExport();",
        "line": 259,
        "locate": "Test Case",
        "locationContext": {
          "methodName": "testCreateRecordAndReverseWhenDomainDoesNotExist",
          "methodAnnotations": [
            "@Test"
          ]
        }
      },
      {
        "type": "VERIFICATION",
        "code": "verify(_exportApi, times(1)).scheduleExport();",
        "line": 287,
        "locate": "Test Case",
        "locationContext": {
          "methodName": "testCreateRecordAndReverseWhenDomainDoesNotExistAndOverrideIsFalse",
          "methodAnnotations": [
            "@Test"
          ]
        }
      },
      {
        "type": "VERIFICATION",
        "code": "verify(_exportApi, times(1)).scheduleExport();",
        "line": 318,
        "locate": "Test Case",
        "locationContext": {
          "methodName": "testUpdateRecordAndReverseWhenDomainExistsAndOverrideIsTrue",
          "methodAnnotations": [
            "@Test"
          ]
        }
      },
      {
        "type": "VERIFICATION",
        "code": "verify(_exportApi, times(1)).scheduleExport();",
        "line": 345,
        "locate": "Test Case",
        "locationContext": {
          "methodName": "testRemoveRecordWhenRecordExists",
          "methodAnnotations": [
            "@Test"
          ]
        }
      },
      {
        "type": "VERIFICATION",
        "code": "verify(_exportApi, times(1)).scheduleExport();",
        "line": 366,
        "locate": "Test Case",
        "locationContext": {
          "methodName": "testRemoveRecordWithSuccessAndReverseRecordNotRemovedWhenReverseRecordExistsWithDifferentValueAndOverrideIsFalse",
          "methodAnnotations": [
            "@Test"
          ]
        }
      },
      {
        "type": "VERIFICATION",
        "code": "verify(_exportApi, times(1)).scheduleExport();",
        "line": 388,
        "locate": "Test Case",
        "locationContext": {
          "methodName": "testRemoveReverseRecordButNotRemoveRecordWhenRecordExistsWithDifferentValueAndOverrideIsFalse",
          "methodAnnotations": [
            "@Test"
          ]
        }
      },
      {
        "type": "VERIFICATION",
        "code": "verify(_exportApi, never()).scheduleExport();",
        "line": 409,
        "locate": "Test Case",
        "locationContext": {
          "methodName": "testRemoveDomainWithSuccessButDomainKeptWhenDomainExistsAndThereAreRecordsAndOverrideIsFalse",
          "methodAnnotations": [
            "@Test"
          ]
        }
      },
      {
        "type": "VERIFICATION",
        "code": "verify(_exportApi, times(1)).scheduleExport();",
        "line": 431,
        "locate": "Test Case",
        "locationContext": {
          "methodName": "testRemoveDomainWithSuccessWhenDomainExistsAndThereAreOnlyNSRecordsAndOverrideIsFalse",
          "methodAnnotations": [
            "@Test"
          ]
        }
      },
      {
        "type": "VERIFICATION",
        "code": "verify(_exportApi, times(1)).scheduleExport();",
        "line": 453,
        "locate": "Test Case",
        "locationContext": {
          "methodName": "testRemoveDomainWithSuccessWhenDomainExistsAndThereAreRecordsAndOverrideIsTrue",
          "methodAnnotations": [
            "@Test"
          ]
        }
      }
    ],
    "pattern_id": 9
  }
]