[
  {
    "variableName": "projectService",
    "variableType": "ProjectService",
    "mockedClass": "ProjectService",
    "isReuseableMock": "Fully Localized",
    "mockPattern": "Creation:\n\u2014 Local Mock Creation in Test Case\n\nStubbing:\n\u2014 Test Case\n\nVerification:\n\u2014 None",
    "classContext": {
      "packageName": "org.apache.cloudstack.api.command.test",
      "filePath": "C:\\java tool\\Apache\\cloudstack\\api\\src\\test\\java\\org\\apache\\cloudstack\\api\\command\\test\\ActivateProjectCmdTest.java",
      "className": "ActivateProjectCmdTest"
    },
    "statements": [
      {
        "type": "DECLARATION",
        "code": "ProjectService projectService = Mockito.mock(ProjectService.class);",
        "line": 59,
        "locate": "Test Case",
        "locationContext": {
          "methodName": "testGetEntityOwnerIdForNullProject",
          "methodAnnotations": [
            "@Test"
          ]
        }
      },
      {
        "type": "STUBBING",
        "code": "Mockito.when(projectService.getProject(Matchers.anyLong())).thenReturn(null);",
        "line": 60,
        "locate": "Test Case",
        "locationContext": {
          "methodName": "testGetEntityOwnerIdForNullProject",
          "methodAnnotations": [
            "@Test"
          ]
        }
      }
    ],
    "pattern_id": 1
  },
  {
    "variableName": "projectService",
    "variableType": "ProjectService",
    "mockedClass": "ProjectService",
    "isReuseableMock": "Fully Localized",
    "mockPattern": "Creation:\n\u2014 Local Mock Creation in Test Case\n\nStubbing:\n\u2014 Test Case\n\nVerification:\n\u2014 None",
    "classContext": {
      "packageName": "org.apache.cloudstack.api.command.test",
      "filePath": "C:\\java tool\\Apache\\cloudstack\\api\\src\\test\\java\\org\\apache\\cloudstack\\api\\command\\test\\ActivateProjectCmdTest.java",
      "className": "ActivateProjectCmdTest"
    },
    "statements": [
      {
        "type": "DECLARATION",
        "code": "ProjectService projectService = Mockito.mock(ProjectService.class);",
        "line": 74,
        "locate": "Test Case",
        "locationContext": {
          "methodName": "testGetEntityOwnerIdForProject",
          "methodAnnotations": [
            "@Test"
          ]
        }
      },
      {
        "type": "STUBBING",
        "code": "Mockito.when(projectService.getProject(Matchers.anyLong())).thenReturn(project);",
        "line": 77,
        "locate": "Test Case",
        "locationContext": {
          "methodName": "testGetEntityOwnerIdForProject",
          "methodAnnotations": [
            "@Test"
          ]
        }
      },
      {
        "type": "STUBBING",
        "code": "Mockito.when(projectService.getProjectOwner(Matchers.anyLong())).thenReturn(account);",
        "line": 79,
        "locate": "Test Case",
        "locationContext": {
          "methodName": "testGetEntityOwnerIdForProject",
          "methodAnnotations": [
            "@Test"
          ]
        }
      }
    ],
    "pattern_id": 1
  },
  {
    "variableName": "projectService",
    "variableType": "ProjectService",
    "mockedClass": "ProjectService",
    "isReuseableMock": "Fully Localized",
    "mockPattern": "Creation:\n\u2014 Local Mock Creation in Test Case\n\nStubbing:\n\u2014 Test Case\n\nVerification:\n\u2014 None",
    "classContext": {
      "packageName": "org.apache.cloudstack.api.command.test",
      "filePath": "C:\\java tool\\Apache\\cloudstack\\api\\src\\test\\java\\org\\apache\\cloudstack\\api\\command\\test\\AddAccountToProjectCmdTest.java",
      "className": "AddAccountToProjectCmdTest"
    },
    "statements": [
      {
        "type": "DECLARATION",
        "code": "ProjectService projectService = Mockito.mock(ProjectService.class);",
        "line": 100,
        "locate": "Test Case",
        "locationContext": {
          "methodName": "testGetEntityOwnerIdForProject",
          "methodAnnotations": [
            "@Test"
          ]
        }
      },
      {
        "type": "STUBBING",
        "code": "Mockito.when(projectService.getProject(Matchers.anyLong())).thenReturn(project);",
        "line": 104,
        "locate": "Test Case",
        "locationContext": {
          "methodName": "testGetEntityOwnerIdForProject",
          "methodAnnotations": [
            "@Test"
          ]
        }
      },
      {
        "type": "STUBBING",
        "code": "Mockito.when(projectService.getProjectOwner(Matchers.anyLong())).thenReturn(account);",
        "line": 106,
        "locate": "Test Case",
        "locationContext": {
          "methodName": "testGetEntityOwnerIdForProject",
          "methodAnnotations": [
            "@Test"
          ]
        }
      }
    ],
    "pattern_id": 1
  }
]