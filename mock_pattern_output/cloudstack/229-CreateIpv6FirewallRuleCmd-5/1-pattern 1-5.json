[
  {
    "variableName": "cmd",
    "variableType": "CreateIpv6FirewallRuleCmd",
    "mockedClass": "CreateIpv6FirewallRuleCmd",
    "isReuseableMock": "Fully Localized",
    "mockPattern": "Creation:\n\u2014 Local Mock Creation in Test Case\n\nStubbing:\n\u2014 Test Case\n\nVerification:\n\u2014 None",
    "classContext": {
      "packageName": "com.cloud.network",
      "filePath": "C:\\java tool\\Apache\\cloudstack\\server\\src\\test\\java\\com\\cloud\\network\\Ipv6ServiceImplTest.java",
      "className": "Ipv6ServiceImplTest"
    },
    "statements": [
      {
        "type": "DECLARATION",
        "code": "CreateIpv6FirewallRuleCmd cmd = Mockito.mock(CreateIpv6FirewallRuleCmd.class);",
        "line": 694,
        "locate": "Test Case",
        "locationContext": {
          "methodName": "testInvalidSourceCidrCreateIpv6FirewallRule",
          "methodAnnotations": [
            "@Test"
          ]
        }
      },
      {
        "type": "STUBBING",
        "code": "Mockito.when(cmd.getSourceCidrList()).thenReturn(List.of(\"10.1.1.1\"));",
        "line": 695,
        "locate": "Test Case",
        "locationContext": {
          "methodName": "testInvalidSourceCidrCreateIpv6FirewallRule",
          "methodAnnotations": [
            "@Test"
          ]
        }
      }
    ],
    "pattern_id": 1
  },
  {
    "variableName": "cmd",
    "variableType": "CreateIpv6FirewallRuleCmd",
    "mockedClass": "CreateIpv6FirewallRuleCmd",
    "isReuseableMock": "Fully Localized",
    "mockPattern": "Creation:\n\u2014 Local Mock Creation in Test Case\n\nStubbing:\n\u2014 Test Case\n\nVerification:\n\u2014 None",
    "classContext": {
      "packageName": "com.cloud.network",
      "filePath": "C:\\java tool\\Apache\\cloudstack\\server\\src\\test\\java\\com\\cloud\\network\\Ipv6ServiceImplTest.java",
      "className": "Ipv6ServiceImplTest"
    },
    "statements": [
      {
        "type": "DECLARATION",
        "code": "CreateIpv6FirewallRuleCmd cmd = Mockito.mock(CreateIpv6FirewallRuleCmd.class);",
        "line": 706,
        "locate": "Test Case",
        "locationContext": {
          "methodName": "testInvalidDestinationCidrCreateIpv6FirewallRule",
          "methodAnnotations": [
            "@Test"
          ]
        }
      },
      {
        "type": "STUBBING",
        "code": "Mockito.when(cmd.getDestinationCidrList()).thenReturn(List.of(\"10.1.1.1\"));",
        "line": 707,
        "locate": "Test Case",
        "locationContext": {
          "methodName": "testInvalidDestinationCidrCreateIpv6FirewallRule",
          "methodAnnotations": [
            "@Test"
          ]
        }
      }
    ],
    "pattern_id": 1
  },
  {
    "variableName": "cmd",
    "variableType": "CreateIpv6FirewallRuleCmd",
    "mockedClass": "CreateIpv6FirewallRuleCmd",
    "isReuseableMock": "Fully Localized",
    "mockPattern": "Creation:\n\u2014 Local Mock Creation in Test Case\n\nStubbing:\n\u2014 Test Case\n\nVerification:\n\u2014 None",
    "classContext": {
      "packageName": "com.cloud.network",
      "filePath": "C:\\java tool\\Apache\\cloudstack\\server\\src\\test\\java\\com\\cloud\\network\\Ipv6ServiceImplTest.java",
      "className": "Ipv6ServiceImplTest"
    },
    "statements": [
      {
        "type": "DECLARATION",
        "code": "CreateIpv6FirewallRuleCmd cmd = Mockito.mock(CreateIpv6FirewallRuleCmd.class);",
        "line": 718,
        "locate": "Test Case",
        "locationContext": {
          "methodName": "testStartPortCidrCreateIpv6FirewallRule",
          "methodAnnotations": [
            "@Test"
          ]
        }
      },
      {
        "type": "STUBBING",
        "code": "Mockito.when(cmd.getSourcePortStart()).thenReturn(800000);",
        "line": 719,
        "locate": "Test Case",
        "locationContext": {
          "methodName": "testStartPortCidrCreateIpv6FirewallRule",
          "methodAnnotations": [
            "@Test"
          ]
        }
      }
    ],
    "pattern_id": 1
  },
  {
    "variableName": "cmd",
    "variableType": "CreateIpv6FirewallRuleCmd",
    "mockedClass": "CreateIpv6FirewallRuleCmd",
    "isReuseableMock": "Fully Localized",
    "mockPattern": "Creation:\n\u2014 Local Mock Creation in Test Case\n\nStubbing:\n\u2014 Test Case\n\nVerification:\n\u2014 None",
    "classContext": {
      "packageName": "com.cloud.network",
      "filePath": "C:\\java tool\\Apache\\cloudstack\\server\\src\\test\\java\\com\\cloud\\network\\Ipv6ServiceImplTest.java",
      "className": "Ipv6ServiceImplTest"
    },
    "statements": [
      {
        "type": "DECLARATION",
        "code": "CreateIpv6FirewallRuleCmd cmd = Mockito.mock(CreateIpv6FirewallRuleCmd.class);",
        "line": 730,
        "locate": "Test Case",
        "locationContext": {
          "methodName": "testEndPortCidrCreateIpv6FirewallRule",
          "methodAnnotations": [
            "@Test"
          ]
        }
      },
      {
        "type": "STUBBING",
        "code": "Mockito.when(cmd.getSourcePortEnd()).thenReturn(800000);",
        "line": 731,
        "locate": "Test Case",
        "locationContext": {
          "methodName": "testEndPortCidrCreateIpv6FirewallRule",
          "methodAnnotations": [
            "@Test"
          ]
        }
      }
    ],
    "pattern_id": 1
  },
  {
    "variableName": "cmd",
    "variableType": "CreateIpv6FirewallRuleCmd",
    "mockedClass": "CreateIpv6FirewallRuleCmd",
    "isReuseableMock": "Fully Localized",
    "mockPattern": "Creation:\n\u2014 Local Mock Creation in Test Case\n\nStubbing:\n\u2014 Test Case\n\nVerification:\n\u2014 None",
    "classContext": {
      "packageName": "com.cloud.network",
      "filePath": "C:\\java tool\\Apache\\cloudstack\\server\\src\\test\\java\\com\\cloud\\network\\Ipv6ServiceImplTest.java",
      "className": "Ipv6ServiceImplTest"
    },
    "statements": [
      {
        "type": "DECLARATION",
        "code": "CreateIpv6FirewallRuleCmd cmd = Mockito.mock(CreateIpv6FirewallRuleCmd.class);",
        "line": 742,
        "locate": "Test Case",
        "locationContext": {
          "methodName": "testPortRangeCidrCreateIpv6FirewallRule",
          "methodAnnotations": [
            "@Test"
          ]
        }
      },
      {
        "type": "STUBBING",
        "code": "Mockito.when(cmd.getSourcePortStart()).thenReturn(900);",
        "line": 743,
        "locate": "Test Case",
        "locationContext": {
          "methodName": "testPortRangeCidrCreateIpv6FirewallRule",
          "methodAnnotations": [
            "@Test"
          ]
        }
      },
      {
        "type": "STUBBING",
        "code": "Mockito.when(cmd.getSourcePortEnd()).thenReturn(800);",
        "line": 744,
        "locate": "Test Case",
        "locationContext": {
          "methodName": "testPortRangeCidrCreateIpv6FirewallRule",
          "methodAnnotations": [
            "@Test"
          ]
        }
      }
    ],
    "pattern_id": 1
  }
]