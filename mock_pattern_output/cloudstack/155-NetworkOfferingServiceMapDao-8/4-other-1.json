[
  {
    "variableName": "networkOfferingServiceMapDao",
    "variableType": "NetworkOfferingServiceMapDao",
    "mockedClass": "NetworkOfferingServiceMapDao",
    "isReuseableMock": null,
    "mockPattern": "Creation:\n\u2014 Attribute Mock Creation\n\nStubbing:\n\u2014 Helper Method\n\u2014 Test Case\n\nVerification:\n\u2014 None",
    "classContext": {
      "packageName": "com.cloud.network",
      "filePath": "C:\\java tool\\Apache\\cloudstack\\server\\src\\test\\java\\com\\cloud\\network\\NetworkServiceImplTest.java",
      "className": "NetworkServiceImplTest"
    },
    "statements": [
      {
        "type": "FIELD_MOCK_CREATION",
        "code": "@Mock\r\nNetworkOfferingServiceMapDao networkOfferingServiceMapDao;",
        "line": 122,
        "locate": "Attribute",
        "locationContext": {
          "methodName": "[FieldDeclaration]",
          "methodAnnotations": [
            "@Mock"
          ]
        }
      },
      {
        "type": "STUBBING",
        "code": "Mockito.when(networkOfferingServiceMapDao.areServicesSupportedByNetworkOffering(networkOfferingId, Network.Service.Dns)).thenReturn(dnsServiceSupported);",
        "line": 521,
        "locate": "Helper Method",
        "locationContext": {
          "methodName": "prepareCreateNetworkDnsMocks",
          "methodAnnotations": []
        }
      },
      {
        "type": "STUBBING",
        "code": "Mockito.when(networkOfferingServiceMapDao.areServicesSupportedByNetworkOffering(offeringId, Network.Service.Dns)).thenReturn(true);",
        "line": 601,
        "locate": "Test Case",
        "locationContext": {
          "methodName": "testCheckAndUpdateNetworkNoUpdate",
          "methodAnnotations": [
            "@Test"
          ]
        }
      },
      {
        "type": "STUBBING",
        "code": "Mockito.when(networkOfferingServiceMapDao.areServicesSupportedByNetworkOffering(offeringId, Network.Service.Dns)).thenReturn(false);",
        "line": 615,
        "locate": "Test Case",
        "locationContext": {
          "methodName": "testCheckAndUpdateNetworkOfferingChangeReset",
          "methodAnnotations": [
            "@Test"
          ]
        }
      },
      {
        "type": "STUBBING",
        "code": "Mockito.when(networkOfferingServiceMapDao.areServicesSupportedByNetworkOffering(offeringId, Network.Service.Dns)).thenReturn(false);",
        "line": 648,
        "locate": "Test Case",
        "locationContext": {
          "methodName": "testCheckAndUpdateNetworkDnsServiceFailure",
          "methodAnnotations": [
            "@Test"
          ]
        }
      },
      {
        "type": "STUBBING",
        "code": "Mockito.when(networkOfferingServiceMapDao.areServicesSupportedByNetworkOffering(offeringId, Network.Service.Dns)).thenReturn(true);",
        "line": 661,
        "locate": "Test Case",
        "locationContext": {
          "methodName": "testCheckAndUpdateNetworkNotSharedIp6Failure",
          "methodAnnotations": [
            "@Test"
          ]
        }
      },
      {
        "type": "STUBBING",
        "code": "Mockito.when(networkOfferingServiceMapDao.areServicesSupportedByNetworkOffering(offeringId, Network.Service.Dns)).thenReturn(true);",
        "line": 674,
        "locate": "Test Case",
        "locationContext": {
          "methodName": "testCheckAndUpdateNetworkNotIsolatedIp6Failure",
          "methodAnnotations": [
            "@Test"
          ]
        }
      },
      {
        "type": "STUBBING",
        "code": "Mockito.when(networkOfferingServiceMapDao.areServicesSupportedByNetworkOffering(offeringId, Network.Service.Dns)).thenReturn(true);",
        "line": 693,
        "locate": "Test Case",
        "locationContext": {
          "methodName": "testCheckAndUpdateNetworkSuccess",
          "methodAnnotations": [
            "@Test"
          ]
        }
      },
      {
        "type": "STUBBING",
        "code": "Mockito.when(networkOfferingServiceMapDao.areServicesSupportedByNetworkOffering(offeringId, Network.Service.Dns)).thenReturn(true);",
        "line": 719,
        "locate": "Test Case",
        "locationContext": {
          "methodName": "testCheckAndUpdateNetworkResetSuccess",
          "methodAnnotations": [
            "@Test"
          ]
        }
      }
    ],
    "pattern_id": 26
  }
]