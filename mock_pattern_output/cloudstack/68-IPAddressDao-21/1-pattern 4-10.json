[
  {
    "variableName": "ipAddressDao",
    "variableType": "IPAddressDao",
    "mockedClass": "IPAddressDao",
    "isReuseableMock": "Hybrid",
    "mockPattern": "Creation:\n\u2014 Attribute Mock Creation\n\nStubbing:\n\u2014 Test Case\n\nVerification:\n\u2014 None",
    "classContext": {
      "packageName": "com.cloud.kubernetes.cluster.actionworkers",
      "filePath": "C:\\java tool\\Apache\\cloudstack\\plugins\\integrations\\kubernetes-service\\src\\test\\java\\com\\cloud\\kubernetes\\cluster\\actionworkers\\KubernetesClusterActionWorkerTest.java",
      "className": "KubernetesClusterActionWorkerTest"
    },
    "statements": [
      {
        "type": "FIELD_MOCK_CREATION",
        "code": "@Mock\r\nIPAddressDao ipAddressDao;",
        "line": 60,
        "locate": "Attribute",
        "locationContext": {
          "methodName": "[FieldDeclaration]",
          "methodAnnotations": [
            "@Mock"
          ]
        }
      },
      {
        "type": "STUBBING",
        "code": "Mockito.when(ipAddressDao.findByUuid(uuid)).thenReturn(address);",
        "line": 109,
        "locate": "Test Case",
        "locationContext": {
          "methodName": "testGetVpcTierKubernetesPublicIpNullVpc",
          "methodAnnotations": [
            "@Test"
          ]
        }
      },
      {
        "type": "STUBBING",
        "code": "Mockito.when(ipAddressDao.findByUuid(uuid)).thenReturn(address);",
        "line": 119,
        "locate": "Test Case",
        "locationContext": {
          "methodName": "testGetVpcTierKubernetesPublicIpDifferentVpc",
          "methodAnnotations": [
            "@Test"
          ]
        }
      },
      {
        "type": "STUBBING",
        "code": "Mockito.when(ipAddressDao.findByUuid(uuid)).thenReturn(address);",
        "line": 129,
        "locate": "Test Case",
        "locationContext": {
          "methodName": "testGetVpcTierKubernetesPublicIpValid",
          "methodAnnotations": [
            "@Test"
          ]
        }
      }
    ],
    "pattern_id": 4
  },
  {
    "variableName": "ipAddressDao",
    "variableType": "IPAddressDao",
    "mockedClass": "IPAddressDao",
    "isReuseableMock": "Hybrid",
    "mockPattern": "Creation:\n\u2014 Attribute Mock Creation\n\nStubbing:\n\u2014 Test Case\n\nVerification:\n\u2014 None",
    "classContext": {
      "packageName": "org.apache.cloudstack.network.tungsten.service",
      "filePath": "C:\\java tool\\Apache\\cloudstack\\plugins\\network-elements\\tungsten\\src\\test\\java\\org\\apache\\cloudstack\\network\\tungsten\\service\\TungstenElementTest.java",
      "className": "TungstenElementTest"
    },
    "statements": [
      {
        "type": "FIELD_MOCK_CREATION",
        "code": "@Mock\r\nIPAddressDao ipAddressDao;",
        "line": 136,
        "locate": "Attribute",
        "locationContext": {
          "methodName": "[FieldDeclaration]",
          "methodAnnotations": [
            "@Mock"
          ]
        }
      },
      {
        "type": "STUBBING",
        "code": "when(ipAddressDao.findByIdIncludingRemoved(anyLong())).thenReturn(ipAddressVO);",
        "line": 254,
        "locate": "Test Case",
        "locationContext": {
          "methodName": "applyStaticNatsAddRuleSuccessTest",
          "methodAnnotations": [
            "@Test"
          ]
        }
      },
      {
        "type": "STUBBING",
        "code": "when(ipAddressDao.findByIdIncludingRemoved(anyLong())).thenReturn(ipAddressVO);",
        "line": 276,
        "locate": "Test Case",
        "locationContext": {
          "methodName": "applyStaticNatsAddRuleFailTest",
          "methodAnnotations": [
            "@Test"
          ]
        }
      },
      {
        "type": "STUBBING",
        "code": "when(ipAddressDao.findByIdIncludingRemoved(anyLong())).thenReturn(ipAddressVO);",
        "line": 298,
        "locate": "Test Case",
        "locationContext": {
          "methodName": "applyStaticNatsRevokeRuleSuccessTest",
          "methodAnnotations": [
            "@Test"
          ]
        }
      },
      {
        "type": "STUBBING",
        "code": "when(ipAddressDao.findByIdIncludingRemoved(anyLong())).thenReturn(ipAddressVO);",
        "line": 320,
        "locate": "Test Case",
        "locationContext": {
          "methodName": "applyStaticNatsRevokeRuleFailTest",
          "methodAnnotations": [
            "@Test"
          ]
        }
      },
      {
        "type": "STUBBING",
        "code": "when(ipAddressDao.findByIpAndDcId(anyLong(), anyString())).thenReturn(ipAddressVO);",
        "line": 369,
        "locate": "Test Case",
        "locationContext": {
          "methodName": "applyLBRulesAddRuleSuccessTest",
          "methodAnnotations": [
            "@Test"
          ]
        }
      },
      {
        "type": "STUBBING",
        "code": "when(ipAddressDao.findByIpAndDcId(anyLong(), anyString())).thenReturn(ipAddressVO);",
        "line": 427,
        "locate": "Test Case",
        "locationContext": {
          "methodName": "applyLBRulesAddRuleFailTest",
          "methodAnnotations": [
            "@Test"
          ]
        }
      },
      {
        "type": "STUBBING",
        "code": "when(ipAddressDao.findByIpAndDcId(anyLong(), anyString())).thenReturn(ipAddressVO);",
        "line": 466,
        "locate": "Test Case",
        "locationContext": {
          "methodName": "applyLBRulesRevokeRuleFailTest",
          "methodAnnotations": [
            "@Test"
          ]
        }
      },
      {
        "type": "STUBBING",
        "code": "when(ipAddressDao.findByIpAndDcId(anyLong(), anyString())).thenReturn(ipAddressVO);",
        "line": 499,
        "locate": "Test Case",
        "locationContext": {
          "methodName": "applyLBRulesRevokeRuleSuccessTest",
          "methodAnnotations": [
            "@Test"
          ]
        }
      },
      {
        "type": "STUBBING",
        "code": "when(ipAddressDao.findByIpAndDcId(anyLong(), anyString())).thenReturn(ipAddressVO);",
        "line": 619,
        "locate": "Test Case",
        "locationContext": {
          "methodName": "preparePublicNetworkTest",
          "methodAnnotations": [
            "@Test"
          ]
        }
      },
      {
        "type": "STUBBING",
        "code": "when(ipAddressDao.findByIpAndDcId(anyLong(), anyString())).thenReturn(ipAddressVO);",
        "line": 698,
        "locate": "Test Case",
        "locationContext": {
          "methodName": "releasePublicNetworkTest",
          "methodAnnotations": [
            "@Test"
          ]
        }
      },
      {
        "type": "STUBBING",
        "code": "when(ipAddressDao.listByAssociatedNetwork(anyLong(), anyBoolean())).thenReturn(ipAddressVOList);",
        "line": 773,
        "locate": "Test Case",
        "locationContext": {
          "methodName": "destroyTest",
          "methodAnnotations": [
            "@Test"
          ]
        }
      },
      {
        "type": "STUBBING",
        "code": "when(ipAddressDao.findById(anyLong())).thenReturn(ipAddressVO);",
        "line": 950,
        "locate": "Test Case",
        "locationContext": {
          "methodName": "applyFWRulesWithAddIngressRuleTest",
          "methodAnnotations": [
            "@Test"
          ]
        }
      }
    ],
    "pattern_id": 4
  },
  {
    "variableName": "ipAddressDao",
    "variableType": "IPAddressDao",
    "mockedClass": "IPAddressDao",
    "isReuseableMock": "Hybrid",
    "mockPattern": "Creation:\n\u2014 Attribute Mock Creation\n\nStubbing:\n\u2014 Test Case\n\nVerification:\n\u2014 None",
    "classContext": {
      "packageName": "org.apache.cloudstack.network.tungsten.service",
      "filePath": "C:\\java tool\\Apache\\cloudstack\\plugins\\network-elements\\tungsten\\src\\test\\java\\org\\apache\\cloudstack\\network\\tungsten\\service\\TungstenGuestNetworkGuruTest.java",
      "className": "TungstenGuestNetworkGuruTest"
    },
    "statements": [
      {
        "type": "FIELD_MOCK_CREATION",
        "code": "@Mock\r\nIPAddressDao ipAddressDao;",
        "line": 135,
        "locate": "Attribute",
        "locationContext": {
          "methodName": "[FieldDeclaration]",
          "methodAnnotations": [
            "@Mock"
          ]
        }
      },
      {
        "type": "STUBBING",
        "code": "when(ipAddressDao.findByIpAndDcId(anyLong(), anyString())).thenReturn(ipAddressVO);",
        "line": 298,
        "locate": "Test Case",
        "locationContext": {
          "methodName": "testImplementGuestNetwork",
          "methodAnnotations": [
            "@Test"
          ]
        }
      },
      {
        "type": "STUBBING",
        "code": "when(ipAddressDao.findByAssociatedVmId(anyLong())).thenReturn(ipAddressVO);",
        "line": 406,
        "locate": "Test Case",
        "locationContext": {
          "methodName": "testRelease",
          "methodAnnotations": [
            "@Test"
          ]
        }
      },
      {
        "type": "STUBBING",
        "code": "when(ipAddressDao.listByAssociatedNetwork(anyLong(), any())).thenReturn(List.of(ipAddressVO));",
        "line": 429,
        "locate": "Test Case",
        "locationContext": {
          "methodName": "testShutdown",
          "methodAnnotations": [
            "@Test"
          ]
        }
      }
    ],
    "pattern_id": 4
  },
  {
    "variableName": "ipAddressDao",
    "variableType": "IPAddressDao",
    "mockedClass": "IPAddressDao",
    "isReuseableMock": "Hybrid",
    "mockPattern": "Creation:\n\u2014 Attribute Mock Creation\n\nStubbing:\n\u2014 Test Case\n\nVerification:\n\u2014 None",
    "classContext": {
      "packageName": "com.cloud.network.as",
      "filePath": "C:\\java tool\\Apache\\cloudstack\\server\\src\\test\\java\\com\\cloud\\network\\as\\AutoScaleManagerImplTest.java",
      "className": "AutoScaleManagerImplTest"
    },
    "statements": [
      {
        "type": "FIELD_MOCK_CREATION",
        "code": "@Mock\r\nIPAddressDao ipAddressDao;",
        "line": 222,
        "locate": "Attribute",
        "locationContext": {
          "methodName": "[FieldDeclaration]",
          "methodAnnotations": [
            "@Mock"
          ]
        }
      },
      {
        "type": "STUBBING",
        "code": "when(ipAddressDao.findById(ipAddressId)).thenReturn(ipAddressMock);",
        "line": 949,
        "locate": "Test Case",
        "locationContext": {
          "methodName": "testCreateAutoScaleVmGroup",
          "methodAnnotations": [
            "@Test"
          ]
        }
      },
      {
        "type": "STUBBING",
        "code": "when(ipAddressDao.findById(ipAddressId)).thenReturn(ipAddressMock);",
        "line": 1919,
        "locate": "Test Case",
        "locationContext": {
          "methodName": "getPublicIpAndPort",
          "methodAnnotations": [
            "@Test"
          ]
        }
      },
      {
        "type": "STUBBING",
        "code": "when(ipAddressDao.findById(ipAddressId)).thenReturn(null);",
        "line": 1939,
        "locate": "Test Case",
        "locationContext": {
          "methodName": "getPublicIpAndPortFail2",
          "methodAnnotations": [
            "@Test"
          ]
        }
      }
    ],
    "pattern_id": 4
  },
  {
    "variableName": "_ipAddressDao",
    "variableType": "IPAddressDao",
    "mockedClass": "IPAddressDao",
    "isReuseableMock": "Hybrid",
    "mockPattern": "Creation:\n\u2014 Attribute Mock Creation\n\nStubbing:\n\u2014 Test Case\n\nVerification:\n\u2014 None",
    "classContext": {
      "packageName": "com.cloud.network.element",
      "filePath": "C:\\java tool\\Apache\\cloudstack\\server\\src\\test\\java\\com\\cloud\\network\\element\\ConfigDriveNetworkElementTest.java",
      "className": "ConfigDriveNetworkElementTest"
    },
    "statements": [
      {
        "type": "FIELD_MOCK_CREATION",
        "code": "@Mock\r\nprivate IPAddressDao _ipAddressDao;",
        "line": 139,
        "locate": "Attribute",
        "locationContext": {
          "methodName": "[FieldDeclaration]",
          "methodAnnotations": [
            "@Mock"
          ]
        }
      },
      {
        "type": "STUBBING",
        "code": "when(_ipAddressDao.findByAssociatedVmId(VMID)).thenReturn(publicIp);",
        "line": 290,
        "locate": "Test Case",
        "locationContext": {
          "methodName": "testAddPasswordAndUserData",
          "methodAnnotations": [
            "@Test",
            "@SuppressWarnings",
            "@PrepareForTest"
          ]
        }
      }
    ],
    "pattern_id": 4
  },
  {
    "variableName": "ipAddressDao",
    "variableType": "IPAddressDao",
    "mockedClass": "IPAddressDao",
    "isReuseableMock": "Hybrid",
    "mockPattern": "Creation:\n\u2014 Attribute Mock Creation\n\nStubbing:\n\u2014 Test Case\n\nVerification:\n\u2014 None",
    "classContext": {
      "packageName": "com.cloud.network",
      "filePath": "C:\\java tool\\Apache\\cloudstack\\server\\src\\test\\java\\com\\cloud\\network\\IpAddressManagerTest.java",
      "className": "IpAddressManagerTest"
    },
    "statements": [
      {
        "type": "FIELD_MOCK_CREATION",
        "code": "@Mock\r\nIPAddressDao ipAddressDao;",
        "line": 59,
        "locate": "Attribute",
        "locationContext": {
          "methodName": "[FieldDeclaration]",
          "methodAnnotations": [
            "@Mock"
          ]
        }
      },
      {
        "type": "STUBBING",
        "code": "when(ipAddressDao.findById(anyLong())).thenReturn(vo);",
        "line": 104,
        "locate": "Test Case",
        "locationContext": {
          "methodName": "testGetStaticNatSourceIps",
          "methodAnnotations": [
            "@Test"
          ]
        }
      }
    ],
    "pattern_id": 4
  },
  {
    "variableName": "ipAddressDao",
    "variableType": "IPAddressDao",
    "mockedClass": "IPAddressDao",
    "isReuseableMock": "Hybrid",
    "mockPattern": "Creation:\n\u2014 Attribute Mock Creation\n\nStubbing:\n\u2014 Test Case\n\nVerification:\n\u2014 None",
    "classContext": {
      "packageName": "com.cloud.network",
      "filePath": "C:\\java tool\\Apache\\cloudstack\\server\\src\\test\\java\\com\\cloud\\network\\Ipv6ServiceImplTest.java",
      "className": "Ipv6ServiceImplTest"
    },
    "statements": [
      {
        "type": "FIELD_MOCK_CREATION",
        "code": "@Mock\r\nIPAddressDao ipAddressDao;",
        "line": 124,
        "locate": "Attribute",
        "locationContext": {
          "methodName": "[FieldDeclaration]",
          "methodAnnotations": [
            "@Mock"
          ]
        }
      },
      {
        "type": "STUBBING",
        "code": "Mockito.when(ipAddressDao.listByAssociatedNetwork(Mockito.anyLong(), Mockito.anyBoolean())).thenReturn(List.of(Mockito.mock(IPAddressVO.class)));",
        "line": 601,
        "locate": "Test Case",
        "locationContext": {
          "methodName": "testCheckNetworkIpv6UpgradeForNoIpv6Vlan",
          "methodAnnotations": [
            "@Test"
          ]
        }
      },
      {
        "type": "STUBBING",
        "code": "Mockito.when(ipAddressDao.listByAssociatedNetwork(Mockito.anyLong(), Mockito.anyBoolean())).thenReturn(List.of(Mockito.mock(IPAddressVO.class)));",
        "line": 619,
        "locate": "Test Case",
        "locationContext": {
          "methodName": "testCheckNetworkIpv6UpgradeForNetwork",
          "methodAnnotations": [
            "@Test"
          ]
        }
      }
    ],
    "pattern_id": 4
  },
  {
    "variableName": "ipAddressDao",
    "variableType": "IPAddressDao",
    "mockedClass": "IPAddressDao",
    "isReuseableMock": "Hybrid",
    "mockPattern": "Creation:\n\u2014 Attribute Mock Creation\n\nStubbing:\n\u2014 Test Case\n\nVerification:\n\u2014 None",
    "classContext": {
      "packageName": "com.cloud.network",
      "filePath": "C:\\java tool\\Apache\\cloudstack\\server\\src\\test\\java\\com\\cloud\\network\\NetworkServiceImplTest.java",
      "className": "NetworkServiceImplTest"
    },
    "statements": [
      {
        "type": "FIELD_MOCK_CREATION",
        "code": "@Mock\r\nIPAddressDao ipAddressDao;",
        "line": 144,
        "locate": "Attribute",
        "locationContext": {
          "methodName": "[FieldDeclaration]",
          "methodAnnotations": [
            "@Mock"
          ]
        }
      },
      {
        "type": "STUBBING",
        "code": "Mockito.when(ipAddressDao.listByNetworkId(anyLong())).thenReturn(addresses);",
        "line": 458,
        "locate": "Test Case",
        "locationContext": {
          "methodName": "testUpdateSharedNetworkMtus",
          "methodAnnotations": [
            "@Test"
          ]
        }
      }
    ],
    "pattern_id": 4
  },
  {
    "variableName": "ipAddressDao",
    "variableType": "IPAddressDao",
    "mockedClass": "IPAddressDao",
    "isReuseableMock": "Hybrid",
    "mockPattern": "Creation:\n\u2014 Attribute Mock Creation\n\nStubbing:\n\u2014 Test Case\n\nVerification:\n\u2014 None",
    "classContext": {
      "packageName": "com.cloud.network.vpc",
      "filePath": "C:\\java tool\\Apache\\cloudstack\\server\\src\\test\\java\\com\\cloud\\network\\vpc\\VpcManagerImplTest.java",
      "className": "VpcManagerImplTest"
    },
    "statements": [
      {
        "type": "FIELD_MOCK_CREATION",
        "code": "@Mock\r\nIPAddressDao ipAddressDao;",
        "line": 136,
        "locate": "Attribute",
        "locationContext": {
          "methodName": "[FieldDeclaration]",
          "methodAnnotations": [
            "@Mock"
          ]
        }
      },
      {
        "type": "STUBBING",
        "code": "Mockito.when(ipAddressDao.listByAssociatedVpc(anyLong(), nullable(Boolean.class))).thenReturn(ipAddresses);",
        "line": 380,
        "locate": "Test Case",
        "locationContext": {
          "methodName": "testUpdateVpcNetwork",
          "methodAnnotations": [
            "@Test"
          ]
        }
      }
    ],
    "pattern_id": 4
  },
  {
    "variableName": "_ipAddressDao",
    "variableType": "IPAddressDao",
    "mockedClass": "IPAddressDao",
    "isReuseableMock": "Hybrid",
    "mockPattern": "Creation:\n\u2014 Attribute Mock Creation\n\nStubbing:\n\u2014 Test Case\n\nVerification:\n\u2014 None",
    "classContext": {
      "packageName": "com.cloud.vm",
      "filePath": "C:\\java tool\\Apache\\cloudstack\\server\\src\\test\\java\\com\\cloud\\vm\\UserVmManagerTest.java",
      "className": "UserVmManagerTest"
    },
    "statements": [
      {
        "type": "FIELD_MOCK_CREATION",
        "code": "@Mock\r\nprivate IPAddressDao _ipAddressDao;",
        "line": 213,
        "locate": "Attribute",
        "locationContext": {
          "methodName": "[FieldDeclaration]",
          "methodAnnotations": [
            "@Mock"
          ]
        }
      },
      {
        "type": "STUBBING",
        "code": "when(_ipAddressDao.findByIpAndSourceNetworkId(anyLong(), eq(\"10.10.10.10\"))).thenReturn(newIp);",
        "line": 629,
        "locate": "Test Case",
        "locationContext": {
          "methodName": "testUpdateVmNicIpSuccess2",
          "methodAnnotations": [
            "@Test"
          ]
        }
      },
      {
        "type": "STUBBING",
        "code": "when(_ipAddressDao.findByIpAndSourceNetworkId(anyLong(), eq(\"10.10.10.9\"))).thenReturn(null);",
        "line": 630,
        "locate": "Test Case",
        "locationContext": {
          "methodName": "testUpdateVmNicIpSuccess2",
          "methodAnnotations": [
            "@Test"
          ]
        }
      }
    ],
    "pattern_id": 4
  }
]