[
  {
    "variableName": "diskTO",
    "variableType": "DiskTO",
    "mockedClass": "DiskTO",
    "isReuseableMock": false,
    "mockPattern": "Creation:\n\u2014 Local Mock Creation in Test Case\n\nStubbing:\n\u2014 Test Case\n\nVerification:\n\u2014 Test Case",
    "classContext": {
      "packageName": "com.cloud.hypervisor.kvm.resource",
      "filePath": "C:\\java tool\\Apache\\cloudstack\\plugins\\hypervisors\\kvm\\src\\test\\java\\com\\cloud\\hypervisor\\kvm\\resource\\LibvirtComputingResourceTest.java",
      "className": "LibvirtComputingResourceTest"
    },
    "statements": [
      {
        "type": "DECLARATION",
        "code": "final DiskTO diskTO = Mockito.mock(DiskTO.class);",
        "line": 1502,
        "locate": "Test Case",
        "locationContext": {
          "methodName": "testPrepareForMigrationCommand",
          "methodAnnotations": [
            "@Test"
          ]
        }
      },
      {
        "type": "STUBBING",
        "code": "when(diskTO.getType()).thenReturn(Volume.Type.ISO);",
        "line": 1518,
        "locate": "Test Case",
        "locationContext": {
          "methodName": "testPrepareForMigrationCommand",
          "methodAnnotations": [
            "@Test"
          ]
        }
      },
      {
        "type": "VERIFICATION",
        "code": "verify(diskTO, times(1)).getType();",
        "line": 1539,
        "locate": "Test Case",
        "locationContext": {
          "methodName": "testPrepareForMigrationCommand",
          "methodAnnotations": [
            "@Test"
          ]
        }
      }
    ],
    "pattern_id": 6
  },
  {
    "variableName": "diskTO",
    "variableType": "DiskTO",
    "mockedClass": "DiskTO",
    "isReuseableMock": false,
    "mockPattern": "Creation:\n\u2014 Local Mock Creation in Test Case\n\nStubbing:\n\u2014 Test Case\n\nVerification:\n\u2014 Test Case",
    "classContext": {
      "packageName": "com.cloud.hypervisor.kvm.resource",
      "filePath": "C:\\java tool\\Apache\\cloudstack\\plugins\\hypervisors\\kvm\\src\\test\\java\\com\\cloud\\hypervisor\\kvm\\resource\\LibvirtComputingResourceTest.java",
      "className": "LibvirtComputingResourceTest"
    },
    "statements": [
      {
        "type": "DECLARATION",
        "code": "final DiskTO diskTO = Mockito.mock(DiskTO.class);",
        "line": 1550,
        "locate": "Test Case",
        "locationContext": {
          "methodName": "testPrepareForMigrationCommandMigration",
          "methodAnnotations": [
            "@Test"
          ]
        }
      },
      {
        "type": "STUBBING",
        "code": "when(diskTO.getType()).thenReturn(Volume.Type.ISO);",
        "line": 1566,
        "locate": "Test Case",
        "locationContext": {
          "methodName": "testPrepareForMigrationCommandMigration",
          "methodAnnotations": [
            "@Test"
          ]
        }
      },
      {
        "type": "VERIFICATION",
        "code": "verify(diskTO, times(1)).getType();",
        "line": 1588,
        "locate": "Test Case",
        "locationContext": {
          "methodName": "testPrepareForMigrationCommandMigration",
          "methodAnnotations": [
            "@Test"
          ]
        }
      }
    ],
    "pattern_id": 6
  },
  {
    "variableName": "volume",
    "variableType": "DiskTO",
    "mockedClass": "DiskTO",
    "isReuseableMock": false,
    "mockPattern": "Creation:\n\u2014 Local Mock Creation in Test Case\n\nStubbing:\n\u2014 Test Case\n\nVerification:\n\u2014 Test Case",
    "classContext": {
      "packageName": "com.cloud.hypervisor.kvm.resource",
      "filePath": "C:\\java tool\\Apache\\cloudstack\\plugins\\hypervisors\\kvm\\src\\test\\java\\com\\cloud\\hypervisor\\kvm\\resource\\LibvirtComputingResourceTest.java",
      "className": "LibvirtComputingResourceTest"
    },
    "statements": [
      {
        "type": "DECLARATION",
        "code": "final DiskTO volume = Mockito.mock(DiskTO.class);",
        "line": 1642,
        "locate": "Test Case",
        "locationContext": {
          "methodName": "testPrepareForMigrationCommandURISyntaxException",
          "methodAnnotations": [
            "@SuppressWarnings",
            "@Test"
          ]
        }
      },
      {
        "type": "STUBBING",
        "code": "when(volume.getType()).thenReturn(Volume.Type.ISO);",
        "line": 1658,
        "locate": "Test Case",
        "locationContext": {
          "methodName": "testPrepareForMigrationCommandURISyntaxException",
          "methodAnnotations": [
            "@SuppressWarnings",
            "@Test"
          ]
        }
      },
      {
        "type": "VERIFICATION",
        "code": "verify(volume, times(1)).getType();",
        "line": 1686,
        "locate": "Test Case",
        "locationContext": {
          "methodName": "testPrepareForMigrationCommandURISyntaxException",
          "methodAnnotations": [
            "@SuppressWarnings",
            "@Test"
          ]
        }
      }
    ],
    "pattern_id": 6
  }
]