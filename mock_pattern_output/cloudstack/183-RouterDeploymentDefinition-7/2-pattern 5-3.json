[
  {
    "variableName": "deploymentUT",
    "variableType": "RouterDeploymentDefinition",
    "mockedClass": "RouterDeploymentDefinition",
    "isReuseableMock": "Fully Localized",
    "mockPattern": "Creation:\n\u2014 Local Mock Creation in Test Case\n\nStubbing:\n\u2014 None\n\nVerification:\n\u2014 Test Case",
    "classContext": {
      "packageName": "org.apache.cloudstack.network.router.deployment",
      "filePath": "C:\\java tool\\Apache\\cloudstack\\server\\src\\test\\java\\org\\apache\\cloudstack\\network\\router\\deployment\\RouterDeploymentDefinitionTest.java",
      "className": "RouterDeploymentDefinitionTest"
    },
    "statements": [
      {
        "type": "DECLARATION",
        "code": "final RouterDeploymentDefinition deploymentUT = spy(deployment);",
        "line": 499,
        "locate": "Test Case",
        "locationContext": {
          "methodName": "testDeployVirtualRouter",
          "methodAnnotations": [
            "@Test"
          ]
        }
      },
      {
        "type": "VERIFICATION",
        "code": "// Assert\r\nverify(deploymentUT, times(1)).lock();",
        "line": 516,
        "locate": "Test Case",
        "locationContext": {
          "methodName": "testDeployVirtualRouter",
          "methodAnnotations": [
            "@Test"
          ]
        }
      },
      {
        "type": "VERIFICATION",
        "code": "verify(deploymentUT, times(2)).checkPreconditions();",
        "line": 517,
        "locate": "Test Case",
        "locationContext": {
          "methodName": "testDeployVirtualRouter",
          "methodAnnotations": [
            "@Test"
          ]
        }
      },
      {
        "type": "VERIFICATION",
        "code": "verify(deploymentUT, times(2)).findDestinations();",
        "line": 518,
        "locate": "Test Case",
        "locationContext": {
          "methodName": "testDeployVirtualRouter",
          "methodAnnotations": [
            "@Test"
          ]
        }
      },
      {
        "type": "VERIFICATION",
        "code": "verify(deploymentUT, times(3)).generateDeploymentPlan();",
        "line": 519,
        "locate": "Test Case",
        "locationContext": {
          "methodName": "testDeployVirtualRouter",
          "methodAnnotations": [
            "@Test"
          ]
        }
      },
      {
        "type": "VERIFICATION",
        "code": "verify(deploymentUT, times(2)).executeDeployment();",
        "line": 520,
        "locate": "Test Case",
        "locationContext": {
          "methodName": "testDeployVirtualRouter",
          "methodAnnotations": [
            "@Test"
          ]
        }
      },
      {
        "type": "VERIFICATION",
        "code": "//verify(deploymentUT, times(2)).planDeploymentRouters();\r\nverify(deploymentUT, times(1)).unlock();",
        "line": 522,
        "locate": "Test Case",
        "locationContext": {
          "methodName": "testDeployVirtualRouter",
          "methodAnnotations": [
            "@Test"
          ]
        }
      }
    ],
    "pattern_id": 5
  },
  {
    "variableName": "deploymentUT",
    "variableType": "RouterDeploymentDefinition",
    "mockedClass": "RouterDeploymentDefinition",
    "isReuseableMock": "Fully Localized",
    "mockPattern": "Creation:\n\u2014 Local Mock Creation in Test Case\n\nStubbing:\n\u2014 None\n\nVerification:\n\u2014 Test Case",
    "classContext": {
      "packageName": "org.apache.cloudstack.network.router.deployment",
      "filePath": "C:\\java tool\\Apache\\cloudstack\\server\\src\\test\\java\\org\\apache\\cloudstack\\network\\router\\deployment\\RouterDeploymentDefinitionTest.java",
      "className": "RouterDeploymentDefinitionTest"
    },
    "statements": [
      {
        "type": "DECLARATION",
        "code": "final RouterDeploymentDefinition deploymentUT = spy(deployment);",
        "line": 537,
        "locate": "Test Case",
        "locationContext": {
          "methodName": "testDeployVirtualRouterSkip",
          "methodAnnotations": [
            "@Test"
          ]
        }
      },
      {
        "type": "VERIFICATION",
        "code": "// Assert\r\n// lock shouldn't be acquired when VR already present\r\nverify(deploymentUT, times(0)).lock();",
        "line": 549,
        "locate": "Test Case",
        "locationContext": {
          "methodName": "testDeployVirtualRouterSkip",
          "methodAnnotations": [
            "@Test"
          ]
        }
      },
      {
        "type": "VERIFICATION",
        "code": "verify(deploymentUT, times(1)).checkPreconditions();",
        "line": 550,
        "locate": "Test Case",
        "locationContext": {
          "methodName": "testDeployVirtualRouterSkip",
          "methodAnnotations": [
            "@Test"
          ]
        }
      },
      {
        "type": "VERIFICATION",
        "code": "verify(deploymentUT, times(1)).findDestinations();",
        "line": 551,
        "locate": "Test Case",
        "locationContext": {
          "methodName": "testDeployVirtualRouterSkip",
          "methodAnnotations": [
            "@Test"
          ]
        }
      },
      {
        "type": "VERIFICATION",
        "code": "verify(deploymentUT, times(2)).generateDeploymentPlan();",
        "line": 552,
        "locate": "Test Case",
        "locationContext": {
          "methodName": "testDeployVirtualRouterSkip",
          "methodAnnotations": [
            "@Test"
          ]
        }
      },
      {
        "type": "VERIFICATION",
        "code": "// no need to deploy VR as already present\r\nverify(deploymentUT, times(0)).executeDeployment();",
        "line": 553,
        "locate": "Test Case",
        "locationContext": {
          "methodName": "testDeployVirtualRouterSkip",
          "methodAnnotations": [
            "@Test"
          ]
        }
      },
      {
        "type": "VERIFICATION",
        "code": "// same as lock\r\nverify(deploymentUT, times(0)).unlock();",
        "line": 554,
        "locate": "Test Case",
        "locationContext": {
          "methodName": "testDeployVirtualRouterSkip",
          "methodAnnotations": [
            "@Test"
          ]
        }
      }
    ],
    "pattern_id": 5
  },
  {
    "variableName": "deploymentUT",
    "variableType": "RouterDeploymentDefinition",
    "mockedClass": "RouterDeploymentDefinition",
    "isReuseableMock": "Fully Localized",
    "mockPattern": "Creation:\n\u2014 Local Mock Creation in Test Case\n\nStubbing:\n\u2014 None\n\nVerification:\n\u2014 Test Case",
    "classContext": {
      "packageName": "org.apache.cloudstack.network.router.deployment",
      "filePath": "C:\\java tool\\Apache\\cloudstack\\server\\src\\test\\java\\org\\apache\\cloudstack\\network\\router\\deployment\\RouterDeploymentDefinitionTest.java",
      "className": "RouterDeploymentDefinitionTest"
    },
    "statements": [
      {
        "type": "DECLARATION",
        "code": "// Prepare\r\nfinal RouterDeploymentDefinition deploymentUT = spy(deployment);",
        "line": 808,
        "locate": "Test Case",
        "locationContext": {
          "methodName": "driveTestExecuteDeployment",
          "methodAnnotations": []
        }
      },
      {
        "type": "VERIFICATION",
        "code": "// Assert\r\nverify(deploymentUT, times(1)).getNumberOfRoutersToDeploy();",
        "line": 820,
        "locate": "Test Case",
        "locationContext": {
          "methodName": "driveTestExecuteDeployment",
          "methodAnnotations": []
        }
      },
      {
        "type": "VERIFICATION",
        "code": "verify(deploymentUT, times(1)).prepareDeployment();",
        "line": 823,
        "locate": "Test Case",
        "locationContext": {
          "methodName": "driveTestExecuteDeployment",
          "methodAnnotations": []
        }
      },
      {
        "type": "VERIFICATION",
        "code": "verify(deploymentUT, times(proceedToDeployment)).findVirtualProvider();",
        "line": 828,
        "locate": "Test Case",
        "locationContext": {
          "methodName": "driveTestExecuteDeployment",
          "methodAnnotations": []
        }
      },
      {
        "type": "VERIFICATION",
        "code": "verify(deploymentUT, times(proceedToDeployment)).findServiceOfferingId();",
        "line": 829,
        "locate": "Test Case",
        "locationContext": {
          "methodName": "driveTestExecuteDeployment",
          "methodAnnotations": []
        }
      },
      {
        "type": "VERIFICATION",
        "code": "verify(deploymentUT, times(proceedToDeployment)).findSourceNatIP();",
        "line": 830,
        "locate": "Test Case",
        "locationContext": {
          "methodName": "driveTestExecuteDeployment",
          "methodAnnotations": []
        }
      },
      {
        "type": "VERIFICATION",
        "code": "verify(deploymentUT, times(proceedToDeployment)).deployAllVirtualRouters();",
        "line": 831,
        "locate": "Test Case",
        "locationContext": {
          "methodName": "driveTestExecuteDeployment",
          "methodAnnotations": []
        }
      }
    ],
    "pattern_id": 5
  }
]