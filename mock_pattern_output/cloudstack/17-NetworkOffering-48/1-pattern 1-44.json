[
  {
    "variableName": "networkOffering",
    "variableType": "NetworkOffering",
    "mockedClass": "NetworkOffering",
    "isReuseableMock": "Fully Localized",
    "mockPattern": "Creation:\n\u2014 Local Mock Creation in Test Case\n\nStubbing:\n\u2014 Test Case\n\nVerification:\n\u2014 None",
    "classContext": {
      "packageName": "org.apache.cloudstack.api.command.user.network",
      "filePath": "C:\\java tool\\Apache\\cloudstack\\api\\src\\test\\java\\org\\apache\\cloudstack\\api\\command\\user\\network\\CreateNetworkCmdTest.java",
      "className": "CreateNetworkCmdTest"
    },
    "statements": [
      {
        "type": "DECLARATION",
        "code": "NetworkOffering networkOffering = Mockito.mock(NetworkOffering.class);",
        "line": 229,
        "locate": "Test Case",
        "locationContext": {
          "methodName": "testGetPhysicalNetworkIdForAssociatedNetIdForNonSharedNet",
          "methodAnnotations": [
            "@Test"
          ]
        }
      },
      {
        "type": "STUBBING",
        "code": "Mockito.when(networkOffering.getGuestType()).thenReturn(Network.GuestType.Isolated);",
        "line": 234,
        "locate": "Test Case",
        "locationContext": {
          "methodName": "testGetPhysicalNetworkIdForAssociatedNetIdForNonSharedNet",
          "methodAnnotations": [
            "@Test"
          ]
        }
      }
    ],
    "pattern_id": 1
  },
  {
    "variableName": "networkOffering",
    "variableType": "NetworkOffering",
    "mockedClass": "NetworkOffering",
    "isReuseableMock": "Fully Localized",
    "mockPattern": "Creation:\n\u2014 Local Mock Creation in Test Case\n\nStubbing:\n\u2014 Test Case\n\nVerification:\n\u2014 None",
    "classContext": {
      "packageName": "org.apache.cloudstack.api.command.user.network",
      "filePath": "C:\\java tool\\Apache\\cloudstack\\api\\src\\test\\java\\org\\apache\\cloudstack\\api\\command\\user\\network\\CreateNetworkCmdTest.java",
      "className": "CreateNetworkCmdTest"
    },
    "statements": [
      {
        "type": "DECLARATION",
        "code": "NetworkOffering networkOffering = Mockito.mock(NetworkOffering.class);",
        "line": 247,
        "locate": "Test Case",
        "locationContext": {
          "methodName": "testGetPhysicalNetworkIdForNonSharedNet",
          "methodAnnotations": [
            "@Test"
          ]
        }
      },
      {
        "type": "STUBBING",
        "code": "Mockito.when(networkOffering.getGuestType()).thenReturn(Network.GuestType.Isolated);",
        "line": 250,
        "locate": "Test Case",
        "locationContext": {
          "methodName": "testGetPhysicalNetworkIdForNonSharedNet",
          "methodAnnotations": [
            "@Test"
          ]
        }
      }
    ],
    "pattern_id": 1
  },
  {
    "variableName": "networkOffering",
    "variableType": "NetworkOffering",
    "mockedClass": "NetworkOffering",
    "isReuseableMock": "Fully Localized",
    "mockPattern": "Creation:\n\u2014 Local Mock Creation in Test Case\n\nStubbing:\n\u2014 Test Case\n\nVerification:\n\u2014 None",
    "classContext": {
      "packageName": "org.apache.cloudstack.api.command.user.network",
      "filePath": "C:\\java tool\\Apache\\cloudstack\\api\\src\\test\\java\\org\\apache\\cloudstack\\api\\command\\user\\network\\CreateNetworkCmdTest.java",
      "className": "CreateNetworkCmdTest"
    },
    "statements": [
      {
        "type": "DECLARATION",
        "code": "NetworkOffering networkOffering = Mockito.mock(NetworkOffering.class);",
        "line": 263,
        "locate": "Test Case",
        "locationContext": {
          "methodName": "testGetPhysicalNetworkIdForL2Net",
          "methodAnnotations": [
            "@Test"
          ]
        }
      },
      {
        "type": "STUBBING",
        "code": "Mockito.when(networkOffering.getGuestType()).thenReturn(Network.GuestType.L2);",
        "line": 266,
        "locate": "Test Case",
        "locationContext": {
          "methodName": "testGetPhysicalNetworkIdForL2Net",
          "methodAnnotations": [
            "@Test"
          ]
        }
      }
    ],
    "pattern_id": 1
  },
  {
    "variableName": "networkOffering",
    "variableType": "NetworkOffering",
    "mockedClass": "NetworkOffering",
    "isReuseableMock": "Fully Localized",
    "mockPattern": "Creation:\n\u2014 Local Mock Creation in Test Case\n\nStubbing:\n\u2014 Test Case\n\nVerification:\n\u2014 None",
    "classContext": {
      "packageName": "org.apache.cloudstack.api.command.user.network",
      "filePath": "C:\\java tool\\Apache\\cloudstack\\api\\src\\test\\java\\org\\apache\\cloudstack\\api\\command\\user\\network\\CreateNetworkCmdTest.java",
      "className": "CreateNetworkCmdTest"
    },
    "statements": [
      {
        "type": "DECLARATION",
        "code": "NetworkOffering networkOffering = Mockito.mock(NetworkOffering.class);",
        "line": 279,
        "locate": "Test Case",
        "locationContext": {
          "methodName": "testGetPhysicalNetworkIdForSharedNet",
          "methodAnnotations": [
            "@Test"
          ]
        }
      },
      {
        "type": "STUBBING",
        "code": "Mockito.when(networkOffering.getGuestType()).thenReturn(Network.GuestType.Shared);",
        "line": 282,
        "locate": "Test Case",
        "locationContext": {
          "methodName": "testGetPhysicalNetworkIdForSharedNet",
          "methodAnnotations": [
            "@Test"
          ]
        }
      }
    ],
    "pattern_id": 1
  },
  {
    "variableName": "networkOffering",
    "variableType": "NetworkOffering",
    "mockedClass": "NetworkOffering",
    "isReuseableMock": "Fully Localized",
    "mockPattern": "Creation:\n\u2014 Local Mock Creation in Test Case\n\nStubbing:\n\u2014 Test Case\n\nVerification:\n\u2014 None",
    "classContext": {
      "packageName": "org.apache.cloudstack.api.command.user.network",
      "filePath": "C:\\java tool\\Apache\\cloudstack\\api\\src\\test\\java\\org\\apache\\cloudstack\\api\\command\\user\\network\\CreateNetworkCmdTest.java",
      "className": "CreateNetworkCmdTest"
    },
    "statements": [
      {
        "type": "DECLARATION",
        "code": "NetworkOffering networkOffering = Mockito.mock(NetworkOffering.class);",
        "line": 295,
        "locate": "Test Case",
        "locationContext": {
          "methodName": "testGetZoneId",
          "methodAnnotations": [
            "@Test"
          ]
        }
      },
      {
        "type": "STUBBING",
        "code": "Mockito.when(networkOffering.getGuestType()).thenReturn(Network.GuestType.Shared);",
        "line": 298,
        "locate": "Test Case",
        "locationContext": {
          "methodName": "testGetZoneId",
          "methodAnnotations": [
            "@Test"
          ]
        }
      }
    ],
    "pattern_id": 1
  },
  {
    "variableName": "offering",
    "variableType": "NetworkOffering",
    "mockedClass": "NetworkOffering",
    "isReuseableMock": "Fully Localized",
    "mockPattern": "Creation:\n\u2014 Local Mock Creation in Test Case\n\nStubbing:\n\u2014 Test Case\n\nVerification:\n\u2014 None",
    "classContext": {
      "packageName": "com.cloud.network.guru",
      "filePath": "C:\\java tool\\Apache\\cloudstack\\plugins\\network-elements\\brocade-vcs\\src\\test\\java\\com\\cloud\\network\\guru\\BrocadeVcsGuestNetworkGuruTest.java",
      "className": "BrocadeVcsGuestNetworkGuruTest"
    },
    "statements": [
      {
        "type": "DECLARATION",
        "code": "final NetworkOffering offering = mock(NetworkOffering.class);",
        "line": 121,
        "locate": "Test Case",
        "locationContext": {
          "methodName": "testCanHandle",
          "methodAnnotations": [
            "@Test"
          ]
        }
      },
      {
        "type": "STUBBING",
        "code": "when(offering.getId()).thenReturn(NETWORK_ID);",
        "line": 122,
        "locate": "Test Case",
        "locationContext": {
          "methodName": "testCanHandle",
          "methodAnnotations": [
            "@Test"
          ]
        }
      },
      {
        "type": "STUBBING",
        "code": "when(offering.getTrafficType()).thenReturn(TrafficType.Guest);",
        "line": 123,
        "locate": "Test Case",
        "locationContext": {
          "methodName": "testCanHandle",
          "methodAnnotations": [
            "@Test"
          ]
        }
      },
      {
        "type": "STUBBING",
        "code": "when(offering.getGuestType()).thenReturn(GuestType.Isolated);",
        "line": 124,
        "locate": "Test Case",
        "locationContext": {
          "methodName": "testCanHandle",
          "methodAnnotations": [
            "@Test"
          ]
        }
      },
      {
        "type": "STUBBING",
        "code": "// Not supported TrafficType != Guest\r\nwhen(offering.getTrafficType()).thenReturn(TrafficType.Management);",
        "line": 135,
        "locate": "Test Case",
        "locationContext": {
          "methodName": "testCanHandle",
          "methodAnnotations": [
            "@Test"
          ]
        }
      },
      {
        "type": "STUBBING",
        "code": "// Not supported: GuestType Shared\r\nwhen(offering.getTrafficType()).thenReturn(TrafficType.Guest);",
        "line": 139,
        "locate": "Test Case",
        "locationContext": {
          "methodName": "testCanHandle",
          "methodAnnotations": [
            "@Test"
          ]
        }
      },
      {
        "type": "STUBBING",
        "code": "when(offering.getGuestType()).thenReturn(GuestType.Shared);",
        "line": 140,
        "locate": "Test Case",
        "locationContext": {
          "methodName": "testCanHandle",
          "methodAnnotations": [
            "@Test"
          ]
        }
      },
      {
        "type": "STUBBING",
        "code": "// Not supported: Basic networking\r\nwhen(offering.getGuestType()).thenReturn(GuestType.Isolated);",
        "line": 144,
        "locate": "Test Case",
        "locationContext": {
          "methodName": "testCanHandle",
          "methodAnnotations": [
            "@Test"
          ]
        }
      }
    ],
    "pattern_id": 1
  },
  {
    "variableName": "offering",
    "variableType": "NetworkOffering",
    "mockedClass": "NetworkOffering",
    "isReuseableMock": "Fully Localized",
    "mockPattern": "Creation:\n\u2014 Local Mock Creation in Test Case\n\nStubbing:\n\u2014 Test Case\n\nVerification:\n\u2014 None",
    "classContext": {
      "packageName": "com.cloud.network.guru",
      "filePath": "C:\\java tool\\Apache\\cloudstack\\plugins\\network-elements\\brocade-vcs\\src\\test\\java\\com\\cloud\\network\\guru\\BrocadeVcsGuestNetworkGuruTest.java",
      "className": "BrocadeVcsGuestNetworkGuruTest"
    },
    "statements": [
      {
        "type": "DECLARATION",
        "code": "final NetworkOffering offering = mock(NetworkOffering.class);",
        "line": 160,
        "locate": "Test Case",
        "locationContext": {
          "methodName": "testDesign",
          "methodAnnotations": [
            "@Test"
          ]
        }
      },
      {
        "type": "STUBBING",
        "code": "when(offering.getId()).thenReturn(NETWORK_ID);",
        "line": 161,
        "locate": "Test Case",
        "locationContext": {
          "methodName": "testDesign",
          "methodAnnotations": [
            "@Test"
          ]
        }
      },
      {
        "type": "STUBBING",
        "code": "when(offering.getTrafficType()).thenReturn(TrafficType.Guest);",
        "line": 162,
        "locate": "Test Case",
        "locationContext": {
          "methodName": "testDesign",
          "methodAnnotations": [
            "@Test"
          ]
        }
      },
      {
        "type": "STUBBING",
        "code": "when(offering.getGuestType()).thenReturn(GuestType.Isolated);",
        "line": 163,
        "locate": "Test Case",
        "locationContext": {
          "methodName": "testDesign",
          "methodAnnotations": [
            "@Test"
          ]
        }
      }
    ],
    "pattern_id": 1
  },
  {
    "variableName": "offering",
    "variableType": "NetworkOffering",
    "mockedClass": "NetworkOffering",
    "isReuseableMock": "Fully Localized",
    "mockPattern": "Creation:\n\u2014 Local Mock Creation in Test Case\n\nStubbing:\n\u2014 Test Case\n\nVerification:\n\u2014 None",
    "classContext": {
      "packageName": "com.cloud.network.guru",
      "filePath": "C:\\java tool\\Apache\\cloudstack\\plugins\\network-elements\\brocade-vcs\\src\\test\\java\\com\\cloud\\network\\guru\\BrocadeVcsGuestNetworkGuruTest.java",
      "className": "BrocadeVcsGuestNetworkGuruTest"
    },
    "statements": [
      {
        "type": "DECLARATION",
        "code": "final NetworkOffering offering = mock(NetworkOffering.class);",
        "line": 185,
        "locate": "Test Case",
        "locationContext": {
          "methodName": "testDesignNoIsolationMethodVCS",
          "methodAnnotations": [
            "@Test"
          ]
        }
      },
      {
        "type": "STUBBING",
        "code": "when(offering.getId()).thenReturn(NETWORK_ID);",
        "line": 186,
        "locate": "Test Case",
        "locationContext": {
          "methodName": "testDesignNoIsolationMethodVCS",
          "methodAnnotations": [
            "@Test"
          ]
        }
      },
      {
        "type": "STUBBING",
        "code": "when(offering.getTrafficType()).thenReturn(TrafficType.Guest);",
        "line": 187,
        "locate": "Test Case",
        "locationContext": {
          "methodName": "testDesignNoIsolationMethodVCS",
          "methodAnnotations": [
            "@Test"
          ]
        }
      },
      {
        "type": "STUBBING",
        "code": "when(offering.getGuestType()).thenReturn(GuestType.Isolated);",
        "line": 188,
        "locate": "Test Case",
        "locationContext": {
          "methodName": "testDesignNoIsolationMethodVCS",
          "methodAnnotations": [
            "@Test"
          ]
        }
      }
    ],
    "pattern_id": 1
  },
  {
    "variableName": "offering",
    "variableType": "NetworkOffering",
    "mockedClass": "NetworkOffering",
    "isReuseableMock": "Fully Localized",
    "mockPattern": "Creation:\n\u2014 Local Mock Creation in Test Case\n\nStubbing:\n\u2014 Test Case\n\nVerification:\n\u2014 None",
    "classContext": {
      "packageName": "com.cloud.network.guru",
      "filePath": "C:\\java tool\\Apache\\cloudstack\\plugins\\network-elements\\brocade-vcs\\src\\test\\java\\com\\cloud\\network\\guru\\BrocadeVcsGuestNetworkGuruTest.java",
      "className": "BrocadeVcsGuestNetworkGuruTest"
    },
    "statements": [
      {
        "type": "DECLARATION",
        "code": "final NetworkOffering offering = mock(NetworkOffering.class);",
        "line": 205,
        "locate": "Test Case",
        "locationContext": {
          "methodName": "testDesignNoConnectivityInOffering",
          "methodAnnotations": [
            "@Test"
          ]
        }
      },
      {
        "type": "STUBBING",
        "code": "when(offering.getId()).thenReturn(NETWORK_ID);",
        "line": 206,
        "locate": "Test Case",
        "locationContext": {
          "methodName": "testDesignNoConnectivityInOffering",
          "methodAnnotations": [
            "@Test"
          ]
        }
      },
      {
        "type": "STUBBING",
        "code": "when(offering.getTrafficType()).thenReturn(TrafficType.Guest);",
        "line": 207,
        "locate": "Test Case",
        "locationContext": {
          "methodName": "testDesignNoConnectivityInOffering",
          "methodAnnotations": [
            "@Test"
          ]
        }
      },
      {
        "type": "STUBBING",
        "code": "when(offering.getGuestType()).thenReturn(GuestType.Isolated);",
        "line": 208,
        "locate": "Test Case",
        "locationContext": {
          "methodName": "testDesignNoConnectivityInOffering",
          "methodAnnotations": [
            "@Test"
          ]
        }
      }
    ],
    "pattern_id": 1
  },
  {
    "variableName": "offering",
    "variableType": "NetworkOffering",
    "mockedClass": "NetworkOffering",
    "isReuseableMock": "Fully Localized",
    "mockPattern": "Creation:\n\u2014 Local Mock Creation in Test Case\n\nStubbing:\n\u2014 Test Case\n\nVerification:\n\u2014 None",
    "classContext": {
      "packageName": "com.cloud.network.guru",
      "filePath": "C:\\java tool\\Apache\\cloudstack\\plugins\\network-elements\\brocade-vcs\\src\\test\\java\\com\\cloud\\network\\guru\\BrocadeVcsGuestNetworkGuruTest.java",
      "className": "BrocadeVcsGuestNetworkGuruTest"
    },
    "statements": [
      {
        "type": "DECLARATION",
        "code": "final NetworkOffering offering = mock(NetworkOffering.class);",
        "line": 227,
        "locate": "Test Case",
        "locationContext": {
          "methodName": "testImplement",
          "methodAnnotations": [
            "@Test"
          ]
        }
      },
      {
        "type": "STUBBING",
        "code": "when(offering.getId()).thenReturn(NETWORK_ID);",
        "line": 228,
        "locate": "Test Case",
        "locationContext": {
          "methodName": "testImplement",
          "methodAnnotations": [
            "@Test"
          ]
        }
      },
      {
        "type": "STUBBING",
        "code": "when(offering.getTrafficType()).thenReturn(TrafficType.Guest);",
        "line": 229,
        "locate": "Test Case",
        "locationContext": {
          "methodName": "testImplement",
          "methodAnnotations": [
            "@Test"
          ]
        }
      },
      {
        "type": "STUBBING",
        "code": "when(offering.getGuestType()).thenReturn(GuestType.Isolated);",
        "line": 230,
        "locate": "Test Case",
        "locationContext": {
          "methodName": "testImplement",
          "methodAnnotations": [
            "@Test"
          ]
        }
      }
    ],
    "pattern_id": 1
  },
  {
    "variableName": "offering",
    "variableType": "NetworkOffering",
    "mockedClass": "NetworkOffering",
    "isReuseableMock": "Fully Localized",
    "mockPattern": "Creation:\n\u2014 Local Mock Creation in Test Case\n\nStubbing:\n\u2014 Test Case\n\nVerification:\n\u2014 None",
    "classContext": {
      "packageName": "com.cloud.network.guru",
      "filePath": "C:\\java tool\\Apache\\cloudstack\\plugins\\network-elements\\brocade-vcs\\src\\test\\java\\com\\cloud\\network\\guru\\BrocadeVcsGuestNetworkGuruTest.java",
      "className": "BrocadeVcsGuestNetworkGuruTest"
    },
    "statements": [
      {
        "type": "DECLARATION",
        "code": "final NetworkOffering offering = mock(NetworkOffering.class);",
        "line": 287,
        "locate": "Test Case",
        "locationContext": {
          "methodName": "testImplementFail",
          "methodAnnotations": [
            "@Test"
          ]
        }
      },
      {
        "type": "STUBBING",
        "code": "when(offering.getId()).thenReturn(NETWORK_ID);",
        "line": 288,
        "locate": "Test Case",
        "locationContext": {
          "methodName": "testImplementFail",
          "methodAnnotations": [
            "@Test"
          ]
        }
      },
      {
        "type": "STUBBING",
        "code": "when(offering.getTrafficType()).thenReturn(TrafficType.Guest);",
        "line": 289,
        "locate": "Test Case",
        "locationContext": {
          "methodName": "testImplementFail",
          "methodAnnotations": [
            "@Test"
          ]
        }
      },
      {
        "type": "STUBBING",
        "code": "when(offering.getGuestType()).thenReturn(GuestType.Isolated);",
        "line": 290,
        "locate": "Test Case",
        "locationContext": {
          "methodName": "testImplementFail",
          "methodAnnotations": [
            "@Test"
          ]
        }
      }
    ],
    "pattern_id": 1
  },
  {
    "variableName": "offering",
    "variableType": "NetworkOffering",
    "mockedClass": "NetworkOffering",
    "isReuseableMock": "Fully Localized",
    "mockPattern": "Creation:\n\u2014 Local Mock Creation in Test Case\n\nStubbing:\n\u2014 Test Case\n\nVerification:\n\u2014 None",
    "classContext": {
      "packageName": "com.cloud.network.guru",
      "filePath": "C:\\java tool\\Apache\\cloudstack\\plugins\\network-elements\\brocade-vcs\\src\\test\\java\\com\\cloud\\network\\guru\\BrocadeVcsGuestNetworkGuruTest.java",
      "className": "BrocadeVcsGuestNetworkGuruTest"
    },
    "statements": [
      {
        "type": "DECLARATION",
        "code": "final NetworkOffering offering = mock(NetworkOffering.class);",
        "line": 524,
        "locate": "Test Case",
        "locationContext": {
          "methodName": "testTrash",
          "methodAnnotations": [
            "@Test"
          ]
        }
      },
      {
        "type": "STUBBING",
        "code": "when(offering.getId()).thenReturn(NETWORK_ID);",
        "line": 525,
        "locate": "Test Case",
        "locationContext": {
          "methodName": "testTrash",
          "methodAnnotations": [
            "@Test"
          ]
        }
      },
      {
        "type": "STUBBING",
        "code": "when(offering.getTrafficType()).thenReturn(TrafficType.Guest);",
        "line": 526,
        "locate": "Test Case",
        "locationContext": {
          "methodName": "testTrash",
          "methodAnnotations": [
            "@Test"
          ]
        }
      },
      {
        "type": "STUBBING",
        "code": "when(offering.getGuestType()).thenReturn(GuestType.Isolated);",
        "line": 527,
        "locate": "Test Case",
        "locationContext": {
          "methodName": "testTrash",
          "methodAnnotations": [
            "@Test"
          ]
        }
      }
    ],
    "pattern_id": 1
  },
  {
    "variableName": "offering",
    "variableType": "NetworkOffering",
    "mockedClass": "NetworkOffering",
    "isReuseableMock": "Fully Localized",
    "mockPattern": "Creation:\n\u2014 Local Mock Creation in Test Case\n\nStubbing:\n\u2014 Test Case\n\nVerification:\n\u2014 None",
    "classContext": {
      "packageName": "com.cloud.network.guru",
      "filePath": "C:\\java tool\\Apache\\cloudstack\\plugins\\network-elements\\brocade-vcs\\src\\test\\java\\com\\cloud\\network\\guru\\BrocadeVcsGuestNetworkGuruTest.java",
      "className": "BrocadeVcsGuestNetworkGuruTest"
    },
    "statements": [
      {
        "type": "DECLARATION",
        "code": "final NetworkOffering offering = mock(NetworkOffering.class);",
        "line": 566,
        "locate": "Test Case",
        "locationContext": {
          "methodName": "testTrashFail",
          "methodAnnotations": [
            "@Test"
          ]
        }
      },
      {
        "type": "STUBBING",
        "code": "when(offering.getId()).thenReturn(NETWORK_ID);",
        "line": 567,
        "locate": "Test Case",
        "locationContext": {
          "methodName": "testTrashFail",
          "methodAnnotations": [
            "@Test"
          ]
        }
      },
      {
        "type": "STUBBING",
        "code": "when(offering.getTrafficType()).thenReturn(TrafficType.Guest);",
        "line": 568,
        "locate": "Test Case",
        "locationContext": {
          "methodName": "testTrashFail",
          "methodAnnotations": [
            "@Test"
          ]
        }
      },
      {
        "type": "STUBBING",
        "code": "when(offering.getGuestType()).thenReturn(GuestType.Isolated);",
        "line": 569,
        "locate": "Test Case",
        "locationContext": {
          "methodName": "testTrashFail",
          "methodAnnotations": [
            "@Test"
          ]
        }
      }
    ],
    "pattern_id": 1
  },
  {
    "variableName": "offering",
    "variableType": "NetworkOffering",
    "mockedClass": "NetworkOffering",
    "isReuseableMock": "Fully Localized",
    "mockPattern": "Creation:\n\u2014 Local Mock Creation in Test Case\n\nStubbing:\n\u2014 Test Case\n\nVerification:\n\u2014 None",
    "classContext": {
      "packageName": "com.cloud.network.element",
      "filePath": "C:\\java tool\\Apache\\cloudstack\\plugins\\network-elements\\cisco-vnmc\\src\\test\\java\\com\\cloud\\network\\element\\CiscoVnmcElementTest.java",
      "className": "CiscoVnmcElementTest"
    },
    "statements": [
      {
        "type": "DECLARATION",
        "code": "NetworkOffering offering = mock(NetworkOffering.class);",
        "line": 154,
        "locate": "Test Case",
        "locationContext": {
          "methodName": "implementTest",
          "methodAnnotations": [
            "@Test"
          ]
        }
      },
      {
        "type": "STUBBING",
        "code": "when(offering.getId()).thenReturn(1L);",
        "line": 155,
        "locate": "Test Case",
        "locationContext": {
          "methodName": "implementTest",
          "methodAnnotations": [
            "@Test"
          ]
        }
      },
      {
        "type": "STUBBING",
        "code": "when(offering.getTrafficType()).thenReturn(TrafficType.Guest);",
        "line": 156,
        "locate": "Test Case",
        "locationContext": {
          "methodName": "implementTest",
          "methodAnnotations": [
            "@Test"
          ]
        }
      },
      {
        "type": "STUBBING",
        "code": "when(offering.getGuestType()).thenReturn(GuestType.Isolated);",
        "line": 157,
        "locate": "Test Case",
        "locationContext": {
          "methodName": "implementTest",
          "methodAnnotations": [
            "@Test"
          ]
        }
      }
    ],
    "pattern_id": 1
  },
  {
    "variableName": "offering",
    "variableType": "NetworkOffering",
    "mockedClass": "NetworkOffering",
    "isReuseableMock": "Fully Localized",
    "mockPattern": "Creation:\n\u2014 Local Mock Creation in Test Case\n\nStubbing:\n\u2014 Test Case\n\nVerification:\n\u2014 None",
    "classContext": {
      "packageName": "com.cloud.network.element",
      "filePath": "C:\\java tool\\Apache\\cloudstack\\plugins\\network-elements\\nicira-nvp\\src\\test\\java\\com\\cloud\\network\\element\\NiciraNvpElementTest.java",
      "className": "NiciraNvpElementTest"
    },
    "statements": [
      {
        "type": "DECLARATION",
        "code": "final NetworkOffering offering = mock(NetworkOffering.class);",
        "line": 174,
        "locate": "Test Case",
        "locationContext": {
          "methodName": "implementIsolatedNetworkTest",
          "methodAnnotations": [
            "@Test"
          ]
        }
      },
      {
        "type": "STUBBING",
        "code": "when(offering.getId()).thenReturn(NETWORK_ID);",
        "line": 175,
        "locate": "Test Case",
        "locationContext": {
          "methodName": "implementIsolatedNetworkTest",
          "methodAnnotations": [
            "@Test"
          ]
        }
      },
      {
        "type": "STUBBING",
        "code": "when(offering.getTrafficType()).thenReturn(TrafficType.Guest);",
        "line": 176,
        "locate": "Test Case",
        "locationContext": {
          "methodName": "implementIsolatedNetworkTest",
          "methodAnnotations": [
            "@Test"
          ]
        }
      },
      {
        "type": "STUBBING",
        "code": "when(offering.getGuestType()).thenReturn(GuestType.Isolated);",
        "line": 177,
        "locate": "Test Case",
        "locationContext": {
          "methodName": "implementIsolatedNetworkTest",
          "methodAnnotations": [
            "@Test"
          ]
        }
      }
    ],
    "pattern_id": 1
  },
  {
    "variableName": "offering",
    "variableType": "NetworkOffering",
    "mockedClass": "NetworkOffering",
    "isReuseableMock": "Fully Localized",
    "mockPattern": "Creation:\n\u2014 Local Mock Creation in Test Case\n\nStubbing:\n\u2014 Test Case\n\nVerification:\n\u2014 None",
    "classContext": {
      "packageName": "com.cloud.network.element",
      "filePath": "C:\\java tool\\Apache\\cloudstack\\plugins\\network-elements\\nicira-nvp\\src\\test\\java\\com\\cloud\\network\\element\\NiciraNvpElementTest.java",
      "className": "NiciraNvpElementTest"
    },
    "statements": [
      {
        "type": "DECLARATION",
        "code": "final NetworkOffering offering = mock(NetworkOffering.class);",
        "line": 217,
        "locate": "Test Case",
        "locationContext": {
          "methodName": "applyIpTest",
          "methodAnnotations": [
            "@Test"
          ]
        }
      },
      {
        "type": "STUBBING",
        "code": "when(offering.getId()).thenReturn(NETWORK_ID);",
        "line": 218,
        "locate": "Test Case",
        "locationContext": {
          "methodName": "applyIpTest",
          "methodAnnotations": [
            "@Test"
          ]
        }
      },
      {
        "type": "STUBBING",
        "code": "when(offering.getTrafficType()).thenReturn(TrafficType.Guest);",
        "line": 219,
        "locate": "Test Case",
        "locationContext": {
          "methodName": "applyIpTest",
          "methodAnnotations": [
            "@Test"
          ]
        }
      },
      {
        "type": "STUBBING",
        "code": "when(offering.getGuestType()).thenReturn(GuestType.Isolated);",
        "line": 220,
        "locate": "Test Case",
        "locationContext": {
          "methodName": "applyIpTest",
          "methodAnnotations": [
            "@Test"
          ]
        }
      }
    ],
    "pattern_id": 1
  },
  {
    "variableName": "offering",
    "variableType": "NetworkOffering",
    "mockedClass": "NetworkOffering",
    "isReuseableMock": "Fully Localized",
    "mockPattern": "Creation:\n\u2014 Local Mock Creation in Test Case\n\nStubbing:\n\u2014 Test Case\n\nVerification:\n\u2014 None",
    "classContext": {
      "packageName": "com.cloud.network.element",
      "filePath": "C:\\java tool\\Apache\\cloudstack\\plugins\\network-elements\\nicira-nvp\\src\\test\\java\\com\\cloud\\network\\element\\NiciraNvpElementTest.java",
      "className": "NiciraNvpElementTest"
    },
    "statements": [
      {
        "type": "DECLARATION",
        "code": "final NetworkOffering offering = mock(NetworkOffering.class);",
        "line": 290,
        "locate": "Test Case",
        "locationContext": {
          "methodName": "implementSharedNetworkUuidVlanIdTest",
          "methodAnnotations": [
            "@Test"
          ]
        }
      },
      {
        "type": "STUBBING",
        "code": "when(offering.getId()).thenReturn(NETWORK_ID);",
        "line": 291,
        "locate": "Test Case",
        "locationContext": {
          "methodName": "implementSharedNetworkUuidVlanIdTest",
          "methodAnnotations": [
            "@Test"
          ]
        }
      },
      {
        "type": "STUBBING",
        "code": "when(offering.getTrafficType()).thenReturn(TrafficType.Guest);",
        "line": 292,
        "locate": "Test Case",
        "locationContext": {
          "methodName": "implementSharedNetworkUuidVlanIdTest",
          "methodAnnotations": [
            "@Test"
          ]
        }
      },
      {
        "type": "STUBBING",
        "code": "when(offering.getGuestType()).thenReturn(GuestType.Shared);",
        "line": 293,
        "locate": "Test Case",
        "locationContext": {
          "methodName": "implementSharedNetworkUuidVlanIdTest",
          "methodAnnotations": [
            "@Test"
          ]
        }
      }
    ],
    "pattern_id": 1
  },
  {
    "variableName": "offering",
    "variableType": "NetworkOffering",
    "mockedClass": "NetworkOffering",
    "isReuseableMock": "Fully Localized",
    "mockPattern": "Creation:\n\u2014 Local Mock Creation in Test Case\n\nStubbing:\n\u2014 Test Case\n\nVerification:\n\u2014 None",
    "classContext": {
      "packageName": "com.cloud.network.element",
      "filePath": "C:\\java tool\\Apache\\cloudstack\\plugins\\network-elements\\nicira-nvp\\src\\test\\java\\com\\cloud\\network\\element\\NiciraNvpElementTest.java",
      "className": "NiciraNvpElementTest"
    },
    "statements": [
      {
        "type": "DECLARATION",
        "code": "final NetworkOffering offering = mock(NetworkOffering.class);",
        "line": 343,
        "locate": "Test Case",
        "locationContext": {
          "methodName": "implementSharedNetworkNumericalVlanIdTest",
          "methodAnnotations": [
            "@Test"
          ]
        }
      },
      {
        "type": "STUBBING",
        "code": "when(offering.getId()).thenReturn(NETWORK_ID);",
        "line": 344,
        "locate": "Test Case",
        "locationContext": {
          "methodName": "implementSharedNetworkNumericalVlanIdTest",
          "methodAnnotations": [
            "@Test"
          ]
        }
      },
      {
        "type": "STUBBING",
        "code": "when(offering.getTrafficType()).thenReturn(TrafficType.Guest);",
        "line": 345,
        "locate": "Test Case",
        "locationContext": {
          "methodName": "implementSharedNetworkNumericalVlanIdTest",
          "methodAnnotations": [
            "@Test"
          ]
        }
      },
      {
        "type": "STUBBING",
        "code": "when(offering.getGuestType()).thenReturn(GuestType.Shared);",
        "line": 346,
        "locate": "Test Case",
        "locationContext": {
          "methodName": "implementSharedNetworkNumericalVlanIdTest",
          "methodAnnotations": [
            "@Test"
          ]
        }
      }
    ],
    "pattern_id": 1
  },
  {
    "variableName": "offering",
    "variableType": "NetworkOffering",
    "mockedClass": "NetworkOffering",
    "isReuseableMock": "Fully Localized",
    "mockPattern": "Creation:\n\u2014 Local Mock Creation in Test Case\n\nStubbing:\n\u2014 Test Case\n\nVerification:\n\u2014 None",
    "classContext": {
      "packageName": "com.cloud.network.element",
      "filePath": "C:\\java tool\\Apache\\cloudstack\\plugins\\network-elements\\nicira-nvp\\src\\test\\java\\com\\cloud\\network\\element\\NiciraNvpElementTest.java",
      "className": "NiciraNvpElementTest"
    },
    "statements": [
      {
        "type": "DECLARATION",
        "code": "final NetworkOffering offering = mock(NetworkOffering.class);",
        "line": 395,
        "locate": "Test Case",
        "locationContext": {
          "methodName": "implementSharedNetworkNumericalVlanIdWithoutL2GatewayService",
          "methodAnnotations": [
            "@Test"
          ]
        }
      },
      {
        "type": "STUBBING",
        "code": "when(offering.getId()).thenReturn(NETWORK_ID);",
        "line": 396,
        "locate": "Test Case",
        "locationContext": {
          "methodName": "implementSharedNetworkNumericalVlanIdWithoutL2GatewayService",
          "methodAnnotations": [
            "@Test"
          ]
        }
      },
      {
        "type": "STUBBING",
        "code": "when(offering.getTrafficType()).thenReturn(TrafficType.Guest);",
        "line": 397,
        "locate": "Test Case",
        "locationContext": {
          "methodName": "implementSharedNetworkNumericalVlanIdWithoutL2GatewayService",
          "methodAnnotations": [
            "@Test"
          ]
        }
      },
      {
        "type": "STUBBING",
        "code": "when(offering.getGuestType()).thenReturn(GuestType.Shared);",
        "line": 398,
        "locate": "Test Case",
        "locationContext": {
          "methodName": "implementSharedNetworkNumericalVlanIdWithoutL2GatewayService",
          "methodAnnotations": [
            "@Test"
          ]
        }
      }
    ],
    "pattern_id": 1
  },
  {
    "variableName": "offering",
    "variableType": "NetworkOffering",
    "mockedClass": "NetworkOffering",
    "isReuseableMock": "Fully Localized",
    "mockPattern": "Creation:\n\u2014 Local Mock Creation in Test Case\n\nStubbing:\n\u2014 Test Case\n\nVerification:\n\u2014 None",
    "classContext": {
      "packageName": "com.cloud.network.guru",
      "filePath": "C:\\java tool\\Apache\\cloudstack\\plugins\\network-elements\\nicira-nvp\\src\\test\\java\\com\\cloud\\network\\guru\\NiciraNvpGuestNetworkGuruTest.java",
      "className": "NiciraNvpGuestNetworkGuruTest"
    },
    "statements": [
      {
        "type": "DECLARATION",
        "code": "final NetworkOffering offering = mock(NetworkOffering.class);",
        "line": 111,
        "locate": "Test Case",
        "locationContext": {
          "methodName": "testCanHandle",
          "methodAnnotations": [
            "@Test"
          ]
        }
      },
      {
        "type": "STUBBING",
        "code": "when(offering.getId()).thenReturn(NETWORK_ID);",
        "line": 112,
        "locate": "Test Case",
        "locationContext": {
          "methodName": "testCanHandle",
          "methodAnnotations": [
            "@Test"
          ]
        }
      },
      {
        "type": "STUBBING",
        "code": "when(offering.getTrafficType()).thenReturn(TrafficType.Guest);",
        "line": 113,
        "locate": "Test Case",
        "locationContext": {
          "methodName": "testCanHandle",
          "methodAnnotations": [
            "@Test"
          ]
        }
      },
      {
        "type": "STUBBING",
        "code": "when(offering.getGuestType()).thenReturn(GuestType.Isolated);",
        "line": 114,
        "locate": "Test Case",
        "locationContext": {
          "methodName": "testCanHandle",
          "methodAnnotations": [
            "@Test"
          ]
        }
      },
      {
        "type": "STUBBING",
        "code": "// Not supported TrafficType != Guest\r\nwhen(offering.getTrafficType()).thenReturn(TrafficType.Management);",
        "line": 129,
        "locate": "Test Case",
        "locationContext": {
          "methodName": "testCanHandle",
          "methodAnnotations": [
            "@Test"
          ]
        }
      },
      {
        "type": "STUBBING",
        "code": "// Supported: GuestType Shared\r\nwhen(offering.getTrafficType()).thenReturn(TrafficType.Guest);",
        "line": 133,
        "locate": "Test Case",
        "locationContext": {
          "methodName": "testCanHandle",
          "methodAnnotations": [
            "@Test"
          ]
        }
      },
      {
        "type": "STUBBING",
        "code": "when(offering.getGuestType()).thenReturn(GuestType.Shared);",
        "line": 134,
        "locate": "Test Case",
        "locationContext": {
          "methodName": "testCanHandle",
          "methodAnnotations": [
            "@Test"
          ]
        }
      },
      {
        "type": "STUBBING",
        "code": "// Not supported: Basic networking\r\nwhen(offering.getGuestType()).thenReturn(GuestType.Isolated);",
        "line": 138,
        "locate": "Test Case",
        "locationContext": {
          "methodName": "testCanHandle",
          "methodAnnotations": [
            "@Test"
          ]
        }
      }
    ],
    "pattern_id": 1
  },
  {
    "variableName": "offering",
    "variableType": "NetworkOffering",
    "mockedClass": "NetworkOffering",
    "isReuseableMock": "Fully Localized",
    "mockPattern": "Creation:\n\u2014 Local Mock Creation in Test Case\n\nStubbing:\n\u2014 Test Case\n\nVerification:\n\u2014 None",
    "classContext": {
      "packageName": "com.cloud.network.guru",
      "filePath": "C:\\java tool\\Apache\\cloudstack\\plugins\\network-elements\\nicira-nvp\\src\\test\\java\\com\\cloud\\network\\guru\\NiciraNvpGuestNetworkGuruTest.java",
      "className": "NiciraNvpGuestNetworkGuruTest"
    },
    "statements": [
      {
        "type": "DECLARATION",
        "code": "final NetworkOffering offering = mock(NetworkOffering.class);",
        "line": 158,
        "locate": "Test Case",
        "locationContext": {
          "methodName": "testDesign",
          "methodAnnotations": [
            "@Test"
          ]
        }
      },
      {
        "type": "STUBBING",
        "code": "when(offering.getId()).thenReturn(NETWORK_ID);",
        "line": 159,
        "locate": "Test Case",
        "locationContext": {
          "methodName": "testDesign",
          "methodAnnotations": [
            "@Test"
          ]
        }
      },
      {
        "type": "STUBBING",
        "code": "when(offering.getTrafficType()).thenReturn(TrafficType.Guest);",
        "line": 160,
        "locate": "Test Case",
        "locationContext": {
          "methodName": "testDesign",
          "methodAnnotations": [
            "@Test"
          ]
        }
      },
      {
        "type": "STUBBING",
        "code": "when(offering.getGuestType()).thenReturn(GuestType.Isolated);",
        "line": 161,
        "locate": "Test Case",
        "locationContext": {
          "methodName": "testDesign",
          "methodAnnotations": [
            "@Test"
          ]
        }
      }
    ],
    "pattern_id": 1
  },
  {
    "variableName": "offering",
    "variableType": "NetworkOffering",
    "mockedClass": "NetworkOffering",
    "isReuseableMock": "Fully Localized",
    "mockPattern": "Creation:\n\u2014 Local Mock Creation in Test Case\n\nStubbing:\n\u2014 Test Case\n\nVerification:\n\u2014 None",
    "classContext": {
      "packageName": "com.cloud.network.guru",
      "filePath": "C:\\java tool\\Apache\\cloudstack\\plugins\\network-elements\\nicira-nvp\\src\\test\\java\\com\\cloud\\network\\guru\\NiciraNvpGuestNetworkGuruTest.java",
      "className": "NiciraNvpGuestNetworkGuruTest"
    },
    "statements": [
      {
        "type": "DECLARATION",
        "code": "final NetworkOffering offering = mock(NetworkOffering.class);",
        "line": 186,
        "locate": "Test Case",
        "locationContext": {
          "methodName": "testDesignNoElementOnPhysicalNetwork",
          "methodAnnotations": [
            "@Test"
          ]
        }
      },
      {
        "type": "STUBBING",
        "code": "when(offering.getId()).thenReturn(NETWORK_ID);",
        "line": 187,
        "locate": "Test Case",
        "locationContext": {
          "methodName": "testDesignNoElementOnPhysicalNetwork",
          "methodAnnotations": [
            "@Test"
          ]
        }
      },
      {
        "type": "STUBBING",
        "code": "when(offering.getTrafficType()).thenReturn(TrafficType.Guest);",
        "line": 188,
        "locate": "Test Case",
        "locationContext": {
          "methodName": "testDesignNoElementOnPhysicalNetwork",
          "methodAnnotations": [
            "@Test"
          ]
        }
      },
      {
        "type": "STUBBING",
        "code": "when(offering.getGuestType()).thenReturn(GuestType.Isolated);",
        "line": 189,
        "locate": "Test Case",
        "locationContext": {
          "methodName": "testDesignNoElementOnPhysicalNetwork",
          "methodAnnotations": [
            "@Test"
          ]
        }
      }
    ],
    "pattern_id": 1
  },
  {
    "variableName": "offering",
    "variableType": "NetworkOffering",
    "mockedClass": "NetworkOffering",
    "isReuseableMock": "Fully Localized",
    "mockPattern": "Creation:\n\u2014 Local Mock Creation in Test Case\n\nStubbing:\n\u2014 Test Case\n\nVerification:\n\u2014 None",
    "classContext": {
      "packageName": "com.cloud.network.guru",
      "filePath": "C:\\java tool\\Apache\\cloudstack\\plugins\\network-elements\\nicira-nvp\\src\\test\\java\\com\\cloud\\network\\guru\\NiciraNvpGuestNetworkGuruTest.java",
      "className": "NiciraNvpGuestNetworkGuruTest"
    },
    "statements": [
      {
        "type": "DECLARATION",
        "code": "final NetworkOffering offering = mock(NetworkOffering.class);",
        "line": 209,
        "locate": "Test Case",
        "locationContext": {
          "methodName": "testDesignNoIsolationMethodSTT",
          "methodAnnotations": [
            "@Test"
          ]
        }
      },
      {
        "type": "STUBBING",
        "code": "when(offering.getId()).thenReturn(NETWORK_ID);",
        "line": 210,
        "locate": "Test Case",
        "locationContext": {
          "methodName": "testDesignNoIsolationMethodSTT",
          "methodAnnotations": [
            "@Test"
          ]
        }
      },
      {
        "type": "STUBBING",
        "code": "when(offering.getTrafficType()).thenReturn(TrafficType.Guest);",
        "line": 211,
        "locate": "Test Case",
        "locationContext": {
          "methodName": "testDesignNoIsolationMethodSTT",
          "methodAnnotations": [
            "@Test"
          ]
        }
      },
      {
        "type": "STUBBING",
        "code": "when(offering.getGuestType()).thenReturn(GuestType.Isolated);",
        "line": 212,
        "locate": "Test Case",
        "locationContext": {
          "methodName": "testDesignNoIsolationMethodSTT",
          "methodAnnotations": [
            "@Test"
          ]
        }
      }
    ],
    "pattern_id": 1
  },
  {
    "variableName": "offering",
    "variableType": "NetworkOffering",
    "mockedClass": "NetworkOffering",
    "isReuseableMock": "Fully Localized",
    "mockPattern": "Creation:\n\u2014 Local Mock Creation in Test Case\n\nStubbing:\n\u2014 Test Case\n\nVerification:\n\u2014 None",
    "classContext": {
      "packageName": "com.cloud.network.guru",
      "filePath": "C:\\java tool\\Apache\\cloudstack\\plugins\\network-elements\\nicira-nvp\\src\\test\\java\\com\\cloud\\network\\guru\\NiciraNvpGuestNetworkGuruTest.java",
      "className": "NiciraNvpGuestNetworkGuruTest"
    },
    "statements": [
      {
        "type": "DECLARATION",
        "code": "final NetworkOffering offering = mock(NetworkOffering.class);",
        "line": 233,
        "locate": "Test Case",
        "locationContext": {
          "methodName": "testDesignNoConnectivityInOffering",
          "methodAnnotations": [
            "@Test"
          ]
        }
      },
      {
        "type": "STUBBING",
        "code": "when(offering.getId()).thenReturn(NETWORK_ID);",
        "line": 234,
        "locate": "Test Case",
        "locationContext": {
          "methodName": "testDesignNoConnectivityInOffering",
          "methodAnnotations": [
            "@Test"
          ]
        }
      },
      {
        "type": "STUBBING",
        "code": "when(offering.getTrafficType()).thenReturn(TrafficType.Guest);",
        "line": 235,
        "locate": "Test Case",
        "locationContext": {
          "methodName": "testDesignNoConnectivityInOffering",
          "methodAnnotations": [
            "@Test"
          ]
        }
      },
      {
        "type": "STUBBING",
        "code": "when(offering.getGuestType()).thenReturn(GuestType.Isolated);",
        "line": 236,
        "locate": "Test Case",
        "locationContext": {
          "methodName": "testDesignNoConnectivityInOffering",
          "methodAnnotations": [
            "@Test"
          ]
        }
      }
    ],
    "pattern_id": 1
  },
  {
    "variableName": "offering",
    "variableType": "NetworkOffering",
    "mockedClass": "NetworkOffering",
    "isReuseableMock": "Fully Localized",
    "mockPattern": "Creation:\n\u2014 Local Mock Creation in Test Case\n\nStubbing:\n\u2014 Test Case\n\nVerification:\n\u2014 None",
    "classContext": {
      "packageName": "com.cloud.network.guru",
      "filePath": "C:\\java tool\\Apache\\cloudstack\\plugins\\network-elements\\nicira-nvp\\src\\test\\java\\com\\cloud\\network\\guru\\NiciraNvpGuestNetworkGuruTest.java",
      "className": "NiciraNvpGuestNetworkGuruTest"
    },
    "statements": [
      {
        "type": "DECLARATION",
        "code": "final NetworkOffering offering = mock(NetworkOffering.class);",
        "line": 259,
        "locate": "Test Case",
        "locationContext": {
          "methodName": "testImplement",
          "methodAnnotations": [
            "@Test"
          ]
        }
      },
      {
        "type": "STUBBING",
        "code": "when(offering.getId()).thenReturn(NETWORK_ID);",
        "line": 260,
        "locate": "Test Case",
        "locationContext": {
          "methodName": "testImplement",
          "methodAnnotations": [
            "@Test"
          ]
        }
      },
      {
        "type": "STUBBING",
        "code": "when(offering.getTrafficType()).thenReturn(TrafficType.Guest);",
        "line": 261,
        "locate": "Test Case",
        "locationContext": {
          "methodName": "testImplement",
          "methodAnnotations": [
            "@Test"
          ]
        }
      },
      {
        "type": "STUBBING",
        "code": "when(offering.getGuestType()).thenReturn(GuestType.Isolated);",
        "line": 262,
        "locate": "Test Case",
        "locationContext": {
          "methodName": "testImplement",
          "methodAnnotations": [
            "@Test"
          ]
        }
      }
    ],
    "pattern_id": 1
  },
  {
    "variableName": "offering",
    "variableType": "NetworkOffering",
    "mockedClass": "NetworkOffering",
    "isReuseableMock": "Fully Localized",
    "mockPattern": "Creation:\n\u2014 Local Mock Creation in Test Case\n\nStubbing:\n\u2014 Test Case\n\nVerification:\n\u2014 None",
    "classContext": {
      "packageName": "com.cloud.network.guru",
      "filePath": "C:\\java tool\\Apache\\cloudstack\\plugins\\network-elements\\nicira-nvp\\src\\test\\java\\com\\cloud\\network\\guru\\NiciraNvpGuestNetworkGuruTest.java",
      "className": "NiciraNvpGuestNetworkGuruTest"
    },
    "statements": [
      {
        "type": "DECLARATION",
        "code": "final NetworkOffering offering = mock(NetworkOffering.class);",
        "line": 314,
        "locate": "Test Case",
        "locationContext": {
          "methodName": "testImplementWithCidr",
          "methodAnnotations": [
            "@Test"
          ]
        }
      },
      {
        "type": "STUBBING",
        "code": "when(offering.getId()).thenReturn(NETWORK_ID);",
        "line": 315,
        "locate": "Test Case",
        "locationContext": {
          "methodName": "testImplementWithCidr",
          "methodAnnotations": [
            "@Test"
          ]
        }
      },
      {
        "type": "STUBBING",
        "code": "when(offering.getTrafficType()).thenReturn(TrafficType.Guest);",
        "line": 316,
        "locate": "Test Case",
        "locationContext": {
          "methodName": "testImplementWithCidr",
          "methodAnnotations": [
            "@Test"
          ]
        }
      },
      {
        "type": "STUBBING",
        "code": "when(offering.getGuestType()).thenReturn(GuestType.Isolated);",
        "line": 317,
        "locate": "Test Case",
        "locationContext": {
          "methodName": "testImplementWithCidr",
          "methodAnnotations": [
            "@Test"
          ]
        }
      }
    ],
    "pattern_id": 1
  },
  {
    "variableName": "offering",
    "variableType": "NetworkOffering",
    "mockedClass": "NetworkOffering",
    "isReuseableMock": "Fully Localized",
    "mockPattern": "Creation:\n\u2014 Local Mock Creation in Test Case\n\nStubbing:\n\u2014 Test Case\n\nVerification:\n\u2014 None",
    "classContext": {
      "packageName": "com.cloud.network.guru",
      "filePath": "C:\\java tool\\Apache\\cloudstack\\plugins\\network-elements\\nicira-nvp\\src\\test\\java\\com\\cloud\\network\\guru\\NiciraNvpGuestNetworkGuruTest.java",
      "className": "NiciraNvpGuestNetworkGuruTest"
    },
    "statements": [
      {
        "type": "DECLARATION",
        "code": "final NetworkOffering offering = mock(NetworkOffering.class);",
        "line": 373,
        "locate": "Test Case",
        "locationContext": {
          "methodName": "testImplementURIException",
          "methodAnnotations": [
            "@Test"
          ]
        }
      },
      {
        "type": "STUBBING",
        "code": "when(offering.getId()).thenReturn(NETWORK_ID);",
        "line": 374,
        "locate": "Test Case",
        "locationContext": {
          "methodName": "testImplementURIException",
          "methodAnnotations": [
            "@Test"
          ]
        }
      },
      {
        "type": "STUBBING",
        "code": "when(offering.getTrafficType()).thenReturn(TrafficType.Guest);",
        "line": 375,
        "locate": "Test Case",
        "locationContext": {
          "methodName": "testImplementURIException",
          "methodAnnotations": [
            "@Test"
          ]
        }
      },
      {
        "type": "STUBBING",
        "code": "when(offering.getGuestType()).thenReturn(GuestType.Isolated);",
        "line": 376,
        "locate": "Test Case",
        "locationContext": {
          "methodName": "testImplementURIException",
          "methodAnnotations": [
            "@Test"
          ]
        }
      }
    ],
    "pattern_id": 1
  },
  {
    "variableName": "offering",
    "variableType": "NetworkOffering",
    "mockedClass": "NetworkOffering",
    "isReuseableMock": "Fully Localized",
    "mockPattern": "Creation:\n\u2014 Local Mock Creation in Test Case\n\nStubbing:\n\u2014 Test Case\n\nVerification:\n\u2014 None",
    "classContext": {
      "packageName": "com.cloud.network.guru",
      "filePath": "C:\\java tool\\Apache\\cloudstack\\plugins\\network-elements\\nicira-nvp\\src\\test\\java\\com\\cloud\\network\\guru\\NiciraNvpGuestNetworkGuruTest.java",
      "className": "NiciraNvpGuestNetworkGuruTest"
    },
    "statements": [
      {
        "type": "DECLARATION",
        "code": "final NetworkOffering offering = mock(NetworkOffering.class);",
        "line": 428,
        "locate": "Test Case",
        "locationContext": {
          "methodName": "testShutdown",
          "methodAnnotations": [
            "@Test"
          ]
        }
      },
      {
        "type": "STUBBING",
        "code": "when(offering.getId()).thenReturn(NETWORK_ID);",
        "line": 429,
        "locate": "Test Case",
        "locationContext": {
          "methodName": "testShutdown",
          "methodAnnotations": [
            "@Test"
          ]
        }
      },
      {
        "type": "STUBBING",
        "code": "when(offering.getTrafficType()).thenReturn(TrafficType.Guest);",
        "line": 430,
        "locate": "Test Case",
        "locationContext": {
          "methodName": "testShutdown",
          "methodAnnotations": [
            "@Test"
          ]
        }
      },
      {
        "type": "STUBBING",
        "code": "when(offering.getGuestType()).thenReturn(GuestType.Isolated);",
        "line": 431,
        "locate": "Test Case",
        "locationContext": {
          "methodName": "testShutdown",
          "methodAnnotations": [
            "@Test"
          ]
        }
      },
      {
        "type": "STUBBING",
        "code": "when(offering.isSpecifyVlan()).thenReturn(false);",
        "line": 472,
        "locate": "Test Case",
        "locationContext": {
          "methodName": "testShutdown",
          "methodAnnotations": [
            "@Test"
          ]
        }
      }
    ],
    "pattern_id": 1
  },
  {
    "variableName": "offering",
    "variableType": "NetworkOffering",
    "mockedClass": "NetworkOffering",
    "isReuseableMock": "Fully Localized",
    "mockPattern": "Creation:\n\u2014 Local Mock Creation in Test Case\n\nStubbing:\n\u2014 Test Case\n\nVerification:\n\u2014 None",
    "classContext": {
      "packageName": "com.cloud.network.guru",
      "filePath": "C:\\java tool\\Apache\\cloudstack\\plugins\\network-elements\\vxlan\\src\\test\\java\\com\\cloud\\network\\guru\\VxlanGuestNetworkGuruTest.java",
      "className": "VxlanGuestNetworkGuruTest"
    },
    "statements": [
      {
        "type": "DECLARATION",
        "code": "NetworkOffering offering = mock(NetworkOffering.class);",
        "line": 95,
        "locate": "Test Case",
        "locationContext": {
          "methodName": "testCanHandle",
          "methodAnnotations": [
            "@Test"
          ]
        }
      },
      {
        "type": "STUBBING",
        "code": "when(offering.getId()).thenReturn(42L);",
        "line": 96,
        "locate": "Test Case",
        "locationContext": {
          "methodName": "testCanHandle",
          "methodAnnotations": [
            "@Test"
          ]
        }
      },
      {
        "type": "STUBBING",
        "code": "when(offering.getTrafficType()).thenReturn(TrafficType.Guest);",
        "line": 97,
        "locate": "Test Case",
        "locationContext": {
          "methodName": "testCanHandle",
          "methodAnnotations": [
            "@Test"
          ]
        }
      },
      {
        "type": "STUBBING",
        "code": "when(offering.getGuestType()).thenReturn(GuestType.Isolated);",
        "line": 98,
        "locate": "Test Case",
        "locationContext": {
          "methodName": "testCanHandle",
          "methodAnnotations": [
            "@Test"
          ]
        }
      },
      {
        "type": "STUBBING",
        "code": "// Not supported TrafficType != Guest\r\nwhen(offering.getTrafficType()).thenReturn(TrafficType.Management);",
        "line": 107,
        "locate": "Test Case",
        "locationContext": {
          "methodName": "testCanHandle",
          "methodAnnotations": [
            "@Test"
          ]
        }
      },
      {
        "type": "STUBBING",
        "code": "// Not supported: GuestType Shared\r\nwhen(offering.getTrafficType()).thenReturn(TrafficType.Guest);",
        "line": 111,
        "locate": "Test Case",
        "locationContext": {
          "methodName": "testCanHandle",
          "methodAnnotations": [
            "@Test"
          ]
        }
      },
      {
        "type": "STUBBING",
        "code": "when(offering.getGuestType()).thenReturn(GuestType.Shared);",
        "line": 112,
        "locate": "Test Case",
        "locationContext": {
          "methodName": "testCanHandle",
          "methodAnnotations": [
            "@Test"
          ]
        }
      },
      {
        "type": "STUBBING",
        "code": "// Not supported: Basic networking\r\nwhen(offering.getGuestType()).thenReturn(GuestType.Isolated);",
        "line": 116,
        "locate": "Test Case",
        "locationContext": {
          "methodName": "testCanHandle",
          "methodAnnotations": [
            "@Test"
          ]
        }
      }
    ],
    "pattern_id": 1
  },
  {
    "variableName": "offering",
    "variableType": "NetworkOffering",
    "mockedClass": "NetworkOffering",
    "isReuseableMock": "Fully Localized",
    "mockPattern": "Creation:\n\u2014 Local Mock Creation in Test Case\n\nStubbing:\n\u2014 Test Case\n\nVerification:\n\u2014 None",
    "classContext": {
      "packageName": "com.cloud.network.guru",
      "filePath": "C:\\java tool\\Apache\\cloudstack\\plugins\\network-elements\\vxlan\\src\\test\\java\\com\\cloud\\network\\guru\\VxlanGuestNetworkGuruTest.java",
      "className": "VxlanGuestNetworkGuruTest"
    },
    "statements": [
      {
        "type": "DECLARATION",
        "code": "NetworkOffering offering = mock(NetworkOffering.class);",
        "line": 132,
        "locate": "Test Case",
        "locationContext": {
          "methodName": "testDesign",
          "methodAnnotations": [
            "@Test"
          ]
        }
      },
      {
        "type": "STUBBING",
        "code": "when(offering.getId()).thenReturn(42L);",
        "line": 133,
        "locate": "Test Case",
        "locationContext": {
          "methodName": "testDesign",
          "methodAnnotations": [
            "@Test"
          ]
        }
      },
      {
        "type": "STUBBING",
        "code": "when(offering.getTrafficType()).thenReturn(TrafficType.Guest);",
        "line": 134,
        "locate": "Test Case",
        "locationContext": {
          "methodName": "testDesign",
          "methodAnnotations": [
            "@Test"
          ]
        }
      },
      {
        "type": "STUBBING",
        "code": "when(offering.getGuestType()).thenReturn(GuestType.Isolated);",
        "line": 135,
        "locate": "Test Case",
        "locationContext": {
          "methodName": "testDesign",
          "methodAnnotations": [
            "@Test"
          ]
        }
      }
    ],
    "pattern_id": 1
  },
  {
    "variableName": "offering",
    "variableType": "NetworkOffering",
    "mockedClass": "NetworkOffering",
    "isReuseableMock": "Fully Localized",
    "mockPattern": "Creation:\n\u2014 Local Mock Creation in Test Case\n\nStubbing:\n\u2014 Test Case\n\nVerification:\n\u2014 None",
    "classContext": {
      "packageName": "com.cloud.network.guru",
      "filePath": "C:\\java tool\\Apache\\cloudstack\\plugins\\network-elements\\vxlan\\src\\test\\java\\com\\cloud\\network\\guru\\VxlanGuestNetworkGuruTest.java",
      "className": "VxlanGuestNetworkGuruTest"
    },
    "statements": [
      {
        "type": "DECLARATION",
        "code": "NetworkOffering offering = mock(NetworkOffering.class);",
        "line": 153,
        "locate": "Test Case",
        "locationContext": {
          "methodName": "testImplement",
          "methodAnnotations": [
            "@Test"
          ]
        }
      },
      {
        "type": "STUBBING",
        "code": "when(offering.getId()).thenReturn(42L);",
        "line": 154,
        "locate": "Test Case",
        "locationContext": {
          "methodName": "testImplement",
          "methodAnnotations": [
            "@Test"
          ]
        }
      },
      {
        "type": "STUBBING",
        "code": "when(offering.getTrafficType()).thenReturn(TrafficType.Guest);",
        "line": 155,
        "locate": "Test Case",
        "locationContext": {
          "methodName": "testImplement",
          "methodAnnotations": [
            "@Test"
          ]
        }
      },
      {
        "type": "STUBBING",
        "code": "when(offering.getGuestType()).thenReturn(GuestType.Isolated);",
        "line": 156,
        "locate": "Test Case",
        "locationContext": {
          "methodName": "testImplement",
          "methodAnnotations": [
            "@Test"
          ]
        }
      }
    ],
    "pattern_id": 1
  },
  {
    "variableName": "offering",
    "variableType": "NetworkOffering",
    "mockedClass": "NetworkOffering",
    "isReuseableMock": "Fully Localized",
    "mockPattern": "Creation:\n\u2014 Local Mock Creation in Test Case\n\nStubbing:\n\u2014 Test Case\n\nVerification:\n\u2014 None",
    "classContext": {
      "packageName": "com.cloud.network.guru",
      "filePath": "C:\\java tool\\Apache\\cloudstack\\plugins\\network-elements\\vxlan\\src\\test\\java\\com\\cloud\\network\\guru\\VxlanGuestNetworkGuruTest.java",
      "className": "VxlanGuestNetworkGuruTest"
    },
    "statements": [
      {
        "type": "DECLARATION",
        "code": "NetworkOffering offering = mock(NetworkOffering.class);",
        "line": 195,
        "locate": "Test Case",
        "locationContext": {
          "methodName": "testImplementWithCidr",
          "methodAnnotations": [
            "@Test"
          ]
        }
      },
      {
        "type": "STUBBING",
        "code": "when(offering.getId()).thenReturn(42L);",
        "line": 196,
        "locate": "Test Case",
        "locationContext": {
          "methodName": "testImplementWithCidr",
          "methodAnnotations": [
            "@Test"
          ]
        }
      },
      {
        "type": "STUBBING",
        "code": "when(offering.getTrafficType()).thenReturn(TrafficType.Guest);",
        "line": 197,
        "locate": "Test Case",
        "locationContext": {
          "methodName": "testImplementWithCidr",
          "methodAnnotations": [
            "@Test"
          ]
        }
      },
      {
        "type": "STUBBING",
        "code": "when(offering.getGuestType()).thenReturn(GuestType.Isolated);",
        "line": 198,
        "locate": "Test Case",
        "locationContext": {
          "methodName": "testImplementWithCidr",
          "methodAnnotations": [
            "@Test"
          ]
        }
      }
    ],
    "pattern_id": 1
  },
  {
    "variableName": "offering",
    "variableType": "NetworkOffering",
    "mockedClass": "NetworkOffering",
    "isReuseableMock": "Fully Localized",
    "mockPattern": "Creation:\n\u2014 Local Mock Creation in Test Case\n\nStubbing:\n\u2014 Test Case\n\nVerification:\n\u2014 None",
    "classContext": {
      "packageName": "com.cloud.network.guru",
      "filePath": "C:\\java tool\\Apache\\cloudstack\\plugins\\network-elements\\vxlan\\src\\test\\java\\com\\cloud\\network\\guru\\VxlanGuestNetworkGuruTest.java",
      "className": "VxlanGuestNetworkGuruTest"
    },
    "statements": [
      {
        "type": "DECLARATION",
        "code": "NetworkOffering offering = mock(NetworkOffering.class);",
        "line": 242,
        "locate": "Test Case",
        "locationContext": {
          "methodName": "testShutdown",
          "methodAnnotations": [
            "@Test"
          ]
        }
      },
      {
        "type": "STUBBING",
        "code": "when(offering.getId()).thenReturn(42L);",
        "line": 243,
        "locate": "Test Case",
        "locationContext": {
          "methodName": "testShutdown",
          "methodAnnotations": [
            "@Test"
          ]
        }
      },
      {
        "type": "STUBBING",
        "code": "when(offering.getTrafficType()).thenReturn(TrafficType.Guest);",
        "line": 244,
        "locate": "Test Case",
        "locationContext": {
          "methodName": "testShutdown",
          "methodAnnotations": [
            "@Test"
          ]
        }
      },
      {
        "type": "STUBBING",
        "code": "when(offering.getGuestType()).thenReturn(GuestType.Isolated);",
        "line": 245,
        "locate": "Test Case",
        "locationContext": {
          "methodName": "testShutdown",
          "methodAnnotations": [
            "@Test"
          ]
        }
      },
      {
        "type": "STUBBING",
        "code": "when(offering.isSpecifyVlan()).thenReturn(false);",
        "line": 275,
        "locate": "Test Case",
        "locationContext": {
          "methodName": "testShutdown",
          "methodAnnotations": [
            "@Test"
          ]
        }
      }
    ],
    "pattern_id": 1
  },
  {
    "variableName": "networkOffering",
    "variableType": "NetworkOffering",
    "mockedClass": "NetworkOffering",
    "isReuseableMock": "Fully Localized",
    "mockPattern": "Creation:\n\u2014 Local Mock Creation in Test Case\n\nStubbing:\n\u2014 Test Case\n\nVerification:\n\u2014 None",
    "classContext": {
      "packageName": "com.cloud.network.guru",
      "filePath": "C:\\java tool\\Apache\\cloudstack\\server\\src\\test\\java\\com\\cloud\\network\\guru\\ExternalGuestNetworkGuruTest.java",
      "className": "ExternalGuestNetworkGuruTest"
    },
    "statements": [
      {
        "type": "DECLARATION",
        "code": "NetworkOffering networkOffering = Mockito.mock(NetworkOffering.class);",
        "line": 67,
        "locate": "Test Case",
        "locationContext": {
          "methodName": "testDesignDns",
          "methodAnnotations": [
            "@Test"
          ]
        }
      },
      {
        "type": "STUBBING",
        "code": "Mockito.when(networkOffering.getTrafficType()).thenReturn(Networks.TrafficType.Guest);",
        "line": 68,
        "locate": "Test Case",
        "locationContext": {
          "methodName": "testDesignDns",
          "methodAnnotations": [
            "@Test"
          ]
        }
      },
      {
        "type": "STUBBING",
        "code": "Mockito.when(networkOffering.getGuestType()).thenReturn(Network.GuestType.Isolated);",
        "line": 69,
        "locate": "Test Case",
        "locationContext": {
          "methodName": "testDesignDns",
          "methodAnnotations": [
            "@Test"
          ]
        }
      }
    ],
    "pattern_id": 1
  },
  {
    "variableName": "offering",
    "variableType": "NetworkOffering",
    "mockedClass": "NetworkOffering",
    "isReuseableMock": "Fully Localized",
    "mockPattern": "Creation:\n\u2014 Local Mock Creation in Test Case\n\nStubbing:\n\u2014 Test Case\n\nVerification:\n\u2014 None",
    "classContext": {
      "packageName": "com.cloud.network",
      "filePath": "C:\\java tool\\Apache\\cloudstack\\server\\src\\test\\java\\com\\cloud\\network\\NetworkServiceImplTest.java",
      "className": "NetworkServiceImplTest"
    },
    "statements": [
      {
        "type": "DECLARATION",
        "code": "NetworkOffering offering = Mockito.mock(NetworkOffering.class);",
        "line": 599,
        "locate": "Test Case",
        "locationContext": {
          "methodName": "testCheckAndUpdateNetworkNoUpdate",
          "methodAnnotations": [
            "@Test"
          ]
        }
      },
      {
        "type": "STUBBING",
        "code": "Mockito.when(offering.getId()).thenReturn(offeringId);",
        "line": 600,
        "locate": "Test Case",
        "locationContext": {
          "methodName": "testCheckAndUpdateNetworkNoUpdate",
          "methodAnnotations": [
            "@Test"
          ]
        }
      }
    ],
    "pattern_id": 1
  },
  {
    "variableName": "offering",
    "variableType": "NetworkOffering",
    "mockedClass": "NetworkOffering",
    "isReuseableMock": "Fully Localized",
    "mockPattern": "Creation:\n\u2014 Local Mock Creation in Test Case\n\nStubbing:\n\u2014 Test Case\n\nVerification:\n\u2014 None",
    "classContext": {
      "packageName": "com.cloud.network",
      "filePath": "C:\\java tool\\Apache\\cloudstack\\server\\src\\test\\java\\com\\cloud\\network\\NetworkServiceImplTest.java",
      "className": "NetworkServiceImplTest"
    },
    "statements": [
      {
        "type": "DECLARATION",
        "code": "NetworkOffering offering = Mockito.mock(NetworkOffering.class);",
        "line": 613,
        "locate": "Test Case",
        "locationContext": {
          "methodName": "testCheckAndUpdateNetworkOfferingChangeReset",
          "methodAnnotations": [
            "@Test"
          ]
        }
      },
      {
        "type": "STUBBING",
        "code": "Mockito.when(offering.getId()).thenReturn(offeringId);",
        "line": 614,
        "locate": "Test Case",
        "locationContext": {
          "methodName": "testCheckAndUpdateNetworkOfferingChangeReset",
          "methodAnnotations": [
            "@Test"
          ]
        }
      }
    ],
    "pattern_id": 1
  },
  {
    "variableName": "offering",
    "variableType": "NetworkOffering",
    "mockedClass": "NetworkOffering",
    "isReuseableMock": "Fully Localized",
    "mockPattern": "Creation:\n\u2014 Local Mock Creation in Test Case\n\nStubbing:\n\u2014 Test Case\n\nVerification:\n\u2014 None",
    "classContext": {
      "packageName": "com.cloud.network",
      "filePath": "C:\\java tool\\Apache\\cloudstack\\server\\src\\test\\java\\com\\cloud\\network\\NetworkServiceImplTest.java",
      "className": "NetworkServiceImplTest"
    },
    "statements": [
      {
        "type": "DECLARATION",
        "code": "NetworkOffering offering = Mockito.mock(NetworkOffering.class);",
        "line": 626,
        "locate": "Test Case",
        "locationContext": {
          "methodName": "testCheckAndUpdateNetworkDnsL2NetworkFailure",
          "methodAnnotations": [
            "@Test"
          ]
        }
      },
      {
        "type": "STUBBING",
        "code": "Mockito.when(offering.getGuestType()).thenReturn(Network.GuestType.L2);",
        "line": 627,
        "locate": "Test Case",
        "locationContext": {
          "methodName": "testCheckAndUpdateNetworkDnsL2NetworkFailure",
          "methodAnnotations": [
            "@Test"
          ]
        }
      }
    ],
    "pattern_id": 1
  },
  {
    "variableName": "offering",
    "variableType": "NetworkOffering",
    "mockedClass": "NetworkOffering",
    "isReuseableMock": "Fully Localized",
    "mockPattern": "Creation:\n\u2014 Local Mock Creation in Test Case\n\nStubbing:\n\u2014 Test Case\n\nVerification:\n\u2014 None",
    "classContext": {
      "packageName": "com.cloud.network",
      "filePath": "C:\\java tool\\Apache\\cloudstack\\server\\src\\test\\java\\com\\cloud\\network\\NetworkServiceImplTest.java",
      "className": "NetworkServiceImplTest"
    },
    "statements": [
      {
        "type": "DECLARATION",
        "code": "NetworkOffering offering = Mockito.mock(NetworkOffering.class);",
        "line": 635,
        "locate": "Test Case",
        "locationContext": {
          "methodName": "testCheckAndUpdateNetworkDnsVpcTierFailure",
          "methodAnnotations": [
            "@Test"
          ]
        }
      },
      {
        "type": "STUBBING",
        "code": "Mockito.when(offering.getGuestType()).thenReturn(Network.GuestType.Shared);",
        "line": 636,
        "locate": "Test Case",
        "locationContext": {
          "methodName": "testCheckAndUpdateNetworkDnsVpcTierFailure",
          "methodAnnotations": [
            "@Test"
          ]
        }
      }
    ],
    "pattern_id": 1
  },
  {
    "variableName": "offering",
    "variableType": "NetworkOffering",
    "mockedClass": "NetworkOffering",
    "isReuseableMock": "Fully Localized",
    "mockPattern": "Creation:\n\u2014 Local Mock Creation in Test Case\n\nStubbing:\n\u2014 Test Case\n\nVerification:\n\u2014 None",
    "classContext": {
      "packageName": "com.cloud.network",
      "filePath": "C:\\java tool\\Apache\\cloudstack\\server\\src\\test\\java\\com\\cloud\\network\\NetworkServiceImplTest.java",
      "className": "NetworkServiceImplTest"
    },
    "statements": [
      {
        "type": "DECLARATION",
        "code": "NetworkOffering offering = Mockito.mock(NetworkOffering.class);",
        "line": 645,
        "locate": "Test Case",
        "locationContext": {
          "methodName": "testCheckAndUpdateNetworkDnsServiceFailure",
          "methodAnnotations": [
            "@Test"
          ]
        }
      },
      {
        "type": "STUBBING",
        "code": "Mockito.when(offering.getId()).thenReturn(offeringId);",
        "line": 646,
        "locate": "Test Case",
        "locationContext": {
          "methodName": "testCheckAndUpdateNetworkDnsServiceFailure",
          "methodAnnotations": [
            "@Test"
          ]
        }
      },
      {
        "type": "STUBBING",
        "code": "Mockito.when(offering.getGuestType()).thenReturn(Network.GuestType.Shared);",
        "line": 647,
        "locate": "Test Case",
        "locationContext": {
          "methodName": "testCheckAndUpdateNetworkDnsServiceFailure",
          "methodAnnotations": [
            "@Test"
          ]
        }
      }
    ],
    "pattern_id": 1
  },
  {
    "variableName": "offering",
    "variableType": "NetworkOffering",
    "mockedClass": "NetworkOffering",
    "isReuseableMock": "Fully Localized",
    "mockPattern": "Creation:\n\u2014 Local Mock Creation in Test Case\n\nStubbing:\n\u2014 Test Case\n\nVerification:\n\u2014 None",
    "classContext": {
      "packageName": "com.cloud.network",
      "filePath": "C:\\java tool\\Apache\\cloudstack\\server\\src\\test\\java\\com\\cloud\\network\\NetworkServiceImplTest.java",
      "className": "NetworkServiceImplTest"
    },
    "statements": [
      {
        "type": "DECLARATION",
        "code": "NetworkOffering offering = Mockito.mock(NetworkOffering.class);",
        "line": 659,
        "locate": "Test Case",
        "locationContext": {
          "methodName": "testCheckAndUpdateNetworkNotSharedIp6Failure",
          "methodAnnotations": [
            "@Test"
          ]
        }
      },
      {
        "type": "STUBBING",
        "code": "Mockito.when(offering.getId()).thenReturn(offeringId);",
        "line": 660,
        "locate": "Test Case",
        "locationContext": {
          "methodName": "testCheckAndUpdateNetworkNotSharedIp6Failure",
          "methodAnnotations": [
            "@Test"
          ]
        }
      }
    ],
    "pattern_id": 1
  },
  {
    "variableName": "offering",
    "variableType": "NetworkOffering",
    "mockedClass": "NetworkOffering",
    "isReuseableMock": "Fully Localized",
    "mockPattern": "Creation:\n\u2014 Local Mock Creation in Test Case\n\nStubbing:\n\u2014 Test Case\n\nVerification:\n\u2014 None",
    "classContext": {
      "packageName": "com.cloud.network",
      "filePath": "C:\\java tool\\Apache\\cloudstack\\server\\src\\test\\java\\com\\cloud\\network\\NetworkServiceImplTest.java",
      "className": "NetworkServiceImplTest"
    },
    "statements": [
      {
        "type": "DECLARATION",
        "code": "NetworkOffering offering = Mockito.mock(NetworkOffering.class);",
        "line": 671,
        "locate": "Test Case",
        "locationContext": {
          "methodName": "testCheckAndUpdateNetworkNotIsolatedIp6Failure",
          "methodAnnotations": [
            "@Test"
          ]
        }
      },
      {
        "type": "STUBBING",
        "code": "Mockito.when(offering.getId()).thenReturn(offeringId);",
        "line": 672,
        "locate": "Test Case",
        "locationContext": {
          "methodName": "testCheckAndUpdateNetworkNotIsolatedIp6Failure",
          "methodAnnotations": [
            "@Test"
          ]
        }
      }
    ],
    "pattern_id": 1
  },
  {
    "variableName": "offering",
    "variableType": "NetworkOffering",
    "mockedClass": "NetworkOffering",
    "isReuseableMock": "Fully Localized",
    "mockPattern": "Creation:\n\u2014 Local Mock Creation in Test Case\n\nStubbing:\n\u2014 Test Case\n\nVerification:\n\u2014 None",
    "classContext": {
      "packageName": "com.cloud.network",
      "filePath": "C:\\java tool\\Apache\\cloudstack\\server\\src\\test\\java\\com\\cloud\\network\\NetworkServiceImplTest.java",
      "className": "NetworkServiceImplTest"
    },
    "statements": [
      {
        "type": "DECLARATION",
        "code": "NetworkOffering offering = Mockito.mock(NetworkOffering.class);",
        "line": 691,
        "locate": "Test Case",
        "locationContext": {
          "methodName": "testCheckAndUpdateNetworkSuccess",
          "methodAnnotations": [
            "@Test"
          ]
        }
      },
      {
        "type": "STUBBING",
        "code": "Mockito.when(offering.getId()).thenReturn(offeringId);",
        "line": 692,
        "locate": "Test Case",
        "locationContext": {
          "methodName": "testCheckAndUpdateNetworkSuccess",
          "methodAnnotations": [
            "@Test"
          ]
        }
      }
    ],
    "pattern_id": 1
  },
  {
    "variableName": "offering",
    "variableType": "NetworkOffering",
    "mockedClass": "NetworkOffering",
    "isReuseableMock": "Fully Localized",
    "mockPattern": "Creation:\n\u2014 Local Mock Creation in Test Case\n\nStubbing:\n\u2014 Test Case\n\nVerification:\n\u2014 None",
    "classContext": {
      "packageName": "com.cloud.network",
      "filePath": "C:\\java tool\\Apache\\cloudstack\\server\\src\\test\\java\\com\\cloud\\network\\NetworkServiceImplTest.java",
      "className": "NetworkServiceImplTest"
    },
    "statements": [
      {
        "type": "DECLARATION",
        "code": "NetworkOffering offering = Mockito.mock(NetworkOffering.class);",
        "line": 717,
        "locate": "Test Case",
        "locationContext": {
          "methodName": "testCheckAndUpdateNetworkResetSuccess",
          "methodAnnotations": [
            "@Test"
          ]
        }
      },
      {
        "type": "STUBBING",
        "code": "Mockito.when(offering.getId()).thenReturn(offeringId);",
        "line": 718,
        "locate": "Test Case",
        "locationContext": {
          "methodName": "testCheckAndUpdateNetworkResetSuccess",
          "methodAnnotations": [
            "@Test"
          ]
        }
      }
    ],
    "pattern_id": 1
  },
  {
    "variableName": "offering",
    "variableType": "NetworkOffering",
    "mockedClass": "NetworkOffering",
    "isReuseableMock": "Fully Localized",
    "mockPattern": "Creation:\n\u2014 Local Mock Creation in Test Case\n\nStubbing:\n\u2014 Test Case\n\nVerification:\n\u2014 None",
    "classContext": {
      "packageName": "com.cloud.network.vpc",
      "filePath": "C:\\java tool\\Apache\\cloudstack\\server\\src\\test\\java\\com\\cloud\\network\\vpc\\VpcManagerImplTest.java",
      "className": "VpcManagerImplTest"
    },
    "statements": [
      {
        "type": "DECLARATION",
        "code": "NetworkOffering offering = Mockito.mock(NetworkOffering.class);",
        "line": 322,
        "locate": "Test Case",
        "locationContext": {
          "methodName": "testCreateVpcNetwork",
          "methodAnnotations": [
            "@Test"
          ]
        }
      },
      {
        "type": "STUBBING",
        "code": "Mockito.when(offering.getGuestType()).thenReturn(Network.GuestType.Isolated);",
        "line": 335,
        "locate": "Test Case",
        "locationContext": {
          "methodName": "testCreateVpcNetwork",
          "methodAnnotations": [
            "@Test"
          ]
        }
      }
    ],
    "pattern_id": 1
  }
]