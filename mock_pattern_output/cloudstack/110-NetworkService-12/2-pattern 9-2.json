[
  {
    "variableName": "networkServiceMock",
    "variableType": "NetworkService",
    "mockedClass": "NetworkService",
    "isReuseableMock": "Hybrid",
    "mockPattern": "Creation:\n\u2014 Attribute Mock Creation\n\nStubbing:\n\u2014 None\n\nVerification:\n\u2014 Test Case",
    "classContext": {
      "packageName": "org.apache.cloudstack.api.command.user.firewall",
      "filePath": "C:\\java tool\\Apache\\cloudstack\\api\\src\\test\\java\\org\\apache\\cloudstack\\api\\command\\user\\firewall\\CreateEgressFirewallRuleCmdTest.java",
      "className": "CreateEgressFirewallRuleCmdTest"
    },
    "statements": [
      {
        "type": "FIELD_MOCK_CREATION",
        "code": "@Mock\r\nNetworkService networkServiceMock;",
        "line": 39,
        "locate": "Attribute",
        "locationContext": {
          "methodName": "[FieldDeclaration]",
          "methodAnnotations": [
            "@Mock"
          ]
        }
      },
      {
        "type": "VERIFICATION",
        "code": "Mockito.verify(networkServiceMock).getNetwork(networkIdMock);",
        "line": 71,
        "locate": "Test Case",
        "locationContext": {
          "methodName": "validateCidrsTestValidCidrs",
          "methodAnnotations": [
            "@Test"
          ]
        }
      },
      {
        "type": "VERIFICATION",
        "code": "Mockito.verify(networkServiceMock).getNetwork(networkIdMock);",
        "line": 107,
        "locate": "Test Case",
        "locationContext": {
          "methodName": "validateCidrsTestCidrsBeginningWithWhiteSpace",
          "methodAnnotations": [
            "@Test"
          ]
        }
      },
      {
        "type": "VERIFICATION",
        "code": "Mockito.verify(networkServiceMock).getNetwork(networkIdMock);",
        "line": 142,
        "locate": "Test Case",
        "locationContext": {
          "methodName": "validateCidrsTestInvalidSourceCidr",
          "methodAnnotations": [
            "@Test"
          ]
        }
      },
      {
        "type": "VERIFICATION",
        "code": "Mockito.verify(networkServiceMock).getNetwork(networkIdMock);",
        "line": 182,
        "locate": "Test Case",
        "locationContext": {
          "methodName": "validateCidrsTestInvalidDestinationCidr",
          "methodAnnotations": [
            "@Test"
          ]
        }
      },
      {
        "type": "VERIFICATION",
        "code": "Mockito.verify(networkServiceMock).getNetwork(networkIdMock);",
        "line": 228,
        "locate": "Test Case",
        "locationContext": {
          "methodName": "validateCidrsTestSourceCidrEqualsAllIp4",
          "methodAnnotations": [
            "@Test"
          ]
        }
      },
      {
        "type": "VERIFICATION",
        "code": "Mockito.verify(networkServiceMock).getNetwork(networkIdMock);",
        "line": 268,
        "locate": "Test Case",
        "locationContext": {
          "methodName": "validateCidrsTestSourceCidrNotWithinNetwork",
          "methodAnnotations": [
            "@Test"
          ]
        }
      },
      {
        "type": "VERIFICATION",
        "code": "Mockito.verify(networkServiceMock).getNetwork(networkIdMock);",
        "line": 303,
        "locate": "Test Case",
        "locationContext": {
          "methodName": "validateCidrsTestNullDestinationCidr",
          "methodAnnotations": [
            "@Test"
          ]
        }
      }
    ],
    "pattern_id": 9
  },
  {
    "variableName": "networkService",
    "variableType": "NetworkService",
    "mockedClass": "NetworkService",
    "isReuseableMock": "Hybrid",
    "mockPattern": "Creation:\n\u2014 Attribute Mock Creation\n\nStubbing:\n\u2014 None\n\nVerification:\n\u2014 Test Case",
    "classContext": {
      "packageName": "com.cloud.network",
      "filePath": "C:\\java tool\\Apache\\cloudstack\\server\\src\\test\\java\\com\\cloud\\network\\NetworkModelTest.java",
      "className": "NetworkModelTest"
    },
    "statements": [
      {
        "type": "FIELD_MOCK_CREATION",
        "code": "@Mock\r\nprivate NetworkService networkService;",
        "line": 87,
        "locate": "Attribute",
        "locationContext": {
          "methodName": "[FieldDeclaration]",
          "methodAnnotations": [
            "@Mock"
          ]
        }
      },
      {
        "type": "VERIFICATION",
        "code": "verify(networkService, never()).addProviderToPhysicalNetwork(anyLong(), eq(Provider.ConfigDrive.getName()), isNull(Long.class), isNull(List.class));",
        "line": 214,
        "locate": "Test Case",
        "locationContext": {
          "methodName": "testAddDisabledConfigDriveEntriesOnZoneBasicZone",
          "methodAnnotations": [
            "@Test"
          ]
        }
      },
      {
        "type": "VERIFICATION",
        "code": "verify(networkService, never()).addProviderToPhysicalNetwork(anyLong(), eq(Provider.ConfigDrive.getName()), isNull(Long.class), isNull(List.class));",
        "line": 224,
        "locate": "Test Case",
        "locationContext": {
          "methodName": "testAddDisabledConfigDriveEntriesOnZoneAdvancedZoneExistingConfigDrive",
          "methodAnnotations": [
            "@Test"
          ]
        }
      },
      {
        "type": "VERIFICATION",
        "code": "verify(networkService).addProviderToPhysicalNetwork(anyLong(), eq(Provider.ConfigDrive.getName()), isNull(Long.class), isNull(List.class));",
        "line": 231,
        "locate": "Test Case",
        "locationContext": {
          "methodName": "testAddDisabledConfigDriveEntriesOnZoneAdvancedZoneNonExistingConfigDrive",
          "methodAnnotations": [
            "@Test"
          ]
        }
      }
    ],
    "pattern_id": 9
  }
]