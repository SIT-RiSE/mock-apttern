[
  {
    "variableName": "templateImage",
    "variableType": "TemplateInfo",
    "mockedClass": "TemplateInfo",
    "isReuseableMock": "Fully Localized",
    "mockPattern": "Creation:\n\u2014 Local Mock Creation in Test Case\n\nStubbing:\n\u2014 Test Case\n\nVerification:\n\u2014 None",
    "classContext": {
      "packageName": "org.apache.cloudstack.storage.motion",
      "filePath": "C:\\java tool\\Apache\\cloudstack\\engine\\storage\\datamotion\\src\\test\\java\\org\\apache\\cloudstack\\storage\\motion\\KvmNonManagedStorageSystemDataMotionTest.java",
      "className": "KvmNonManagedStorageSystemDataMotionTest"
    },
    "statements": [
      {
        "type": "DECLARATION",
        "code": "TemplateInfo templateImage = Mockito.mock(TemplateInfo.class);",
        "line": 232,
        "locate": "Test Case",
        "locationContext": {
          "methodName": "prepareTestGetTemplateUuid",
          "methodAnnotations": []
        }
      },
      {
        "type": "STUBBING",
        "code": "Mockito.when(templateImage.getUuid()).thenReturn(expectedTemplateUuid);",
        "line": 234,
        "locate": "Test Case",
        "locationContext": {
          "methodName": "prepareTestGetTemplateUuid",
          "methodAnnotations": []
        }
      }
    ],
    "pattern_id": 1
  },
  {
    "variableName": "sourceTemplateInfo",
    "variableType": "TemplateInfo",
    "mockedClass": "TemplateInfo",
    "isReuseableMock": "Fully Localized",
    "mockPattern": "Creation:\n\u2014 Local Mock Creation in Test Case\n\nStubbing:\n\u2014 Test Case\n\nVerification:\n\u2014 None",
    "classContext": {
      "packageName": "org.apache.cloudstack.storage.motion",
      "filePath": "C:\\java tool\\Apache\\cloudstack\\engine\\storage\\datamotion\\src\\test\\java\\org\\apache\\cloudstack\\storage\\motion\\KvmNonManagedStorageSystemDataMotionTest.java",
      "className": "KvmNonManagedStorageSystemDataMotionTest"
    },
    "statements": [
      {
        "type": "DECLARATION",
        "code": "TemplateInfo sourceTemplateInfo = Mockito.mock(TemplateInfo.class);",
        "line": 372,
        "locate": "Test Case",
        "locationContext": {
          "methodName": "configureAndTestcopyTemplateToTargetStorageIfNeeded",
          "methodAnnotations": []
        }
      },
      {
        "type": "STUBBING",
        "code": "Mockito.when(sourceTemplateInfo.getInstallPath()).thenReturn(\"installPath\");",
        "line": 373,
        "locate": "Test Case",
        "locationContext": {
          "methodName": "configureAndTestcopyTemplateToTargetStorageIfNeeded",
          "methodAnnotations": []
        }
      },
      {
        "type": "STUBBING",
        "code": "Mockito.when(sourceTemplateInfo.getUuid()).thenReturn(\"uuid\");",
        "line": 374,
        "locate": "Test Case",
        "locationContext": {
          "methodName": "configureAndTestcopyTemplateToTargetStorageIfNeeded",
          "methodAnnotations": []
        }
      },
      {
        "type": "STUBBING",
        "code": "Mockito.when(sourceTemplateInfo.getId()).thenReturn(0l);",
        "line": 375,
        "locate": "Test Case",
        "locationContext": {
          "methodName": "configureAndTestcopyTemplateToTargetStorageIfNeeded",
          "methodAnnotations": []
        }
      },
      {
        "type": "STUBBING",
        "code": "Mockito.when(sourceTemplateInfo.getUrl()).thenReturn(\"url\");",
        "line": 376,
        "locate": "Test Case",
        "locationContext": {
          "methodName": "configureAndTestcopyTemplateToTargetStorageIfNeeded",
          "methodAnnotations": []
        }
      },
      {
        "type": "STUBBING",
        "code": "Mockito.when(sourceTemplateInfo.getDisplayText()).thenReturn(\"display text\");",
        "line": 377,
        "locate": "Test Case",
        "locationContext": {
          "methodName": "configureAndTestcopyTemplateToTargetStorageIfNeeded",
          "methodAnnotations": []
        }
      },
      {
        "type": "STUBBING",
        "code": "Mockito.when(sourceTemplateInfo.getChecksum()).thenReturn(\"checksum\");",
        "line": 378,
        "locate": "Test Case",
        "locationContext": {
          "methodName": "configureAndTestcopyTemplateToTargetStorageIfNeeded",
          "methodAnnotations": []
        }
      },
      {
        "type": "STUBBING",
        "code": "Mockito.when(sourceTemplateInfo.isRequiresHvm()).thenReturn(true);",
        "line": 379,
        "locate": "Test Case",
        "locationContext": {
          "methodName": "configureAndTestcopyTemplateToTargetStorageIfNeeded",
          "methodAnnotations": []
        }
      },
      {
        "type": "STUBBING",
        "code": "Mockito.when(sourceTemplateInfo.getAccountId()).thenReturn(0l);",
        "line": 380,
        "locate": "Test Case",
        "locationContext": {
          "methodName": "configureAndTestcopyTemplateToTargetStorageIfNeeded",
          "methodAnnotations": []
        }
      },
      {
        "type": "STUBBING",
        "code": "Mockito.when(sourceTemplateInfo.getUniqueName()).thenReturn(\"unique name\");",
        "line": 381,
        "locate": "Test Case",
        "locationContext": {
          "methodName": "configureAndTestcopyTemplateToTargetStorageIfNeeded",
          "methodAnnotations": []
        }
      },
      {
        "type": "STUBBING",
        "code": "Mockito.when(sourceTemplateInfo.getFormat()).thenReturn(ImageFormat.QCOW2);",
        "line": 382,
        "locate": "Test Case",
        "locationContext": {
          "methodName": "configureAndTestcopyTemplateToTargetStorageIfNeeded",
          "methodAnnotations": []
        }
      },
      {
        "type": "STUBBING",
        "code": "Mockito.when(sourceTemplateInfo.getSize()).thenReturn(0l);",
        "line": 383,
        "locate": "Test Case",
        "locationContext": {
          "methodName": "configureAndTestcopyTemplateToTargetStorageIfNeeded",
          "methodAnnotations": []
        }
      },
      {
        "type": "STUBBING",
        "code": "Mockito.when(sourceTemplateInfo.getHypervisorType()).thenReturn(HypervisorType.KVM);",
        "line": 384,
        "locate": "Test Case",
        "locationContext": {
          "methodName": "configureAndTestcopyTemplateToTargetStorageIfNeeded",
          "methodAnnotations": []
        }
      }
    ],
    "pattern_id": 1
  },
  {
    "variableName": "info",
    "variableType": "TemplateInfo",
    "mockedClass": "TemplateInfo",
    "isReuseableMock": "Fully Localized",
    "mockPattern": "Creation:\n\u2014 Local Mock Creation in Test Case\n\nStubbing:\n\u2014 Test Case\n\nVerification:\n\u2014 None",
    "classContext": {
      "packageName": "com.cloud.template",
      "filePath": "C:\\java tool\\Apache\\cloudstack\\server\\src\\test\\java\\com\\cloud\\template\\HypervisorTemplateAdapterTest.java",
      "className": "HypervisorTemplateAdapterTest"
    },
    "statements": [
      {
        "type": "DECLARATION",
        "code": "TemplateInfo info = mock(TemplateInfo.class);",
        "line": 237,
        "locate": "Test Case",
        "locationContext": {
          "methodName": "testEmitDeleteEventUuid",
          "methodAnnotations": []
        }
      },
      {
        "type": "STUBBING",
        "code": "when(info.getDataStore()).thenReturn(store);",
        "line": 238,
        "locate": "Test Case",
        "locationContext": {
          "methodName": "testEmitDeleteEventUuid",
          "methodAnnotations": []
        }
      }
    ],
    "pattern_id": 1
  }
]