[
  {
    "variableName": "userVmDao",
    "variableType": "UserVmDao",
    "mockedClass": "UserVmDao",
    "isReuseableMock": null,
    "mockPattern": "Creation:\n\u2014 Attribute Mock Creation\n\nStubbing:\n\u2014 Test Case\n\nVerification:\n\u2014 Helper Method",
    "classContext": {
      "packageName": "com.cloud.vm",
      "filePath": "C:\\java tool\\Apache\\cloudstack\\server\\src\\test\\java\\com\\cloud\\vm\\UserVmManagerImplTest.java",
      "className": "UserVmManagerImplTest"
    },
    "statements": [
      {
        "type": "FIELD_MOCK_CREATION",
        "code": "@Mock\r\nprivate UserVmDao userVmDao;",
        "line": 136,
        "locate": "Attribute",
        "locationContext": {
          "methodName": "[FieldDeclaration]",
          "methodAnnotations": [
            "@Mock"
          ]
        }
      },
      {
        "type": "STUBBING",
        "code": "Mockito.when(userVmDao.findById(vmId)).thenReturn(userVmVoMock);",
        "line": 215,
        "locate": "Test Case",
        "locationContext": {
          "methodName": "beforeTest",
          "methodAnnotations": [
            "@Before"
          ]
        }
      },
      {
        "type": "STUBBING",
        "code": "Mockito.when(userVmDao.findById(vmId)).thenReturn(null);",
        "line": 253,
        "locate": "Test Case",
        "locationContext": {
          "methodName": "validateInputsAndPermissionForUpdateVirtualMachineCommandTestVmNotFound",
          "methodAnnotations": [
            "@Test"
          ]
        }
      },
      {
        "type": "VERIFICATION",
        "code": "Mockito.verify(userVmDao, Mockito.times(cleanUpDetails || isDetailsEmpty ? 0 : 1)).saveDetails(userVmVoMock);",
        "line": 390,
        "locate": "Helper Method",
        "locationContext": {
          "methodName": "prepareAndExecuteMethodDealingWithDetails",
          "methodAnnotations": []
        }
      },
      {
        "type": "STUBBING",
        "code": "when(userVmDao.findById(1L)).thenReturn(userVmVoMock);",
        "line": 782,
        "locate": "Test Case",
        "locationContext": {
          "methodName": "testResetVMUserDataVMStateNotStopped",
          "methodAnnotations": [
            "@Test",
            "@PrepareForTest"
          ]
        }
      },
      {
        "type": "STUBBING",
        "code": "when(userVmDao.findById(1L)).thenReturn(userVmVoMock);",
        "line": 808,
        "locate": "Test Case",
        "locationContext": {
          "methodName": "testResetVMUserDataDontAcceptBothUserdataAndUserdataId",
          "methodAnnotations": [
            "@Test",
            "@PrepareForTest"
          ]
        }
      },
      {
        "type": "STUBBING",
        "code": "when(userVmDao.findById(1L)).thenReturn(userVmVO);",
        "line": 843,
        "locate": "Test Case",
        "locationContext": {
          "methodName": "testResetVMUserDataSuccessResetWithUserdata",
          "methodAnnotations": [
            "@Test",
            "@PrepareForTest"
          ]
        }
      },
      {
        "type": "STUBBING",
        "code": "when(userVmDao.findById(1L)).thenReturn(userVmVO);",
        "line": 880,
        "locate": "Test Case",
        "locationContext": {
          "methodName": "testResetVMUserDataSuccessResetWithUserdataId",
          "methodAnnotations": [
            "@Test",
            "@PrepareForTest"
          ]
        }
      }
    ],
    "pattern_id": 53
  }
]