[
  {
    "variableName": "roleService",
    "variableType": "RoleService",
    "mockedClass": "RoleService",
    "isReuseableMock": false,
    "mockPattern": "Creation:\n\u2014 Attribute Mock Creation\n\nStubbing:\n\u2014 Test Case\n\nVerification:\n\u2014 None",
    "classContext": {
      "packageName": "org.apache.cloudstack.api.command.test",
      "filePath": "C:\\java tool\\Apache\\cloudstack\\api\\src\\test\\java\\org\\apache\\cloudstack\\api\\command\\test\\CreateRoleCmdTest.java",
      "className": "CreateRoleCmdTest"
    },
    "statements": [
      {
        "type": "FIELD_DECLARATION",
        "code": "private RoleService roleService;",
        "line": 36,
        "locate": "Attribute",
        "locationContext": {
          "methodName": "[FieldDeclaration]",
          "methodAnnotations": []
        }
      },
      {
        "type": "ASSIGNMENT",
        "code": "roleService = Mockito.spy(RoleService.class);",
        "line": 41,
        "locate": "@Before",
        "locationContext": {
          "methodName": "setUp",
          "methodAnnotations": [
            "@Before"
          ]
        }
      },
      {
        "type": "STUBBING",
        "code": "when(roleService.createRole(createRoleCmd.getRoleName(), createRoleCmd.getRoleType(), createRoleCmd.getRoleDescription())).thenReturn(role);",
        "line": 57,
        "locate": "Test Case",
        "locationContext": {
          "methodName": "testCreateRoleWithRoleType",
          "methodAnnotations": [
            "@Test"
          ]
        }
      },
      {
        "type": "STUBBING",
        "code": "when(roleService.findRole(createRoleCmd.getRoleId())).thenReturn(role);",
        "line": 67,
        "locate": "Test Case",
        "locationContext": {
          "methodName": "testCreateRoleWithExistingRole",
          "methodAnnotations": [
            "@Test"
          ]
        }
      },
      {
        "type": "STUBBING",
        "code": "when(roleService.createRole(createRoleCmd.getRoleName(), role, createRoleCmd.getRoleDescription())).thenReturn(newRole);",
        "line": 74,
        "locate": "Test Case",
        "locationContext": {
          "methodName": "testCreateRoleWithExistingRole",
          "methodAnnotations": [
            "@Test"
          ]
        }
      },
      {
        "type": "STUBBING",
        "code": "when(roleService.findRole(createRoleCmd.getRoleId())).thenReturn(null);",
        "line": 84,
        "locate": "Test Case",
        "locationContext": {
          "methodName": "testCreateRoleWithNonExistingRole",
          "methodAnnotations": [
            "@Test"
          ]
        }
      }
    ],
    "pattern_id": 4
  },
  {
    "variableName": "roleService",
    "variableType": "RoleService",
    "mockedClass": "RoleService",
    "isReuseableMock": false,
    "mockPattern": "Creation:\n\u2014 Attribute Mock Creation\n\nStubbing:\n\u2014 Test Case\n\nVerification:\n\u2014 None",
    "classContext": {
      "packageName": "org.apache.cloudstack.api.command.test",
      "filePath": "C:\\java tool\\Apache\\cloudstack\\api\\src\\test\\java\\org\\apache\\cloudstack\\api\\command\\test\\ImportRoleCmdTest.java",
      "className": "ImportRoleCmdTest"
    },
    "statements": [
      {
        "type": "FIELD_DECLARATION",
        "code": "private RoleService roleService;",
        "line": 51,
        "locate": "Attribute",
        "locationContext": {
          "methodName": "[FieldDeclaration]",
          "methodAnnotations": []
        }
      },
      {
        "type": "ASSIGNMENT",
        "code": "roleService = Mockito.spy(RoleService.class);",
        "line": 56,
        "locate": "@Before",
        "locationContext": {
          "methodName": "setUp",
          "methodAnnotations": [
            "@Before"
          ]
        }
      },
      {
        "type": "STUBBING",
        "code": "when(roleService.importRole(anyString(), any(), anyString(), any(), anyBoolean())).thenReturn(role);",
        "line": 96,
        "locate": "Test Case",
        "locationContext": {
          "methodName": "testImportRoleSuccess",
          "methodAnnotations": [
            "@Test"
          ]
        }
      }
    ],
    "pattern_id": 4
  },
  {
    "variableName": "roleService",
    "variableType": "RoleService",
    "mockedClass": "RoleService",
    "isReuseableMock": false,
    "mockPattern": "Creation:\n\u2014 Attribute Mock Creation\n\nStubbing:\n\u2014 Test Case\n\nVerification:\n\u2014 None",
    "classContext": {
      "packageName": "org.apache.cloudstack.api.command.test",
      "filePath": "C:\\java tool\\Apache\\cloudstack\\api\\src\\test\\java\\org\\apache\\cloudstack\\api\\command\\test\\UpdateRoleCmdTest.java",
      "className": "UpdateRoleCmdTest"
    },
    "statements": [
      {
        "type": "FIELD_DECLARATION",
        "code": "private RoleService roleService;",
        "line": 37,
        "locate": "Attribute",
        "locationContext": {
          "methodName": "[FieldDeclaration]",
          "methodAnnotations": []
        }
      },
      {
        "type": "ASSIGNMENT",
        "code": "roleService = Mockito.spy(RoleService.class);",
        "line": 43,
        "locate": "@Before",
        "locationContext": {
          "methodName": "setUp",
          "methodAnnotations": [
            "@Override",
            "@Before"
          ]
        }
      },
      {
        "type": "STUBBING",
        "code": "when(roleService.findRole(updateRoleCmd.getRoleId())).thenReturn(role);",
        "line": 55,
        "locate": "Test Case",
        "locationContext": {
          "methodName": "testUpdateSuccess",
          "methodAnnotations": [
            "@Test"
          ]
        }
      },
      {
        "type": "STUBBING",
        "code": "when(roleService.updateRole(role, updateRoleCmd.getRoleName(), updateRoleCmd.getRoleType(), updateRoleCmd.getRoleDescription())).thenReturn(role);",
        "line": 61,
        "locate": "Test Case",
        "locationContext": {
          "methodName": "testUpdateSuccess",
          "methodAnnotations": [
            "@Test"
          ]
        }
      }
    ],
    "pattern_id": 4
  },
  {
    "variableName": "roleServiceMock",
    "variableType": "RoleService",
    "mockedClass": "RoleService",
    "isReuseableMock": false,
    "mockPattern": "Creation:\n\u2014 Attribute Mock Creation\n\nStubbing:\n\u2014 Test Case\n\nVerification:\n\u2014 None",
    "classContext": {
      "packageName": "org.apache.cloudstack.discovery",
      "filePath": "C:\\java tool\\Apache\\cloudstack\\plugins\\api\\discovery\\src\\test\\java\\org\\apache\\cloudstack\\discovery\\ApiDiscoveryTest.java",
      "className": "ApiDiscoveryTest"
    },
    "statements": [
      {
        "type": "FIELD_MOCK_CREATION",
        "code": "@Mock\r\nRoleService roleServiceMock;",
        "line": 53,
        "locate": "Attribute",
        "locationContext": {
          "methodName": "[FieldDeclaration]",
          "methodAnnotations": [
            "@Mock"
          ]
        }
      },
      {
        "type": "STUBBING",
        "code": "Mockito.when(roleServiceMock.findRole(Mockito.anyLong())).thenReturn(null);",
        "line": 95,
        "locate": "Test Case",
        "locationContext": {
          "methodName": "listApisTestThrowPermissionDeniedExceptionOnRoleNull",
          "methodAnnotations": [
            "@Test"
          ]
        }
      },
      {
        "type": "STUBBING",
        "code": "Mockito.when(roleServiceMock.findRole(Mockito.anyLong())).thenReturn(unknownRoleVO);",
        "line": 105,
        "locate": "Test Case",
        "locationContext": {
          "methodName": "listApisTestThrowPermissionDeniedExceptionOnRoleUnknown",
          "methodAnnotations": [
            "@Test"
          ]
        }
      },
      {
        "type": "STUBBING",
        "code": "Mockito.when(roleServiceMock.findRole(Mockito.anyLong())).thenReturn(adminRoleVO);",
        "line": 116,
        "locate": "Test Case",
        "locationContext": {
          "methodName": "listApisTestDoesNotGetApisAllowedToUserOnAdminRole",
          "methodAnnotations": [
            "@Test"
          ]
        }
      },
      {
        "type": "STUBBING",
        "code": "Mockito.when(roleServiceMock.findRole(Mockito.anyLong())).thenReturn(userRoleVO);",
        "line": 128,
        "locate": "Test Case",
        "locationContext": {
          "methodName": "listApisTestGetsApisAllowedToUserOnUserRole",
          "methodAnnotations": [
            "@Test"
          ]
        }
      }
    ],
    "pattern_id": 4
  },
  {
    "variableName": "roleService",
    "variableType": "RoleService",
    "mockedClass": "RoleService",
    "isReuseableMock": false,
    "mockPattern": "Creation:\n\u2014 Attribute Mock Creation\n\nStubbing:\n\u2014 Test Case\n\nVerification:\n\u2014 None",
    "classContext": {
      "packageName": "org.apache.cloudstack.annotation",
      "filePath": "C:\\java tool\\Apache\\cloudstack\\server\\src\\test\\java\\org\\apache\\cloudstack\\annotation\\AnnotationManagerImplTest.java",
      "className": "AnnotationManagerImplTest"
    },
    "statements": [
      {
        "type": "FIELD_MOCK_CREATION",
        "code": "@Mock\r\nRoleService roleService;",
        "line": 82,
        "locate": "Attribute",
        "locationContext": {
          "methodName": "[FieldDeclaration]",
          "methodAnnotations": [
            "@Mock"
          ]
        }
      },
      {
        "type": "STUBBING",
        "code": "Mockito.when(roleService.findRole(Mockito.anyLong())).thenReturn(role);",
        "line": 158,
        "locate": "Test Case",
        "locationContext": {
          "methodName": "testAddAnnotationResourceDetailsUpdate",
          "methodAnnotations": [
            "@Test"
          ]
        }
      },
      {
        "type": "STUBBING",
        "code": "Mockito.when(roleService.findRole(Mockito.anyLong())).thenReturn(role);",
        "line": 178,
        "locate": "Test Case",
        "locationContext": {
          "methodName": "testRemoveAnnotationResourceDetailsUpdate",
          "methodAnnotations": [
            "@Test"
          ]
        }
      }
    ],
    "pattern_id": 4
  }
]