[
  {
    "variableName": "roleServiceMock",
    "variableType": "RoleService",
    "mockedClass": "RoleService",
    "isReuseableMock": "Fully Shared",
    "mockPattern": "Creation:\n\u2014 Attribute Mock Creation\n\nStubbing:\n\u2014 @Before\n\u2014 Test Case\n\nVerification:\n\u2014 None",
    "classContext": {
      "packageName": "org.apache.cloudstack.acl",
      "filePath": "C:\\java tool\\Apache\\cloudstack\\plugins\\acl\\dynamic-role-based\\src\\test\\java\\org\\apache\\cloudstack\\acl\\DynamicRoleBasedAPIAccessCheckerTest.java",
      "className": "DynamicRoleBasedAPIAccessCheckerTest"
    },
    "statements": [
      {
        "type": "FIELD_MOCK_CREATION",
        "code": "@Mock\r\nprivate RoleService roleServiceMock;",
        "line": 51,
        "locate": "Attribute",
        "locationContext": {
          "methodName": "[FieldDeclaration]",
          "methodAnnotations": [
            "@Mock"
          ]
        }
      },
      {
        "type": "STUBBING",
        "code": "Mockito.when(roleServiceMock.findRole(Mockito.anyLong())).thenReturn((RoleVO) getTestRole());",
        "line": 82,
        "locate": "@Before",
        "locationContext": {
          "methodName": "setUp",
          "methodAnnotations": [
            "@Override",
            "@Before"
          ]
        }
      },
      {
        "type": "STUBBING",
        "code": "Mockito.when(roleServiceMock.findRole(Mockito.anyLong())).thenReturn(null);",
        "line": 101,
        "locate": "Test Case",
        "locationContext": {
          "methodName": "testInvalidAccountRoleCheckAccess",
          "methodAnnotations": [
            "@Test"
          ]
        }
      },
      {
        "type": "STUBBING",
        "code": "Mockito.when(roleServiceMock.findRole(Mockito.anyLong())).thenReturn(new RoleVO(1L, \"SomeRole\", RoleType.Admin, \"default root admin role\"));",
        "line": 112,
        "locate": "Test Case",
        "locationContext": {
          "methodName": "testDefaultRootAdminAccess",
          "methodAnnotations": [
            "@Test"
          ]
        }
      },
      {
        "type": "STUBBING",
        "code": "Mockito.when(roleServiceMock.findAllPermissionsBy(Mockito.anyLong())).thenReturn(Collections.<RolePermission>emptyList());",
        "line": 118,
        "locate": "Test Case",
        "locationContext": {
          "methodName": "testInvalidRolePermissionsCheckAccess",
          "methodAnnotations": [
            "@Test"
          ]
        }
      },
      {
        "type": "STUBBING",
        "code": "Mockito.when(roleServiceMock.findAllPermissionsBy(Mockito.anyLong())).thenReturn(Collections.singletonList(permission));",
        "line": 130,
        "locate": "Test Case",
        "locationContext": {
          "methodName": "testValidAllowRolePermissionApiCheckAccess",
          "methodAnnotations": [
            "@Test"
          ]
        }
      },
      {
        "type": "STUBBING",
        "code": "Mockito.when(roleServiceMock.findAllPermissionsBy(Mockito.anyLong())).thenReturn(Collections.singletonList(permission));",
        "line": 138,
        "locate": "Test Case",
        "locationContext": {
          "methodName": "testValidAllowRolePermissionWildcardCheckAccess",
          "methodAnnotations": [
            "@Test"
          ]
        }
      },
      {
        "type": "STUBBING",
        "code": "Mockito.when(roleServiceMock.findAllPermissionsBy(Mockito.anyLong())).thenReturn(Collections.singletonList(permission));",
        "line": 146,
        "locate": "Test Case",
        "locationContext": {
          "methodName": "testValidDenyRolePermissionApiCheckAccess",
          "methodAnnotations": [
            "@Test"
          ]
        }
      },
      {
        "type": "STUBBING",
        "code": "Mockito.when(roleServiceMock.findAllPermissionsBy(Mockito.anyLong())).thenReturn(Collections.singletonList(permission));",
        "line": 158,
        "locate": "Test Case",
        "locationContext": {
          "methodName": "testValidDenyRolePermissionWildcardCheckAccess",
          "methodAnnotations": [
            "@Test"
          ]
        }
      }
    ],
    "pattern_id": 12
  }
]