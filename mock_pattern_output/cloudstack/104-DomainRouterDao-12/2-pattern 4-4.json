[
  {
    "variableName": "routerDao",
    "variableType": "DomainRouterDao",
    "mockedClass": "DomainRouterDao",
    "isReuseableMock": false,
    "mockPattern": "Creation:\n\u2014 Attribute Mock Creation\n\nStubbing:\n\u2014 Test Case\n\nVerification:\n\u2014 None",
    "classContext": {
      "packageName": "com.cloud.network.as",
      "filePath": "C:\\java tool\\Apache\\cloudstack\\server\\src\\test\\java\\com\\cloud\\network\\as\\AutoScaleManagerImplTest.java",
      "className": "AutoScaleManagerImplTest"
    },
    "statements": [
      {
        "type": "FIELD_MOCK_CREATION",
        "code": "@Mock\r\nDomainRouterDao routerDao;",
        "line": 248,
        "locate": "Attribute",
        "locationContext": {
          "methodName": "[FieldDeclaration]",
          "methodAnnotations": [
            "@Mock"
          ]
        }
      },
      {
        "type": "STUBBING",
        "code": "when(routerDao.listByNetworkAndRole(networkId, VirtualRouter.Role.VIRTUAL_ROUTER)).thenReturn(new ArrayList<>());",
        "line": 2339,
        "locate": "Test Case",
        "locationContext": {
          "methodName": "getNetworkStatsFromVirtualRouterWithoutRouter",
          "methodAnnotations": [
            "@Test"
          ]
        }
      },
      {
        "type": "STUBBING",
        "code": "when(routerDao.listByNetworkAndRole(networkId, VirtualRouter.Role.VIRTUAL_ROUTER)).thenReturn(Arrays.asList(domainRouterMock));",
        "line": 2355,
        "locate": "Test Case",
        "locationContext": {
          "methodName": "getNetworkStatsFromVirtualRouterWithOneRouter",
          "methodAnnotations": [
            "@Test"
          ]
        }
      }
    ],
    "pattern_id": 4
  },
  {
    "variableName": "domainRouterDao",
    "variableType": "DomainRouterDao",
    "mockedClass": "DomainRouterDao",
    "isReuseableMock": false,
    "mockPattern": "Creation:\n\u2014 Attribute Mock Creation\n\nStubbing:\n\u2014 Test Case\n\nVerification:\n\u2014 None",
    "classContext": {
      "packageName": "com.cloud.network",
      "filePath": "C:\\java tool\\Apache\\cloudstack\\server\\src\\test\\java\\com\\cloud\\network\\Ipv6ServiceImplTest.java",
      "className": "Ipv6ServiceImplTest"
    },
    "statements": [
      {
        "type": "FIELD_MOCK_CREATION",
        "code": "@Mock\r\nDomainRouterDao domainRouterDao;",
        "line": 119,
        "locate": "Attribute",
        "locationContext": {
          "methodName": "[FieldDeclaration]",
          "methodAnnotations": [
            "@Mock"
          ]
        }
      },
      {
        "type": "STUBBING",
        "code": "Mockito.when(domainRouterDao.findByNetwork(Mockito.anyLong())).thenReturn(new ArrayList<>());",
        "line": 522,
        "locate": "Test Case",
        "locationContext": {
          "methodName": "testEmptyGetPublicIpv6AddressesForNetwork",
          "methodAnnotations": [
            "@Test"
          ]
        }
      },
      {
        "type": "STUBBING",
        "code": "Mockito.when(domainRouterDao.findByNetwork(Mockito.anyLong())).thenReturn(routers);",
        "line": 526,
        "locate": "Test Case",
        "locationContext": {
          "methodName": "testEmptyGetPublicIpv6AddressesForNetwork",
          "methodAnnotations": [
            "@Test"
          ]
        }
      },
      {
        "type": "STUBBING",
        "code": "Mockito.when(domainRouterDao.findByNetwork(Mockito.anyLong())).thenReturn(routers);",
        "line": 541,
        "locate": "Test Case",
        "locationContext": {
          "methodName": "testGetPublicIpv6AddressesForNetwork",
          "methodAnnotations": [
            "@Test"
          ]
        }
      },
      {
        "type": "STUBBING",
        "code": "Mockito.when(domainRouterDao.findByNetwork(Mockito.anyLong())).thenReturn(routers);",
        "line": 571,
        "locate": "Test Case",
        "locationContext": {
          "methodName": "testUpdateIpv6RoutesForVpcResponse",
          "methodAnnotations": [
            "@Test"
          ]
        }
      }
    ],
    "pattern_id": 4
  },
  {
    "variableName": "routerDao",
    "variableType": "DomainRouterDao",
    "mockedClass": "DomainRouterDao",
    "isReuseableMock": false,
    "mockPattern": "Creation:\n\u2014 Attribute Mock Creation\n\nStubbing:\n\u2014 Test Case\n\nVerification:\n\u2014 None",
    "classContext": {
      "packageName": "com.cloud.network.router",
      "filePath": "C:\\java tool\\Apache\\cloudstack\\server\\src\\test\\java\\com\\cloud\\network\\router\\RouterControlHelperTest.java",
      "className": "RouterControlHelperTest"
    },
    "statements": [
      {
        "type": "FIELD_MOCK_CREATION",
        "code": "@Mock\r\nprotected DomainRouterDao routerDao;",
        "line": 56,
        "locate": "Attribute",
        "locationContext": {
          "methodName": "[FieldDeclaration]",
          "methodAnnotations": [
            "@Mock"
          ]
        }
      },
      {
        "type": "STUBBING",
        "code": "when(this.routerDao.findById(ROUTER_ID)).thenReturn(router);",
        "line": 112,
        "locate": "Test Case",
        "locationContext": {
          "methodName": "testGetRouterControlIpWithRouterIp",
          "methodAnnotations": [
            "@Test"
          ]
        }
      }
    ],
    "pattern_id": 4
  },
  {
    "variableName": "routerDao",
    "variableType": "DomainRouterDao",
    "mockedClass": "DomainRouterDao",
    "isReuseableMock": false,
    "mockPattern": "Creation:\n\u2014 Attribute Mock Creation\n\nStubbing:\n\u2014 Test Case\n\nVerification:\n\u2014 None",
    "classContext": {
      "packageName": "com.cloud.network.vpc",
      "filePath": "C:\\java tool\\Apache\\cloudstack\\server\\src\\test\\java\\com\\cloud\\network\\vpc\\VpcManagerImplTest.java",
      "className": "VpcManagerImplTest"
    },
    "statements": [
      {
        "type": "FIELD_MOCK_CREATION",
        "code": "@Mock\r\nDomainRouterDao routerDao;",
        "line": 138,
        "locate": "Attribute",
        "locationContext": {
          "methodName": "[FieldDeclaration]",
          "methodAnnotations": [
            "@Mock"
          ]
        }
      },
      {
        "type": "STUBBING",
        "code": "Mockito.when(routerDao.listByVpcId(anyLong())).thenReturn(routers);",
        "line": 381,
        "locate": "Test Case",
        "locationContext": {
          "methodName": "testUpdateVpcNetwork",
          "methodAnnotations": [
            "@Test"
          ]
        }
      }
    ],
    "pattern_id": 4
  }
]