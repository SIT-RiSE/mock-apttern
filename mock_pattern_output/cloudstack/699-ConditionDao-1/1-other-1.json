[
  {
    "variableName": "conditionDao",
    "variableType": "ConditionDao",
    "mockedClass": "ConditionDao",
    "isReuseableMock": null,
    "mockPattern": "Creation:\n\u2014 Attribute Mock Creation\n\nStubbing:\n\u2014 @Before\n\u2014 Test Case\n\nVerification:\n\u2014 Test Case",
    "classContext": {
      "packageName": "com.cloud.network.as",
      "filePath": "C:\\java tool\\Apache\\cloudstack\\server\\src\\test\\java\\com\\cloud\\network\\as\\AutoScaleManagerImplTest.java",
      "className": "AutoScaleManagerImplTest"
    },
    "statements": [
      {
        "type": "FIELD_MOCK_CREATION",
        "code": "@Mock\r\nConditionDao conditionDao;",
        "line": 180,
        "locate": "Attribute",
        "locationContext": {
          "methodName": "[FieldDeclaration]",
          "methodAnnotations": [
            "@Mock"
          ]
        }
      },
      {
        "type": "STUBBING",
        "code": "when(conditionDao.findById(any())).thenReturn(conditionMock);",
        "line": 405,
        "locate": "@Before",
        "locationContext": {
          "methodName": "setUp",
          "methodAnnotations": [
            "@Before"
          ]
        }
      },
      {
        "type": "STUBBING",
        "code": "when(conditionDao.persist(any(ConditionVO.class))).thenReturn(conditionMock);",
        "line": 406,
        "locate": "@Before",
        "locationContext": {
          "methodName": "setUp",
          "methodAnnotations": [
            "@Before"
          ]
        }
      },
      {
        "type": "STUBBING",
        "code": "when(conditionDao.findByCounterId(counterId)).thenReturn(conditionMock);",
        "line": 503,
        "locate": "Test Case",
        "locationContext": {
          "methodName": "testDeleteCounterWithUsedCounter",
          "methodAnnotations": [
            "@Test"
          ]
        }
      },
      {
        "type": "VERIFICATION",
        "code": "Mockito.verify(conditionDao).persist(Mockito.any());",
        "line": 520,
        "locate": "Test Case",
        "locationContext": {
          "methodName": "testCreateConditionCmd",
          "methodAnnotations": [
            "@Test"
          ]
        }
      },
      {
        "type": "STUBBING",
        "code": "when(conditionDao.remove(conditionId)).thenReturn(true);",
        "line": 552,
        "locate": "Test Case",
        "locationContext": {
          "methodName": "testDeleteCondition",
          "methodAnnotations": [
            "@Test"
          ]
        }
      },
      {
        "type": "VERIFICATION",
        "code": "Mockito.verify(conditionDao).remove(conditionId);",
        "line": 557,
        "locate": "Test Case",
        "locationContext": {
          "methodName": "testDeleteCondition",
          "methodAnnotations": [
            "@Test"
          ]
        }
      },
      {
        "type": "VERIFICATION",
        "code": "Mockito.verify(conditionDao, never()).remove(conditionId);",
        "line": 566,
        "locate": "Test Case",
        "locationContext": {
          "methodName": "testDeleteConditionWithUsedCondition",
          "methodAnnotations": [
            "@Test"
          ]
        }
      },
      {
        "type": "STUBBING",
        "code": "when(conditionDao.update(eq(conditionId), any())).thenReturn(true);",
        "line": 579,
        "locate": "Test Case",
        "locationContext": {
          "methodName": "testUpdateCondition",
          "methodAnnotations": [
            "@Test"
          ]
        }
      },
      {
        "type": "VERIFICATION",
        "code": "Mockito.verify(conditionDao).update(eq(conditionId), Mockito.any());",
        "line": 590,
        "locate": "Test Case",
        "locationContext": {
          "methodName": "testUpdateCondition",
          "methodAnnotations": [
            "@Test"
          ]
        }
      },
      {
        "type": "VERIFICATION",
        "code": "Mockito.verify(conditionDao, never()).update(eq(conditionId), Mockito.any());",
        "line": 603,
        "locate": "Test Case",
        "locationContext": {
          "methodName": "testUpdateConditionWithInvalidOperator",
          "methodAnnotations": [
            "@Test"
          ]
        }
      },
      {
        "type": "VERIFICATION",
        "code": "Mockito.verify(conditionDao, never()).update(eq(conditionId), Mockito.any());",
        "line": 616,
        "locate": "Test Case",
        "locationContext": {
          "methodName": "testUpdateConditionWithInvalidThreshold",
          "methodAnnotations": [
            "@Test"
          ]
        }
      },
      {
        "type": "VERIFICATION",
        "code": "Mockito.verify(conditionDao, never()).update(eq(conditionId), Mockito.any());",
        "line": 649,
        "locate": "Test Case",
        "locationContext": {
          "methodName": "testUpdateConditionWithPolicies",
          "methodAnnotations": [
            "@Test"
          ]
        }
      },
      {
        "type": "STUBBING",
        "code": "when(conditionDao.removeByAccountId(accountId)).thenReturn(3);",
        "line": 1232,
        "locate": "Test Case",
        "locationContext": {
          "methodName": "testCleanUpAutoScaleResources",
          "methodAnnotations": [
            "@Test"
          ]
        }
      },
      {
        "type": "VERIFICATION",
        "code": "Mockito.verify(conditionDao).removeByAccountId(accountId);",
        "line": 1238,
        "locate": "Test Case",
        "locationContext": {
          "methodName": "testCleanUpAutoScaleResources",
          "methodAnnotations": [
            "@Test"
          ]
        }
      }
    ],
    "pattern_id": 21
  }
]