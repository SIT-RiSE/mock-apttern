[
  {
    "variableName": "guestOSHypervisorVO",
    "variableType": "GuestOSHypervisorVO",
    "mockedClass": "GuestOSHypervisorVO",
    "isReuseableMock": false,
    "mockPattern": "Creation:\n\u2014 Local Mock Creation in Test Case\n\nStubbing:\n\u2014 Test Case\n\nVerification:\n\u2014 None",
    "classContext": {
      "packageName": "com.cloud.upgrade",
      "filePath": "C:\\java tool\\Apache\\cloudstack\\engine\\schema\\src\\test\\java\\com\\cloud\\upgrade\\GuestOsMapperTest.java",
      "className": "GuestOsMapperTest"
    },
    "statements": [
      {
        "type": "DECLARATION",
        "code": "GuestOSHypervisorVO guestOSHypervisorVO = Mockito.mock(GuestOSHypervisorVO.class);",
        "line": 73,
        "locate": "Test Case",
        "locationContext": {
          "methodName": "testCopyGuestOSHypervisorMappingsSuccess",
          "methodAnnotations": [
            "@Test"
          ]
        }
      },
      {
        "type": "STUBBING",
        "code": "Mockito.when(guestOSHypervisorVO.getGuestOsName()).thenReturn(\"centos\");",
        "line": 77,
        "locate": "Test Case",
        "locationContext": {
          "methodName": "testCopyGuestOSHypervisorMappingsSuccess",
          "methodAnnotations": [
            "@Test"
          ]
        }
      }
    ],
    "pattern_id": 1
  },
  {
    "variableName": "guestOSHypervisorVO",
    "variableType": "GuestOSHypervisorVO",
    "mockedClass": "GuestOSHypervisorVO",
    "isReuseableMock": false,
    "mockPattern": "Creation:\n\u2014 Local Mock Creation in Test Case\n\nStubbing:\n\u2014 Test Case\n\nVerification:\n\u2014 None",
    "classContext": {
      "packageName": "org.apache.cloudstack.storage.vmsnapshot",
      "filePath": "C:\\java tool\\Apache\\cloudstack\\engine\\storage\\snapshot\\src\\test\\java\\org\\apache\\cloudstack\\storage\\vmsnapshot\\VMSnapshotStrategyKVMTest.java",
      "className": "VMSnapshotStrategyKVMTest"
    },
    "statements": [
      {
        "type": "DECLARATION",
        "code": "GuestOSHypervisorVO guestOSHypervisorVO = Mockito.mock(GuestOSHypervisorVO.class);",
        "line": 203,
        "locate": "Test Case",
        "locationContext": {
          "methodName": "testRevertVMsnapshot",
          "methodAnnotations": [
            "@Test"
          ]
        }
      },
      {
        "type": "STUBBING",
        "code": "Mockito.when(guestOSHypervisorVO.getGuestOsName()).thenReturn(guestOsName);",
        "line": 204,
        "locate": "Test Case",
        "locationContext": {
          "methodName": "testRevertVMsnapshot",
          "methodAnnotations": [
            "@Test"
          ]
        }
      }
    ],
    "pattern_id": 1
  },
  {
    "variableName": "guestOSHypervisorVO",
    "variableType": "GuestOSHypervisorVO",
    "mockedClass": "GuestOSHypervisorVO",
    "isReuseableMock": false,
    "mockPattern": "Creation:\n\u2014 Local Mock Creation in Test Case\n\nStubbing:\n\u2014 Test Case\n\nVerification:\n\u2014 None",
    "classContext": {
      "packageName": "org.apache.cloudstack.storage.vmsnapshot",
      "filePath": "C:\\java tool\\Apache\\cloudstack\\engine\\storage\\snapshot\\src\\test\\java\\org\\apache\\cloudstack\\storage\\vmsnapshot\\VMSnapshotStrategyKVMTest.java",
      "className": "VMSnapshotStrategyKVMTest"
    },
    "statements": [
      {
        "type": "DECLARATION",
        "code": "GuestOSHypervisorVO guestOSHypervisorVO = Mockito.mock(GuestOSHypervisorVO.class);",
        "line": 281,
        "locate": "Test Case",
        "locationContext": {
          "methodName": "testDeleteVMsnapshot",
          "methodAnnotations": [
            "@Test"
          ]
        }
      },
      {
        "type": "STUBBING",
        "code": "Mockito.when(guestOSHypervisorVO.getGuestOsName()).thenReturn(guestOsName);",
        "line": 282,
        "locate": "Test Case",
        "locationContext": {
          "methodName": "testDeleteVMsnapshot",
          "methodAnnotations": [
            "@Test"
          ]
        }
      }
    ],
    "pattern_id": 1
  },
  {
    "variableName": "guestOSHypervisorVO",
    "variableType": "GuestOSHypervisorVO",
    "mockedClass": "GuestOSHypervisorVO",
    "isReuseableMock": false,
    "mockPattern": "Creation:\n\u2014 Local Mock Creation in Test Case\n\nStubbing:\n\u2014 Test Case\n\nVerification:\n\u2014 None",
    "classContext": {
      "packageName": "org.apache.cloudstack.storage.vmsnapshot",
      "filePath": "C:\\java tool\\Apache\\cloudstack\\engine\\storage\\snapshot\\src\\test\\java\\org\\apache\\cloudstack\\storage\\vmsnapshot\\VMSnapshotStrategyTest.java",
      "className": "VMSnapshotStrategyTest"
    },
    "statements": [
      {
        "type": "DECLARATION",
        "code": "GuestOSHypervisorVO guestOSHypervisorVO = Mockito.mock(GuestOSHypervisorVO.class);",
        "line": 123,
        "locate": "Test Case",
        "locationContext": {
          "methodName": "testCreateVMSnapshot",
          "methodAnnotations": [
            "@Test"
          ]
        }
      },
      {
        "type": "STUBBING",
        "code": "Mockito.when(guestOSHypervisorVO.getGuestOsName()).thenReturn(guestOsName);",
        "line": 124,
        "locate": "Test Case",
        "locationContext": {
          "methodName": "testCreateVMSnapshot",
          "methodAnnotations": [
            "@Test"
          ]
        }
      }
    ],
    "pattern_id": 1
  },
  {
    "variableName": "guestOSHypervisorVO",
    "variableType": "GuestOSHypervisorVO",
    "mockedClass": "GuestOSHypervisorVO",
    "isReuseableMock": false,
    "mockPattern": "Creation:\n\u2014 Local Mock Creation in Test Case\n\nStubbing:\n\u2014 Test Case\n\nVerification:\n\u2014 None",
    "classContext": {
      "packageName": "org.apache.cloudstack.storage.vmsnapshot",
      "filePath": "C:\\java tool\\Apache\\cloudstack\\engine\\storage\\snapshot\\src\\test\\java\\org\\apache\\cloudstack\\storage\\vmsnapshot\\VMSnapshotStrategyTest.java",
      "className": "VMSnapshotStrategyTest"
    },
    "statements": [
      {
        "type": "DECLARATION",
        "code": "GuestOSHypervisorVO guestOSHypervisorVO = Mockito.mock(GuestOSHypervisorVO.class);",
        "line": 167,
        "locate": "Test Case",
        "locationContext": {
          "methodName": "testRevertSnapshot",
          "methodAnnotations": [
            "@Test"
          ]
        }
      },
      {
        "type": "STUBBING",
        "code": "Mockito.when(guestOSHypervisorVO.getGuestOsName()).thenReturn(guestOsName);",
        "line": 168,
        "locate": "Test Case",
        "locationContext": {
          "methodName": "testRevertSnapshot",
          "methodAnnotations": [
            "@Test"
          ]
        }
      }
    ],
    "pattern_id": 1
  },
  {
    "variableName": "guestOSHypervisorVO",
    "variableType": "GuestOSHypervisorVO",
    "mockedClass": "GuestOSHypervisorVO",
    "isReuseableMock": false,
    "mockPattern": "Creation:\n\u2014 Local Mock Creation in Test Case\n\nStubbing:\n\u2014 Test Case\n\nVerification:\n\u2014 None",
    "classContext": {
      "packageName": "org.apache.cloudstack.storage.vmsnapshot",
      "filePath": "C:\\java tool\\Apache\\cloudstack\\engine\\storage\\snapshot\\src\\test\\java\\org\\apache\\cloudstack\\storage\\vmsnapshot\\VMSnapshotStrategyTest.java",
      "className": "VMSnapshotStrategyTest"
    },
    "statements": [
      {
        "type": "DECLARATION",
        "code": "GuestOSHypervisorVO guestOSHypervisorVO = Mockito.mock(GuestOSHypervisorVO.class);",
        "line": 215,
        "locate": "Test Case",
        "locationContext": {
          "methodName": "testDeleteVMSnapshot",
          "methodAnnotations": [
            "@Test"
          ]
        }
      },
      {
        "type": "STUBBING",
        "code": "Mockito.when(guestOSHypervisorVO.getGuestOsName()).thenReturn(guestOsName);",
        "line": 216,
        "locate": "Test Case",
        "locationContext": {
          "methodName": "testDeleteVMSnapshot",
          "methodAnnotations": [
            "@Test"
          ]
        }
      }
    ],
    "pattern_id": 1
  }
]