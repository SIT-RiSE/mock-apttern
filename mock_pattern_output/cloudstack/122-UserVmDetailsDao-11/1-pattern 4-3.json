[
  {
    "variableName": "userVmDetailsDao",
    "variableType": "UserVmDetailsDao",
    "mockedClass": "UserVmDetailsDao",
    "isReuseableMock": "Hybrid",
    "mockPattern": "Creation:\n\u2014 Attribute Mock Creation\n\nStubbing:\n\u2014 Test Case\n\nVerification:\n\u2014 None",
    "classContext": {
      "packageName": "com.cloud.vm",
      "filePath": "C:\\java tool\\Apache\\cloudstack\\engine\\orchestration\\src\\test\\java\\com\\cloud\\vm\\VirtualMachineManagerImplTest.java",
      "className": "VirtualMachineManagerImplTest"
    },
    "statements": [
      {
        "type": "FIELD_MOCK_CREATION",
        "code": "@Mock\r\nprivate UserVmDetailsDao userVmDetailsDao;",
        "line": 192,
        "locate": "Attribute",
        "locationContext": {
          "methodName": "[FieldDeclaration]",
          "methodAnnotations": [
            "@Mock"
          ]
        }
      },
      {
        "type": "STUBBING",
        "code": "when(userVmDetailsDao.findDetail(anyLong(), Mockito.anyString())).thenReturn(null);",
        "line": 1011,
        "locate": "Test Case",
        "locationContext": {
          "methodName": "testOrchestrateStartNonNullPodId",
          "methodAnnotations": [
            "@Test"
          ]
        }
      },
      {
        "type": "STUBBING",
        "code": "when(userVmDetailsDao.findDetail(anyLong(), Mockito.anyString())).thenReturn(null);",
        "line": 1103,
        "locate": "Test Case",
        "locationContext": {
          "methodName": "testOrchestrateStartNullPodId",
          "methodAnnotations": [
            "@Test"
          ]
        }
      }
    ],
    "pattern_id": 4
  },
  {
    "variableName": "_userVmDetailsDao",
    "variableType": "UserVmDetailsDao",
    "mockedClass": "UserVmDetailsDao",
    "isReuseableMock": "Hybrid",
    "mockPattern": "Creation:\n\u2014 Attribute Mock Creation\n\nStubbing:\n\u2014 Test Case\n\nVerification:\n\u2014 None",
    "classContext": {
      "packageName": "com.cloud.network.element",
      "filePath": "C:\\java tool\\Apache\\cloudstack\\server\\src\\test\\java\\com\\cloud\\network\\element\\ConfigDriveNetworkElementTest.java",
      "className": "ConfigDriveNetworkElementTest"
    },
    "statements": [
      {
        "type": "FIELD_MOCK_CREATION",
        "code": "@Mock\r\nprivate UserVmDetailsDao _userVmDetailsDao;",
        "line": 136,
        "locate": "Attribute",
        "locationContext": {
          "methodName": "[FieldDeclaration]",
          "methodAnnotations": [
            "@Mock"
          ]
        }
      },
      {
        "type": "STUBBING",
        "code": "when(_userVmDetailsDao.findDetail(anyLong(), anyString())).thenReturn(userVmDetailVO);",
        "line": 289,
        "locate": "Test Case",
        "locationContext": {
          "methodName": "testAddPasswordAndUserData",
          "methodAnnotations": [
            "@Test",
            "@SuppressWarnings",
            "@PrepareForTest"
          ]
        }
      }
    ],
    "pattern_id": 4
  },
  {
    "variableName": "userVmDetailsDao",
    "variableType": "UserVmDetailsDao",
    "mockedClass": "UserVmDetailsDao",
    "isReuseableMock": "Hybrid",
    "mockPattern": "Creation:\n\u2014 Attribute Mock Creation\n\nStubbing:\n\u2014 Test Case\n\nVerification:\n\u2014 None",
    "classContext": {
      "packageName": "com.cloud.server",
      "filePath": "C:\\java tool\\Apache\\cloudstack\\server\\src\\test\\java\\com\\cloud\\server\\ManagementServerImplTest.java",
      "className": "ManagementServerImplTest"
    },
    "statements": [
      {
        "type": "FIELD_MOCK_CREATION",
        "code": "@Mock\r\nUserVmDetailsDao userVmDetailsDao;",
        "line": 129,
        "locate": "Attribute",
        "locationContext": {
          "methodName": "[FieldDeclaration]",
          "methodAnnotations": [
            "@Mock"
          ]
        }
      },
      {
        "type": "STUBBING",
        "code": "Mockito.when(userVmDetailsDao.findDetail(vm.getId(), ApiConstants.BootType.UEFI.toString())).thenReturn(null);",
        "line": 560,
        "locate": "Test Case",
        "locationContext": {
          "methodName": "mockFilterUefiHostsTestVm",
          "methodAnnotations": []
        }
      },
      {
        "type": "STUBBING",
        "code": "Mockito.when(userVmDetailsDao.findDetail(vm.getId(), ApiConstants.BootType.UEFI.toString())).thenReturn(detail);",
        "line": 563,
        "locate": "Test Case",
        "locationContext": {
          "methodName": "mockFilterUefiHostsTestVm",
          "methodAnnotations": []
        }
      }
    ],
    "pattern_id": 4
  }
]