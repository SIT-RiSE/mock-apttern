[
  {
    "variableName": "_privateIpAddressDao",
    "variableType": "DataCenterIpAddressDao",
    "mockedClass": "DataCenterIpAddressDao",
    "isReuseableMock": "Hybrid",
    "mockPattern": "Creation:\n\u2014 Attribute Mock Creation\n\nStubbing:\n\u2014 Test Case\n\nVerification:\n\u2014 None",
    "classContext": {
      "packageName": "com.cloud.configuration",
      "filePath": "C:\\java tool\\Apache\\cloudstack\\server\\src\\test\\java\\com\\cloud\\configuration\\ConfigurationManagerTest.java",
      "className": "ConfigurationManagerTest"
    },
    "statements": [
      {
        "type": "FIELD_MOCK_CREATION",
        "code": "@Mock\r\nDataCenterIpAddressDao _privateIpAddressDao;",
        "line": 177,
        "locate": "Attribute",
        "locationContext": {
          "methodName": "[FieldDeclaration]",
          "methodAnnotations": [
            "@Mock"
          ]
        }
      },
      {
        "type": "STUBBING",
        "code": "Mockito.when(_privateIpAddressDao.countIPs(anyLong(), anyLong(), anyBoolean())).thenReturn(0);",
        "line": 638,
        "locate": "Test Case",
        "locationContext": {
          "methodName": "checkIfPodIsDeletableSuccessTest",
          "methodAnnotations": [
            "@Test"
          ]
        }
      },
      {
        "type": "STUBBING",
        "code": "Mockito.when(_privateIpAddressDao.countIPs(anyLong(), anyLong(), anyBoolean())).thenReturn(1);",
        "line": 653,
        "locate": "Test Case",
        "locationContext": {
          "methodName": "checkIfPodIsDeletableFailureOnPrivateIpAddressTest",
          "methodAnnotations": [
            "@Test"
          ]
        }
      },
      {
        "type": "STUBBING",
        "code": "Mockito.when(_privateIpAddressDao.countIPs(anyLong(), anyLong(), anyBoolean())).thenReturn(0);",
        "line": 671,
        "locate": "Test Case",
        "locationContext": {
          "methodName": "checkIfPodIsDeletableFailureOnVolumeTest",
          "methodAnnotations": [
            "@Test"
          ]
        }
      },
      {
        "type": "STUBBING",
        "code": "Mockito.when(_privateIpAddressDao.countIPs(anyLong(), anyLong(), anyBoolean())).thenReturn(0);",
        "line": 689,
        "locate": "Test Case",
        "locationContext": {
          "methodName": "checkIfPodIsDeletableFailureOnHostTest",
          "methodAnnotations": [
            "@Test"
          ]
        }
      },
      {
        "type": "STUBBING",
        "code": "Mockito.when(_privateIpAddressDao.countIPs(anyLong(), anyLong(), anyBoolean())).thenReturn(0);",
        "line": 707,
        "locate": "Test Case",
        "locationContext": {
          "methodName": "checkIfPodIsDeletableFailureOnVmInstanceTest",
          "methodAnnotations": [
            "@Test"
          ]
        }
      },
      {
        "type": "STUBBING",
        "code": "Mockito.when(_privateIpAddressDao.countIPs(anyLong(), anyLong(), anyBoolean())).thenReturn(0);",
        "line": 725,
        "locate": "Test Case",
        "locationContext": {
          "methodName": "checkIfPodIsDeletableFailureOnClusterTest",
          "methodAnnotations": [
            "@Test"
          ]
        }
      },
      {
        "type": "STUBBING",
        "code": "Mockito.when(_privateIpAddressDao.countIPs(anyLong(), anyBoolean())).thenReturn(0);",
        "line": 738,
        "locate": "Test Case",
        "locationContext": {
          "methodName": "checkIfZoneIsDeletableSuccessTest",
          "methodAnnotations": [
            "@Test"
          ]
        }
      },
      {
        "type": "STUBBING",
        "code": "Mockito.when(_privateIpAddressDao.countIPs(anyLong(), anyBoolean())).thenReturn(0);",
        "line": 756,
        "locate": "Test Case",
        "locationContext": {
          "methodName": "checkIfZoneIsDeletableFailureOnHostTest",
          "methodAnnotations": [
            "@Test"
          ]
        }
      },
      {
        "type": "STUBBING",
        "code": "Mockito.when(_privateIpAddressDao.countIPs(anyLong(), anyBoolean())).thenReturn(0);",
        "line": 774,
        "locate": "Test Case",
        "locationContext": {
          "methodName": "checkIfZoneIsDeletableFailureOnPodTest",
          "methodAnnotations": [
            "@Test"
          ]
        }
      },
      {
        "type": "STUBBING",
        "code": "Mockito.when(_privateIpAddressDao.countIPs(anyLong(), anyBoolean())).thenReturn(1);",
        "line": 788,
        "locate": "Test Case",
        "locationContext": {
          "methodName": "checkIfZoneIsDeletableFailureOnPrivateIpAddressTest",
          "methodAnnotations": [
            "@Test"
          ]
        }
      },
      {
        "type": "STUBBING",
        "code": "Mockito.when(_privateIpAddressDao.countIPs(anyLong(), anyBoolean())).thenReturn(0);",
        "line": 802,
        "locate": "Test Case",
        "locationContext": {
          "methodName": "checkIfZoneIsDeletableFailureOnPublicIpAddressTest",
          "methodAnnotations": [
            "@Test"
          ]
        }
      },
      {
        "type": "STUBBING",
        "code": "Mockito.when(_privateIpAddressDao.countIPs(anyLong(), anyBoolean())).thenReturn(0);",
        "line": 820,
        "locate": "Test Case",
        "locationContext": {
          "methodName": "checkIfZoneIsDeletableFailureOnVmInstanceTest",
          "methodAnnotations": [
            "@Test"
          ]
        }
      },
      {
        "type": "STUBBING",
        "code": "Mockito.when(_privateIpAddressDao.countIPs(anyLong(), anyBoolean())).thenReturn(0);",
        "line": 838,
        "locate": "Test Case",
        "locationContext": {
          "methodName": "checkIfZoneIsDeletableFailureOnVolumeTest",
          "methodAnnotations": [
            "@Test"
          ]
        }
      },
      {
        "type": "STUBBING",
        "code": "Mockito.when(_privateIpAddressDao.countIPs(anyLong(), anyBoolean())).thenReturn(0);",
        "line": 856,
        "locate": "Test Case",
        "locationContext": {
          "methodName": "checkIfZoneIsDeletableFailureOnPhysicalNetworkTest",
          "methodAnnotations": [
            "@Test"
          ]
        }
      }
    ],
    "pattern_id": 4
  },
  {
    "variableName": "_privateIpAddressDao",
    "variableType": "DataCenterIpAddressDao",
    "mockedClass": "DataCenterIpAddressDao",
    "isReuseableMock": "Hybrid",
    "mockPattern": "Creation:\n\u2014 Attribute Mock Creation\n\nStubbing:\n\u2014 Test Case\n\nVerification:\n\u2014 None",
    "classContext": {
      "packageName": "com.cloud.configuration",
      "filePath": "C:\\java tool\\Apache\\cloudstack\\server\\src\\test\\java\\com\\cloud\\configuration\\ConfigurationManagerTest.java",
      "className": "ConfigurationManagerTest"
    },
    "statements": [
      {
        "type": "FIELD_MOCK_CREATION",
        "code": "@Mock\r\nDataCenterIpAddressDao _privateIpAddressDao;",
        "line": 177,
        "locate": "Attribute",
        "locationContext": {
          "methodName": "[FieldDeclaration]",
          "methodAnnotations": [
            "@Mock"
          ]
        }
      },
      {
        "type": "STUBBING",
        "code": "Mockito.when(_privateIpAddressDao.countIPs(anyLong(), anyLong(), anyBoolean())).thenReturn(0);",
        "line": 638,
        "locate": "Test Case",
        "locationContext": {
          "methodName": "checkIfPodIsDeletableSuccessTest",
          "methodAnnotations": [
            "@Test"
          ]
        }
      },
      {
        "type": "STUBBING",
        "code": "Mockito.when(_privateIpAddressDao.countIPs(anyLong(), anyLong(), anyBoolean())).thenReturn(1);",
        "line": 653,
        "locate": "Test Case",
        "locationContext": {
          "methodName": "checkIfPodIsDeletableFailureOnPrivateIpAddressTest",
          "methodAnnotations": [
            "@Test"
          ]
        }
      },
      {
        "type": "STUBBING",
        "code": "Mockito.when(_privateIpAddressDao.countIPs(anyLong(), anyLong(), anyBoolean())).thenReturn(0);",
        "line": 671,
        "locate": "Test Case",
        "locationContext": {
          "methodName": "checkIfPodIsDeletableFailureOnVolumeTest",
          "methodAnnotations": [
            "@Test"
          ]
        }
      },
      {
        "type": "STUBBING",
        "code": "Mockito.when(_privateIpAddressDao.countIPs(anyLong(), anyLong(), anyBoolean())).thenReturn(0);",
        "line": 689,
        "locate": "Test Case",
        "locationContext": {
          "methodName": "checkIfPodIsDeletableFailureOnHostTest",
          "methodAnnotations": [
            "@Test"
          ]
        }
      },
      {
        "type": "STUBBING",
        "code": "Mockito.when(_privateIpAddressDao.countIPs(anyLong(), anyLong(), anyBoolean())).thenReturn(0);",
        "line": 707,
        "locate": "Test Case",
        "locationContext": {
          "methodName": "checkIfPodIsDeletableFailureOnVmInstanceTest",
          "methodAnnotations": [
            "@Test"
          ]
        }
      },
      {
        "type": "STUBBING",
        "code": "Mockito.when(_privateIpAddressDao.countIPs(anyLong(), anyLong(), anyBoolean())).thenReturn(0);",
        "line": 725,
        "locate": "Test Case",
        "locationContext": {
          "methodName": "checkIfPodIsDeletableFailureOnClusterTest",
          "methodAnnotations": [
            "@Test"
          ]
        }
      },
      {
        "type": "STUBBING",
        "code": "Mockito.when(_privateIpAddressDao.countIPs(anyLong(), anyBoolean())).thenReturn(0);",
        "line": 738,
        "locate": "Test Case",
        "locationContext": {
          "methodName": "checkIfZoneIsDeletableSuccessTest",
          "methodAnnotations": [
            "@Test"
          ]
        }
      },
      {
        "type": "STUBBING",
        "code": "Mockito.when(_privateIpAddressDao.countIPs(anyLong(), anyBoolean())).thenReturn(0);",
        "line": 756,
        "locate": "Test Case",
        "locationContext": {
          "methodName": "checkIfZoneIsDeletableFailureOnHostTest",
          "methodAnnotations": [
            "@Test"
          ]
        }
      },
      {
        "type": "STUBBING",
        "code": "Mockito.when(_privateIpAddressDao.countIPs(anyLong(), anyBoolean())).thenReturn(0);",
        "line": 774,
        "locate": "Test Case",
        "locationContext": {
          "methodName": "checkIfZoneIsDeletableFailureOnPodTest",
          "methodAnnotations": [
            "@Test"
          ]
        }
      },
      {
        "type": "STUBBING",
        "code": "Mockito.when(_privateIpAddressDao.countIPs(anyLong(), anyBoolean())).thenReturn(1);",
        "line": 788,
        "locate": "Test Case",
        "locationContext": {
          "methodName": "checkIfZoneIsDeletableFailureOnPrivateIpAddressTest",
          "methodAnnotations": [
            "@Test"
          ]
        }
      },
      {
        "type": "STUBBING",
        "code": "Mockito.when(_privateIpAddressDao.countIPs(anyLong(), anyBoolean())).thenReturn(0);",
        "line": 802,
        "locate": "Test Case",
        "locationContext": {
          "methodName": "checkIfZoneIsDeletableFailureOnPublicIpAddressTest",
          "methodAnnotations": [
            "@Test"
          ]
        }
      },
      {
        "type": "STUBBING",
        "code": "Mockito.when(_privateIpAddressDao.countIPs(anyLong(), anyBoolean())).thenReturn(0);",
        "line": 820,
        "locate": "Test Case",
        "locationContext": {
          "methodName": "checkIfZoneIsDeletableFailureOnVmInstanceTest",
          "methodAnnotations": [
            "@Test"
          ]
        }
      },
      {
        "type": "STUBBING",
        "code": "Mockito.when(_privateIpAddressDao.countIPs(anyLong(), anyBoolean())).thenReturn(0);",
        "line": 838,
        "locate": "Test Case",
        "locationContext": {
          "methodName": "checkIfZoneIsDeletableFailureOnVolumeTest",
          "methodAnnotations": [
            "@Test"
          ]
        }
      },
      {
        "type": "STUBBING",
        "code": "Mockito.when(_privateIpAddressDao.countIPs(anyLong(), anyBoolean())).thenReturn(0);",
        "line": 856,
        "locate": "Test Case",
        "locationContext": {
          "methodName": "checkIfZoneIsDeletableFailureOnPhysicalNetworkTest",
          "methodAnnotations": [
            "@Test"
          ]
        }
      }
    ],
    "pattern_id": 4
  },
  {
    "variableName": "_privateIpAddressDao",
    "variableType": "DataCenterIpAddressDao",
    "mockedClass": "DataCenterIpAddressDao",
    "isReuseableMock": "Hybrid",
    "mockPattern": "Creation:\n\u2014 Attribute Mock Creation\n\nStubbing:\n\u2014 Test Case\n\nVerification:\n\u2014 None",
    "classContext": {
      "packageName": "com.cloud.configuration",
      "filePath": "C:\\java tool\\Apache\\cloudstack\\server\\src\\test\\java\\com\\cloud\\configuration\\ConfigurationManagerTest.java",
      "className": "ConfigurationManagerTest"
    },
    "statements": [
      {
        "type": "FIELD_MOCK_CREATION",
        "code": "@Mock\r\nDataCenterIpAddressDao _privateIpAddressDao;",
        "line": 177,
        "locate": "Attribute",
        "locationContext": {
          "methodName": "[FieldDeclaration]",
          "methodAnnotations": [
            "@Mock"
          ]
        }
      },
      {
        "type": "STUBBING",
        "code": "Mockito.when(_privateIpAddressDao.countIPs(anyLong(), anyLong(), anyBoolean())).thenReturn(0);",
        "line": 638,
        "locate": "Test Case",
        "locationContext": {
          "methodName": "checkIfPodIsDeletableSuccessTest",
          "methodAnnotations": [
            "@Test"
          ]
        }
      },
      {
        "type": "STUBBING",
        "code": "Mockito.when(_privateIpAddressDao.countIPs(anyLong(), anyLong(), anyBoolean())).thenReturn(1);",
        "line": 653,
        "locate": "Test Case",
        "locationContext": {
          "methodName": "checkIfPodIsDeletableFailureOnPrivateIpAddressTest",
          "methodAnnotations": [
            "@Test"
          ]
        }
      },
      {
        "type": "STUBBING",
        "code": "Mockito.when(_privateIpAddressDao.countIPs(anyLong(), anyLong(), anyBoolean())).thenReturn(0);",
        "line": 671,
        "locate": "Test Case",
        "locationContext": {
          "methodName": "checkIfPodIsDeletableFailureOnVolumeTest",
          "methodAnnotations": [
            "@Test"
          ]
        }
      },
      {
        "type": "STUBBING",
        "code": "Mockito.when(_privateIpAddressDao.countIPs(anyLong(), anyLong(), anyBoolean())).thenReturn(0);",
        "line": 689,
        "locate": "Test Case",
        "locationContext": {
          "methodName": "checkIfPodIsDeletableFailureOnHostTest",
          "methodAnnotations": [
            "@Test"
          ]
        }
      },
      {
        "type": "STUBBING",
        "code": "Mockito.when(_privateIpAddressDao.countIPs(anyLong(), anyLong(), anyBoolean())).thenReturn(0);",
        "line": 707,
        "locate": "Test Case",
        "locationContext": {
          "methodName": "checkIfPodIsDeletableFailureOnVmInstanceTest",
          "methodAnnotations": [
            "@Test"
          ]
        }
      },
      {
        "type": "STUBBING",
        "code": "Mockito.when(_privateIpAddressDao.countIPs(anyLong(), anyLong(), anyBoolean())).thenReturn(0);",
        "line": 725,
        "locate": "Test Case",
        "locationContext": {
          "methodName": "checkIfPodIsDeletableFailureOnClusterTest",
          "methodAnnotations": [
            "@Test"
          ]
        }
      },
      {
        "type": "STUBBING",
        "code": "Mockito.when(_privateIpAddressDao.countIPs(anyLong(), anyBoolean())).thenReturn(0);",
        "line": 738,
        "locate": "Test Case",
        "locationContext": {
          "methodName": "checkIfZoneIsDeletableSuccessTest",
          "methodAnnotations": [
            "@Test"
          ]
        }
      },
      {
        "type": "STUBBING",
        "code": "Mockito.when(_privateIpAddressDao.countIPs(anyLong(), anyBoolean())).thenReturn(0);",
        "line": 756,
        "locate": "Test Case",
        "locationContext": {
          "methodName": "checkIfZoneIsDeletableFailureOnHostTest",
          "methodAnnotations": [
            "@Test"
          ]
        }
      },
      {
        "type": "STUBBING",
        "code": "Mockito.when(_privateIpAddressDao.countIPs(anyLong(), anyBoolean())).thenReturn(0);",
        "line": 774,
        "locate": "Test Case",
        "locationContext": {
          "methodName": "checkIfZoneIsDeletableFailureOnPodTest",
          "methodAnnotations": [
            "@Test"
          ]
        }
      },
      {
        "type": "STUBBING",
        "code": "Mockito.when(_privateIpAddressDao.countIPs(anyLong(), anyBoolean())).thenReturn(1);",
        "line": 788,
        "locate": "Test Case",
        "locationContext": {
          "methodName": "checkIfZoneIsDeletableFailureOnPrivateIpAddressTest",
          "methodAnnotations": [
            "@Test"
          ]
        }
      },
      {
        "type": "STUBBING",
        "code": "Mockito.when(_privateIpAddressDao.countIPs(anyLong(), anyBoolean())).thenReturn(0);",
        "line": 802,
        "locate": "Test Case",
        "locationContext": {
          "methodName": "checkIfZoneIsDeletableFailureOnPublicIpAddressTest",
          "methodAnnotations": [
            "@Test"
          ]
        }
      },
      {
        "type": "STUBBING",
        "code": "Mockito.when(_privateIpAddressDao.countIPs(anyLong(), anyBoolean())).thenReturn(0);",
        "line": 820,
        "locate": "Test Case",
        "locationContext": {
          "methodName": "checkIfZoneIsDeletableFailureOnVmInstanceTest",
          "methodAnnotations": [
            "@Test"
          ]
        }
      },
      {
        "type": "STUBBING",
        "code": "Mockito.when(_privateIpAddressDao.countIPs(anyLong(), anyBoolean())).thenReturn(0);",
        "line": 838,
        "locate": "Test Case",
        "locationContext": {
          "methodName": "checkIfZoneIsDeletableFailureOnVolumeTest",
          "methodAnnotations": [
            "@Test"
          ]
        }
      },
      {
        "type": "STUBBING",
        "code": "Mockito.when(_privateIpAddressDao.countIPs(anyLong(), anyBoolean())).thenReturn(0);",
        "line": 856,
        "locate": "Test Case",
        "locationContext": {
          "methodName": "checkIfZoneIsDeletableFailureOnPhysicalNetworkTest",
          "methodAnnotations": [
            "@Test"
          ]
        }
      }
    ],
    "pattern_id": 4
  }
]