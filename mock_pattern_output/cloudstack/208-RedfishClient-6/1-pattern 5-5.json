[
  {
    "variableName": "newRedfishClientspy",
    "variableType": "RedfishClient",
    "mockedClass": "RedfishClient",
    "isReuseableMock": false,
    "mockPattern": "Creation:\n\u2014 Local Mock Creation in Test Case\n\nStubbing:\n\u2014 None\n\nVerification:\n\u2014 Test Case",
    "classContext": {
      "packageName": "org.apache.cloudstack.utils.redfish",
      "filePath": "C:\\java tool\\Apache\\cloudstack\\utils\\src\\test\\java\\org\\apache\\cloudstack\\utils\\redfish\\RedfishClientTest.java",
      "className": "RedfishClientTest"
    },
    "statements": [
      {
        "type": "DECLARATION",
        "code": "RedfishClient newRedfishClientspy = Mockito.spy(new RedfishClient(USERNAME, PASSWORD, true, true, Integer.valueOf(0)));",
        "line": 182,
        "locate": "Test Case",
        "locationContext": {
          "methodName": "retryHttpRequestNoRetries",
          "methodAnnotations": [
            "@Test"
          ]
        }
      },
      {
        "type": "VERIFICATION",
        "code": "Mockito.verify(newRedfishClientspy, Mockito.never()).retryHttpRequest(Mockito.anyString(), Mockito.any(), Mockito.any());",
        "line": 185,
        "locate": "Test Case",
        "locationContext": {
          "methodName": "retryHttpRequestNoRetries",
          "methodAnnotations": [
            "@Test"
          ]
        }
      }
    ],
    "pattern_id": 5
  },
  {
    "variableName": "newRedfishClientspy",
    "variableType": "RedfishClient",
    "mockedClass": "RedfishClient",
    "isReuseableMock": false,
    "mockPattern": "Creation:\n\u2014 Local Mock Creation in Test Case\n\nStubbing:\n\u2014 None\n\nVerification:\n\u2014 Test Case",
    "classContext": {
      "packageName": "org.apache.cloudstack.utils.redfish",
      "filePath": "C:\\java tool\\Apache\\cloudstack\\utils\\src\\test\\java\\org\\apache\\cloudstack\\utils\\redfish\\RedfishClientTest.java",
      "className": "RedfishClientTest"
    },
    "statements": [
      {
        "type": "DECLARATION",
        "code": "RedfishClient newRedfishClientspy = Mockito.spy(new RedfishClient(USERNAME, PASSWORD, true, true, Integer.valueOf(1)));",
        "line": 193,
        "locate": "Test Case",
        "locationContext": {
          "methodName": "retryHttpRequestExceptionAfterOneRetry",
          "methodAnnotations": [
            "@Test"
          ]
        }
      },
      {
        "type": "VERIFICATION",
        "code": "Mockito.verify(newRedfishClientspy, Mockito.never()).retryHttpRequest(Mockito.anyString(), Mockito.any(), Mockito.any());",
        "line": 196,
        "locate": "Test Case",
        "locationContext": {
          "methodName": "retryHttpRequestExceptionAfterOneRetry",
          "methodAnnotations": [
            "@Test"
          ]
        }
      }
    ],
    "pattern_id": 5
  },
  {
    "variableName": "newRedfishClientspy",
    "variableType": "RedfishClient",
    "mockedClass": "RedfishClient",
    "isReuseableMock": false,
    "mockPattern": "Creation:\n\u2014 Local Mock Creation in Test Case\n\nStubbing:\n\u2014 None\n\nVerification:\n\u2014 Test Case",
    "classContext": {
      "packageName": "org.apache.cloudstack.utils.redfish",
      "filePath": "C:\\java tool\\Apache\\cloudstack\\utils\\src\\test\\java\\org\\apache\\cloudstack\\utils\\redfish\\RedfishClientTest.java",
      "className": "RedfishClientTest"
    },
    "statements": [
      {
        "type": "DECLARATION",
        "code": "RedfishClient newRedfishClientspy = Mockito.spy(new RedfishClient(USERNAME, PASSWORD, true, true, Integer.valueOf(3)));",
        "line": 204,
        "locate": "Test Case",
        "locationContext": {
          "methodName": "retryHttpRequestNoException",
          "methodAnnotations": [
            "@Test"
          ]
        }
      },
      {
        "type": "VERIFICATION",
        "code": "Mockito.verify(newRedfishClientspy, Mockito.times(1)).retryHttpRequest(Mockito.anyString(), Mockito.any(), Mockito.any());",
        "line": 207,
        "locate": "Test Case",
        "locationContext": {
          "methodName": "retryHttpRequestNoException",
          "methodAnnotations": [
            "@Test"
          ]
        }
      }
    ],
    "pattern_id": 5
  },
  {
    "variableName": "newRedfishClientspy",
    "variableType": "RedfishClient",
    "mockedClass": "RedfishClient",
    "isReuseableMock": false,
    "mockPattern": "Creation:\n\u2014 Local Mock Creation in Test Case\n\nStubbing:\n\u2014 None\n\nVerification:\n\u2014 Test Case",
    "classContext": {
      "packageName": "org.apache.cloudstack.utils.redfish",
      "filePath": "C:\\java tool\\Apache\\cloudstack\\utils\\src\\test\\java\\org\\apache\\cloudstack\\utils\\redfish\\RedfishClientTest.java",
      "className": "RedfishClientTest"
    },
    "statements": [
      {
        "type": "DECLARATION",
        "code": "RedfishClient newRedfishClientspy = Mockito.spy(new RedfishClient(USERNAME, PASSWORD, true, true, REDFISHT_REQUEST_RETRIES));",
        "line": 215,
        "locate": "Test Case",
        "locationContext": {
          "methodName": "retryHttpRequestExceptionAfterTwoRetries",
          "methodAnnotations": [
            "@Test"
          ]
        }
      },
      {
        "type": "VERIFICATION",
        "code": "Mockito.verify(newRedfishClientspy, Mockito.never()).retryHttpRequest(Mockito.anyString(), Mockito.any(), Mockito.any());",
        "line": 218,
        "locate": "Test Case",
        "locationContext": {
          "methodName": "retryHttpRequestExceptionAfterTwoRetries",
          "methodAnnotations": [
            "@Test"
          ]
        }
      }
    ],
    "pattern_id": 5
  },
  {
    "variableName": "newRedfishClientspy",
    "variableType": "RedfishClient",
    "mockedClass": "RedfishClient",
    "isReuseableMock": false,
    "mockPattern": "Creation:\n\u2014 Local Mock Creation in Test Case\n\nStubbing:\n\u2014 None\n\nVerification:\n\u2014 Test Case",
    "classContext": {
      "packageName": "org.apache.cloudstack.utils.redfish",
      "filePath": "C:\\java tool\\Apache\\cloudstack\\utils\\src\\test\\java\\org\\apache\\cloudstack\\utils\\redfish\\RedfishClientTest.java",
      "className": "RedfishClientTest"
    },
    "statements": [
      {
        "type": "DECLARATION",
        "code": "RedfishClient newRedfishClientspy = Mockito.spy(new RedfishClient(USERNAME, PASSWORD, true, true, REDFISHT_REQUEST_RETRIES));",
        "line": 226,
        "locate": "Test Case",
        "locationContext": {
          "methodName": "retryHttpRequestSuccessAtTheSecondRetry",
          "methodAnnotations": [
            "@Test"
          ]
        }
      },
      {
        "type": "VERIFICATION",
        "code": "Mockito.verify(newRedfishClientspy, Mockito.times(1)).retryHttpRequest(Mockito.anyString(), Mockito.any(), Mockito.any());",
        "line": 229,
        "locate": "Test Case",
        "locationContext": {
          "methodName": "retryHttpRequestSuccessAtTheSecondRetry",
          "methodAnnotations": [
            "@Test"
          ]
        }
      }
    ],
    "pattern_id": 5
  }
]