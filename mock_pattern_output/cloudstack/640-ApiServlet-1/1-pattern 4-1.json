[
  {
    "variableName": "spyServlet",
    "variableType": "ApiServlet",
    "mockedClass": "ApiServlet",
    "isReuseableMock": false,
    "mockPattern": "Creation:\n\u2014 Attribute Mock Creation\n\nStubbing:\n\u2014 Test Case\n\nVerification:\n\u2014 None",
    "classContext": {
      "packageName": "com.cloud.api",
      "filePath": "C:\\java tool\\Apache\\cloudstack\\server\\src\\test\\java\\com\\cloud\\api\\ApiServletTest.java",
      "className": "ApiServletTest"
    },
    "statements": [
      {
        "type": "FIELD_DECLARATION",
        "code": "ApiServlet spyServlet;",
        "line": 106,
        "locate": "Attribute",
        "locationContext": {
          "methodName": "[FieldDeclaration]",
          "methodAnnotations": []
        }
      },
      {
        "type": "ASSIGNMENT",
        "code": "spyServlet = Mockito.spy(servlet);",
        "line": 112,
        "locate": "@Before",
        "locationContext": {
          "methodName": "setup",
          "methodAnnotations": [
            "@SuppressWarnings",
            "@Before"
          ]
        }
      },
      {
        "type": "STUBBING",
        "code": "Mockito.when(spyServlet.proxyNets()).thenReturn(proxynet);",
        "line": 267,
        "locate": "Test Case",
        "locationContext": {
          "methodName": "getClientAddressWithXForwardedFor",
          "methodAnnotations": [
            "@Test"
          ]
        }
      },
      {
        "type": "STUBBING",
        "code": "Mockito.when(spyServlet.doUseForwardHeaders()).thenReturn(true);",
        "line": 268,
        "locate": "Test Case",
        "locationContext": {
          "methodName": "getClientAddressWithXForwardedFor",
          "methodAnnotations": [
            "@Test"
          ]
        }
      },
      {
        "type": "STUBBING",
        "code": "Mockito.when(spyServlet.proxyNets()).thenReturn(proxynet);",
        "line": 276,
        "locate": "Test Case",
        "locationContext": {
          "methodName": "getClientAddressWithHttpXForwardedFor",
          "methodAnnotations": [
            "@Test"
          ]
        }
      },
      {
        "type": "STUBBING",
        "code": "Mockito.when(spyServlet.doUseForwardHeaders()).thenReturn(true);",
        "line": 277,
        "locate": "Test Case",
        "locationContext": {
          "methodName": "getClientAddressWithHttpXForwardedFor",
          "methodAnnotations": [
            "@Test"
          ]
        }
      },
      {
        "type": "STUBBING",
        "code": "Mockito.when(spyServlet.proxyNets()).thenReturn(proxynet);",
        "line": 285,
        "locate": "Test Case",
        "locationContext": {
          "methodName": "getClientAddressWithRemoteAddr",
          "methodAnnotations": [
            "@Test"
          ]
        }
      },
      {
        "type": "STUBBING",
        "code": "Mockito.when(spyServlet.doUseForwardHeaders()).thenReturn(true);",
        "line": 286,
        "locate": "Test Case",
        "locationContext": {
          "methodName": "getClientAddressWithRemoteAddr",
          "methodAnnotations": [
            "@Test"
          ]
        }
      },
      {
        "type": "STUBBING",
        "code": "Mockito.when(spyServlet.proxyNets()).thenReturn(proxynet);",
        "line": 293,
        "locate": "Test Case",
        "locationContext": {
          "methodName": "getClientAddressWithHttpClientIp",
          "methodAnnotations": [
            "@Test"
          ]
        }
      },
      {
        "type": "STUBBING",
        "code": "Mockito.when(spyServlet.doUseForwardHeaders()).thenReturn(true);",
        "line": 294,
        "locate": "Test Case",
        "locationContext": {
          "methodName": "getClientAddressWithHttpClientIp",
          "methodAnnotations": [
            "@Test"
          ]
        }
      }
    ],
    "pattern_id": 4
  }
]