[
  {
    "variableName": "importUnmanageInstanceCmd",
    "variableType": "ImportUnmanagedInstanceCmd",
    "mockedClass": "ImportUnmanagedInstanceCmd",
    "isReuseableMock": false,
    "mockPattern": "Creation:\n\u2014 Local Mock Creation in Test Case\n\nStubbing:\n\u2014 Test Case\n\nVerification:\n\u2014 None",
    "classContext": {
      "packageName": "org.apache.cloudstack.vm",
      "filePath": "C:\\java tool\\Apache\\cloudstack\\server\\src\\test\\java\\org\\apache\\cloudstack\\vm\\UnmanagedVMsManagerImplTest.java",
      "className": "UnmanagedVMsManagerImplTest"
    },
    "statements": [
      {
        "type": "DECLARATION",
        "code": "ImportUnmanagedInstanceCmd importUnmanageInstanceCmd = Mockito.mock(ImportUnmanagedInstanceCmd.class);",
        "line": 371,
        "locate": "Test Case",
        "locationContext": {
          "methodName": "importUnmanagedInstanceTest",
          "methodAnnotations": [
            "@Test"
          ]
        }
      },
      {
        "type": "STUBBING",
        "code": "when(importUnmanageInstanceCmd.getName()).thenReturn(\"TestInstance\");",
        "line": 372,
        "locate": "Test Case",
        "locationContext": {
          "methodName": "importUnmanagedInstanceTest",
          "methodAnnotations": [
            "@Test"
          ]
        }
      },
      {
        "type": "STUBBING",
        "code": "when(importUnmanageInstanceCmd.getAccountName()).thenReturn(null);",
        "line": 373,
        "locate": "Test Case",
        "locationContext": {
          "methodName": "importUnmanagedInstanceTest",
          "methodAnnotations": [
            "@Test"
          ]
        }
      },
      {
        "type": "STUBBING",
        "code": "when(importUnmanageInstanceCmd.getDomainId()).thenReturn(null);",
        "line": 374,
        "locate": "Test Case",
        "locationContext": {
          "methodName": "importUnmanagedInstanceTest",
          "methodAnnotations": [
            "@Test"
          ]
        }
      }
    ],
    "pattern_id": 1
  },
  {
    "variableName": "importUnmanageInstanceCmd",
    "variableType": "ImportUnmanagedInstanceCmd",
    "mockedClass": "ImportUnmanagedInstanceCmd",
    "isReuseableMock": false,
    "mockPattern": "Creation:\n\u2014 Local Mock Creation in Test Case\n\nStubbing:\n\u2014 Test Case\n\nVerification:\n\u2014 None",
    "classContext": {
      "packageName": "org.apache.cloudstack.vm",
      "filePath": "C:\\java tool\\Apache\\cloudstack\\server\\src\\test\\java\\org\\apache\\cloudstack\\vm\\UnmanagedVMsManagerImplTest.java",
      "className": "UnmanagedVMsManagerImplTest"
    },
    "statements": [
      {
        "type": "DECLARATION",
        "code": "ImportUnmanagedInstanceCmd importUnmanageInstanceCmd = Mockito.mock(ImportUnmanagedInstanceCmd.class);",
        "line": 382,
        "locate": "Test Case",
        "locationContext": {
          "methodName": "importUnmanagedInstanceInvalidHostnameTest",
          "methodAnnotations": [
            "@Test"
          ]
        }
      },
      {
        "type": "STUBBING",
        "code": "when(importUnmanageInstanceCmd.getName()).thenReturn(\"TestInstance\");",
        "line": 383,
        "locate": "Test Case",
        "locationContext": {
          "methodName": "importUnmanagedInstanceInvalidHostnameTest",
          "methodAnnotations": [
            "@Test"
          ]
        }
      },
      {
        "type": "STUBBING",
        "code": "when(importUnmanageInstanceCmd.getName()).thenReturn(\"some name\");",
        "line": 384,
        "locate": "Test Case",
        "locationContext": {
          "methodName": "importUnmanagedInstanceInvalidHostnameTest",
          "methodAnnotations": [
            "@Test"
          ]
        }
      },
      {
        "type": "STUBBING",
        "code": "when(importUnmanageInstanceCmd.getMigrateAllowed()).thenReturn(false);",
        "line": 385,
        "locate": "Test Case",
        "locationContext": {
          "methodName": "importUnmanagedInstanceInvalidHostnameTest",
          "methodAnnotations": [
            "@Test"
          ]
        }
      }
    ],
    "pattern_id": 1
  },
  {
    "variableName": "importUnmanageInstanceCmd",
    "variableType": "ImportUnmanagedInstanceCmd",
    "mockedClass": "ImportUnmanagedInstanceCmd",
    "isReuseableMock": false,
    "mockPattern": "Creation:\n\u2014 Local Mock Creation in Test Case\n\nStubbing:\n\u2014 Test Case\n\nVerification:\n\u2014 None",
    "classContext": {
      "packageName": "org.apache.cloudstack.vm",
      "filePath": "C:\\java tool\\Apache\\cloudstack\\server\\src\\test\\java\\org\\apache\\cloudstack\\vm\\UnmanagedVMsManagerImplTest.java",
      "className": "UnmanagedVMsManagerImplTest"
    },
    "statements": [
      {
        "type": "DECLARATION",
        "code": "ImportUnmanagedInstanceCmd importUnmanageInstanceCmd = Mockito.mock(ImportUnmanagedInstanceCmd.class);",
        "line": 391,
        "locate": "Test Case",
        "locationContext": {
          "methodName": "importUnmanagedInstanceMissingInstanceTest",
          "methodAnnotations": [
            "@Test"
          ]
        }
      },
      {
        "type": "STUBBING",
        "code": "when(importUnmanageInstanceCmd.getName()).thenReturn(\"SomeInstance\");",
        "line": 392,
        "locate": "Test Case",
        "locationContext": {
          "methodName": "importUnmanagedInstanceMissingInstanceTest",
          "methodAnnotations": [
            "@Test"
          ]
        }
      },
      {
        "type": "STUBBING",
        "code": "when(importUnmanageInstanceCmd.getAccountName()).thenReturn(null);",
        "line": 393,
        "locate": "Test Case",
        "locationContext": {
          "methodName": "importUnmanagedInstanceMissingInstanceTest",
          "methodAnnotations": [
            "@Test"
          ]
        }
      },
      {
        "type": "STUBBING",
        "code": "when(importUnmanageInstanceCmd.getDomainId()).thenReturn(null);",
        "line": 394,
        "locate": "Test Case",
        "locationContext": {
          "methodName": "importUnmanagedInstanceMissingInstanceTest",
          "methodAnnotations": [
            "@Test"
          ]
        }
      }
    ],
    "pattern_id": 1
  }
]