[
  {
    "variableName": "unusedElbVms",
    "variableType": "List<DomainRouterVO>",
    "mockedClass": "List<DomainRouterVO>",
    "isReuseableMock": false,
    "mockPattern": "Creation:\n\u2014 Local Mock Creation in Test Case\n\nStubbing:\n\u2014 None\n\nVerification:\n\u2014 None",
    "classContext": {
      "packageName": "com.cloud.network.lb",
      "filePath": "C:\\java tool\\Apache\\cloudstack\\plugins\\network-elements\\elastic-loadbalancer\\src\\test\\java\\com\\cloud\\network\\lb\\LoadBalanceRuleHandlerTest.java",
      "className": "LoadBalanceRuleHandlerTest"
    },
    "statements": [
      {
        "type": "DECLARATION",
        "code": "List<DomainRouterVO> unusedElbVms = Arrays.asList(new DomainRouterVO[] { unusedElbVmThatMatchesPodId, mock(DomainRouterVO.class) });",
        "line": 205,
        "locate": "Test Case",
        "locationContext": {
          "methodName": "testFindElbVmWithCapacityWhenThereAreUnusedElbVmsAndOneMatchesThePodId",
          "methodAnnotations": [
            "@Test"
          ]
        }
      }
    ],
    "pattern_id": 2
  },
  {
    "variableName": "routers",
    "variableType": "List<DomainRouterVO>",
    "mockedClass": "List<DomainRouterVO>",
    "isReuseableMock": false,
    "mockPattern": "Creation:\n\u2014 Local Mock Creation in Test Case\n\nStubbing:\n\u2014 None\n\nVerification:\n\u2014 None",
    "classContext": {
      "packageName": "com.cloud.network",
      "filePath": "C:\\java tool\\Apache\\cloudstack\\server\\src\\test\\java\\com\\cloud\\network\\Ipv6ServiceImplTest.java",
      "className": "Ipv6ServiceImplTest"
    },
    "statements": [
      {
        "type": "DECLARATION",
        "code": "List<DomainRouterVO> routers = List.of(Mockito.mock(DomainRouterVO.class));",
        "line": 525,
        "locate": "Test Case",
        "locationContext": {
          "methodName": "testEmptyGetPublicIpv6AddressesForNetwork",
          "methodAnnotations": [
            "@Test"
          ]
        }
      }
    ],
    "pattern_id": 2
  },
  {
    "variableName": "routers",
    "variableType": "List<DomainRouterVO>",
    "mockedClass": "List<DomainRouterVO>",
    "isReuseableMock": false,
    "mockPattern": "Creation:\n\u2014 Local Mock Creation in Test Case\n\nStubbing:\n\u2014 None\n\nVerification:\n\u2014 None",
    "classContext": {
      "packageName": "com.cloud.network",
      "filePath": "C:\\java tool\\Apache\\cloudstack\\server\\src\\test\\java\\com\\cloud\\network\\Ipv6ServiceImplTest.java",
      "className": "Ipv6ServiceImplTest"
    },
    "statements": [
      {
        "type": "DECLARATION",
        "code": "List<DomainRouterVO> routers = List.of(Mockito.mock(DomainRouterVO.class), Mockito.mock(DomainRouterVO.class));",
        "line": 540,
        "locate": "Test Case",
        "locationContext": {
          "methodName": "testGetPublicIpv6AddressesForNetwork",
          "methodAnnotations": [
            "@Test"
          ]
        }
      }
    ],
    "pattern_id": 2
  },
  {
    "variableName": "routers",
    "variableType": "List<DomainRouterVO>",
    "mockedClass": "List<DomainRouterVO>",
    "isReuseableMock": false,
    "mockPattern": "Creation:\n\u2014 Local Mock Creation in Test Case\n\nStubbing:\n\u2014 None\n\nVerification:\n\u2014 None",
    "classContext": {
      "packageName": "com.cloud.network",
      "filePath": "C:\\java tool\\Apache\\cloudstack\\server\\src\\test\\java\\com\\cloud\\network\\Ipv6ServiceImplTest.java",
      "className": "Ipv6ServiceImplTest"
    },
    "statements": [
      {
        "type": "DECLARATION",
        "code": "List<DomainRouterVO> routers = List.of(Mockito.mock(DomainRouterVO.class));",
        "line": 570,
        "locate": "Test Case",
        "locationContext": {
          "methodName": "testUpdateIpv6RoutesForVpcResponse",
          "methodAnnotations": [
            "@Test"
          ]
        }
      }
    ],
    "pattern_id": 2
  }
]