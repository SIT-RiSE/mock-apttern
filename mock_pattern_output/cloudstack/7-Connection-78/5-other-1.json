[
  {
    "variableName": "conn",
    "variableType": "Connection",
    "mockedClass": "Connection",
    "isReuseableMock": null,
    "mockPattern": "Creation:\n\u2014 Declaration Attribute\n\u2014 Lazy-init via Helper Method\n\nStubbing:\n\u2014 None\n\nVerification:\n\u2014 Test Case",
    "classContext": {
      "packageName": "com.cloud.utils.db",
      "filePath": "C:\\java tool\\Apache\\cloudstack\\framework\\db\\src\\test\\java\\com\\cloud\\utils\\db\\TestTransaction.java",
      "className": "TestTransaction"
    },
    "statements": [
      {
        "type": "FIELD_DECLARATION",
        "code": "Connection conn;",
        "line": 39,
        "locate": "Attribute",
        "locationContext": {
          "methodName": "[FieldDeclaration]",
          "methodAnnotations": []
        }
      },
      {
        "type": "ASSIGNMENT",
        "code": "conn = Mockito.mock(Connection.class);",
        "line": 48,
        "locate": "Helper Method",
        "locationContext": {
          "methodName": "setup",
          "methodAnnotations": []
        }
      },
      {
        "type": "VERIFICATION",
        "code": "verify(conn).setAutoCommit(false);",
        "line": 66,
        "locate": "Test Case",
        "locationContext": {
          "methodName": "testCommit",
          "methodAnnotations": [
            "@Test"
          ]
        }
      },
      {
        "type": "VERIFICATION",
        "code": "verify(conn, times(1)).commit();",
        "line": 67,
        "locate": "Test Case",
        "locationContext": {
          "methodName": "testCommit",
          "methodAnnotations": [
            "@Test"
          ]
        }
      },
      {
        "type": "VERIFICATION",
        "code": "verify(conn, times(0)).rollback();",
        "line": 68,
        "locate": "Test Case",
        "locationContext": {
          "methodName": "testCommit",
          "methodAnnotations": [
            "@Test"
          ]
        }
      },
      {
        "type": "VERIFICATION",
        "code": "verify(conn, times(1)).close();",
        "line": 69,
        "locate": "Test Case",
        "locationContext": {
          "methodName": "testCommit",
          "methodAnnotations": [
            "@Test"
          ]
        }
      },
      {
        "type": "VERIFICATION",
        "code": "verify(conn).setAutoCommit(false);",
        "line": 86,
        "locate": "Test Case",
        "locationContext": {
          "methodName": "testRollback",
          "methodAnnotations": [
            "@Test"
          ]
        }
      },
      {
        "type": "VERIFICATION",
        "code": "verify(conn, times(0)).commit();",
        "line": 87,
        "locate": "Test Case",
        "locationContext": {
          "methodName": "testRollback",
          "methodAnnotations": [
            "@Test"
          ]
        }
      },
      {
        "type": "VERIFICATION",
        "code": "verify(conn, times(1)).rollback();",
        "line": 88,
        "locate": "Test Case",
        "locationContext": {
          "methodName": "testRollback",
          "methodAnnotations": [
            "@Test"
          ]
        }
      },
      {
        "type": "VERIFICATION",
        "code": "verify(conn, times(1)).close();",
        "line": 89,
        "locate": "Test Case",
        "locationContext": {
          "methodName": "testRollback",
          "methodAnnotations": [
            "@Test"
          ]
        }
      },
      {
        "type": "VERIFICATION",
        "code": "verify(conn).setAutoCommit(false);",
        "line": 108,
        "locate": "Test Case",
        "locationContext": {
          "methodName": "testRollbackWithException",
          "methodAnnotations": [
            "@Test"
          ]
        }
      },
      {
        "type": "VERIFICATION",
        "code": "verify(conn, times(0)).commit();",
        "line": 109,
        "locate": "Test Case",
        "locationContext": {
          "methodName": "testRollbackWithException",
          "methodAnnotations": [
            "@Test"
          ]
        }
      },
      {
        "type": "VERIFICATION",
        "code": "verify(conn, times(1)).rollback();",
        "line": 110,
        "locate": "Test Case",
        "locationContext": {
          "methodName": "testRollbackWithException",
          "methodAnnotations": [
            "@Test"
          ]
        }
      },
      {
        "type": "VERIFICATION",
        "code": "verify(conn, times(1)).close();",
        "line": 111,
        "locate": "Test Case",
        "locationContext": {
          "methodName": "testRollbackWithException",
          "methodAnnotations": [
            "@Test"
          ]
        }
      },
      {
        "type": "VERIFICATION",
        "code": "verify(conn).setAutoCommit(false);",
        "line": 125,
        "locate": "Test Case",
        "locationContext": {
          "methodName": "testWithExceptionNoReturn",
          "methodAnnotations": [
            "@Test"
          ]
        }
      },
      {
        "type": "VERIFICATION",
        "code": "verify(conn, times(1)).commit();",
        "line": 126,
        "locate": "Test Case",
        "locationContext": {
          "methodName": "testWithExceptionNoReturn",
          "methodAnnotations": [
            "@Test"
          ]
        }
      },
      {
        "type": "VERIFICATION",
        "code": "verify(conn, times(0)).rollback();",
        "line": 127,
        "locate": "Test Case",
        "locationContext": {
          "methodName": "testWithExceptionNoReturn",
          "methodAnnotations": [
            "@Test"
          ]
        }
      },
      {
        "type": "VERIFICATION",
        "code": "verify(conn, times(1)).close();",
        "line": 128,
        "locate": "Test Case",
        "locationContext": {
          "methodName": "testWithExceptionNoReturn",
          "methodAnnotations": [
            "@Test"
          ]
        }
      }
    ],
    "pattern_id": 61
  }
]