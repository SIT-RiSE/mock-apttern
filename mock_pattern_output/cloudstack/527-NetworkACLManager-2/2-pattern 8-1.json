[
  {
    "variableName": "networkAclManagerMock",
    "variableType": "NetworkACLManager",
    "mockedClass": "NetworkACLManager",
    "isReuseableMock": "Hybrid",
    "mockPattern": "Creation:\n\u2014 Attribute Mock Creation\n\nStubbing:\n\u2014 Test Case\n\nVerification:\n\u2014 Test Case",
    "classContext": {
      "packageName": "com.cloud.network.vpc",
      "filePath": "C:\\java tool\\Apache\\cloudstack\\server\\src\\test\\java\\com\\cloud\\network\\vpc\\NetworkACLServiceImplTest.java",
      "className": "NetworkACLServiceImplTest"
    },
    "statements": [
      {
        "type": "FIELD_MOCK_CREATION",
        "code": "@Mock\r\nprivate NetworkACLManager networkAclManagerMock;",
        "line": 79,
        "locate": "Attribute",
        "locationContext": {
          "methodName": "[FieldDeclaration]",
          "methodAnnotations": [
            "@Mock"
          ]
        }
      },
      {
        "type": "STUBBING",
        "code": "Mockito.when(networkAclManagerMock.getNetworkACL(networkAclMockId)).thenReturn(networkAclMock);",
        "line": 166,
        "locate": "Test Case",
        "locationContext": {
          "methodName": "createNetworkACLItemTestForNumberAndExecuteTest",
          "methodAnnotations": []
        }
      },
      {
        "type": "STUBBING",
        "code": "Mockito.when(networkAclManagerMock.createNetworkACLItem(Mockito.any(NetworkACLItemVO.class))).thenAnswer(new Answer<NetworkACLItemVO>() {\r\n\r\n    @Override\r\n    public NetworkACLItemVO answer(InvocationOnMock invocation) throws Throwable {\r\n        return (NetworkACLItemVO) invocation.getArguments()[0];\r\n    }\r\n});",
        "line": 175,
        "locate": "Test Case",
        "locationContext": {
          "methodName": "createNetworkACLItemTestForNumberAndExecuteTest",
          "methodAnnotations": []
        }
      },
      {
        "type": "VERIFICATION",
        "code": "inOrder.verify(networkAclManagerMock).getNetworkACL(networkAclMockId);",
        "line": 188,
        "locate": "Test Case",
        "locationContext": {
          "methodName": "createNetworkACLItemTestForNumberAndExecuteTest",
          "methodAnnotations": []
        }
      },
      {
        "type": "VERIFICATION",
        "code": "inOrder.verify(networkAclManagerMock).createNetworkACLItem(Mockito.any(NetworkACLItemVO.class));",
        "line": 194,
        "locate": "Test Case",
        "locationContext": {
          "methodName": "createNetworkACLItemTestForNumberAndExecuteTest",
          "methodAnnotations": []
        }
      },
      {
        "type": "VERIFICATION",
        "code": "inOrder.verify(networkAclManagerMock).getNetworkACL(networkAclMockId);",
        "line": 722,
        "locate": "Test Case",
        "locationContext": {
          "methodName": "updateNetworkACLItemTest",
          "methodAnnotations": [
            "@Test"
          ]
        }
      },
      {
        "type": "VERIFICATION",
        "code": "inOrder.verify(networkAclManagerMock).updateNetworkACLItem(networkAclItemVoMock);",
        "line": 726,
        "locate": "Test Case",
        "locationContext": {
          "methodName": "updateNetworkACLItemTest",
          "methodAnnotations": [
            "@Test"
          ]
        }
      }
    ],
    "pattern_id": 8
  }
]