[
  {
    "variableName": "userDao",
    "variableType": "UserDao",
    "mockedClass": "UserDao",
    "isReuseableMock": "Hybrid",
    "mockPattern": "Creation:\n\u2014 Attribute Mock Creation\n\nStubbing:\n\u2014 Test Case\n\nVerification:\n\u2014 Test Case",
    "classContext": {
      "packageName": "org.apache.cloudstack",
      "filePath": "C:\\java tool\\Apache\\cloudstack\\plugins\\user-authenticators\\saml2\\src\\test\\java\\org\\apache\\cloudstack\\SAML2AuthManagerImplTest.java",
      "className": "SAML2AuthManagerImplTest"
    },
    "statements": [
      {
        "type": "FIELD_MOCK_CREATION",
        "code": "@Mock\r\nprivate UserDao userDao;",
        "line": 50,
        "locate": "Attribute",
        "locationContext": {
          "methodName": "[FieldDeclaration]",
          "methodAnnotations": [
            "@Mock"
          ]
        }
      },
      {
        "type": "STUBBING",
        "code": "Mockito.when(userDao.getUser(Mockito.anyLong())).thenReturn(user);",
        "line": 92,
        "locate": "Test Case",
        "locationContext": {
          "methodName": "testIsUserAuthorized",
          "methodAnnotations": [
            "@Test"
          ]
        }
      },
      {
        "type": "STUBBING",
        "code": "Mockito.when(userDao.getUser(Mockito.anyLong())).thenReturn(user);",
        "line": 97,
        "locate": "Test Case",
        "locationContext": {
          "methodName": "testIsUserAuthorized",
          "methodAnnotations": [
            "@Test"
          ]
        }
      },
      {
        "type": "STUBBING",
        "code": "Mockito.when(userDao.getUser(Mockito.anyLong())).thenReturn(user);",
        "line": 102,
        "locate": "Test Case",
        "locationContext": {
          "methodName": "testIsUserAuthorized",
          "methodAnnotations": [
            "@Test"
          ]
        }
      },
      {
        "type": "STUBBING",
        "code": "// Test invalid user\r\nMockito.when(userDao.getUser(Mockito.anyLong())).thenReturn(null);",
        "line": 109,
        "locate": "Test Case",
        "locationContext": {
          "methodName": "testAuthorizeUser",
          "methodAnnotations": [
            "@Test"
          ]
        }
      },
      {
        "type": "STUBBING",
        "code": "Mockito.when(userDao.getUser(Mockito.anyLong())).thenReturn(user);",
        "line": 115,
        "locate": "Test Case",
        "locationContext": {
          "methodName": "testAuthorizeUser",
          "methodAnnotations": [
            "@Test"
          ]
        }
      },
      {
        "type": "VERIFICATION",
        "code": "Mockito.verify(userDao, Mockito.atLeastOnce()).update(Mockito.anyLong(), Mockito.any(user.getClass()));",
        "line": 117,
        "locate": "Test Case",
        "locationContext": {
          "methodName": "testAuthorizeUser",
          "methodAnnotations": [
            "@Test"
          ]
        }
      }
    ],
    "pattern_id": 8
  }
]