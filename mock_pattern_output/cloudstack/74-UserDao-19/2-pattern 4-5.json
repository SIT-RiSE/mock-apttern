[
  {
    "variableName": "userDao",
    "variableType": "UserDao",
    "mockedClass": "UserDao",
    "isReuseableMock": false,
    "mockPattern": "Creation:\n\u2014 Attribute Mock Creation\n\nStubbing:\n\u2014 Test Case\n\nVerification:\n\u2014 None",
    "classContext": {
      "packageName": "org.apache.cloudstack.quota",
      "filePath": "C:\\java tool\\Apache\\cloudstack\\framework\\quota\\src\\test\\java\\org\\apache\\cloudstack\\quota\\QuotaAlertManagerImplTest.java",
      "className": "QuotaAlertManagerImplTest"
    },
    "statements": [
      {
        "type": "FIELD_MOCK_CREATION",
        "code": "@Mock\r\nprivate UserDao userDao;",
        "line": 65,
        "locate": "Attribute",
        "locationContext": {
          "methodName": "[FieldDeclaration]",
          "methodAnnotations": [
            "@Mock"
          ]
        }
      },
      {
        "type": "STUBBING",
        "code": "Mockito.when(userDao.listByAccount(Mockito.anyLong())).thenReturn(users);",
        "line": 157,
        "locate": "Test Case",
        "locationContext": {
          "methodName": "testSendQuotaAlert",
          "methodAnnotations": [
            "@Test"
          ]
        }
      }
    ],
    "pattern_id": 4
  },
  {
    "variableName": "userDao",
    "variableType": "UserDao",
    "mockedClass": "UserDao",
    "isReuseableMock": false,
    "mockPattern": "Creation:\n\u2014 Attribute Mock Creation\n\nStubbing:\n\u2014 Test Case\n\nVerification:\n\u2014 None",
    "classContext": {
      "packageName": "org.apache.cloudstack.api.command",
      "filePath": "C:\\java tool\\Apache\\cloudstack\\plugins\\user-authenticators\\saml2\\src\\test\\java\\org\\apache\\cloudstack\\api\\command\\ListAndSwitchSAMLAccountCmdTest.java",
      "className": "ListAndSwitchSAMLAccountCmdTest"
    },
    "statements": [
      {
        "type": "FIELD_MOCK_CREATION",
        "code": "@Mock\r\nUserDao userDao;",
        "line": 77,
        "locate": "Attribute",
        "locationContext": {
          "methodName": "[FieldDeclaration]",
          "methodAnnotations": [
            "@Mock"
          ]
        }
      },
      {
        "type": "STUBBING",
        "code": "Mockito.when(userDao.findByUuid(anyString())).thenReturn(new UserVO(2L));",
        "line": 105,
        "locate": "Test Case",
        "locationContext": {
          "methodName": "testListAndSwitchSAMLAccountCmd",
          "methodAnnotations": [
            "@Test"
          ]
        }
      }
    ],
    "pattern_id": 4
  },
  {
    "variableName": "userDao",
    "variableType": "UserDao",
    "mockedClass": "UserDao",
    "isReuseableMock": false,
    "mockPattern": "Creation:\n\u2014 Attribute Mock Creation\n\nStubbing:\n\u2014 Test Case\n\nVerification:\n\u2014 None",
    "classContext": {
      "packageName": "org.apache.cloudstack",
      "filePath": "C:\\java tool\\Apache\\cloudstack\\plugins\\user-authenticators\\saml2\\src\\test\\java\\org\\apache\\cloudstack\\SAML2UserAuthenticatorTest.java",
      "className": "SAML2UserAuthenticatorTest"
    },
    "statements": [
      {
        "type": "FIELD_MOCK_CREATION",
        "code": "@Mock\r\nUserDao userDao;",
        "line": 47,
        "locate": "Attribute",
        "locationContext": {
          "methodName": "[FieldDeclaration]",
          "methodAnnotations": [
            "@Mock"
          ]
        }
      },
      {
        "type": "STUBBING",
        "code": "Mockito.lenient().when(userDao.getUser(Mockito.anyLong())).thenReturn(user);",
        "line": 73,
        "locate": "Test Case",
        "locationContext": {
          "methodName": "authenticate",
          "methodAnnotations": [
            "@Test"
          ]
        }
      }
    ],
    "pattern_id": 4
  },
  {
    "variableName": "userDao",
    "variableType": "UserDao",
    "mockedClass": "UserDao",
    "isReuseableMock": false,
    "mockPattern": "Creation:\n\u2014 Attribute Mock Creation\n\nStubbing:\n\u2014 Test Case\n\nVerification:\n\u2014 None",
    "classContext": {
      "packageName": "com.cloud.network.as",
      "filePath": "C:\\java tool\\Apache\\cloudstack\\server\\src\\test\\java\\com\\cloud\\network\\as\\AutoScaleManagerImplTest.java",
      "className": "AutoScaleManagerImplTest"
    },
    "statements": [
      {
        "type": "FIELD_MOCK_CREATION",
        "code": "@Mock\r\nUserDao userDao;",
        "line": 216,
        "locate": "Attribute",
        "locationContext": {
          "methodName": "[FieldDeclaration]",
          "methodAnnotations": [
            "@Mock"
          ]
        }
      },
      {
        "type": "STUBBING",
        "code": "when(userDao.findById(any())).thenReturn(userMock);",
        "line": 869,
        "locate": "Test Case",
        "locationContext": {
          "methodName": "testCheckAutoScaleUserSucceed",
          "methodAnnotations": [
            "@Test"
          ]
        }
      },
      {
        "type": "STUBBING",
        "code": "when(userDao.findById(any())).thenReturn(userMock);",
        "line": 883,
        "locate": "Test Case",
        "locationContext": {
          "methodName": "testCheckAutoScaleUserFail1",
          "methodAnnotations": [
            "@Test"
          ]
        }
      },
      {
        "type": "STUBBING",
        "code": "when(userDao.findById(any())).thenReturn(userMock);",
        "line": 893,
        "locate": "Test Case",
        "locationContext": {
          "methodName": "testCheckAutoScaleUserFail2",
          "methodAnnotations": [
            "@Test"
          ]
        }
      },
      {
        "type": "STUBBING",
        "code": "when(userDao.findById(any())).thenReturn(userMock);",
        "line": 902,
        "locate": "Test Case",
        "locationContext": {
          "methodName": "testCheckAutoScaleUserFail3",
          "methodAnnotations": [
            "@Test"
          ]
        }
      },
      {
        "type": "STUBBING",
        "code": "when(userDao.findById(any())).thenReturn(null);",
        "line": 910,
        "locate": "Test Case",
        "locationContext": {
          "methodName": "testCheckAutoScaleUserFail4",
          "methodAnnotations": [
            "@Test"
          ]
        }
      },
      {
        "type": "STUBBING",
        "code": "when(userDao.findById(any())).thenReturn(userMock);",
        "line": 917,
        "locate": "Test Case",
        "locationContext": {
          "methodName": "testCheckAutoScaleUserFail5",
          "methodAnnotations": [
            "@Test"
          ]
        }
      }
    ],
    "pattern_id": 4
  },
  {
    "variableName": "userDao",
    "variableType": "UserDao",
    "mockedClass": "UserDao",
    "isReuseableMock": false,
    "mockPattern": "Creation:\n\u2014 Attribute Mock Creation\n\nStubbing:\n\u2014 Test Case\n\nVerification:\n\u2014 None",
    "classContext": {
      "packageName": "com.cloud.network",
      "filePath": "C:\\java tool\\Apache\\cloudstack\\server\\src\\test\\java\\com\\cloud\\network\\NetworkServiceImplTest.java",
      "className": "NetworkServiceImplTest"
    },
    "statements": [
      {
        "type": "FIELD_MOCK_CREATION",
        "code": "@Mock\r\nUserDao userDao;",
        "line": 138,
        "locate": "Attribute",
        "locationContext": {
          "methodName": "[FieldDeclaration]",
          "methodAnnotations": [
            "@Mock"
          ]
        }
      },
      {
        "type": "STUBBING",
        "code": "Mockito.when(userDao.findById(anyLong())).thenReturn(userVO);",
        "line": 447,
        "locate": "Test Case",
        "locationContext": {
          "methodName": "testUpdateSharedNetworkMtus",
          "methodAnnotations": [
            "@Test"
          ]
        }
      }
    ],
    "pattern_id": 4
  }
]