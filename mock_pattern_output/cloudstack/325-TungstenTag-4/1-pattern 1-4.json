[
  {
    "variableName": "tungstenTag",
    "variableType": "TungstenTag",
    "mockedClass": "TungstenTag",
    "isReuseableMock": false,
    "mockPattern": "Creation:\n\u2014 Local Mock Creation in Test Case\n\nStubbing:\n\u2014 Test Case\n\nVerification:\n\u2014 None",
    "classContext": {
      "packageName": "org.apache.cloudstack.network.tungsten.service",
      "filePath": "C:\\java tool\\Apache\\cloudstack\\plugins\\network-elements\\tungsten\\src\\test\\java\\org\\apache\\cloudstack\\network\\tungsten\\service\\TungstenServiceImplTest.java",
      "className": "TungstenServiceImplTest"
    },
    "statements": [
      {
        "type": "DECLARATION",
        "code": "TungstenTag tungstenTag = mock(TungstenTag.class);",
        "line": 1136,
        "locate": "Test Case",
        "locationContext": {
          "methodName": "createTungstenTagTest",
          "methodAnnotations": [
            "@Test"
          ]
        }
      },
      {
        "type": "STUBBING",
        "code": "when(tungstenTag.getTag()).thenReturn(tag);",
        "line": 1148,
        "locate": "Test Case",
        "locationContext": {
          "methodName": "createTungstenTagTest",
          "methodAnnotations": [
            "@Test"
          ]
        }
      }
    ],
    "pattern_id": 1
  },
  {
    "variableName": "tungstenTag",
    "variableType": "TungstenTag",
    "mockedClass": "TungstenTag",
    "isReuseableMock": false,
    "mockPattern": "Creation:\n\u2014 Local Mock Creation in Test Case\n\nStubbing:\n\u2014 Test Case\n\nVerification:\n\u2014 None",
    "classContext": {
      "packageName": "org.apache.cloudstack.network.tungsten.service",
      "filePath": "C:\\java tool\\Apache\\cloudstack\\plugins\\network-elements\\tungsten\\src\\test\\java\\org\\apache\\cloudstack\\network\\tungsten\\service\\TungstenServiceImplTest.java",
      "className": "TungstenServiceImplTest"
    },
    "statements": [
      {
        "type": "DECLARATION",
        "code": "TungstenTag tungstenTag = mock(TungstenTag.class);",
        "line": 1174,
        "locate": "Test Case",
        "locationContext": {
          "methodName": "listTungstenTagsTest",
          "methodAnnotations": [
            "@Test"
          ]
        }
      },
      {
        "type": "STUBBING",
        "code": "when(tungstenTag.getTag()).thenReturn(tag);",
        "line": 1187,
        "locate": "Test Case",
        "locationContext": {
          "methodName": "listTungstenTagsTest",
          "methodAnnotations": [
            "@Test"
          ]
        }
      }
    ],
    "pattern_id": 1
  },
  {
    "variableName": "tungstenTag",
    "variableType": "TungstenTag",
    "mockedClass": "TungstenTag",
    "isReuseableMock": false,
    "mockPattern": "Creation:\n\u2014 Local Mock Creation in Test Case\n\nStubbing:\n\u2014 Test Case\n\nVerification:\n\u2014 None",
    "classContext": {
      "packageName": "org.apache.cloudstack.network.tungsten.service",
      "filePath": "C:\\java tool\\Apache\\cloudstack\\plugins\\network-elements\\tungsten\\src\\test\\java\\org\\apache\\cloudstack\\network\\tungsten\\service\\TungstenServiceImplTest.java",
      "className": "TungstenServiceImplTest"
    },
    "statements": [
      {
        "type": "DECLARATION",
        "code": "TungstenTag tungstenTag = mock(TungstenTag.class);",
        "line": 1254,
        "locate": "Test Case",
        "locationContext": {
          "methodName": "applyTungstenTagTest",
          "methodAnnotations": [
            "@Test"
          ]
        }
      },
      {
        "type": "STUBBING",
        "code": "when(tungstenTag.getTag()).thenReturn(tag);",
        "line": 1266,
        "locate": "Test Case",
        "locationContext": {
          "methodName": "applyTungstenTagTest",
          "methodAnnotations": [
            "@Test"
          ]
        }
      },
      {
        "type": "STUBBING",
        "code": "when(tungstenTag.getNetworkPolicyList()).thenReturn(List.of(networkPolicy));",
        "line": 1267,
        "locate": "Test Case",
        "locationContext": {
          "methodName": "applyTungstenTagTest",
          "methodAnnotations": [
            "@Test"
          ]
        }
      },
      {
        "type": "STUBBING",
        "code": "when(tungstenTag.getVirtualNetworkList()).thenReturn(List.of(virtualNetwork));",
        "line": 1268,
        "locate": "Test Case",
        "locationContext": {
          "methodName": "applyTungstenTagTest",
          "methodAnnotations": [
            "@Test"
          ]
        }
      },
      {
        "type": "STUBBING",
        "code": "when(tungstenTag.getVirtualMachineList()).thenReturn(List.of(virtualMachine));",
        "line": 1269,
        "locate": "Test Case",
        "locationContext": {
          "methodName": "applyTungstenTagTest",
          "methodAnnotations": [
            "@Test"
          ]
        }
      },
      {
        "type": "STUBBING",
        "code": "when(tungstenTag.getVirtualMachineInterfaceList()).thenReturn(List.of(virtualMachineInterface));",
        "line": 1270,
        "locate": "Test Case",
        "locationContext": {
          "methodName": "applyTungstenTagTest",
          "methodAnnotations": [
            "@Test"
          ]
        }
      }
    ],
    "pattern_id": 1
  },
  {
    "variableName": "tungstenTag",
    "variableType": "TungstenTag",
    "mockedClass": "TungstenTag",
    "isReuseableMock": false,
    "mockPattern": "Creation:\n\u2014 Local Mock Creation in Test Case\n\nStubbing:\n\u2014 Test Case\n\nVerification:\n\u2014 None",
    "classContext": {
      "packageName": "org.apache.cloudstack.network.tungsten.service",
      "filePath": "C:\\java tool\\Apache\\cloudstack\\plugins\\network-elements\\tungsten\\src\\test\\java\\org\\apache\\cloudstack\\network\\tungsten\\service\\TungstenServiceImplTest.java",
      "className": "TungstenServiceImplTest"
    },
    "statements": [
      {
        "type": "DECLARATION",
        "code": "TungstenTag tungstenTag = mock(TungstenTag.class);",
        "line": 1298,
        "locate": "Test Case",
        "locationContext": {
          "methodName": "removeTungstenTagTest",
          "methodAnnotations": [
            "@Test"
          ]
        }
      },
      {
        "type": "STUBBING",
        "code": "when(tungstenTag.getTag()).thenReturn(tag);",
        "line": 1310,
        "locate": "Test Case",
        "locationContext": {
          "methodName": "removeTungstenTagTest",
          "methodAnnotations": [
            "@Test"
          ]
        }
      },
      {
        "type": "STUBBING",
        "code": "when(tungstenTag.getNetworkPolicyList()).thenReturn(List.of(networkPolicy));",
        "line": 1311,
        "locate": "Test Case",
        "locationContext": {
          "methodName": "removeTungstenTagTest",
          "methodAnnotations": [
            "@Test"
          ]
        }
      },
      {
        "type": "STUBBING",
        "code": "when(tungstenTag.getVirtualNetworkList()).thenReturn(List.of(virtualNetwork));",
        "line": 1312,
        "locate": "Test Case",
        "locationContext": {
          "methodName": "removeTungstenTagTest",
          "methodAnnotations": [
            "@Test"
          ]
        }
      },
      {
        "type": "STUBBING",
        "code": "when(tungstenTag.getVirtualMachineList()).thenReturn(List.of(virtualMachine));",
        "line": 1313,
        "locate": "Test Case",
        "locationContext": {
          "methodName": "removeTungstenTagTest",
          "methodAnnotations": [
            "@Test"
          ]
        }
      },
      {
        "type": "STUBBING",
        "code": "when(tungstenTag.getVirtualMachineInterfaceList()).thenReturn(List.of(virtualMachineInterface));",
        "line": 1314,
        "locate": "Test Case",
        "locationContext": {
          "methodName": "removeTungstenTagTest",
          "methodAnnotations": [
            "@Test"
          ]
        }
      }
    ],
    "pattern_id": 1
  }
]