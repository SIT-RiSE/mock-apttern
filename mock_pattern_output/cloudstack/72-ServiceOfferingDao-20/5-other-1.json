[
  {
    "variableName": "_serviceOfferingDao",
    "variableType": "ServiceOfferingDao",
    "mockedClass": "ServiceOfferingDao",
    "isReuseableMock": null,
    "mockPattern": "Creation:\n\u2014 Attribute Mock Creation\n\nStubbing:\n\u2014 Test Case\n\u2014 Helper Method\n\nVerification:\n\u2014 None",
    "classContext": {
      "packageName": "com.cloud.vm",
      "filePath": "C:\\java tool\\Apache\\cloudstack\\server\\src\\test\\java\\com\\cloud\\vm\\UserVmManagerImplTest.java",
      "className": "UserVmManagerImplTest"
    },
    "statements": [
      {
        "type": "FIELD_MOCK_CREATION",
        "code": "@Mock\r\nprivate ServiceOfferingDao _serviceOfferingDao;",
        "line": 110,
        "locate": "Attribute",
        "locationContext": {
          "methodName": "[FieldDeclaration]",
          "methodAnnotations": [
            "@Mock"
          ]
        }
      },
      {
        "type": "STUBBING",
        "code": "Mockito.lenient().when(_serviceOfferingDao.findById(Mockito.anyLong(), Mockito.anyLong())).thenReturn((ServiceOfferingVO) offering);",
        "line": 283,
        "locate": "Test Case",
        "locationContext": {
          "methodName": "validateInputsAndPermissionForUpdateVirtualMachineCommandTest",
          "methodAnnotations": [
            "@Test",
            "@PrepareForTest"
          ]
        }
      },
      {
        "type": "STUBBING",
        "code": "Mockito.when(_serviceOfferingDao.findById(Mockito.anyLong(), Mockito.anyLong())).thenReturn((ServiceOfferingVO) offering);",
        "line": 295,
        "locate": "Test Case",
        "locationContext": {
          "methodName": "updateVirtualMachineTestDisplayChanged",
          "methodAnnotations": [
            "@Test"
          ]
        }
      },
      {
        "type": "STUBBING",
        "code": "Mockito.when(_serviceOfferingDao.findById(Mockito.anyLong(), Mockito.anyLong())).thenReturn((ServiceOfferingVO) offering);",
        "line": 310,
        "locate": "Test Case",
        "locationContext": {
          "methodName": "updateVirtualMachineTestCleanUpTrue",
          "methodAnnotations": [
            "@Test"
          ]
        }
      },
      {
        "type": "STUBBING",
        "code": "Mockito.when(_serviceOfferingDao.findById(Mockito.anyLong(), Mockito.anyLong())).thenReturn((ServiceOfferingVO) offering);",
        "line": 360,
        "locate": "Helper Method",
        "locationContext": {
          "methodName": "prepareAndExecuteMethodDealingWithDetails",
          "methodAnnotations": []
        }
      },
      {
        "type": "STUBBING",
        "code": "Mockito.when(_serviceOfferingDao.findByIdIncludingRemoved(Mockito.anyLong(), Mockito.anyLong())).thenReturn((ServiceOfferingVO) offering);",
        "line": 361,
        "locate": "Helper Method",
        "locationContext": {
          "methodName": "prepareAndExecuteMethodDealingWithDetails",
          "methodAnnotations": []
        }
      }
    ],
    "pattern_id": 30
  }
]