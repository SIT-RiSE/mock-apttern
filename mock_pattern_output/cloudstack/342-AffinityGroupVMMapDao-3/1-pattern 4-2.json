[
  {
    "variableName": "_affinityGroupVMMapDao",
    "variableType": "AffinityGroupVMMapDao",
    "mockedClass": "AffinityGroupVMMapDao",
    "isReuseableMock": "Hybrid",
    "mockPattern": "Creation:\n\u2014 Attribute Mock Creation\n\nStubbing:\n\u2014 Test Case\n\nVerification:\n\u2014 None",
    "classContext": {
      "packageName": "org.apache.cloudstack.affinity",
      "filePath": "C:\\java tool\\Apache\\cloudstack\\plugins\\affinity-group-processors\\non-strict-host-affinity\\src\\test\\java\\org\\apache\\cloudstack\\affinity\\NonStrictHostAffinityProcessorTest.java",
      "className": "NonStrictHostAffinityProcessorTest"
    },
    "statements": [
      {
        "type": "FIELD_MOCK_CREATION",
        "code": "@Mock\r\nAffinityGroupVMMapDao _affinityGroupVMMapDao;",
        "line": 58,
        "locate": "Attribute",
        "locationContext": {
          "methodName": "[FieldDeclaration]",
          "methodAnnotations": [
            "@Mock"
          ]
        }
      },
      {
        "type": "STUBBING",
        "code": "when(_affinityGroupVMMapDao.findByVmIdType(eq(vmId), nullable(String.class))).thenReturn(vmGroupMappings);",
        "line": 82,
        "locate": "Test Case",
        "locationContext": {
          "methodName": "testProcessWithEmptyPlan",
          "methodAnnotations": [
            "@Test"
          ]
        }
      },
      {
        "type": "STUBBING",
        "code": "when(_affinityGroupVMMapDao.listVmIdsByAffinityGroup(affinityGroupId)).thenReturn(groupVMIds);",
        "line": 91,
        "locate": "Test Case",
        "locationContext": {
          "methodName": "testProcessWithEmptyPlan",
          "methodAnnotations": [
            "@Test"
          ]
        }
      },
      {
        "type": "STUBBING",
        "code": "when(_affinityGroupVMMapDao.findByVmIdType(eq(vmId), nullable(String.class))).thenReturn(vmGroupMappings);",
        "line": 112,
        "locate": "Test Case",
        "locationContext": {
          "methodName": "testProcessWithPlan",
          "methodAnnotations": [
            "@Test"
          ]
        }
      },
      {
        "type": "STUBBING",
        "code": "when(_affinityGroupVMMapDao.listVmIdsByAffinityGroup(affinityGroupId)).thenReturn(groupVMIds);",
        "line": 123,
        "locate": "Test Case",
        "locationContext": {
          "methodName": "testProcessWithPlan",
          "methodAnnotations": [
            "@Test"
          ]
        }
      },
      {
        "type": "STUBBING",
        "code": "when(_affinityGroupVMMapDao.findByVmIdType(eq(vmId), nullable(String.class))).thenReturn(vmGroupMappings);",
        "line": 149,
        "locate": "Test Case",
        "locationContext": {
          "methodName": "testProcessWithNotRunningVM",
          "methodAnnotations": [
            "@Test"
          ]
        }
      },
      {
        "type": "STUBBING",
        "code": "when(_affinityGroupVMMapDao.listVmIdsByAffinityGroup(affinityGroupId)).thenReturn(groupVMIds);",
        "line": 158,
        "locate": "Test Case",
        "locationContext": {
          "methodName": "testProcessWithNotRunningVM",
          "methodAnnotations": [
            "@Test"
          ]
        }
      }
    ],
    "pattern_id": 4
  },
  {
    "variableName": "_affinityGroupVMMapDao",
    "variableType": "AffinityGroupVMMapDao",
    "mockedClass": "AffinityGroupVMMapDao",
    "isReuseableMock": "Hybrid",
    "mockPattern": "Creation:\n\u2014 Attribute Mock Creation\n\nStubbing:\n\u2014 Test Case\n\nVerification:\n\u2014 None",
    "classContext": {
      "packageName": "org.apache.cloudstack.affinity",
      "filePath": "C:\\java tool\\Apache\\cloudstack\\plugins\\affinity-group-processors\\non-strict-host-anti-affinity\\src\\test\\java\\org\\apache\\cloudstack\\affinity\\NonStrictHostAntiAffinityProcessorTest.java",
      "className": "NonStrictHostAntiAffinityProcessorTest"
    },
    "statements": [
      {
        "type": "FIELD_MOCK_CREATION",
        "code": "@Mock\r\nAffinityGroupVMMapDao _affinityGroupVMMapDao;",
        "line": 57,
        "locate": "Attribute",
        "locationContext": {
          "methodName": "[FieldDeclaration]",
          "methodAnnotations": [
            "@Mock"
          ]
        }
      },
      {
        "type": "STUBBING",
        "code": "when(_affinityGroupVMMapDao.findByVmIdType(eq(vmId), nullable(String.class))).thenReturn(vmGroupMappings);",
        "line": 81,
        "locate": "Test Case",
        "locationContext": {
          "methodName": "testProcessWithEmptyPlan",
          "methodAnnotations": [
            "@Test"
          ]
        }
      },
      {
        "type": "STUBBING",
        "code": "when(_affinityGroupVMMapDao.listVmIdsByAffinityGroup(affinityGroupId)).thenReturn(groupVMIds);",
        "line": 90,
        "locate": "Test Case",
        "locationContext": {
          "methodName": "testProcessWithEmptyPlan",
          "methodAnnotations": [
            "@Test"
          ]
        }
      },
      {
        "type": "STUBBING",
        "code": "when(_affinityGroupVMMapDao.findByVmIdType(eq(vmId), nullable(String.class))).thenReturn(vmGroupMappings);",
        "line": 111,
        "locate": "Test Case",
        "locationContext": {
          "methodName": "testProcessWithPlan",
          "methodAnnotations": [
            "@Test"
          ]
        }
      },
      {
        "type": "STUBBING",
        "code": "when(_affinityGroupVMMapDao.listVmIdsByAffinityGroup(affinityGroupId)).thenReturn(groupVMIds);",
        "line": 122,
        "locate": "Test Case",
        "locationContext": {
          "methodName": "testProcessWithPlan",
          "methodAnnotations": [
            "@Test"
          ]
        }
      },
      {
        "type": "STUBBING",
        "code": "when(_affinityGroupVMMapDao.findByVmIdType(eq(vmId), nullable(String.class))).thenReturn(vmGroupMappings);",
        "line": 148,
        "locate": "Test Case",
        "locationContext": {
          "methodName": "testProcessWithNotRunningVM",
          "methodAnnotations": [
            "@Test"
          ]
        }
      },
      {
        "type": "STUBBING",
        "code": "when(_affinityGroupVMMapDao.listVmIdsByAffinityGroup(affinityGroupId)).thenReturn(groupVMIds);",
        "line": 157,
        "locate": "Test Case",
        "locationContext": {
          "methodName": "testProcessWithNotRunningVM",
          "methodAnnotations": [
            "@Test"
          ]
        }
      }
    ],
    "pattern_id": 4
  }
]