[
  {
    "variableName": "affinityGroupVMMapDao",
    "variableType": "AffinityGroupVMMapDao",
    "mockedClass": "AffinityGroupVMMapDao",
    "isReuseableMock": false,
    "mockPattern": "Creation:\n\u2014 Attribute Mock Creation\n\nStubbing:\n\u2014 @Before\n\u2014 Test Case\n\nVerification:\n\u2014 None",
    "classContext": {
      "packageName": "org.apache.cloudstack.affinity",
      "filePath": "C:\\java tool\\Apache\\cloudstack\\plugins\\affinity-group-processors\\host-affinity\\src\\test\\java\\org\\apache\\cloudstack\\affinity\\HostAffinityProcessorTest.java",
      "className": "HostAffinityProcessorTest"
    },
    "statements": [
      {
        "type": "FIELD_MOCK_CREATION",
        "code": "@Mock\r\nAffinityGroupVMMapDao affinityGroupVMMapDao;",
        "line": 64,
        "locate": "Attribute",
        "locationContext": {
          "methodName": "[FieldDeclaration]",
          "methodAnnotations": [
            "@Mock"
          ]
        }
      },
      {
        "type": "STUBBING",
        "code": "when(affinityGroupVMMapDao.listVmIdsByAffinityGroup(AFFINITY_GROUP_ID)).thenReturn(new ArrayList<>(Arrays.asList(GROUP_VM_1_ID, GROUP_VM_2_ID, VM_ID)));",
        "line": 110,
        "locate": "@Before",
        "locationContext": {
          "methodName": "setup",
          "methodAnnotations": [
            "@Before"
          ]
        }
      },
      {
        "type": "STUBBING",
        "code": "when(affinityGroupVMMapDao.findByVmIdType(eq(VM_ID), any())).thenReturn(new ArrayList<>(Arrays.asList(mapVO)));",
        "line": 123,
        "locate": "@Before",
        "locationContext": {
          "methodName": "setup",
          "methodAnnotations": [
            "@Before"
          ]
        }
      },
      {
        "type": "STUBBING",
        "code": "when(affinityGroupVMMapDao.listVmIdsByAffinityGroup(AFFINITY_GROUP_ID)).thenReturn(new ArrayList<>());",
        "line": 134,
        "locate": "Test Case",
        "locationContext": {
          "methodName": "testProcessAffinityGroupEmptyGroup",
          "methodAnnotations": [
            "@Test"
          ]
        }
      }
    ],
    "pattern_id": 12
  }
]