[
  {
    "variableName": "kubernetesSupportedVersionDao",
    "variableType": "KubernetesSupportedVersionDao",
    "mockedClass": "KubernetesSupportedVersionDao",
    "isReuseableMock": false,
    "mockPattern": "Creation:\n\u2014 Attribute Mock Creation\n\nStubbing:\n\u2014 @Before\n\u2014 Test Case\n\nVerification:\n\u2014 None",
    "classContext": {
      "packageName": "com.cloud.kubernetes.version",
      "filePath": "C:\\java tool\\Apache\\cloudstack\\plugins\\integrations\\kubernetes-service\\src\\test\\java\\com\\cloud\\kubernetes\\version\\KubernetesVersionServiceTest.java",
      "className": "KubernetesVersionServiceTest"
    },
    "statements": [
      {
        "type": "FIELD_MOCK_CREATION",
        "code": "@Mock\r\nprivate KubernetesSupportedVersionDao kubernetesSupportedVersionDao;",
        "line": 80,
        "locate": "Attribute",
        "locationContext": {
          "methodName": "[FieldDeclaration]",
          "methodAnnotations": [
            "@Mock"
          ]
        }
      },
      {
        "type": "STUBBING",
        "code": "when(kubernetesSupportedVersionDao.createSearchBuilder()).thenReturn(versionSearchBuilder);",
        "line": 109,
        "locate": "@Before",
        "locationContext": {
          "methodName": "setUp",
          "methodAnnotations": [
            "@Before"
          ]
        }
      },
      {
        "type": "STUBBING",
        "code": "when(kubernetesSupportedVersionDao.createSearchCriteria()).thenReturn(versionSearchCriteria);",
        "line": 114,
        "locate": "@Before",
        "locationContext": {
          "methodName": "setUp",
          "methodAnnotations": [
            "@Before"
          ]
        }
      },
      {
        "type": "STUBBING",
        "code": "when(kubernetesSupportedVersionDao.persist(Mockito.any(KubernetesSupportedVersionVO.class))).thenReturn(versionVO);",
        "line": 128,
        "locate": "@Before",
        "locationContext": {
          "methodName": "setUp",
          "methodAnnotations": [
            "@Before"
          ]
        }
      },
      {
        "type": "STUBBING",
        "code": "when(kubernetesSupportedVersionDao.findById(Mockito.anyLong())).thenReturn(versionVO);",
        "line": 142,
        "locate": "Test Case",
        "locationContext": {
          "methodName": "listKubernetesSupportedVersionsTest",
          "methodAnnotations": [
            "@Test"
          ]
        }
      },
      {
        "type": "STUBBING",
        "code": "when(kubernetesSupportedVersionDao.search(Mockito.any(SearchCriteria.class), Mockito.any(Filter.class))).thenReturn(versionVOs);",
        "line": 143,
        "locate": "Test Case",
        "locationContext": {
          "methodName": "listKubernetesSupportedVersionsTest",
          "methodAnnotations": [
            "@Test"
          ]
        }
      },
      {
        "type": "STUBBING",
        "code": "when(kubernetesSupportedVersionDao.findById(Mockito.anyLong())).thenReturn(Mockito.mock(KubernetesSupportedVersionVO.class));",
        "line": 224,
        "locate": "Test Case",
        "locationContext": {
          "methodName": "deleteKubernetesSupportedVersionExistingClustersTest",
          "methodAnnotations": [
            "@Test"
          ]
        }
      },
      {
        "type": "STUBBING",
        "code": "when(kubernetesSupportedVersionDao.findById(Mockito.anyLong())).thenReturn(Mockito.mock(KubernetesSupportedVersionVO.class));",
        "line": 237,
        "locate": "Test Case",
        "locationContext": {
          "methodName": "deleteKubernetesSupportedVersionTest",
          "methodAnnotations": [
            "@Test"
          ]
        }
      },
      {
        "type": "STUBBING",
        "code": "when(kubernetesSupportedVersionDao.findById(Mockito.anyLong())).thenReturn(Mockito.mock(KubernetesSupportedVersionVO.class));",
        "line": 255,
        "locate": "Test Case",
        "locationContext": {
          "methodName": "updateKubernetesSupportedVersionTest",
          "methodAnnotations": [
            "@Test"
          ]
        }
      },
      {
        "type": "STUBBING",
        "code": "when(kubernetesSupportedVersionDao.createForUpdate(Mockito.anyLong())).thenReturn(version);",
        "line": 257,
        "locate": "Test Case",
        "locationContext": {
          "methodName": "updateKubernetesSupportedVersionTest",
          "methodAnnotations": [
            "@Test"
          ]
        }
      },
      {
        "type": "STUBBING",
        "code": "when(kubernetesSupportedVersionDao.update(Mockito.anyLong(), Mockito.any(KubernetesSupportedVersionVO.class))).thenReturn(true);",
        "line": 258,
        "locate": "Test Case",
        "locationContext": {
          "methodName": "updateKubernetesSupportedVersionTest",
          "methodAnnotations": [
            "@Test"
          ]
        }
      },
      {
        "type": "STUBBING",
        "code": "when(kubernetesSupportedVersionDao.findById(Mockito.anyLong())).thenReturn(version);",
        "line": 261,
        "locate": "Test Case",
        "locationContext": {
          "methodName": "updateKubernetesSupportedVersionTest",
          "methodAnnotations": [
            "@Test"
          ]
        }
      }
    ],
    "pattern_id": 12
  }
]