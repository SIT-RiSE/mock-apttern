[
  {
    "variableName": "citrixResourceBase",
    "variableType": "CitrixResourceBase",
    "mockedClass": "CitrixResourceBase",
    "isReuseableMock": false,
    "mockPattern": "Creation:\n\u2014 Attribute Mock Creation\n\nStubbing:\n\u2014 Test Case\n\nVerification:\n\u2014 Test Case",
    "classContext": {
      "packageName": "com.cloud.hypervisor.xenserver.resource.wrapper.xenbase",
      "filePath": "C:\\java tool\\Apache\\cloudstack\\plugins\\hypervisors\\xenserver\\src\\test\\java\\com\\cloud\\hypervisor\\xenserver\\resource\\wrapper\\xenbase\\CitrixRequestWrapperTest.java",
      "className": "CitrixRequestWrapperTest"
    },
    "statements": [
      {
        "type": "FIELD_MOCK_CREATION",
        "code": "@Mock\r\nprivate CitrixResourceBase citrixResourceBase;",
        "line": 152,
        "locate": "Attribute",
        "locationContext": {
          "methodName": "[FieldDeclaration]",
          "methodAnnotations": [
            "@Mock"
          ]
        }
      },
      {
        "type": "VERIFICATION",
        "code": "verify(citrixResourceBase, times(2)).getConnection();",
        "line": 186,
        "locate": "Test Case",
        "locationContext": {
          "methodName": "testExecuteRebootRouterCommand",
          "methodAnnotations": [
            "@Test"
          ]
        }
      },
      {
        "type": "VERIFICATION",
        "code": "verify(citrixResourceBase, times(1)).getConnection();",
        "line": 202,
        "locate": "Test Case",
        "locationContext": {
          "methodName": "testExecuteCreateCommand",
          "methodAnnotations": [
            "@Test"
          ]
        }
      },
      {
        "type": "VERIFICATION",
        "code": "verify(citrixResourceBase, times(1)).getConnection();",
        "line": 312,
        "locate": "Test Case",
        "locationContext": {
          "methodName": "testRebootCommand",
          "methodAnnotations": [
            "@Test"
          ]
        }
      },
      {
        "type": "VERIFICATION",
        "code": "verify(citrixResourceBase, times(1)).getConnection();",
        "line": 325,
        "locate": "Test Case",
        "locationContext": {
          "methodName": "testCheckVirtualMachineCommand",
          "methodAnnotations": [
            "@Test"
          ]
        }
      },
      {
        "type": "VERIFICATION",
        "code": "verify(citrixResourceBase, times(1)).getConnection();",
        "line": 339,
        "locate": "Test Case",
        "locationContext": {
          "methodName": "testPrepareForMigrationCommand",
          "methodAnnotations": [
            "@Test"
          ]
        }
      },
      {
        "type": "VERIFICATION",
        "code": "verify(citrixResourceBase, times(1)).getConnection();",
        "line": 353,
        "locate": "Test Case",
        "locationContext": {
          "methodName": "testMigrateCommand",
          "methodAnnotations": [
            "@Test"
          ]
        }
      },
      {
        "type": "VERIFICATION",
        "code": "verify(citrixResourceBase, times(1)).getConnection();",
        "line": 370,
        "locate": "Test Case",
        "locationContext": {
          "methodName": "testDestroyCommand",
          "methodAnnotations": [
            "@Test"
          ]
        }
      },
      {
        "type": "STUBBING",
        "code": "when(citrixResourceBase.getHost()).thenReturn(xsHost);",
        "line": 385,
        "locate": "Test Case",
        "locationContext": {
          "methodName": "testCreateStoragePoolCommand",
          "methodAnnotations": [
            "@Test"
          ]
        }
      },
      {
        "type": "VERIFICATION",
        "code": "verify(citrixResourceBase, times(1)).getConnection();",
        "line": 388,
        "locate": "Test Case",
        "locationContext": {
          "methodName": "testCreateStoragePoolCommand",
          "methodAnnotations": [
            "@Test"
          ]
        }
      },
      {
        "type": "STUBBING",
        "code": "when(citrixResourceBase.getHost()).thenReturn(xsHost);",
        "line": 403,
        "locate": "Test Case",
        "locationContext": {
          "methodName": "testModifyStoragePoolCommand",
          "methodAnnotations": [
            "@Test"
          ]
        }
      },
      {
        "type": "VERIFICATION",
        "code": "verify(citrixResourceBase, times(1)).getConnection();",
        "line": 406,
        "locate": "Test Case",
        "locationContext": {
          "methodName": "testModifyStoragePoolCommand",
          "methodAnnotations": [
            "@Test"
          ]
        }
      },
      {
        "type": "STUBBING",
        "code": "when(citrixResourceBase.getHost()).thenReturn(xsHost);",
        "line": 421,
        "locate": "Test Case",
        "locationContext": {
          "methodName": "testDeleteStoragePoolCommand",
          "methodAnnotations": [
            "@Test"
          ]
        }
      },
      {
        "type": "VERIFICATION",
        "code": "verify(citrixResourceBase, times(1)).getConnection();",
        "line": 424,
        "locate": "Test Case",
        "locationContext": {
          "methodName": "testDeleteStoragePoolCommand",
          "methodAnnotations": [
            "@Test"
          ]
        }
      },
      {
        "type": "VERIFICATION",
        "code": "verify(citrixResourceBase, times(1)).getConnection();",
        "line": 439,
        "locate": "Test Case",
        "locationContext": {
          "methodName": "testResizeVolumeCommand",
          "methodAnnotations": [
            "@Test"
          ]
        }
      },
      {
        "type": "VERIFICATION",
        "code": "verify(citrixResourceBase, times(1)).getConnection();",
        "line": 451,
        "locate": "Test Case",
        "locationContext": {
          "methodName": "testAttachIsoCommand",
          "methodAnnotations": [
            "@Test"
          ]
        }
      },
      {
        "type": "VERIFICATION",
        "code": "verify(citrixResourceBase, times(1)).getConnection();",
        "line": 467,
        "locate": "Test Case",
        "locationContext": {
          "methodName": "testUpgradeSnapshotCommand",
          "methodAnnotations": [
            "@Test"
          ]
        }
      },
      {
        "type": "VERIFICATION",
        "code": "verify(citrixResourceBase, times(0)).getConnection();",
        "line": 483,
        "locate": "Test Case",
        "locationContext": {
          "methodName": "testUpgradeSnapshotCommandNo21",
          "methodAnnotations": [
            "@Test"
          ]
        }
      },
      {
        "type": "STUBBING",
        "code": "when(citrixResourceBase.getHost()).thenReturn(xsHost);",
        "line": 498,
        "locate": "Test Case",
        "locationContext": {
          "methodName": "testGetStorageStatsCommand",
          "methodAnnotations": [
            "@Test"
          ]
        }
      },
      {
        "type": "VERIFICATION",
        "code": "verify(citrixResourceBase, times(1)).getConnection();",
        "line": 501,
        "locate": "Test Case",
        "locationContext": {
          "methodName": "testGetStorageStatsCommand",
          "methodAnnotations": [
            "@Test"
          ]
        }
      },
      {
        "type": "STUBBING",
        "code": "when(citrixResourceBase.getHost()).thenReturn(xsHost);",
        "line": 516,
        "locate": "Test Case",
        "locationContext": {
          "methodName": "testPrimaryStorageDownloadCommand",
          "methodAnnotations": [
            "@Test"
          ]
        }
      },
      {
        "type": "VERIFICATION",
        "code": "verify(citrixResourceBase, times(1)).getConnection();",
        "line": 519,
        "locate": "Test Case",
        "locationContext": {
          "methodName": "testPrimaryStorageDownloadCommand",
          "methodAnnotations": [
            "@Test"
          ]
        }
      },
      {
        "type": "VERIFICATION",
        "code": "verify(citrixResourceBase, times(1)).getConnection();",
        "line": 532,
        "locate": "Test Case",
        "locationContext": {
          "methodName": "testGetVncPortCommand",
          "methodAnnotations": [
            "@Test"
          ]
        }
      },
      {
        "type": "STUBBING",
        "code": "when(citrixResourceBase.getHost()).thenReturn(xsHost);",
        "line": 547,
        "locate": "Test Case",
        "locationContext": {
          "methodName": "testSetupCommand",
          "methodAnnotations": [
            "@Test"
          ]
        }
      },
      {
        "type": "VERIFICATION",
        "code": "verify(citrixResourceBase, times(1)).getConnection();",
        "line": 550,
        "locate": "Test Case",
        "locationContext": {
          "methodName": "testSetupCommand",
          "methodAnnotations": [
            "@Test"
          ]
        }
      },
      {
        "type": "STUBBING",
        "code": "when(citrixResourceBase.getConnection()).thenReturn(conn);",
        "line": 578,
        "locate": "Test Case",
        "locationContext": {
          "methodName": "testMaintainCommand",
          "methodAnnotations": [
            "@Test"
          ]
        }
      },
      {
        "type": "STUBBING",
        "code": "when(citrixResourceBase.getHost()).thenReturn(xsHost);",
        "line": 579,
        "locate": "Test Case",
        "locationContext": {
          "methodName": "testMaintainCommand",
          "methodAnnotations": [
            "@Test"
          ]
        }
      },
      {
        "type": "VERIFICATION",
        "code": "verify(citrixResourceBase, times(1)).getConnection();",
        "line": 635,
        "locate": "Test Case",
        "locationContext": {
          "methodName": "testPingTestCommandHostIp",
          "methodAnnotations": [
            "@Test"
          ]
        }
      },
      {
        "type": "VERIFICATION",
        "code": "verify(citrixResourceBase, times(1)).getConnection();",
        "line": 649,
        "locate": "Test Case",
        "locationContext": {
          "methodName": "testPingTestCommandRouterPvtIps",
          "methodAnnotations": [
            "@Test"
          ]
        }
      },
      {
        "type": "VERIFICATION",
        "code": "verify(citrixResourceBase, times(1)).getConnection();",
        "line": 691,
        "locate": "Test Case",
        "locationContext": {
          "methodName": "testStartCommand",
          "methodAnnotations": [
            "@Test"
          ]
        }
      },
      {
        "type": "STUBBING",
        "code": "when(citrixResourceBase.getConnection()).thenReturn(conn);",
        "line": 706,
        "locate": "Test Case",
        "locationContext": {
          "methodName": "testOvsSetTagAndFlowCommand",
          "methodAnnotations": [
            "@Test"
          ]
        }
      },
      {
        "type": "STUBBING",
        "code": "when(citrixResourceBase.setupvSwitchNetwork(conn)).thenReturn(network);",
        "line": 707,
        "locate": "Test Case",
        "locationContext": {
          "methodName": "testOvsSetTagAndFlowCommand",
          "methodAnnotations": [
            "@Test"
          ]
        }
      },
      {
        "type": "VERIFICATION",
        "code": "verify(citrixResourceBase, times(1)).getConnection();",
        "line": 720,
        "locate": "Test Case",
        "locationContext": {
          "methodName": "testOvsSetTagAndFlowCommand",
          "methodAnnotations": [
            "@Test"
          ]
        }
      },
      {
        "type": "VERIFICATION",
        "code": "verify(citrixResourceBase, times(1)).setupvSwitchNetwork(conn);",
        "line": 721,
        "locate": "Test Case",
        "locationContext": {
          "methodName": "testOvsSetTagAndFlowCommand",
          "methodAnnotations": [
            "@Test"
          ]
        }
      },
      {
        "type": "VERIFICATION",
        "code": "verify(citrixResourceBase, times(1)).setIsOvs(true);",
        "line": 722,
        "locate": "Test Case",
        "locationContext": {
          "methodName": "testOvsSetTagAndFlowCommand",
          "methodAnnotations": [
            "@Test"
          ]
        }
      },
      {
        "type": "VERIFICATION",
        "code": "verify(citrixResourceBase, times(1)).getConnection();",
        "line": 736,
        "locate": "Test Case",
        "locationContext": {
          "methodName": "testCheckSshCommand",
          "methodAnnotations": [
            "@Test"
          ]
        }
      },
      {
        "type": "STUBBING",
        "code": "when(citrixResourceBase.getConnection()).thenReturn(conn);",
        "line": 762,
        "locate": "Test Case",
        "locationContext": {
          "methodName": "testSecurityGroupRulesCommand",
          "methodAnnotations": [
            "@Test"
          ]
        }
      },
      {
        "type": "STUBBING",
        "code": "when(citrixResourceBase.getHost()).thenReturn(xsHost);",
        "line": 763,
        "locate": "Test Case",
        "locationContext": {
          "methodName": "testSecurityGroupRulesCommand",
          "methodAnnotations": [
            "@Test"
          ]
        }
      },
      {
        "type": "VERIFICATION",
        "code": "verify(citrixResourceBase, times(1)).getConnection();",
        "line": 767,
        "locate": "Test Case",
        "locationContext": {
          "methodName": "testSecurityGroupRulesCommand",
          "methodAnnotations": [
            "@Test"
          ]
        }
      },
      {
        "type": "STUBBING",
        "code": "when(citrixResourceBase.isXcp()).thenReturn(true);",
        "line": 790,
        "locate": "Test Case",
        "locationContext": {
          "methodName": "testOvsFetchInterfaceCommand",
          "methodAnnotations": [
            "@Test"
          ]
        }
      },
      {
        "type": "STUBBING",
        "code": "when(citrixResourceBase.getLabel()).thenReturn(\"[abc]\");",
        "line": 791,
        "locate": "Test Case",
        "locationContext": {
          "methodName": "testOvsFetchInterfaceCommand",
          "methodAnnotations": [
            "@Test"
          ]
        }
      },
      {
        "type": "STUBBING",
        "code": "when(citrixResourceBase.getConnection()).thenReturn(conn);",
        "line": 792,
        "locate": "Test Case",
        "locationContext": {
          "methodName": "testOvsFetchInterfaceCommand",
          "methodAnnotations": [
            "@Test"
          ]
        }
      },
      {
        "type": "STUBBING",
        "code": "when(citrixResourceBase.getHost()).thenReturn(xsHost);",
        "line": 793,
        "locate": "Test Case",
        "locationContext": {
          "methodName": "testOvsFetchInterfaceCommand",
          "methodAnnotations": [
            "@Test"
          ]
        }
      },
      {
        "type": "STUBBING",
        "code": "when(citrixResourceBase.getNetworkByName(conn, label)).thenReturn(network);",
        "line": 801,
        "locate": "Test Case",
        "locationContext": {
          "methodName": "testOvsFetchInterfaceCommand",
          "methodAnnotations": [
            "@Test"
          ]
        }
      },
      {
        "type": "VERIFICATION",
        "code": "verify(citrixResourceBase, times(1)).getConnection();",
        "line": 810,
        "locate": "Test Case",
        "locationContext": {
          "methodName": "testOvsFetchInterfaceCommand",
          "methodAnnotations": [
            "@Test"
          ]
        }
      },
      {
        "type": "STUBBING",
        "code": "when(citrixResourceBase.getConnection()).thenReturn(conn);",
        "line": 827,
        "locate": "Test Case",
        "locationContext": {
          "methodName": "testOvsCreateGreTunnelCommand",
          "methodAnnotations": [
            "@Test"
          ]
        }
      },
      {
        "type": "STUBBING",
        "code": "when(citrixResourceBase.getHost()).thenReturn(xsHost);",
        "line": 828,
        "locate": "Test Case",
        "locationContext": {
          "methodName": "testOvsCreateGreTunnelCommand",
          "methodAnnotations": [
            "@Test"
          ]
        }
      },
      {
        "type": "STUBBING",
        "code": "when(citrixResourceBase.setupvSwitchNetwork(conn)).thenReturn(network);",
        "line": 829,
        "locate": "Test Case",
        "locationContext": {
          "methodName": "testOvsCreateGreTunnelCommand",
          "methodAnnotations": [
            "@Test"
          ]
        }
      },
      {
        "type": "STUBBING",
        "code": "when(citrixResourceBase.callHostPlugin(conn, \"ovsgre\", \"ovs_create_gre\", \"bridge\", bridge, \"remoteIP\", createGreCommand.getRemoteIp(), \"greKey\", createGreCommand.getKey(), \"from\", Long.toString(createGreCommand.getFrom()), \"to\", Long.toString(createGreCommand.getTo()))).thenReturn(\"1:2\");",
        "line": 832,
        "locate": "Test Case",
        "locationContext": {
          "methodName": "testOvsCreateGreTunnelCommand",
          "methodAnnotations": [
            "@Test"
          ]
        }
      },
      {
        "type": "VERIFICATION",
        "code": "verify(citrixResourceBase, times(1)).getConnection();",
        "line": 847,
        "locate": "Test Case",
        "locationContext": {
          "methodName": "testOvsCreateGreTunnelCommand",
          "methodAnnotations": [
            "@Test"
          ]
        }
      },
      {
        "type": "VERIFICATION",
        "code": "verify(citrixResourceBase, times(1)).setIsOvs(true);",
        "line": 848,
        "locate": "Test Case",
        "locationContext": {
          "methodName": "testOvsCreateGreTunnelCommand",
          "methodAnnotations": [
            "@Test"
          ]
        }
      },
      {
        "type": "STUBBING",
        "code": "when(citrixResourceBase.getConnection()).thenReturn(conn);",
        "line": 864,
        "locate": "Test Case",
        "locationContext": {
          "methodName": "testOvsDeleteFlowCommandSuccess",
          "methodAnnotations": [
            "@Test"
          ]
        }
      },
      {
        "type": "STUBBING",
        "code": "when(citrixResourceBase.setupvSwitchNetwork(conn)).thenReturn(network);",
        "line": 865,
        "locate": "Test Case",
        "locationContext": {
          "methodName": "testOvsDeleteFlowCommandSuccess",
          "methodAnnotations": [
            "@Test"
          ]
        }
      },
      {
        "type": "STUBBING",
        "code": "when(citrixResourceBase.callHostPlugin(conn, \"ovsgre\", \"ovs_delete_flow\", \"bridge\", bridge, \"vmName\", deleteFlowCommand.getVmName())).thenReturn(\"SUCCESS\");",
        "line": 868,
        "locate": "Test Case",
        "locationContext": {
          "methodName": "testOvsDeleteFlowCommandSuccess",
          "methodAnnotations": [
            "@Test"
          ]
        }
      },
      {
        "type": "VERIFICATION",
        "code": "verify(citrixResourceBase, times(1)).getConnection();",
        "line": 880,
        "locate": "Test Case",
        "locationContext": {
          "methodName": "testOvsDeleteFlowCommandSuccess",
          "methodAnnotations": [
            "@Test"
          ]
        }
      },
      {
        "type": "VERIFICATION",
        "code": "verify(citrixResourceBase, times(1)).setIsOvs(true);",
        "line": 881,
        "locate": "Test Case",
        "locationContext": {
          "methodName": "testOvsDeleteFlowCommandSuccess",
          "methodAnnotations": [
            "@Test"
          ]
        }
      },
      {
        "type": "STUBBING",
        "code": "when(citrixResourceBase.getConnection()).thenReturn(conn);",
        "line": 897,
        "locate": "Test Case",
        "locationContext": {
          "methodName": "testOvsDeleteFlowCommandFailure",
          "methodAnnotations": [
            "@Test"
          ]
        }
      },
      {
        "type": "STUBBING",
        "code": "when(citrixResourceBase.setupvSwitchNetwork(conn)).thenReturn(network);",
        "line": 898,
        "locate": "Test Case",
        "locationContext": {
          "methodName": "testOvsDeleteFlowCommandFailure",
          "methodAnnotations": [
            "@Test"
          ]
        }
      },
      {
        "type": "STUBBING",
        "code": "when(citrixResourceBase.callHostPlugin(conn, \"ovsgre\", \"ovs_delete_flow\", \"bridge\", bridge, \"vmName\", deleteFlowCommand.getVmName())).thenReturn(\"FAILED\");",
        "line": 901,
        "locate": "Test Case",
        "locationContext": {
          "methodName": "testOvsDeleteFlowCommandFailure",
          "methodAnnotations": [
            "@Test"
          ]
        }
      },
      {
        "type": "VERIFICATION",
        "code": "verify(citrixResourceBase, times(1)).getConnection();",
        "line": 913,
        "locate": "Test Case",
        "locationContext": {
          "methodName": "testOvsDeleteFlowCommandFailure",
          "methodAnnotations": [
            "@Test"
          ]
        }
      },
      {
        "type": "VERIFICATION",
        "code": "verify(citrixResourceBase, times(1)).setIsOvs(true);",
        "line": 914,
        "locate": "Test Case",
        "locationContext": {
          "methodName": "testOvsDeleteFlowCommandFailure",
          "methodAnnotations": [
            "@Test"
          ]
        }
      },
      {
        "type": "STUBBING",
        "code": "when(citrixResourceBase.getConnection()).thenReturn(conn);",
        "line": 934,
        "locate": "Test Case",
        "locationContext": {
          "methodName": "testOvsVpcPhysicalTopologyConfigCommand",
          "methodAnnotations": [
            "@Test"
          ]
        }
      },
      {
        "type": "STUBBING",
        "code": "when(citrixResourceBase.findOrCreateTunnelNetwork(conn, physicalTopology.getBridgeName())).thenReturn(network);",
        "line": 936,
        "locate": "Test Case",
        "locationContext": {
          "methodName": "testOvsVpcPhysicalTopologyConfigCommand",
          "methodAnnotations": [
            "@Test"
          ]
        }
      },
      {
        "type": "STUBBING",
        "code": "when(citrixResourceBase.callHostPlugin(conn, \"ovstunnel\", \"configure_ovs_bridge_for_network_topology\", \"bridge\", bridge, \"config\", physicalTopology.getVpcConfigInJson(), \"host-id\", ((Long) physicalTopology.getHostId()).toString(), \"seq-no\", Long.toString(1))).thenReturn(\"SUCCESS\");",
        "line": 939,
        "locate": "Test Case",
        "locationContext": {
          "methodName": "testOvsVpcPhysicalTopologyConfigCommand",
          "methodAnnotations": [
            "@Test"
          ]
        }
      },
      {
        "type": "VERIFICATION",
        "code": "verify(citrixResourceBase, times(1)).getConnection();",
        "line": 954,
        "locate": "Test Case",
        "locationContext": {
          "methodName": "testOvsVpcPhysicalTopologyConfigCommand",
          "methodAnnotations": [
            "@Test"
          ]
        }
      },
      {
        "type": "STUBBING",
        "code": "when(citrixResourceBase.getConnection()).thenReturn(conn);",
        "line": 973,
        "locate": "Test Case",
        "locationContext": {
          "methodName": "testOvsVpcRoutingPolicyConfigCommand",
          "methodAnnotations": [
            "@Test"
          ]
        }
      },
      {
        "type": "STUBBING",
        "code": "when(citrixResourceBase.findOrCreateTunnelNetwork(conn, routingPolicy.getBridgeName())).thenReturn(network);",
        "line": 975,
        "locate": "Test Case",
        "locationContext": {
          "methodName": "testOvsVpcRoutingPolicyConfigCommand",
          "methodAnnotations": [
            "@Test"
          ]
        }
      },
      {
        "type": "STUBBING",
        "code": "when(citrixResourceBase.callHostPlugin(conn, \"ovstunnel\", \"configure_ovs_bridge_for_routing_policies\", \"bridge\", bridge, \"host-id\", ((Long) routingPolicy.getHostId()).toString(), \"config\", routingPolicy.getVpcConfigInJson(), \"seq-no\", Long.toString(1))).thenReturn(\"SUCCESS\");",
        "line": 978,
        "locate": "Test Case",
        "locationContext": {
          "methodName": "testOvsVpcRoutingPolicyConfigCommand",
          "methodAnnotations": [
            "@Test"
          ]
        }
      },
      {
        "type": "VERIFICATION",
        "code": "verify(citrixResourceBase, times(1)).getConnection();",
        "line": 993,
        "locate": "Test Case",
        "locationContext": {
          "methodName": "testOvsVpcRoutingPolicyConfigCommand",
          "methodAnnotations": [
            "@Test"
          ]
        }
      },
      {
        "type": "STUBBING",
        "code": "when(citrixResourceBase.canBridgeFirewall()).thenReturn(true);",
        "line": 1008,
        "locate": "Test Case",
        "locationContext": {
          "methodName": "testCleanupNetworkRulesCmd",
          "methodAnnotations": [
            "@Test"
          ]
        }
      },
      {
        "type": "STUBBING",
        "code": "when(citrixResourceBase.getConnection()).thenReturn(conn);",
        "line": 1009,
        "locate": "Test Case",
        "locationContext": {
          "methodName": "testCleanupNetworkRulesCmd",
          "methodAnnotations": [
            "@Test"
          ]
        }
      },
      {
        "type": "STUBBING",
        "code": "when(citrixResourceBase.getHost()).thenReturn(xsHost);",
        "line": 1010,
        "locate": "Test Case",
        "locationContext": {
          "methodName": "testCleanupNetworkRulesCmd",
          "methodAnnotations": [
            "@Test"
          ]
        }
      },
      {
        "type": "STUBBING",
        "code": "when(citrixResourceBase.getVMInstanceName()).thenReturn(\"VM\");",
        "line": 1011,
        "locate": "Test Case",
        "locationContext": {
          "methodName": "testCleanupNetworkRulesCmd",
          "methodAnnotations": [
            "@Test"
          ]
        }
      },
      {
        "type": "STUBBING",
        "code": "when(citrixResourceBase.callHostPlugin(conn, \"vmops\", \"cleanup_rules\", \"instance\", citrixResourceBase.getVMInstanceName())).thenReturn(\"1\");",
        "line": 1012,
        "locate": "Test Case",
        "locationContext": {
          "methodName": "testCleanupNetworkRulesCmd",
          "methodAnnotations": [
            "@Test"
          ]
        }
      },
      {
        "type": "VERIFICATION",
        "code": "verify(citrixResourceBase, times(1)).getConnection();",
        "line": 1016,
        "locate": "Test Case",
        "locationContext": {
          "methodName": "testCleanupNetworkRulesCmd",
          "methodAnnotations": [
            "@Test"
          ]
        }
      },
      {
        "type": "STUBBING",
        "code": "when(citrixResourceBase.canBridgeFirewall()).thenReturn(true);",
        "line": 1031,
        "locate": "Test Case",
        "locationContext": {
          "methodName": "testCleanupNetworkRulesCmdLTZ",
          "methodAnnotations": [
            "@Test"
          ]
        }
      },
      {
        "type": "STUBBING",
        "code": "when(citrixResourceBase.getConnection()).thenReturn(conn);",
        "line": 1032,
        "locate": "Test Case",
        "locationContext": {
          "methodName": "testCleanupNetworkRulesCmdLTZ",
          "methodAnnotations": [
            "@Test"
          ]
        }
      },
      {
        "type": "STUBBING",
        "code": "when(citrixResourceBase.getHost()).thenReturn(xsHost);",
        "line": 1033,
        "locate": "Test Case",
        "locationContext": {
          "methodName": "testCleanupNetworkRulesCmdLTZ",
          "methodAnnotations": [
            "@Test"
          ]
        }
      },
      {
        "type": "STUBBING",
        "code": "when(citrixResourceBase.getVMInstanceName()).thenReturn(\"VM\");",
        "line": 1034,
        "locate": "Test Case",
        "locationContext": {
          "methodName": "testCleanupNetworkRulesCmdLTZ",
          "methodAnnotations": [
            "@Test"
          ]
        }
      },
      {
        "type": "STUBBING",
        "code": "when(citrixResourceBase.callHostPlugin(conn, \"vmops\", \"cleanup_rules\", \"instance\", citrixResourceBase.getVMInstanceName())).thenReturn(\"-1\");",
        "line": 1035,
        "locate": "Test Case",
        "locationContext": {
          "methodName": "testCleanupNetworkRulesCmdLTZ",
          "methodAnnotations": [
            "@Test"
          ]
        }
      },
      {
        "type": "VERIFICATION",
        "code": "verify(citrixResourceBase, times(1)).getConnection();",
        "line": 1039,
        "locate": "Test Case",
        "locationContext": {
          "methodName": "testCleanupNetworkRulesCmdLTZ",
          "methodAnnotations": [
            "@Test"
          ]
        }
      },
      {
        "type": "STUBBING",
        "code": "when(citrixResourceBase.canBridgeFirewall()).thenReturn(false);",
        "line": 1053,
        "locate": "Test Case",
        "locationContext": {
          "methodName": "testCleanupNetworkRulesCmdNullDetails",
          "methodAnnotations": [
            "@Test"
          ]
        }
      },
      {
        "type": "STUBBING",
        "code": "when(citrixResourceBase.getConnection()).thenReturn(conn);",
        "line": 1069,
        "locate": "Test Case",
        "locationContext": {
          "methodName": "testNetworkRulesSystemVmCommand",
          "methodAnnotations": [
            "@Test"
          ]
        }
      },
      {
        "type": "VERIFICATION",
        "code": "verify(citrixResourceBase, times(1)).getConnection();",
        "line": 1073,
        "locate": "Test Case",
        "locationContext": {
          "methodName": "testNetworkRulesSystemVmCommand",
          "methodAnnotations": [
            "@Test"
          ]
        }
      },
      {
        "type": "STUBBING",
        "code": "when(citrixResourceBase.getConnection()).thenReturn(conn);",
        "line": 1087,
        "locate": "Test Case",
        "locationContext": {
          "methodName": "testNetworkRulesSystemVmCommandNonUser",
          "methodAnnotations": [
            "@Test"
          ]
        }
      },
      {
        "type": "STUBBING",
        "code": "when(citrixResourceBase.callHostPlugin(conn, \"vmops\", \"default_network_rules_systemvm\", \"vmName\", netRules.getVmName())).thenReturn(\"true\");",
        "line": 1088,
        "locate": "Test Case",
        "locationContext": {
          "methodName": "testNetworkRulesSystemVmCommandNonUser",
          "methodAnnotations": [
            "@Test"
          ]
        }
      },
      {
        "type": "VERIFICATION",
        "code": "verify(citrixResourceBase, times(1)).getConnection();",
        "line": 1092,
        "locate": "Test Case",
        "locationContext": {
          "methodName": "testNetworkRulesSystemVmCommandNonUser",
          "methodAnnotations": [
            "@Test"
          ]
        }
      },
      {
        "type": "STUBBING",
        "code": "when(citrixResourceBase.getConnection()).thenReturn(conn);",
        "line": 1106,
        "locate": "Test Case",
        "locationContext": {
          "methodName": "testNetworkRulesSystemVmCommandNonUserFalse",
          "methodAnnotations": [
            "@Test"
          ]
        }
      },
      {
        "type": "STUBBING",
        "code": "when(citrixResourceBase.callHostPlugin(conn, \"vmops\", \"default_network_rules_systemvm\", \"vmName\", netRules.getVmName())).thenReturn(\"false\");",
        "line": 1107,
        "locate": "Test Case",
        "locationContext": {
          "methodName": "testNetworkRulesSystemVmCommandNonUserFalse",
          "methodAnnotations": [
            "@Test"
          ]
        }
      },
      {
        "type": "VERIFICATION",
        "code": "verify(citrixResourceBase, times(1)).getConnection();",
        "line": 1111,
        "locate": "Test Case",
        "locationContext": {
          "methodName": "testNetworkRulesSystemVmCommandNonUserFalse",
          "methodAnnotations": [
            "@Test"
          ]
        }
      },
      {
        "type": "STUBBING",
        "code": "when(citrixResourceBase.getConnection()).thenReturn(conn);",
        "line": 1127,
        "locate": "Test Case",
        "locationContext": {
          "methodName": "testOvsCreateTunnelCommandSuccess",
          "methodAnnotations": [
            "@Test"
          ]
        }
      },
      {
        "type": "STUBBING",
        "code": "when(citrixResourceBase.findOrCreateTunnelNetwork(conn, createTunnel.getNetworkName())).thenReturn(network);",
        "line": 1129,
        "locate": "Test Case",
        "locationContext": {
          "methodName": "testOvsCreateTunnelCommandSuccess",
          "methodAnnotations": [
            "@Test"
          ]
        }
      },
      {
        "type": "STUBBING",
        "code": "when(citrixResourceBase.callHostPlugin(conn, \"ovstunnel\", \"create_tunnel\", \"bridge\", bridge, \"remote_ip\", createTunnel.getRemoteIp(), \"key\", createTunnel.getKey().toString(), \"from\", createTunnel.getFrom().toString(), \"to\", createTunnel.getTo().toString(), \"cloudstack-network-id\", createTunnel.getNetworkUuid())).thenReturn(\"SUCCESS:0\");",
        "line": 1132,
        "locate": "Test Case",
        "locationContext": {
          "methodName": "testOvsCreateTunnelCommandSuccess",
          "methodAnnotations": [
            "@Test"
          ]
        }
      },
      {
        "type": "VERIFICATION",
        "code": "verify(citrixResourceBase, times(1)).getConnection();",
        "line": 1147,
        "locate": "Test Case",
        "locationContext": {
          "methodName": "testOvsCreateTunnelCommandSuccess",
          "methodAnnotations": [
            "@Test"
          ]
        }
      },
      {
        "type": "VERIFICATION",
        "code": "verify(citrixResourceBase, times(1)).configureTunnelNetwork(conn, createTunnel.getNetworkId(), createTunnel.getFrom(), createTunnel.getNetworkName());",
        "line": 1148,
        "locate": "Test Case",
        "locationContext": {
          "methodName": "testOvsCreateTunnelCommandSuccess",
          "methodAnnotations": [
            "@Test"
          ]
        }
      },
      {
        "type": "STUBBING",
        "code": "when(citrixResourceBase.getConnection()).thenReturn(conn);",
        "line": 1164,
        "locate": "Test Case",
        "locationContext": {
          "methodName": "testOvsCreateTunnelCommandFail",
          "methodAnnotations": [
            "@Test"
          ]
        }
      },
      {
        "type": "STUBBING",
        "code": "when(citrixResourceBase.findOrCreateTunnelNetwork(conn, createTunnel.getNetworkName())).thenReturn(network);",
        "line": 1166,
        "locate": "Test Case",
        "locationContext": {
          "methodName": "testOvsCreateTunnelCommandFail",
          "methodAnnotations": [
            "@Test"
          ]
        }
      },
      {
        "type": "STUBBING",
        "code": "when(citrixResourceBase.callHostPlugin(conn, \"ovstunnel\", \"create_tunnel\", \"bridge\", bridge, \"remote_ip\", createTunnel.getRemoteIp(), \"key\", createTunnel.getKey().toString(), \"from\", createTunnel.getFrom().toString(), \"to\", createTunnel.getTo().toString(), \"cloudstack-network-id\", createTunnel.getNetworkUuid())).thenReturn(\"FAIL:1\");",
        "line": 1169,
        "locate": "Test Case",
        "locationContext": {
          "methodName": "testOvsCreateTunnelCommandFail",
          "methodAnnotations": [
            "@Test"
          ]
        }
      },
      {
        "type": "VERIFICATION",
        "code": "verify(citrixResourceBase, times(1)).getConnection();",
        "line": 1184,
        "locate": "Test Case",
        "locationContext": {
          "methodName": "testOvsCreateTunnelCommandFail",
          "methodAnnotations": [
            "@Test"
          ]
        }
      },
      {
        "type": "VERIFICATION",
        "code": "verify(citrixResourceBase, times(1)).configureTunnelNetwork(conn, createTunnel.getNetworkId(), createTunnel.getFrom(), createTunnel.getNetworkName());",
        "line": 1185,
        "locate": "Test Case",
        "locationContext": {
          "methodName": "testOvsCreateTunnelCommandFail",
          "methodAnnotations": [
            "@Test"
          ]
        }
      },
      {
        "type": "STUBBING",
        "code": "when(citrixResourceBase.getConnection()).thenReturn(conn);",
        "line": 1199,
        "locate": "Test Case",
        "locationContext": {
          "methodName": "testOvsCreateTunnelCommandNoNet",
          "methodAnnotations": [
            "@Test"
          ]
        }
      },
      {
        "type": "STUBBING",
        "code": "when(citrixResourceBase.findOrCreateTunnelNetwork(conn, createTunnel.getNetworkName())).thenReturn(null);",
        "line": 1200,
        "locate": "Test Case",
        "locationContext": {
          "methodName": "testOvsCreateTunnelCommandNoNet",
          "methodAnnotations": [
            "@Test"
          ]
        }
      },
      {
        "type": "VERIFICATION",
        "code": "verify(citrixResourceBase, times(1)).getConnection();",
        "line": 1204,
        "locate": "Test Case",
        "locationContext": {
          "methodName": "testOvsCreateTunnelCommandNoNet",
          "methodAnnotations": [
            "@Test"
          ]
        }
      },
      {
        "type": "STUBBING",
        "code": "when(citrixResourceBase.getConnection()).thenReturn(conn);",
        "line": 1218,
        "locate": "Test Case",
        "locationContext": {
          "methodName": "testOvsSetupBridgeCommand",
          "methodAnnotations": [
            "@Test"
          ]
        }
      },
      {
        "type": "VERIFICATION",
        "code": "verify(citrixResourceBase, times(1)).getConnection();",
        "line": 1222,
        "locate": "Test Case",
        "locationContext": {
          "methodName": "testOvsSetupBridgeCommand",
          "methodAnnotations": [
            "@Test"
          ]
        }
      },
      {
        "type": "VERIFICATION",
        "code": "verify(citrixResourceBase, times(1)).findOrCreateTunnelNetwork(conn, setupBridge.getBridgeName());",
        "line": 1223,
        "locate": "Test Case",
        "locationContext": {
          "methodName": "testOvsSetupBridgeCommand",
          "methodAnnotations": [
            "@Test"
          ]
        }
      },
      {
        "type": "VERIFICATION",
        "code": "verify(citrixResourceBase, times(1)).configureTunnelNetwork(conn, setupBridge.getNetworkId(), setupBridge.getHostId(), setupBridge.getBridgeName());",
        "line": 1224,
        "locate": "Test Case",
        "locationContext": {
          "methodName": "testOvsSetupBridgeCommand",
          "methodAnnotations": [
            "@Test"
          ]
        }
      },
      {
        "type": "STUBBING",
        "code": "when(citrixResourceBase.getConnection()).thenReturn(conn);",
        "line": 1239,
        "locate": "Test Case",
        "locationContext": {
          "methodName": "testOvsDestroyBridgeCommand",
          "methodAnnotations": [
            "@Test"
          ]
        }
      },
      {
        "type": "STUBBING",
        "code": "when(citrixResourceBase.findOrCreateTunnelNetwork(conn, destroyBridge.getBridgeName())).thenReturn(network);",
        "line": 1240,
        "locate": "Test Case",
        "locationContext": {
          "methodName": "testOvsDestroyBridgeCommand",
          "methodAnnotations": [
            "@Test"
          ]
        }
      },
      {
        "type": "VERIFICATION",
        "code": "verify(citrixResourceBase, times(1)).getConnection();",
        "line": 1244,
        "locate": "Test Case",
        "locationContext": {
          "methodName": "testOvsDestroyBridgeCommand",
          "methodAnnotations": [
            "@Test"
          ]
        }
      },
      {
        "type": "VERIFICATION",
        "code": "verify(citrixResourceBase, times(1)).cleanUpTmpDomVif(conn, network);",
        "line": 1246,
        "locate": "Test Case",
        "locationContext": {
          "methodName": "testOvsDestroyBridgeCommand",
          "methodAnnotations": [
            "@Test"
          ]
        }
      },
      {
        "type": "VERIFICATION",
        "code": "verify(citrixResourceBase, times(1)).destroyTunnelNetwork(conn, network, destroyBridge.getHostId());",
        "line": 1252,
        "locate": "Test Case",
        "locationContext": {
          "methodName": "testOvsDestroyBridgeCommand",
          "methodAnnotations": [
            "@Test"
          ]
        }
      },
      {
        "type": "STUBBING",
        "code": "when(citrixResourceBase.getConnection()).thenReturn(conn);",
        "line": 1268,
        "locate": "Test Case",
        "locationContext": {
          "methodName": "testOvsDestroyTunnelCommandSuccess",
          "methodAnnotations": [
            "@Test"
          ]
        }
      },
      {
        "type": "STUBBING",
        "code": "when(citrixResourceBase.findOrCreateTunnelNetwork(conn, destroyTunnel.getBridgeName())).thenReturn(network);",
        "line": 1270,
        "locate": "Test Case",
        "locationContext": {
          "methodName": "testOvsDestroyTunnelCommandSuccess",
          "methodAnnotations": [
            "@Test"
          ]
        }
      },
      {
        "type": "STUBBING",
        "code": "when(citrixResourceBase.callHostPlugin(conn, \"ovstunnel\", \"destroy_tunnel\", \"bridge\", bridge, \"in_port\", destroyTunnel.getInPortName())).thenReturn(\"SUCCESS\");",
        "line": 1273,
        "locate": "Test Case",
        "locationContext": {
          "methodName": "testOvsDestroyTunnelCommandSuccess",
          "methodAnnotations": [
            "@Test"
          ]
        }
      },
      {
        "type": "VERIFICATION",
        "code": "verify(citrixResourceBase, times(1)).getConnection();",
        "line": 1285,
        "locate": "Test Case",
        "locationContext": {
          "methodName": "testOvsDestroyTunnelCommandSuccess",
          "methodAnnotations": [
            "@Test"
          ]
        }
      },
      {
        "type": "STUBBING",
        "code": "when(citrixResourceBase.getConnection()).thenReturn(conn);",
        "line": 1301,
        "locate": "Test Case",
        "locationContext": {
          "methodName": "testOvsDestroyTunnelCommandFailed",
          "methodAnnotations": [
            "@Test"
          ]
        }
      },
      {
        "type": "STUBBING",
        "code": "when(citrixResourceBase.findOrCreateTunnelNetwork(conn, destroyTunnel.getBridgeName())).thenReturn(network);",
        "line": 1303,
        "locate": "Test Case",
        "locationContext": {
          "methodName": "testOvsDestroyTunnelCommandFailed",
          "methodAnnotations": [
            "@Test"
          ]
        }
      },
      {
        "type": "STUBBING",
        "code": "when(citrixResourceBase.callHostPlugin(conn, \"ovstunnel\", \"destroy_tunnel\", \"bridge\", bridge, \"in_port\", destroyTunnel.getInPortName())).thenReturn(\"FAILED\");",
        "line": 1306,
        "locate": "Test Case",
        "locationContext": {
          "methodName": "testOvsDestroyTunnelCommandFailed",
          "methodAnnotations": [
            "@Test"
          ]
        }
      },
      {
        "type": "VERIFICATION",
        "code": "verify(citrixResourceBase, times(1)).getConnection();",
        "line": 1318,
        "locate": "Test Case",
        "locationContext": {
          "methodName": "testOvsDestroyTunnelCommandFailed",
          "methodAnnotations": [
            "@Test"
          ]
        }
      },
      {
        "type": "STUBBING",
        "code": "when(citrixResourceBase.getPwdFromQueue()).thenReturn(\"password\");",
        "line": 1331,
        "locate": "Test Case",
        "locationContext": {
          "methodName": "testUpdateHostPasswordCommand",
          "methodAnnotations": [
            "@SuppressWarnings",
            "@Test"
          ]
        }
      },
      {
        "type": "STUBBING",
        "code": "when(citrixResourceBase.getXenServerUtilitiesHelper()).thenReturn(xenServerUtilitiesHelper);",
        "line": 1341,
        "locate": "Test Case",
        "locationContext": {
          "methodName": "testUpdateHostPasswordCommand",
          "methodAnnotations": [
            "@SuppressWarnings",
            "@Test"
          ]
        }
      },
      {
        "type": "VERIFICATION",
        "code": "verify(citrixResourceBase, times(2)).getPwdFromQueue();",
        "line": 1358,
        "locate": "Test Case",
        "locationContext": {
          "methodName": "testUpdateHostPasswordCommand",
          "methodAnnotations": [
            "@SuppressWarnings",
            "@Test"
          ]
        }
      },
      {
        "type": "VERIFICATION",
        "code": "verify(citrixResourceBase, times(1)).getXenServerUtilitiesHelper();",
        "line": 1359,
        "locate": "Test Case",
        "locationContext": {
          "methodName": "testUpdateHostPasswordCommand",
          "methodAnnotations": [
            "@SuppressWarnings",
            "@Test"
          ]
        }
      },
      {
        "type": "STUBBING",
        "code": "when(citrixResourceBase.getPwdFromQueue()).thenReturn(\"password\");",
        "line": 1380,
        "locate": "Test Case",
        "locationContext": {
          "methodName": "testUpdateHostPasswordCommandFail",
          "methodAnnotations": [
            "@SuppressWarnings",
            "@Test"
          ]
        }
      },
      {
        "type": "STUBBING",
        "code": "when(citrixResourceBase.getXenServerUtilitiesHelper()).thenReturn(xenServerUtilitiesHelper);",
        "line": 1390,
        "locate": "Test Case",
        "locationContext": {
          "methodName": "testUpdateHostPasswordCommandFail",
          "methodAnnotations": [
            "@SuppressWarnings",
            "@Test"
          ]
        }
      },
      {
        "type": "VERIFICATION",
        "code": "verify(citrixResourceBase, times(2)).getPwdFromQueue();",
        "line": 1407,
        "locate": "Test Case",
        "locationContext": {
          "methodName": "testUpdateHostPasswordCommandFail",
          "methodAnnotations": [
            "@SuppressWarnings",
            "@Test"
          ]
        }
      },
      {
        "type": "VERIFICATION",
        "code": "verify(citrixResourceBase, times(1)).getXenServerUtilitiesHelper();",
        "line": 1408,
        "locate": "Test Case",
        "locationContext": {
          "methodName": "testUpdateHostPasswordCommandFail",
          "methodAnnotations": [
            "@SuppressWarnings",
            "@Test"
          ]
        }
      },
      {
        "type": "STUBBING",
        "code": "when(citrixResourceBase.getPwdFromQueue()).thenReturn(\"password\");",
        "line": 1427,
        "locate": "Test Case",
        "locationContext": {
          "methodName": "testUpdateHostPasswordCommandException",
          "methodAnnotations": [
            "@Test"
          ]
        }
      },
      {
        "type": "STUBBING",
        "code": "when(citrixResourceBase.getXenServerUtilitiesHelper()).thenReturn(xenServerUtilitiesHelper);",
        "line": 1437,
        "locate": "Test Case",
        "locationContext": {
          "methodName": "testUpdateHostPasswordCommandException",
          "methodAnnotations": [
            "@Test"
          ]
        }
      },
      {
        "type": "VERIFICATION",
        "code": "verify(citrixResourceBase, times(2)).getPwdFromQueue();",
        "line": 1452,
        "locate": "Test Case",
        "locationContext": {
          "methodName": "testUpdateHostPasswordCommandException",
          "methodAnnotations": [
            "@Test"
          ]
        }
      },
      {
        "type": "VERIFICATION",
        "code": "verify(citrixResourceBase, times(1)).getXenServerUtilitiesHelper();",
        "line": 1453,
        "locate": "Test Case",
        "locationContext": {
          "methodName": "testUpdateHostPasswordCommandException",
          "methodAnnotations": [
            "@Test"
          ]
        }
      },
      {
        "type": "STUBBING",
        "code": "when(citrixResourceBase.getConnection()).thenReturn(conn);",
        "line": 1481,
        "locate": "Test Case",
        "locationContext": {
          "methodName": "testClusterVMMetaDataSyncCommand",
          "methodAnnotations": [
            "@Test"
          ]
        }
      },
      {
        "type": "STUBBING",
        "code": "when(citrixResourceBase.getHost()).thenReturn(xsHost);",
        "line": 1483,
        "locate": "Test Case",
        "locationContext": {
          "methodName": "testClusterVMMetaDataSyncCommand",
          "methodAnnotations": [
            "@Test"
          ]
        }
      },
      {
        "type": "STUBBING",
        "code": "when(citrixResourceBase.getHost().getUuid()).thenReturn(uuid);",
        "line": 1484,
        "locate": "Test Case",
        "locationContext": {
          "methodName": "testClusterVMMetaDataSyncCommand",
          "methodAnnotations": [
            "@Test"
          ]
        }
      },
      {
        "type": "VERIFICATION",
        "code": "verify(citrixResourceBase, times(1)).getConnection();",
        "line": 1503,
        "locate": "Test Case",
        "locationContext": {
          "methodName": "testClusterVMMetaDataSyncCommand",
          "methodAnnotations": [
            "@Test"
          ]
        }
      },
      {
        "type": "STUBBING",
        "code": "when(citrixResourceBase.getConnection()).thenReturn(conn);",
        "line": 1549,
        "locate": "Test Case",
        "locationContext": {
          "methodName": "testPlugNicCommand",
          "methodAnnotations": [
            "@Test"
          ]
        }
      },
      {
        "type": "VERIFICATION",
        "code": "verify(citrixResourceBase, times(1)).getConnection();",
        "line": 1553,
        "locate": "Test Case",
        "locationContext": {
          "methodName": "testPlugNicCommand",
          "methodAnnotations": [
            "@Test"
          ]
        }
      },
      {
        "type": "STUBBING",
        "code": "when(citrixResourceBase.getConnection()).thenReturn(conn);",
        "line": 1568,
        "locate": "Test Case",
        "locationContext": {
          "methodName": "testUnPlugNicCommand",
          "methodAnnotations": [
            "@Test"
          ]
        }
      },
      {
        "type": "VERIFICATION",
        "code": "verify(citrixResourceBase, times(1)).getConnection();",
        "line": 1572,
        "locate": "Test Case",
        "locationContext": {
          "methodName": "testUnPlugNicCommand",
          "methodAnnotations": [
            "@Test"
          ]
        }
      },
      {
        "type": "STUBBING",
        "code": "when(citrixResourceBase.getConnection()).thenReturn(conn);",
        "line": 1589,
        "locate": "Test Case",
        "locationContext": {
          "methodName": "testCreateVMSnapshotCommand",
          "methodAnnotations": [
            "@Test"
          ]
        }
      },
      {
        "type": "VERIFICATION",
        "code": "verify(citrixResourceBase, times(1)).getConnection();",
        "line": 1593,
        "locate": "Test Case",
        "locationContext": {
          "methodName": "testCreateVMSnapshotCommand",
          "methodAnnotations": [
            "@Test"
          ]
        }
      },
      {
        "type": "STUBBING",
        "code": "when(citrixResourceBase.getConnection()).thenReturn(conn);",
        "line": 1610,
        "locate": "Test Case",
        "locationContext": {
          "methodName": "testDeleteVMSnapshotCommand",
          "methodAnnotations": [
            "@Test"
          ]
        }
      },
      {
        "type": "VERIFICATION",
        "code": "verify(citrixResourceBase, times(1)).getConnection();",
        "line": 1614,
        "locate": "Test Case",
        "locationContext": {
          "methodName": "testDeleteVMSnapshotCommand",
          "methodAnnotations": [
            "@Test"
          ]
        }
      },
      {
        "type": "STUBBING",
        "code": "when(citrixResourceBase.getConnection()).thenReturn(conn);",
        "line": 1631,
        "locate": "Test Case",
        "locationContext": {
          "methodName": "testRevertToVMSnapshotCommand",
          "methodAnnotations": [
            "@Test"
          ]
        }
      },
      {
        "type": "VERIFICATION",
        "code": "verify(citrixResourceBase, times(1)).getConnection();",
        "line": 1635,
        "locate": "Test Case",
        "locationContext": {
          "methodName": "testRevertToVMSnapshotCommand",
          "methodAnnotations": [
            "@Test"
          ]
        }
      },
      {
        "type": "STUBBING",
        "code": "when(citrixResourceBase.getConnection()).thenReturn(conn);",
        "line": 1649,
        "locate": "Test Case",
        "locationContext": {
          "methodName": "testNetworkRulesVmSecondaryIpCommandSuccess",
          "methodAnnotations": [
            "@Test"
          ]
        }
      },
      {
        "type": "STUBBING",
        "code": "when(citrixResourceBase.callHostPlugin(conn, \"vmops\", \"network_rules_vmSecondaryIp\", \"vmName\", rulesVm.getVmName(), \"vmMac\", rulesVm.getVmMac(), \"vmSecIp\", rulesVm.getVmSecIp(), \"action\", rulesVm.getAction())).thenReturn(\"true\");",
        "line": 1650,
        "locate": "Test Case",
        "locationContext": {
          "methodName": "testNetworkRulesVmSecondaryIpCommandSuccess",
          "methodAnnotations": [
            "@Test"
          ]
        }
      },
      {
        "type": "VERIFICATION",
        "code": "verify(citrixResourceBase, times(1)).getConnection();",
        "line": 1655,
        "locate": "Test Case",
        "locationContext": {
          "methodName": "testNetworkRulesVmSecondaryIpCommandSuccess",
          "methodAnnotations": [
            "@Test"
          ]
        }
      },
      {
        "type": "STUBBING",
        "code": "when(citrixResourceBase.getConnection()).thenReturn(conn);",
        "line": 1669,
        "locate": "Test Case",
        "locationContext": {
          "methodName": "testNetworkRulesVmSecondaryIpCommandFailure",
          "methodAnnotations": [
            "@Test"
          ]
        }
      },
      {
        "type": "STUBBING",
        "code": "when(citrixResourceBase.callHostPlugin(conn, \"vmops\", \"network_rules_vmSecondaryIp\", \"vmName\", rulesVm.getVmName(), \"vmMac\", rulesVm.getVmMac(), \"vmSecIp\", rulesVm.getVmSecIp(), \"action\", rulesVm.getAction())).thenReturn(\"false\");",
        "line": 1670,
        "locate": "Test Case",
        "locationContext": {
          "methodName": "testNetworkRulesVmSecondaryIpCommandFailure",
          "methodAnnotations": [
            "@Test"
          ]
        }
      },
      {
        "type": "VERIFICATION",
        "code": "verify(citrixResourceBase, times(1)).getConnection();",
        "line": 1675,
        "locate": "Test Case",
        "locationContext": {
          "methodName": "testNetworkRulesVmSecondaryIpCommandFailure",
          "methodAnnotations": [
            "@Test"
          ]
        }
      },
      {
        "type": "STUBBING",
        "code": "when(citrixResourceBase.getConnection()).thenReturn(conn);",
        "line": 1694,
        "locate": "Test Case",
        "locationContext": {
          "methodName": "testScaleVmCommand",
          "methodAnnotations": [
            "@Test"
          ]
        }
      },
      {
        "type": "STUBBING",
        "code": "when(citrixResourceBase.getHost()).thenReturn(xsHost);",
        "line": 1695,
        "locate": "Test Case",
        "locationContext": {
          "methodName": "testScaleVmCommand",
          "methodAnnotations": [
            "@Test"
          ]
        }
      },
      {
        "type": "STUBBING",
        "code": "when(citrixResourceBase.getHost().getUuid()).thenReturn(uuid);",
        "line": 1696,
        "locate": "Test Case",
        "locationContext": {
          "methodName": "testScaleVmCommand",
          "methodAnnotations": [
            "@Test"
          ]
        }
      },
      {
        "type": "STUBBING",
        "code": "when(citrixResourceBase.isDmcEnabled(conn, host)).thenReturn(true);",
        "line": 1699,
        "locate": "Test Case",
        "locationContext": {
          "methodName": "testScaleVmCommand",
          "methodAnnotations": [
            "@Test"
          ]
        }
      },
      {
        "type": "VERIFICATION",
        "code": "verify(citrixResourceBase, times(1)).getConnection();",
        "line": 1708,
        "locate": "Test Case",
        "locationContext": {
          "methodName": "testScaleVmCommand",
          "methodAnnotations": [
            "@Test"
          ]
        }
      },
      {
        "type": "STUBBING",
        "code": "when(citrixResourceBase.getConnection()).thenReturn(conn);",
        "line": 1733,
        "locate": "Test Case",
        "locationContext": {
          "methodName": "testPvlanSetupCommandDhcpSuccess",
          "methodAnnotations": [
            "@Test"
          ]
        }
      },
      {
        "type": "STUBBING",
        "code": "when(citrixResourceBase.getNativeNetworkForTraffic(conn, TrafficType.Guest, \"tag\")).thenReturn(network);",
        "line": 1735,
        "locate": "Test Case",
        "locationContext": {
          "methodName": "testPvlanSetupCommandDhcpSuccess",
          "methodAnnotations": [
            "@Test"
          ]
        }
      },
      {
        "type": "STUBBING",
        "code": "when(citrixResourceBase.callHostPlugin(conn, \"ovs-pvlan\", \"setup-pvlan-dhcp\", \"op\", op, \"nw-label\", label, \"primary-pvlan\", primaryPvlan, \"isolated-pvlan\", isolatedPvlan, \"dhcp-name\", dhcpName, \"dhcp-ip\", dhcpIp, \"dhcp-mac\", dhcpMac)).thenReturn(\"true\");",
        "line": 1744,
        "locate": "Test Case",
        "locationContext": {
          "methodName": "testPvlanSetupCommandDhcpSuccess",
          "methodAnnotations": [
            "@Test"
          ]
        }
      },
      {
        "type": "VERIFICATION",
        "code": "verify(citrixResourceBase, times(1)).getConnection();",
        "line": 1749,
        "locate": "Test Case",
        "locationContext": {
          "methodName": "testPvlanSetupCommandDhcpSuccess",
          "methodAnnotations": [
            "@Test"
          ]
        }
      },
      {
        "type": "STUBBING",
        "code": "when(citrixResourceBase.getConnection()).thenReturn(conn);",
        "line": 1774,
        "locate": "Test Case",
        "locationContext": {
          "methodName": "testPvlanSetupCommandDhcpFailure",
          "methodAnnotations": [
            "@Test"
          ]
        }
      },
      {
        "type": "STUBBING",
        "code": "when(citrixResourceBase.getNativeNetworkForTraffic(conn, TrafficType.Guest, \"tag\")).thenReturn(network);",
        "line": 1776,
        "locate": "Test Case",
        "locationContext": {
          "methodName": "testPvlanSetupCommandDhcpFailure",
          "methodAnnotations": [
            "@Test"
          ]
        }
      },
      {
        "type": "STUBBING",
        "code": "when(citrixResourceBase.callHostPlugin(conn, \"ovs-pvlan\", \"setup-pvlan-dhcp\", \"op\", op, \"nw-label\", label, \"primary-pvlan\", primaryPvlan, \"isolated-pvlan\", isolatedPvlan, \"dhcp-name\", dhcpName, \"dhcp-ip\", dhcpIp, \"dhcp-mac\", dhcpMac)).thenReturn(\"false\");",
        "line": 1785,
        "locate": "Test Case",
        "locationContext": {
          "methodName": "testPvlanSetupCommandDhcpFailure",
          "methodAnnotations": [
            "@Test"
          ]
        }
      },
      {
        "type": "VERIFICATION",
        "code": "verify(citrixResourceBase, times(1)).getConnection();",
        "line": 1790,
        "locate": "Test Case",
        "locationContext": {
          "methodName": "testPvlanSetupCommandDhcpFailure",
          "methodAnnotations": [
            "@Test"
          ]
        }
      },
      {
        "type": "STUBBING",
        "code": "when(citrixResourceBase.getConnection()).thenReturn(conn);",
        "line": 1813,
        "locate": "Test Case",
        "locationContext": {
          "methodName": "testPvlanSetupCommandVmSuccess",
          "methodAnnotations": [
            "@Test"
          ]
        }
      },
      {
        "type": "STUBBING",
        "code": "when(citrixResourceBase.getNativeNetworkForTraffic(conn, TrafficType.Guest, \"tag\")).thenReturn(network);",
        "line": 1815,
        "locate": "Test Case",
        "locationContext": {
          "methodName": "testPvlanSetupCommandVmSuccess",
          "methodAnnotations": [
            "@Test"
          ]
        }
      },
      {
        "type": "STUBBING",
        "code": "when(citrixResourceBase.callHostPlugin(conn, \"ovs-pvlan\", \"setup-pvlan-vm\", \"op\", op, \"nw-label\", label, \"primary-pvlan\", primaryPvlan, \"isolated-pvlan\", isolatedPvlan, \"vm-mac\", vmMac)).thenReturn(\"true\");",
        "line": 1824,
        "locate": "Test Case",
        "locationContext": {
          "methodName": "testPvlanSetupCommandVmSuccess",
          "methodAnnotations": [
            "@Test"
          ]
        }
      },
      {
        "type": "VERIFICATION",
        "code": "verify(citrixResourceBase, times(1)).getConnection();",
        "line": 1829,
        "locate": "Test Case",
        "locationContext": {
          "methodName": "testPvlanSetupCommandVmSuccess",
          "methodAnnotations": [
            "@Test"
          ]
        }
      },
      {
        "type": "STUBBING",
        "code": "when(citrixResourceBase.getConnection()).thenReturn(conn);",
        "line": 1852,
        "locate": "Test Case",
        "locationContext": {
          "methodName": "testPvlanSetupCommandVmFailure",
          "methodAnnotations": [
            "@Test"
          ]
        }
      },
      {
        "type": "STUBBING",
        "code": "when(citrixResourceBase.getNativeNetworkForTraffic(conn, TrafficType.Guest, \"tag\")).thenReturn(network);",
        "line": 1854,
        "locate": "Test Case",
        "locationContext": {
          "methodName": "testPvlanSetupCommandVmFailure",
          "methodAnnotations": [
            "@Test"
          ]
        }
      },
      {
        "type": "STUBBING",
        "code": "when(citrixResourceBase.callHostPlugin(conn, \"ovs-pvlan\", \"setup-pvlan-vm\", \"op\", op, \"nw-label\", label, \"primary-pvlan\", primaryPvlan, \"isolated-pvlan\", isolatedPvlan, \"vm-mac\", vmMac)).thenReturn(\"false\");",
        "line": 1863,
        "locate": "Test Case",
        "locationContext": {
          "methodName": "testPvlanSetupCommandVmFailure",
          "methodAnnotations": [
            "@Test"
          ]
        }
      },
      {
        "type": "VERIFICATION",
        "code": "verify(citrixResourceBase, times(1)).getConnection();",
        "line": 1868,
        "locate": "Test Case",
        "locationContext": {
          "methodName": "testPvlanSetupCommandVmFailure",
          "methodAnnotations": [
            "@Test"
          ]
        }
      },
      {
        "type": "STUBBING",
        "code": "when(citrixResourceBase.getConnection()).thenReturn(conn);",
        "line": 1882,
        "locate": "Test Case",
        "locationContext": {
          "methodName": "testPerformanceMonitorCommandSuccess",
          "methodAnnotations": [
            "@Test"
          ]
        }
      },
      {
        "type": "STUBBING",
        "code": "when(citrixResourceBase.getPerfMon(conn, performanceMonitor.getParams(), performanceMonitor.getWait())).thenReturn(\"performance\");",
        "line": 1883,
        "locate": "Test Case",
        "locationContext": {
          "methodName": "testPerformanceMonitorCommandSuccess",
          "methodAnnotations": [
            "@Test"
          ]
        }
      },
      {
        "type": "VERIFICATION",
        "code": "verify(citrixResourceBase, times(1)).getConnection();",
        "line": 1887,
        "locate": "Test Case",
        "locationContext": {
          "methodName": "testPerformanceMonitorCommandSuccess",
          "methodAnnotations": [
            "@Test"
          ]
        }
      },
      {
        "type": "STUBBING",
        "code": "when(citrixResourceBase.getConnection()).thenReturn(conn);",
        "line": 1901,
        "locate": "Test Case",
        "locationContext": {
          "methodName": "testPerformanceMonitorCommandFailure",
          "methodAnnotations": [
            "@Test"
          ]
        }
      },
      {
        "type": "STUBBING",
        "code": "when(citrixResourceBase.getPerfMon(conn, performanceMonitor.getParams(), performanceMonitor.getWait())).thenReturn(null);",
        "line": 1902,
        "locate": "Test Case",
        "locationContext": {
          "methodName": "testPerformanceMonitorCommandFailure",
          "methodAnnotations": [
            "@Test"
          ]
        }
      },
      {
        "type": "VERIFICATION",
        "code": "verify(citrixResourceBase, times(1)).getConnection();",
        "line": 1906,
        "locate": "Test Case",
        "locationContext": {
          "methodName": "testPerformanceMonitorCommandFailure",
          "methodAnnotations": [
            "@Test"
          ]
        }
      },
      {
        "type": "STUBBING",
        "code": "when(citrixResourceBase.getVirtualRoutingResource()).thenReturn(routingResource);",
        "line": 1921,
        "locate": "Test Case",
        "locationContext": {
          "methodName": "testIpAssocVpcCommand",
          "methodAnnotations": [
            "@Test"
          ]
        }
      },
      {
        "type": "STUBBING",
        "code": "when(citrixResourceBase.getVirtualRoutingResource()).thenReturn(routingResource);",
        "line": 1941,
        "locate": "Test Case",
        "locationContext": {
          "methodName": "testIpAssocCommand",
          "methodAnnotations": [
            "@Test"
          ]
        }
      },
      {
        "type": "STUBBING",
        "code": "when(citrixResourceBase.getStorageHandler()).thenReturn(handler);",
        "line": 1958,
        "locate": "Test Case",
        "locationContext": {
          "methodName": "testStorageSubSystemCommand",
          "methodAnnotations": [
            "@Test"
          ]
        }
      },
      {
        "type": "STUBBING",
        "code": "when(citrixResourceBase.getConnection()).thenReturn(conn);",
        "line": 1986,
        "locate": "Test Case",
        "locationContext": {
          "methodName": "testGetVmIpAddressCommand",
          "methodAnnotations": [
            "@Test"
          ]
        }
      },
      {
        "type": "STUBBING",
        "code": "when(citrixResourceBase.getVM(conn, getVmIpAddrCmd.getVmName())).thenReturn(vm);",
        "line": 1987,
        "locate": "Test Case",
        "locationContext": {
          "methodName": "testGetVmIpAddressCommand",
          "methodAnnotations": [
            "@Test"
          ]
        }
      },
      {
        "type": "VERIFICATION",
        "code": "verify(citrixResourceBase, times(1)).getConnection();",
        "line": 1993,
        "locate": "Test Case",
        "locationContext": {
          "methodName": "testGetVmIpAddressCommand",
          "methodAnnotations": [
            "@Test"
          ]
        }
      }
    ],
    "pattern_id": 8
  },
  {
    "variableName": "citrixResourceBase",
    "variableType": "CitrixResourceBase",
    "mockedClass": "CitrixResourceBase",
    "isReuseableMock": false,
    "mockPattern": "Creation:\n\u2014 Attribute Mock Creation\n\nStubbing:\n\u2014 Test Case\n\nVerification:\n\u2014 Test Case",
    "classContext": {
      "packageName": "com.cloud.hypervisor.xenserver.resource.wrapper.xenbase",
      "filePath": "C:\\java tool\\Apache\\cloudstack\\plugins\\hypervisors\\xenserver\\src\\test\\java\\com\\cloud\\hypervisor\\xenserver\\resource\\wrapper\\xenbase\\CitrixRequestWrapperTest.java",
      "className": "CitrixRequestWrapperTest"
    },
    "statements": [
      {
        "type": "FIELD_MOCK_CREATION",
        "code": "@Mock\r\nprivate CitrixResourceBase citrixResourceBase;",
        "line": 152,
        "locate": "Attribute",
        "locationContext": {
          "methodName": "[FieldDeclaration]",
          "methodAnnotations": [
            "@Mock"
          ]
        }
      },
      {
        "type": "VERIFICATION",
        "code": "verify(citrixResourceBase, times(2)).getConnection();",
        "line": 186,
        "locate": "Test Case",
        "locationContext": {
          "methodName": "testExecuteRebootRouterCommand",
          "methodAnnotations": [
            "@Test"
          ]
        }
      },
      {
        "type": "VERIFICATION",
        "code": "verify(citrixResourceBase, times(1)).getConnection();",
        "line": 202,
        "locate": "Test Case",
        "locationContext": {
          "methodName": "testExecuteCreateCommand",
          "methodAnnotations": [
            "@Test"
          ]
        }
      },
      {
        "type": "VERIFICATION",
        "code": "verify(citrixResourceBase, times(1)).getConnection();",
        "line": 312,
        "locate": "Test Case",
        "locationContext": {
          "methodName": "testRebootCommand",
          "methodAnnotations": [
            "@Test"
          ]
        }
      },
      {
        "type": "VERIFICATION",
        "code": "verify(citrixResourceBase, times(1)).getConnection();",
        "line": 325,
        "locate": "Test Case",
        "locationContext": {
          "methodName": "testCheckVirtualMachineCommand",
          "methodAnnotations": [
            "@Test"
          ]
        }
      },
      {
        "type": "VERIFICATION",
        "code": "verify(citrixResourceBase, times(1)).getConnection();",
        "line": 339,
        "locate": "Test Case",
        "locationContext": {
          "methodName": "testPrepareForMigrationCommand",
          "methodAnnotations": [
            "@Test"
          ]
        }
      },
      {
        "type": "VERIFICATION",
        "code": "verify(citrixResourceBase, times(1)).getConnection();",
        "line": 353,
        "locate": "Test Case",
        "locationContext": {
          "methodName": "testMigrateCommand",
          "methodAnnotations": [
            "@Test"
          ]
        }
      },
      {
        "type": "VERIFICATION",
        "code": "verify(citrixResourceBase, times(1)).getConnection();",
        "line": 370,
        "locate": "Test Case",
        "locationContext": {
          "methodName": "testDestroyCommand",
          "methodAnnotations": [
            "@Test"
          ]
        }
      },
      {
        "type": "STUBBING",
        "code": "when(citrixResourceBase.getHost()).thenReturn(xsHost);",
        "line": 385,
        "locate": "Test Case",
        "locationContext": {
          "methodName": "testCreateStoragePoolCommand",
          "methodAnnotations": [
            "@Test"
          ]
        }
      },
      {
        "type": "VERIFICATION",
        "code": "verify(citrixResourceBase, times(1)).getConnection();",
        "line": 388,
        "locate": "Test Case",
        "locationContext": {
          "methodName": "testCreateStoragePoolCommand",
          "methodAnnotations": [
            "@Test"
          ]
        }
      },
      {
        "type": "STUBBING",
        "code": "when(citrixResourceBase.getHost()).thenReturn(xsHost);",
        "line": 403,
        "locate": "Test Case",
        "locationContext": {
          "methodName": "testModifyStoragePoolCommand",
          "methodAnnotations": [
            "@Test"
          ]
        }
      },
      {
        "type": "VERIFICATION",
        "code": "verify(citrixResourceBase, times(1)).getConnection();",
        "line": 406,
        "locate": "Test Case",
        "locationContext": {
          "methodName": "testModifyStoragePoolCommand",
          "methodAnnotations": [
            "@Test"
          ]
        }
      },
      {
        "type": "STUBBING",
        "code": "when(citrixResourceBase.getHost()).thenReturn(xsHost);",
        "line": 421,
        "locate": "Test Case",
        "locationContext": {
          "methodName": "testDeleteStoragePoolCommand",
          "methodAnnotations": [
            "@Test"
          ]
        }
      },
      {
        "type": "VERIFICATION",
        "code": "verify(citrixResourceBase, times(1)).getConnection();",
        "line": 424,
        "locate": "Test Case",
        "locationContext": {
          "methodName": "testDeleteStoragePoolCommand",
          "methodAnnotations": [
            "@Test"
          ]
        }
      },
      {
        "type": "VERIFICATION",
        "code": "verify(citrixResourceBase, times(1)).getConnection();",
        "line": 439,
        "locate": "Test Case",
        "locationContext": {
          "methodName": "testResizeVolumeCommand",
          "methodAnnotations": [
            "@Test"
          ]
        }
      },
      {
        "type": "VERIFICATION",
        "code": "verify(citrixResourceBase, times(1)).getConnection();",
        "line": 451,
        "locate": "Test Case",
        "locationContext": {
          "methodName": "testAttachIsoCommand",
          "methodAnnotations": [
            "@Test"
          ]
        }
      },
      {
        "type": "VERIFICATION",
        "code": "verify(citrixResourceBase, times(1)).getConnection();",
        "line": 467,
        "locate": "Test Case",
        "locationContext": {
          "methodName": "testUpgradeSnapshotCommand",
          "methodAnnotations": [
            "@Test"
          ]
        }
      },
      {
        "type": "VERIFICATION",
        "code": "verify(citrixResourceBase, times(0)).getConnection();",
        "line": 483,
        "locate": "Test Case",
        "locationContext": {
          "methodName": "testUpgradeSnapshotCommandNo21",
          "methodAnnotations": [
            "@Test"
          ]
        }
      },
      {
        "type": "STUBBING",
        "code": "when(citrixResourceBase.getHost()).thenReturn(xsHost);",
        "line": 498,
        "locate": "Test Case",
        "locationContext": {
          "methodName": "testGetStorageStatsCommand",
          "methodAnnotations": [
            "@Test"
          ]
        }
      },
      {
        "type": "VERIFICATION",
        "code": "verify(citrixResourceBase, times(1)).getConnection();",
        "line": 501,
        "locate": "Test Case",
        "locationContext": {
          "methodName": "testGetStorageStatsCommand",
          "methodAnnotations": [
            "@Test"
          ]
        }
      },
      {
        "type": "STUBBING",
        "code": "when(citrixResourceBase.getHost()).thenReturn(xsHost);",
        "line": 516,
        "locate": "Test Case",
        "locationContext": {
          "methodName": "testPrimaryStorageDownloadCommand",
          "methodAnnotations": [
            "@Test"
          ]
        }
      },
      {
        "type": "VERIFICATION",
        "code": "verify(citrixResourceBase, times(1)).getConnection();",
        "line": 519,
        "locate": "Test Case",
        "locationContext": {
          "methodName": "testPrimaryStorageDownloadCommand",
          "methodAnnotations": [
            "@Test"
          ]
        }
      },
      {
        "type": "VERIFICATION",
        "code": "verify(citrixResourceBase, times(1)).getConnection();",
        "line": 532,
        "locate": "Test Case",
        "locationContext": {
          "methodName": "testGetVncPortCommand",
          "methodAnnotations": [
            "@Test"
          ]
        }
      },
      {
        "type": "STUBBING",
        "code": "when(citrixResourceBase.getHost()).thenReturn(xsHost);",
        "line": 547,
        "locate": "Test Case",
        "locationContext": {
          "methodName": "testSetupCommand",
          "methodAnnotations": [
            "@Test"
          ]
        }
      },
      {
        "type": "VERIFICATION",
        "code": "verify(citrixResourceBase, times(1)).getConnection();",
        "line": 550,
        "locate": "Test Case",
        "locationContext": {
          "methodName": "testSetupCommand",
          "methodAnnotations": [
            "@Test"
          ]
        }
      },
      {
        "type": "STUBBING",
        "code": "when(citrixResourceBase.getConnection()).thenReturn(conn);",
        "line": 578,
        "locate": "Test Case",
        "locationContext": {
          "methodName": "testMaintainCommand",
          "methodAnnotations": [
            "@Test"
          ]
        }
      },
      {
        "type": "STUBBING",
        "code": "when(citrixResourceBase.getHost()).thenReturn(xsHost);",
        "line": 579,
        "locate": "Test Case",
        "locationContext": {
          "methodName": "testMaintainCommand",
          "methodAnnotations": [
            "@Test"
          ]
        }
      },
      {
        "type": "VERIFICATION",
        "code": "verify(citrixResourceBase, times(1)).getConnection();",
        "line": 635,
        "locate": "Test Case",
        "locationContext": {
          "methodName": "testPingTestCommandHostIp",
          "methodAnnotations": [
            "@Test"
          ]
        }
      },
      {
        "type": "VERIFICATION",
        "code": "verify(citrixResourceBase, times(1)).getConnection();",
        "line": 649,
        "locate": "Test Case",
        "locationContext": {
          "methodName": "testPingTestCommandRouterPvtIps",
          "methodAnnotations": [
            "@Test"
          ]
        }
      },
      {
        "type": "VERIFICATION",
        "code": "verify(citrixResourceBase, times(1)).getConnection();",
        "line": 691,
        "locate": "Test Case",
        "locationContext": {
          "methodName": "testStartCommand",
          "methodAnnotations": [
            "@Test"
          ]
        }
      },
      {
        "type": "STUBBING",
        "code": "when(citrixResourceBase.getConnection()).thenReturn(conn);",
        "line": 706,
        "locate": "Test Case",
        "locationContext": {
          "methodName": "testOvsSetTagAndFlowCommand",
          "methodAnnotations": [
            "@Test"
          ]
        }
      },
      {
        "type": "STUBBING",
        "code": "when(citrixResourceBase.setupvSwitchNetwork(conn)).thenReturn(network);",
        "line": 707,
        "locate": "Test Case",
        "locationContext": {
          "methodName": "testOvsSetTagAndFlowCommand",
          "methodAnnotations": [
            "@Test"
          ]
        }
      },
      {
        "type": "VERIFICATION",
        "code": "verify(citrixResourceBase, times(1)).getConnection();",
        "line": 720,
        "locate": "Test Case",
        "locationContext": {
          "methodName": "testOvsSetTagAndFlowCommand",
          "methodAnnotations": [
            "@Test"
          ]
        }
      },
      {
        "type": "VERIFICATION",
        "code": "verify(citrixResourceBase, times(1)).setupvSwitchNetwork(conn);",
        "line": 721,
        "locate": "Test Case",
        "locationContext": {
          "methodName": "testOvsSetTagAndFlowCommand",
          "methodAnnotations": [
            "@Test"
          ]
        }
      },
      {
        "type": "VERIFICATION",
        "code": "verify(citrixResourceBase, times(1)).setIsOvs(true);",
        "line": 722,
        "locate": "Test Case",
        "locationContext": {
          "methodName": "testOvsSetTagAndFlowCommand",
          "methodAnnotations": [
            "@Test"
          ]
        }
      },
      {
        "type": "VERIFICATION",
        "code": "verify(citrixResourceBase, times(1)).getConnection();",
        "line": 736,
        "locate": "Test Case",
        "locationContext": {
          "methodName": "testCheckSshCommand",
          "methodAnnotations": [
            "@Test"
          ]
        }
      },
      {
        "type": "STUBBING",
        "code": "when(citrixResourceBase.getConnection()).thenReturn(conn);",
        "line": 762,
        "locate": "Test Case",
        "locationContext": {
          "methodName": "testSecurityGroupRulesCommand",
          "methodAnnotations": [
            "@Test"
          ]
        }
      },
      {
        "type": "STUBBING",
        "code": "when(citrixResourceBase.getHost()).thenReturn(xsHost);",
        "line": 763,
        "locate": "Test Case",
        "locationContext": {
          "methodName": "testSecurityGroupRulesCommand",
          "methodAnnotations": [
            "@Test"
          ]
        }
      },
      {
        "type": "VERIFICATION",
        "code": "verify(citrixResourceBase, times(1)).getConnection();",
        "line": 767,
        "locate": "Test Case",
        "locationContext": {
          "methodName": "testSecurityGroupRulesCommand",
          "methodAnnotations": [
            "@Test"
          ]
        }
      },
      {
        "type": "STUBBING",
        "code": "when(citrixResourceBase.isXcp()).thenReturn(true);",
        "line": 790,
        "locate": "Test Case",
        "locationContext": {
          "methodName": "testOvsFetchInterfaceCommand",
          "methodAnnotations": [
            "@Test"
          ]
        }
      },
      {
        "type": "STUBBING",
        "code": "when(citrixResourceBase.getLabel()).thenReturn(\"[abc]\");",
        "line": 791,
        "locate": "Test Case",
        "locationContext": {
          "methodName": "testOvsFetchInterfaceCommand",
          "methodAnnotations": [
            "@Test"
          ]
        }
      },
      {
        "type": "STUBBING",
        "code": "when(citrixResourceBase.getConnection()).thenReturn(conn);",
        "line": 792,
        "locate": "Test Case",
        "locationContext": {
          "methodName": "testOvsFetchInterfaceCommand",
          "methodAnnotations": [
            "@Test"
          ]
        }
      },
      {
        "type": "STUBBING",
        "code": "when(citrixResourceBase.getHost()).thenReturn(xsHost);",
        "line": 793,
        "locate": "Test Case",
        "locationContext": {
          "methodName": "testOvsFetchInterfaceCommand",
          "methodAnnotations": [
            "@Test"
          ]
        }
      },
      {
        "type": "STUBBING",
        "code": "when(citrixResourceBase.getNetworkByName(conn, label)).thenReturn(network);",
        "line": 801,
        "locate": "Test Case",
        "locationContext": {
          "methodName": "testOvsFetchInterfaceCommand",
          "methodAnnotations": [
            "@Test"
          ]
        }
      },
      {
        "type": "VERIFICATION",
        "code": "verify(citrixResourceBase, times(1)).getConnection();",
        "line": 810,
        "locate": "Test Case",
        "locationContext": {
          "methodName": "testOvsFetchInterfaceCommand",
          "methodAnnotations": [
            "@Test"
          ]
        }
      },
      {
        "type": "STUBBING",
        "code": "when(citrixResourceBase.getConnection()).thenReturn(conn);",
        "line": 827,
        "locate": "Test Case",
        "locationContext": {
          "methodName": "testOvsCreateGreTunnelCommand",
          "methodAnnotations": [
            "@Test"
          ]
        }
      },
      {
        "type": "STUBBING",
        "code": "when(citrixResourceBase.getHost()).thenReturn(xsHost);",
        "line": 828,
        "locate": "Test Case",
        "locationContext": {
          "methodName": "testOvsCreateGreTunnelCommand",
          "methodAnnotations": [
            "@Test"
          ]
        }
      },
      {
        "type": "STUBBING",
        "code": "when(citrixResourceBase.setupvSwitchNetwork(conn)).thenReturn(network);",
        "line": 829,
        "locate": "Test Case",
        "locationContext": {
          "methodName": "testOvsCreateGreTunnelCommand",
          "methodAnnotations": [
            "@Test"
          ]
        }
      },
      {
        "type": "STUBBING",
        "code": "when(citrixResourceBase.callHostPlugin(conn, \"ovsgre\", \"ovs_create_gre\", \"bridge\", bridge, \"remoteIP\", createGreCommand.getRemoteIp(), \"greKey\", createGreCommand.getKey(), \"from\", Long.toString(createGreCommand.getFrom()), \"to\", Long.toString(createGreCommand.getTo()))).thenReturn(\"1:2\");",
        "line": 832,
        "locate": "Test Case",
        "locationContext": {
          "methodName": "testOvsCreateGreTunnelCommand",
          "methodAnnotations": [
            "@Test"
          ]
        }
      },
      {
        "type": "VERIFICATION",
        "code": "verify(citrixResourceBase, times(1)).getConnection();",
        "line": 847,
        "locate": "Test Case",
        "locationContext": {
          "methodName": "testOvsCreateGreTunnelCommand",
          "methodAnnotations": [
            "@Test"
          ]
        }
      },
      {
        "type": "VERIFICATION",
        "code": "verify(citrixResourceBase, times(1)).setIsOvs(true);",
        "line": 848,
        "locate": "Test Case",
        "locationContext": {
          "methodName": "testOvsCreateGreTunnelCommand",
          "methodAnnotations": [
            "@Test"
          ]
        }
      },
      {
        "type": "STUBBING",
        "code": "when(citrixResourceBase.getConnection()).thenReturn(conn);",
        "line": 864,
        "locate": "Test Case",
        "locationContext": {
          "methodName": "testOvsDeleteFlowCommandSuccess",
          "methodAnnotations": [
            "@Test"
          ]
        }
      },
      {
        "type": "STUBBING",
        "code": "when(citrixResourceBase.setupvSwitchNetwork(conn)).thenReturn(network);",
        "line": 865,
        "locate": "Test Case",
        "locationContext": {
          "methodName": "testOvsDeleteFlowCommandSuccess",
          "methodAnnotations": [
            "@Test"
          ]
        }
      },
      {
        "type": "STUBBING",
        "code": "when(citrixResourceBase.callHostPlugin(conn, \"ovsgre\", \"ovs_delete_flow\", \"bridge\", bridge, \"vmName\", deleteFlowCommand.getVmName())).thenReturn(\"SUCCESS\");",
        "line": 868,
        "locate": "Test Case",
        "locationContext": {
          "methodName": "testOvsDeleteFlowCommandSuccess",
          "methodAnnotations": [
            "@Test"
          ]
        }
      },
      {
        "type": "VERIFICATION",
        "code": "verify(citrixResourceBase, times(1)).getConnection();",
        "line": 880,
        "locate": "Test Case",
        "locationContext": {
          "methodName": "testOvsDeleteFlowCommandSuccess",
          "methodAnnotations": [
            "@Test"
          ]
        }
      },
      {
        "type": "VERIFICATION",
        "code": "verify(citrixResourceBase, times(1)).setIsOvs(true);",
        "line": 881,
        "locate": "Test Case",
        "locationContext": {
          "methodName": "testOvsDeleteFlowCommandSuccess",
          "methodAnnotations": [
            "@Test"
          ]
        }
      },
      {
        "type": "STUBBING",
        "code": "when(citrixResourceBase.getConnection()).thenReturn(conn);",
        "line": 897,
        "locate": "Test Case",
        "locationContext": {
          "methodName": "testOvsDeleteFlowCommandFailure",
          "methodAnnotations": [
            "@Test"
          ]
        }
      },
      {
        "type": "STUBBING",
        "code": "when(citrixResourceBase.setupvSwitchNetwork(conn)).thenReturn(network);",
        "line": 898,
        "locate": "Test Case",
        "locationContext": {
          "methodName": "testOvsDeleteFlowCommandFailure",
          "methodAnnotations": [
            "@Test"
          ]
        }
      },
      {
        "type": "STUBBING",
        "code": "when(citrixResourceBase.callHostPlugin(conn, \"ovsgre\", \"ovs_delete_flow\", \"bridge\", bridge, \"vmName\", deleteFlowCommand.getVmName())).thenReturn(\"FAILED\");",
        "line": 901,
        "locate": "Test Case",
        "locationContext": {
          "methodName": "testOvsDeleteFlowCommandFailure",
          "methodAnnotations": [
            "@Test"
          ]
        }
      },
      {
        "type": "VERIFICATION",
        "code": "verify(citrixResourceBase, times(1)).getConnection();",
        "line": 913,
        "locate": "Test Case",
        "locationContext": {
          "methodName": "testOvsDeleteFlowCommandFailure",
          "methodAnnotations": [
            "@Test"
          ]
        }
      },
      {
        "type": "VERIFICATION",
        "code": "verify(citrixResourceBase, times(1)).setIsOvs(true);",
        "line": 914,
        "locate": "Test Case",
        "locationContext": {
          "methodName": "testOvsDeleteFlowCommandFailure",
          "methodAnnotations": [
            "@Test"
          ]
        }
      },
      {
        "type": "STUBBING",
        "code": "when(citrixResourceBase.getConnection()).thenReturn(conn);",
        "line": 934,
        "locate": "Test Case",
        "locationContext": {
          "methodName": "testOvsVpcPhysicalTopologyConfigCommand",
          "methodAnnotations": [
            "@Test"
          ]
        }
      },
      {
        "type": "STUBBING",
        "code": "when(citrixResourceBase.findOrCreateTunnelNetwork(conn, physicalTopology.getBridgeName())).thenReturn(network);",
        "line": 936,
        "locate": "Test Case",
        "locationContext": {
          "methodName": "testOvsVpcPhysicalTopologyConfigCommand",
          "methodAnnotations": [
            "@Test"
          ]
        }
      },
      {
        "type": "STUBBING",
        "code": "when(citrixResourceBase.callHostPlugin(conn, \"ovstunnel\", \"configure_ovs_bridge_for_network_topology\", \"bridge\", bridge, \"config\", physicalTopology.getVpcConfigInJson(), \"host-id\", ((Long) physicalTopology.getHostId()).toString(), \"seq-no\", Long.toString(1))).thenReturn(\"SUCCESS\");",
        "line": 939,
        "locate": "Test Case",
        "locationContext": {
          "methodName": "testOvsVpcPhysicalTopologyConfigCommand",
          "methodAnnotations": [
            "@Test"
          ]
        }
      },
      {
        "type": "VERIFICATION",
        "code": "verify(citrixResourceBase, times(1)).getConnection();",
        "line": 954,
        "locate": "Test Case",
        "locationContext": {
          "methodName": "testOvsVpcPhysicalTopologyConfigCommand",
          "methodAnnotations": [
            "@Test"
          ]
        }
      },
      {
        "type": "STUBBING",
        "code": "when(citrixResourceBase.getConnection()).thenReturn(conn);",
        "line": 973,
        "locate": "Test Case",
        "locationContext": {
          "methodName": "testOvsVpcRoutingPolicyConfigCommand",
          "methodAnnotations": [
            "@Test"
          ]
        }
      },
      {
        "type": "STUBBING",
        "code": "when(citrixResourceBase.findOrCreateTunnelNetwork(conn, routingPolicy.getBridgeName())).thenReturn(network);",
        "line": 975,
        "locate": "Test Case",
        "locationContext": {
          "methodName": "testOvsVpcRoutingPolicyConfigCommand",
          "methodAnnotations": [
            "@Test"
          ]
        }
      },
      {
        "type": "STUBBING",
        "code": "when(citrixResourceBase.callHostPlugin(conn, \"ovstunnel\", \"configure_ovs_bridge_for_routing_policies\", \"bridge\", bridge, \"host-id\", ((Long) routingPolicy.getHostId()).toString(), \"config\", routingPolicy.getVpcConfigInJson(), \"seq-no\", Long.toString(1))).thenReturn(\"SUCCESS\");",
        "line": 978,
        "locate": "Test Case",
        "locationContext": {
          "methodName": "testOvsVpcRoutingPolicyConfigCommand",
          "methodAnnotations": [
            "@Test"
          ]
        }
      },
      {
        "type": "VERIFICATION",
        "code": "verify(citrixResourceBase, times(1)).getConnection();",
        "line": 993,
        "locate": "Test Case",
        "locationContext": {
          "methodName": "testOvsVpcRoutingPolicyConfigCommand",
          "methodAnnotations": [
            "@Test"
          ]
        }
      },
      {
        "type": "STUBBING",
        "code": "when(citrixResourceBase.canBridgeFirewall()).thenReturn(true);",
        "line": 1008,
        "locate": "Test Case",
        "locationContext": {
          "methodName": "testCleanupNetworkRulesCmd",
          "methodAnnotations": [
            "@Test"
          ]
        }
      },
      {
        "type": "STUBBING",
        "code": "when(citrixResourceBase.getConnection()).thenReturn(conn);",
        "line": 1009,
        "locate": "Test Case",
        "locationContext": {
          "methodName": "testCleanupNetworkRulesCmd",
          "methodAnnotations": [
            "@Test"
          ]
        }
      },
      {
        "type": "STUBBING",
        "code": "when(citrixResourceBase.getHost()).thenReturn(xsHost);",
        "line": 1010,
        "locate": "Test Case",
        "locationContext": {
          "methodName": "testCleanupNetworkRulesCmd",
          "methodAnnotations": [
            "@Test"
          ]
        }
      },
      {
        "type": "STUBBING",
        "code": "when(citrixResourceBase.getVMInstanceName()).thenReturn(\"VM\");",
        "line": 1011,
        "locate": "Test Case",
        "locationContext": {
          "methodName": "testCleanupNetworkRulesCmd",
          "methodAnnotations": [
            "@Test"
          ]
        }
      },
      {
        "type": "STUBBING",
        "code": "when(citrixResourceBase.callHostPlugin(conn, \"vmops\", \"cleanup_rules\", \"instance\", citrixResourceBase.getVMInstanceName())).thenReturn(\"1\");",
        "line": 1012,
        "locate": "Test Case",
        "locationContext": {
          "methodName": "testCleanupNetworkRulesCmd",
          "methodAnnotations": [
            "@Test"
          ]
        }
      },
      {
        "type": "VERIFICATION",
        "code": "verify(citrixResourceBase, times(1)).getConnection();",
        "line": 1016,
        "locate": "Test Case",
        "locationContext": {
          "methodName": "testCleanupNetworkRulesCmd",
          "methodAnnotations": [
            "@Test"
          ]
        }
      },
      {
        "type": "STUBBING",
        "code": "when(citrixResourceBase.canBridgeFirewall()).thenReturn(true);",
        "line": 1031,
        "locate": "Test Case",
        "locationContext": {
          "methodName": "testCleanupNetworkRulesCmdLTZ",
          "methodAnnotations": [
            "@Test"
          ]
        }
      },
      {
        "type": "STUBBING",
        "code": "when(citrixResourceBase.getConnection()).thenReturn(conn);",
        "line": 1032,
        "locate": "Test Case",
        "locationContext": {
          "methodName": "testCleanupNetworkRulesCmdLTZ",
          "methodAnnotations": [
            "@Test"
          ]
        }
      },
      {
        "type": "STUBBING",
        "code": "when(citrixResourceBase.getHost()).thenReturn(xsHost);",
        "line": 1033,
        "locate": "Test Case",
        "locationContext": {
          "methodName": "testCleanupNetworkRulesCmdLTZ",
          "methodAnnotations": [
            "@Test"
          ]
        }
      },
      {
        "type": "STUBBING",
        "code": "when(citrixResourceBase.getVMInstanceName()).thenReturn(\"VM\");",
        "line": 1034,
        "locate": "Test Case",
        "locationContext": {
          "methodName": "testCleanupNetworkRulesCmdLTZ",
          "methodAnnotations": [
            "@Test"
          ]
        }
      },
      {
        "type": "STUBBING",
        "code": "when(citrixResourceBase.callHostPlugin(conn, \"vmops\", \"cleanup_rules\", \"instance\", citrixResourceBase.getVMInstanceName())).thenReturn(\"-1\");",
        "line": 1035,
        "locate": "Test Case",
        "locationContext": {
          "methodName": "testCleanupNetworkRulesCmdLTZ",
          "methodAnnotations": [
            "@Test"
          ]
        }
      },
      {
        "type": "VERIFICATION",
        "code": "verify(citrixResourceBase, times(1)).getConnection();",
        "line": 1039,
        "locate": "Test Case",
        "locationContext": {
          "methodName": "testCleanupNetworkRulesCmdLTZ",
          "methodAnnotations": [
            "@Test"
          ]
        }
      },
      {
        "type": "STUBBING",
        "code": "when(citrixResourceBase.canBridgeFirewall()).thenReturn(false);",
        "line": 1053,
        "locate": "Test Case",
        "locationContext": {
          "methodName": "testCleanupNetworkRulesCmdNullDetails",
          "methodAnnotations": [
            "@Test"
          ]
        }
      },
      {
        "type": "STUBBING",
        "code": "when(citrixResourceBase.getConnection()).thenReturn(conn);",
        "line": 1069,
        "locate": "Test Case",
        "locationContext": {
          "methodName": "testNetworkRulesSystemVmCommand",
          "methodAnnotations": [
            "@Test"
          ]
        }
      },
      {
        "type": "VERIFICATION",
        "code": "verify(citrixResourceBase, times(1)).getConnection();",
        "line": 1073,
        "locate": "Test Case",
        "locationContext": {
          "methodName": "testNetworkRulesSystemVmCommand",
          "methodAnnotations": [
            "@Test"
          ]
        }
      },
      {
        "type": "STUBBING",
        "code": "when(citrixResourceBase.getConnection()).thenReturn(conn);",
        "line": 1087,
        "locate": "Test Case",
        "locationContext": {
          "methodName": "testNetworkRulesSystemVmCommandNonUser",
          "methodAnnotations": [
            "@Test"
          ]
        }
      },
      {
        "type": "STUBBING",
        "code": "when(citrixResourceBase.callHostPlugin(conn, \"vmops\", \"default_network_rules_systemvm\", \"vmName\", netRules.getVmName())).thenReturn(\"true\");",
        "line": 1088,
        "locate": "Test Case",
        "locationContext": {
          "methodName": "testNetworkRulesSystemVmCommandNonUser",
          "methodAnnotations": [
            "@Test"
          ]
        }
      },
      {
        "type": "VERIFICATION",
        "code": "verify(citrixResourceBase, times(1)).getConnection();",
        "line": 1092,
        "locate": "Test Case",
        "locationContext": {
          "methodName": "testNetworkRulesSystemVmCommandNonUser",
          "methodAnnotations": [
            "@Test"
          ]
        }
      },
      {
        "type": "STUBBING",
        "code": "when(citrixResourceBase.getConnection()).thenReturn(conn);",
        "line": 1106,
        "locate": "Test Case",
        "locationContext": {
          "methodName": "testNetworkRulesSystemVmCommandNonUserFalse",
          "methodAnnotations": [
            "@Test"
          ]
        }
      },
      {
        "type": "STUBBING",
        "code": "when(citrixResourceBase.callHostPlugin(conn, \"vmops\", \"default_network_rules_systemvm\", \"vmName\", netRules.getVmName())).thenReturn(\"false\");",
        "line": 1107,
        "locate": "Test Case",
        "locationContext": {
          "methodName": "testNetworkRulesSystemVmCommandNonUserFalse",
          "methodAnnotations": [
            "@Test"
          ]
        }
      },
      {
        "type": "VERIFICATION",
        "code": "verify(citrixResourceBase, times(1)).getConnection();",
        "line": 1111,
        "locate": "Test Case",
        "locationContext": {
          "methodName": "testNetworkRulesSystemVmCommandNonUserFalse",
          "methodAnnotations": [
            "@Test"
          ]
        }
      },
      {
        "type": "STUBBING",
        "code": "when(citrixResourceBase.getConnection()).thenReturn(conn);",
        "line": 1127,
        "locate": "Test Case",
        "locationContext": {
          "methodName": "testOvsCreateTunnelCommandSuccess",
          "methodAnnotations": [
            "@Test"
          ]
        }
      },
      {
        "type": "STUBBING",
        "code": "when(citrixResourceBase.findOrCreateTunnelNetwork(conn, createTunnel.getNetworkName())).thenReturn(network);",
        "line": 1129,
        "locate": "Test Case",
        "locationContext": {
          "methodName": "testOvsCreateTunnelCommandSuccess",
          "methodAnnotations": [
            "@Test"
          ]
        }
      },
      {
        "type": "STUBBING",
        "code": "when(citrixResourceBase.callHostPlugin(conn, \"ovstunnel\", \"create_tunnel\", \"bridge\", bridge, \"remote_ip\", createTunnel.getRemoteIp(), \"key\", createTunnel.getKey().toString(), \"from\", createTunnel.getFrom().toString(), \"to\", createTunnel.getTo().toString(), \"cloudstack-network-id\", createTunnel.getNetworkUuid())).thenReturn(\"SUCCESS:0\");",
        "line": 1132,
        "locate": "Test Case",
        "locationContext": {
          "methodName": "testOvsCreateTunnelCommandSuccess",
          "methodAnnotations": [
            "@Test"
          ]
        }
      },
      {
        "type": "VERIFICATION",
        "code": "verify(citrixResourceBase, times(1)).getConnection();",
        "line": 1147,
        "locate": "Test Case",
        "locationContext": {
          "methodName": "testOvsCreateTunnelCommandSuccess",
          "methodAnnotations": [
            "@Test"
          ]
        }
      },
      {
        "type": "VERIFICATION",
        "code": "verify(citrixResourceBase, times(1)).configureTunnelNetwork(conn, createTunnel.getNetworkId(), createTunnel.getFrom(), createTunnel.getNetworkName());",
        "line": 1148,
        "locate": "Test Case",
        "locationContext": {
          "methodName": "testOvsCreateTunnelCommandSuccess",
          "methodAnnotations": [
            "@Test"
          ]
        }
      },
      {
        "type": "STUBBING",
        "code": "when(citrixResourceBase.getConnection()).thenReturn(conn);",
        "line": 1164,
        "locate": "Test Case",
        "locationContext": {
          "methodName": "testOvsCreateTunnelCommandFail",
          "methodAnnotations": [
            "@Test"
          ]
        }
      },
      {
        "type": "STUBBING",
        "code": "when(citrixResourceBase.findOrCreateTunnelNetwork(conn, createTunnel.getNetworkName())).thenReturn(network);",
        "line": 1166,
        "locate": "Test Case",
        "locationContext": {
          "methodName": "testOvsCreateTunnelCommandFail",
          "methodAnnotations": [
            "@Test"
          ]
        }
      },
      {
        "type": "STUBBING",
        "code": "when(citrixResourceBase.callHostPlugin(conn, \"ovstunnel\", \"create_tunnel\", \"bridge\", bridge, \"remote_ip\", createTunnel.getRemoteIp(), \"key\", createTunnel.getKey().toString(), \"from\", createTunnel.getFrom().toString(), \"to\", createTunnel.getTo().toString(), \"cloudstack-network-id\", createTunnel.getNetworkUuid())).thenReturn(\"FAIL:1\");",
        "line": 1169,
        "locate": "Test Case",
        "locationContext": {
          "methodName": "testOvsCreateTunnelCommandFail",
          "methodAnnotations": [
            "@Test"
          ]
        }
      },
      {
        "type": "VERIFICATION",
        "code": "verify(citrixResourceBase, times(1)).getConnection();",
        "line": 1184,
        "locate": "Test Case",
        "locationContext": {
          "methodName": "testOvsCreateTunnelCommandFail",
          "methodAnnotations": [
            "@Test"
          ]
        }
      },
      {
        "type": "VERIFICATION",
        "code": "verify(citrixResourceBase, times(1)).configureTunnelNetwork(conn, createTunnel.getNetworkId(), createTunnel.getFrom(), createTunnel.getNetworkName());",
        "line": 1185,
        "locate": "Test Case",
        "locationContext": {
          "methodName": "testOvsCreateTunnelCommandFail",
          "methodAnnotations": [
            "@Test"
          ]
        }
      },
      {
        "type": "STUBBING",
        "code": "when(citrixResourceBase.getConnection()).thenReturn(conn);",
        "line": 1199,
        "locate": "Test Case",
        "locationContext": {
          "methodName": "testOvsCreateTunnelCommandNoNet",
          "methodAnnotations": [
            "@Test"
          ]
        }
      },
      {
        "type": "STUBBING",
        "code": "when(citrixResourceBase.findOrCreateTunnelNetwork(conn, createTunnel.getNetworkName())).thenReturn(null);",
        "line": 1200,
        "locate": "Test Case",
        "locationContext": {
          "methodName": "testOvsCreateTunnelCommandNoNet",
          "methodAnnotations": [
            "@Test"
          ]
        }
      },
      {
        "type": "VERIFICATION",
        "code": "verify(citrixResourceBase, times(1)).getConnection();",
        "line": 1204,
        "locate": "Test Case",
        "locationContext": {
          "methodName": "testOvsCreateTunnelCommandNoNet",
          "methodAnnotations": [
            "@Test"
          ]
        }
      },
      {
        "type": "STUBBING",
        "code": "when(citrixResourceBase.getConnection()).thenReturn(conn);",
        "line": 1218,
        "locate": "Test Case",
        "locationContext": {
          "methodName": "testOvsSetupBridgeCommand",
          "methodAnnotations": [
            "@Test"
          ]
        }
      },
      {
        "type": "VERIFICATION",
        "code": "verify(citrixResourceBase, times(1)).getConnection();",
        "line": 1222,
        "locate": "Test Case",
        "locationContext": {
          "methodName": "testOvsSetupBridgeCommand",
          "methodAnnotations": [
            "@Test"
          ]
        }
      },
      {
        "type": "VERIFICATION",
        "code": "verify(citrixResourceBase, times(1)).findOrCreateTunnelNetwork(conn, setupBridge.getBridgeName());",
        "line": 1223,
        "locate": "Test Case",
        "locationContext": {
          "methodName": "testOvsSetupBridgeCommand",
          "methodAnnotations": [
            "@Test"
          ]
        }
      },
      {
        "type": "VERIFICATION",
        "code": "verify(citrixResourceBase, times(1)).configureTunnelNetwork(conn, setupBridge.getNetworkId(), setupBridge.getHostId(), setupBridge.getBridgeName());",
        "line": 1224,
        "locate": "Test Case",
        "locationContext": {
          "methodName": "testOvsSetupBridgeCommand",
          "methodAnnotations": [
            "@Test"
          ]
        }
      },
      {
        "type": "STUBBING",
        "code": "when(citrixResourceBase.getConnection()).thenReturn(conn);",
        "line": 1239,
        "locate": "Test Case",
        "locationContext": {
          "methodName": "testOvsDestroyBridgeCommand",
          "methodAnnotations": [
            "@Test"
          ]
        }
      },
      {
        "type": "STUBBING",
        "code": "when(citrixResourceBase.findOrCreateTunnelNetwork(conn, destroyBridge.getBridgeName())).thenReturn(network);",
        "line": 1240,
        "locate": "Test Case",
        "locationContext": {
          "methodName": "testOvsDestroyBridgeCommand",
          "methodAnnotations": [
            "@Test"
          ]
        }
      },
      {
        "type": "VERIFICATION",
        "code": "verify(citrixResourceBase, times(1)).getConnection();",
        "line": 1244,
        "locate": "Test Case",
        "locationContext": {
          "methodName": "testOvsDestroyBridgeCommand",
          "methodAnnotations": [
            "@Test"
          ]
        }
      },
      {
        "type": "VERIFICATION",
        "code": "verify(citrixResourceBase, times(1)).cleanUpTmpDomVif(conn, network);",
        "line": 1246,
        "locate": "Test Case",
        "locationContext": {
          "methodName": "testOvsDestroyBridgeCommand",
          "methodAnnotations": [
            "@Test"
          ]
        }
      },
      {
        "type": "VERIFICATION",
        "code": "verify(citrixResourceBase, times(1)).destroyTunnelNetwork(conn, network, destroyBridge.getHostId());",
        "line": 1252,
        "locate": "Test Case",
        "locationContext": {
          "methodName": "testOvsDestroyBridgeCommand",
          "methodAnnotations": [
            "@Test"
          ]
        }
      },
      {
        "type": "STUBBING",
        "code": "when(citrixResourceBase.getConnection()).thenReturn(conn);",
        "line": 1268,
        "locate": "Test Case",
        "locationContext": {
          "methodName": "testOvsDestroyTunnelCommandSuccess",
          "methodAnnotations": [
            "@Test"
          ]
        }
      },
      {
        "type": "STUBBING",
        "code": "when(citrixResourceBase.findOrCreateTunnelNetwork(conn, destroyTunnel.getBridgeName())).thenReturn(network);",
        "line": 1270,
        "locate": "Test Case",
        "locationContext": {
          "methodName": "testOvsDestroyTunnelCommandSuccess",
          "methodAnnotations": [
            "@Test"
          ]
        }
      },
      {
        "type": "STUBBING",
        "code": "when(citrixResourceBase.callHostPlugin(conn, \"ovstunnel\", \"destroy_tunnel\", \"bridge\", bridge, \"in_port\", destroyTunnel.getInPortName())).thenReturn(\"SUCCESS\");",
        "line": 1273,
        "locate": "Test Case",
        "locationContext": {
          "methodName": "testOvsDestroyTunnelCommandSuccess",
          "methodAnnotations": [
            "@Test"
          ]
        }
      },
      {
        "type": "VERIFICATION",
        "code": "verify(citrixResourceBase, times(1)).getConnection();",
        "line": 1285,
        "locate": "Test Case",
        "locationContext": {
          "methodName": "testOvsDestroyTunnelCommandSuccess",
          "methodAnnotations": [
            "@Test"
          ]
        }
      },
      {
        "type": "STUBBING",
        "code": "when(citrixResourceBase.getConnection()).thenReturn(conn);",
        "line": 1301,
        "locate": "Test Case",
        "locationContext": {
          "methodName": "testOvsDestroyTunnelCommandFailed",
          "methodAnnotations": [
            "@Test"
          ]
        }
      },
      {
        "type": "STUBBING",
        "code": "when(citrixResourceBase.findOrCreateTunnelNetwork(conn, destroyTunnel.getBridgeName())).thenReturn(network);",
        "line": 1303,
        "locate": "Test Case",
        "locationContext": {
          "methodName": "testOvsDestroyTunnelCommandFailed",
          "methodAnnotations": [
            "@Test"
          ]
        }
      },
      {
        "type": "STUBBING",
        "code": "when(citrixResourceBase.callHostPlugin(conn, \"ovstunnel\", \"destroy_tunnel\", \"bridge\", bridge, \"in_port\", destroyTunnel.getInPortName())).thenReturn(\"FAILED\");",
        "line": 1306,
        "locate": "Test Case",
        "locationContext": {
          "methodName": "testOvsDestroyTunnelCommandFailed",
          "methodAnnotations": [
            "@Test"
          ]
        }
      },
      {
        "type": "VERIFICATION",
        "code": "verify(citrixResourceBase, times(1)).getConnection();",
        "line": 1318,
        "locate": "Test Case",
        "locationContext": {
          "methodName": "testOvsDestroyTunnelCommandFailed",
          "methodAnnotations": [
            "@Test"
          ]
        }
      },
      {
        "type": "STUBBING",
        "code": "when(citrixResourceBase.getPwdFromQueue()).thenReturn(\"password\");",
        "line": 1331,
        "locate": "Test Case",
        "locationContext": {
          "methodName": "testUpdateHostPasswordCommand",
          "methodAnnotations": [
            "@SuppressWarnings",
            "@Test"
          ]
        }
      },
      {
        "type": "STUBBING",
        "code": "when(citrixResourceBase.getXenServerUtilitiesHelper()).thenReturn(xenServerUtilitiesHelper);",
        "line": 1341,
        "locate": "Test Case",
        "locationContext": {
          "methodName": "testUpdateHostPasswordCommand",
          "methodAnnotations": [
            "@SuppressWarnings",
            "@Test"
          ]
        }
      },
      {
        "type": "VERIFICATION",
        "code": "verify(citrixResourceBase, times(2)).getPwdFromQueue();",
        "line": 1358,
        "locate": "Test Case",
        "locationContext": {
          "methodName": "testUpdateHostPasswordCommand",
          "methodAnnotations": [
            "@SuppressWarnings",
            "@Test"
          ]
        }
      },
      {
        "type": "VERIFICATION",
        "code": "verify(citrixResourceBase, times(1)).getXenServerUtilitiesHelper();",
        "line": 1359,
        "locate": "Test Case",
        "locationContext": {
          "methodName": "testUpdateHostPasswordCommand",
          "methodAnnotations": [
            "@SuppressWarnings",
            "@Test"
          ]
        }
      },
      {
        "type": "STUBBING",
        "code": "when(citrixResourceBase.getPwdFromQueue()).thenReturn(\"password\");",
        "line": 1380,
        "locate": "Test Case",
        "locationContext": {
          "methodName": "testUpdateHostPasswordCommandFail",
          "methodAnnotations": [
            "@SuppressWarnings",
            "@Test"
          ]
        }
      },
      {
        "type": "STUBBING",
        "code": "when(citrixResourceBase.getXenServerUtilitiesHelper()).thenReturn(xenServerUtilitiesHelper);",
        "line": 1390,
        "locate": "Test Case",
        "locationContext": {
          "methodName": "testUpdateHostPasswordCommandFail",
          "methodAnnotations": [
            "@SuppressWarnings",
            "@Test"
          ]
        }
      },
      {
        "type": "VERIFICATION",
        "code": "verify(citrixResourceBase, times(2)).getPwdFromQueue();",
        "line": 1407,
        "locate": "Test Case",
        "locationContext": {
          "methodName": "testUpdateHostPasswordCommandFail",
          "methodAnnotations": [
            "@SuppressWarnings",
            "@Test"
          ]
        }
      },
      {
        "type": "VERIFICATION",
        "code": "verify(citrixResourceBase, times(1)).getXenServerUtilitiesHelper();",
        "line": 1408,
        "locate": "Test Case",
        "locationContext": {
          "methodName": "testUpdateHostPasswordCommandFail",
          "methodAnnotations": [
            "@SuppressWarnings",
            "@Test"
          ]
        }
      },
      {
        "type": "STUBBING",
        "code": "when(citrixResourceBase.getPwdFromQueue()).thenReturn(\"password\");",
        "line": 1427,
        "locate": "Test Case",
        "locationContext": {
          "methodName": "testUpdateHostPasswordCommandException",
          "methodAnnotations": [
            "@Test"
          ]
        }
      },
      {
        "type": "STUBBING",
        "code": "when(citrixResourceBase.getXenServerUtilitiesHelper()).thenReturn(xenServerUtilitiesHelper);",
        "line": 1437,
        "locate": "Test Case",
        "locationContext": {
          "methodName": "testUpdateHostPasswordCommandException",
          "methodAnnotations": [
            "@Test"
          ]
        }
      },
      {
        "type": "VERIFICATION",
        "code": "verify(citrixResourceBase, times(2)).getPwdFromQueue();",
        "line": 1452,
        "locate": "Test Case",
        "locationContext": {
          "methodName": "testUpdateHostPasswordCommandException",
          "methodAnnotations": [
            "@Test"
          ]
        }
      },
      {
        "type": "VERIFICATION",
        "code": "verify(citrixResourceBase, times(1)).getXenServerUtilitiesHelper();",
        "line": 1453,
        "locate": "Test Case",
        "locationContext": {
          "methodName": "testUpdateHostPasswordCommandException",
          "methodAnnotations": [
            "@Test"
          ]
        }
      },
      {
        "type": "STUBBING",
        "code": "when(citrixResourceBase.getConnection()).thenReturn(conn);",
        "line": 1481,
        "locate": "Test Case",
        "locationContext": {
          "methodName": "testClusterVMMetaDataSyncCommand",
          "methodAnnotations": [
            "@Test"
          ]
        }
      },
      {
        "type": "STUBBING",
        "code": "when(citrixResourceBase.getHost()).thenReturn(xsHost);",
        "line": 1483,
        "locate": "Test Case",
        "locationContext": {
          "methodName": "testClusterVMMetaDataSyncCommand",
          "methodAnnotations": [
            "@Test"
          ]
        }
      },
      {
        "type": "STUBBING",
        "code": "when(citrixResourceBase.getHost().getUuid()).thenReturn(uuid);",
        "line": 1484,
        "locate": "Test Case",
        "locationContext": {
          "methodName": "testClusterVMMetaDataSyncCommand",
          "methodAnnotations": [
            "@Test"
          ]
        }
      },
      {
        "type": "VERIFICATION",
        "code": "verify(citrixResourceBase, times(1)).getConnection();",
        "line": 1503,
        "locate": "Test Case",
        "locationContext": {
          "methodName": "testClusterVMMetaDataSyncCommand",
          "methodAnnotations": [
            "@Test"
          ]
        }
      },
      {
        "type": "STUBBING",
        "code": "when(citrixResourceBase.getConnection()).thenReturn(conn);",
        "line": 1549,
        "locate": "Test Case",
        "locationContext": {
          "methodName": "testPlugNicCommand",
          "methodAnnotations": [
            "@Test"
          ]
        }
      },
      {
        "type": "VERIFICATION",
        "code": "verify(citrixResourceBase, times(1)).getConnection();",
        "line": 1553,
        "locate": "Test Case",
        "locationContext": {
          "methodName": "testPlugNicCommand",
          "methodAnnotations": [
            "@Test"
          ]
        }
      },
      {
        "type": "STUBBING",
        "code": "when(citrixResourceBase.getConnection()).thenReturn(conn);",
        "line": 1568,
        "locate": "Test Case",
        "locationContext": {
          "methodName": "testUnPlugNicCommand",
          "methodAnnotations": [
            "@Test"
          ]
        }
      },
      {
        "type": "VERIFICATION",
        "code": "verify(citrixResourceBase, times(1)).getConnection();",
        "line": 1572,
        "locate": "Test Case",
        "locationContext": {
          "methodName": "testUnPlugNicCommand",
          "methodAnnotations": [
            "@Test"
          ]
        }
      },
      {
        "type": "STUBBING",
        "code": "when(citrixResourceBase.getConnection()).thenReturn(conn);",
        "line": 1589,
        "locate": "Test Case",
        "locationContext": {
          "methodName": "testCreateVMSnapshotCommand",
          "methodAnnotations": [
            "@Test"
          ]
        }
      },
      {
        "type": "VERIFICATION",
        "code": "verify(citrixResourceBase, times(1)).getConnection();",
        "line": 1593,
        "locate": "Test Case",
        "locationContext": {
          "methodName": "testCreateVMSnapshotCommand",
          "methodAnnotations": [
            "@Test"
          ]
        }
      },
      {
        "type": "STUBBING",
        "code": "when(citrixResourceBase.getConnection()).thenReturn(conn);",
        "line": 1610,
        "locate": "Test Case",
        "locationContext": {
          "methodName": "testDeleteVMSnapshotCommand",
          "methodAnnotations": [
            "@Test"
          ]
        }
      },
      {
        "type": "VERIFICATION",
        "code": "verify(citrixResourceBase, times(1)).getConnection();",
        "line": 1614,
        "locate": "Test Case",
        "locationContext": {
          "methodName": "testDeleteVMSnapshotCommand",
          "methodAnnotations": [
            "@Test"
          ]
        }
      },
      {
        "type": "STUBBING",
        "code": "when(citrixResourceBase.getConnection()).thenReturn(conn);",
        "line": 1631,
        "locate": "Test Case",
        "locationContext": {
          "methodName": "testRevertToVMSnapshotCommand",
          "methodAnnotations": [
            "@Test"
          ]
        }
      },
      {
        "type": "VERIFICATION",
        "code": "verify(citrixResourceBase, times(1)).getConnection();",
        "line": 1635,
        "locate": "Test Case",
        "locationContext": {
          "methodName": "testRevertToVMSnapshotCommand",
          "methodAnnotations": [
            "@Test"
          ]
        }
      },
      {
        "type": "STUBBING",
        "code": "when(citrixResourceBase.getConnection()).thenReturn(conn);",
        "line": 1649,
        "locate": "Test Case",
        "locationContext": {
          "methodName": "testNetworkRulesVmSecondaryIpCommandSuccess",
          "methodAnnotations": [
            "@Test"
          ]
        }
      },
      {
        "type": "STUBBING",
        "code": "when(citrixResourceBase.callHostPlugin(conn, \"vmops\", \"network_rules_vmSecondaryIp\", \"vmName\", rulesVm.getVmName(), \"vmMac\", rulesVm.getVmMac(), \"vmSecIp\", rulesVm.getVmSecIp(), \"action\", rulesVm.getAction())).thenReturn(\"true\");",
        "line": 1650,
        "locate": "Test Case",
        "locationContext": {
          "methodName": "testNetworkRulesVmSecondaryIpCommandSuccess",
          "methodAnnotations": [
            "@Test"
          ]
        }
      },
      {
        "type": "VERIFICATION",
        "code": "verify(citrixResourceBase, times(1)).getConnection();",
        "line": 1655,
        "locate": "Test Case",
        "locationContext": {
          "methodName": "testNetworkRulesVmSecondaryIpCommandSuccess",
          "methodAnnotations": [
            "@Test"
          ]
        }
      },
      {
        "type": "STUBBING",
        "code": "when(citrixResourceBase.getConnection()).thenReturn(conn);",
        "line": 1669,
        "locate": "Test Case",
        "locationContext": {
          "methodName": "testNetworkRulesVmSecondaryIpCommandFailure",
          "methodAnnotations": [
            "@Test"
          ]
        }
      },
      {
        "type": "STUBBING",
        "code": "when(citrixResourceBase.callHostPlugin(conn, \"vmops\", \"network_rules_vmSecondaryIp\", \"vmName\", rulesVm.getVmName(), \"vmMac\", rulesVm.getVmMac(), \"vmSecIp\", rulesVm.getVmSecIp(), \"action\", rulesVm.getAction())).thenReturn(\"false\");",
        "line": 1670,
        "locate": "Test Case",
        "locationContext": {
          "methodName": "testNetworkRulesVmSecondaryIpCommandFailure",
          "methodAnnotations": [
            "@Test"
          ]
        }
      },
      {
        "type": "VERIFICATION",
        "code": "verify(citrixResourceBase, times(1)).getConnection();",
        "line": 1675,
        "locate": "Test Case",
        "locationContext": {
          "methodName": "testNetworkRulesVmSecondaryIpCommandFailure",
          "methodAnnotations": [
            "@Test"
          ]
        }
      },
      {
        "type": "STUBBING",
        "code": "when(citrixResourceBase.getConnection()).thenReturn(conn);",
        "line": 1694,
        "locate": "Test Case",
        "locationContext": {
          "methodName": "testScaleVmCommand",
          "methodAnnotations": [
            "@Test"
          ]
        }
      },
      {
        "type": "STUBBING",
        "code": "when(citrixResourceBase.getHost()).thenReturn(xsHost);",
        "line": 1695,
        "locate": "Test Case",
        "locationContext": {
          "methodName": "testScaleVmCommand",
          "methodAnnotations": [
            "@Test"
          ]
        }
      },
      {
        "type": "STUBBING",
        "code": "when(citrixResourceBase.getHost().getUuid()).thenReturn(uuid);",
        "line": 1696,
        "locate": "Test Case",
        "locationContext": {
          "methodName": "testScaleVmCommand",
          "methodAnnotations": [
            "@Test"
          ]
        }
      },
      {
        "type": "STUBBING",
        "code": "when(citrixResourceBase.isDmcEnabled(conn, host)).thenReturn(true);",
        "line": 1699,
        "locate": "Test Case",
        "locationContext": {
          "methodName": "testScaleVmCommand",
          "methodAnnotations": [
            "@Test"
          ]
        }
      },
      {
        "type": "VERIFICATION",
        "code": "verify(citrixResourceBase, times(1)).getConnection();",
        "line": 1708,
        "locate": "Test Case",
        "locationContext": {
          "methodName": "testScaleVmCommand",
          "methodAnnotations": [
            "@Test"
          ]
        }
      },
      {
        "type": "STUBBING",
        "code": "when(citrixResourceBase.getConnection()).thenReturn(conn);",
        "line": 1733,
        "locate": "Test Case",
        "locationContext": {
          "methodName": "testPvlanSetupCommandDhcpSuccess",
          "methodAnnotations": [
            "@Test"
          ]
        }
      },
      {
        "type": "STUBBING",
        "code": "when(citrixResourceBase.getNativeNetworkForTraffic(conn, TrafficType.Guest, \"tag\")).thenReturn(network);",
        "line": 1735,
        "locate": "Test Case",
        "locationContext": {
          "methodName": "testPvlanSetupCommandDhcpSuccess",
          "methodAnnotations": [
            "@Test"
          ]
        }
      },
      {
        "type": "STUBBING",
        "code": "when(citrixResourceBase.callHostPlugin(conn, \"ovs-pvlan\", \"setup-pvlan-dhcp\", \"op\", op, \"nw-label\", label, \"primary-pvlan\", primaryPvlan, \"isolated-pvlan\", isolatedPvlan, \"dhcp-name\", dhcpName, \"dhcp-ip\", dhcpIp, \"dhcp-mac\", dhcpMac)).thenReturn(\"true\");",
        "line": 1744,
        "locate": "Test Case",
        "locationContext": {
          "methodName": "testPvlanSetupCommandDhcpSuccess",
          "methodAnnotations": [
            "@Test"
          ]
        }
      },
      {
        "type": "VERIFICATION",
        "code": "verify(citrixResourceBase, times(1)).getConnection();",
        "line": 1749,
        "locate": "Test Case",
        "locationContext": {
          "methodName": "testPvlanSetupCommandDhcpSuccess",
          "methodAnnotations": [
            "@Test"
          ]
        }
      },
      {
        "type": "STUBBING",
        "code": "when(citrixResourceBase.getConnection()).thenReturn(conn);",
        "line": 1774,
        "locate": "Test Case",
        "locationContext": {
          "methodName": "testPvlanSetupCommandDhcpFailure",
          "methodAnnotations": [
            "@Test"
          ]
        }
      },
      {
        "type": "STUBBING",
        "code": "when(citrixResourceBase.getNativeNetworkForTraffic(conn, TrafficType.Guest, \"tag\")).thenReturn(network);",
        "line": 1776,
        "locate": "Test Case",
        "locationContext": {
          "methodName": "testPvlanSetupCommandDhcpFailure",
          "methodAnnotations": [
            "@Test"
          ]
        }
      },
      {
        "type": "STUBBING",
        "code": "when(citrixResourceBase.callHostPlugin(conn, \"ovs-pvlan\", \"setup-pvlan-dhcp\", \"op\", op, \"nw-label\", label, \"primary-pvlan\", primaryPvlan, \"isolated-pvlan\", isolatedPvlan, \"dhcp-name\", dhcpName, \"dhcp-ip\", dhcpIp, \"dhcp-mac\", dhcpMac)).thenReturn(\"false\");",
        "line": 1785,
        "locate": "Test Case",
        "locationContext": {
          "methodName": "testPvlanSetupCommandDhcpFailure",
          "methodAnnotations": [
            "@Test"
          ]
        }
      },
      {
        "type": "VERIFICATION",
        "code": "verify(citrixResourceBase, times(1)).getConnection();",
        "line": 1790,
        "locate": "Test Case",
        "locationContext": {
          "methodName": "testPvlanSetupCommandDhcpFailure",
          "methodAnnotations": [
            "@Test"
          ]
        }
      },
      {
        "type": "STUBBING",
        "code": "when(citrixResourceBase.getConnection()).thenReturn(conn);",
        "line": 1813,
        "locate": "Test Case",
        "locationContext": {
          "methodName": "testPvlanSetupCommandVmSuccess",
          "methodAnnotations": [
            "@Test"
          ]
        }
      },
      {
        "type": "STUBBING",
        "code": "when(citrixResourceBase.getNativeNetworkForTraffic(conn, TrafficType.Guest, \"tag\")).thenReturn(network);",
        "line": 1815,
        "locate": "Test Case",
        "locationContext": {
          "methodName": "testPvlanSetupCommandVmSuccess",
          "methodAnnotations": [
            "@Test"
          ]
        }
      },
      {
        "type": "STUBBING",
        "code": "when(citrixResourceBase.callHostPlugin(conn, \"ovs-pvlan\", \"setup-pvlan-vm\", \"op\", op, \"nw-label\", label, \"primary-pvlan\", primaryPvlan, \"isolated-pvlan\", isolatedPvlan, \"vm-mac\", vmMac)).thenReturn(\"true\");",
        "line": 1824,
        "locate": "Test Case",
        "locationContext": {
          "methodName": "testPvlanSetupCommandVmSuccess",
          "methodAnnotations": [
            "@Test"
          ]
        }
      },
      {
        "type": "VERIFICATION",
        "code": "verify(citrixResourceBase, times(1)).getConnection();",
        "line": 1829,
        "locate": "Test Case",
        "locationContext": {
          "methodName": "testPvlanSetupCommandVmSuccess",
          "methodAnnotations": [
            "@Test"
          ]
        }
      },
      {
        "type": "STUBBING",
        "code": "when(citrixResourceBase.getConnection()).thenReturn(conn);",
        "line": 1852,
        "locate": "Test Case",
        "locationContext": {
          "methodName": "testPvlanSetupCommandVmFailure",
          "methodAnnotations": [
            "@Test"
          ]
        }
      },
      {
        "type": "STUBBING",
        "code": "when(citrixResourceBase.getNativeNetworkForTraffic(conn, TrafficType.Guest, \"tag\")).thenReturn(network);",
        "line": 1854,
        "locate": "Test Case",
        "locationContext": {
          "methodName": "testPvlanSetupCommandVmFailure",
          "methodAnnotations": [
            "@Test"
          ]
        }
      },
      {
        "type": "STUBBING",
        "code": "when(citrixResourceBase.callHostPlugin(conn, \"ovs-pvlan\", \"setup-pvlan-vm\", \"op\", op, \"nw-label\", label, \"primary-pvlan\", primaryPvlan, \"isolated-pvlan\", isolatedPvlan, \"vm-mac\", vmMac)).thenReturn(\"false\");",
        "line": 1863,
        "locate": "Test Case",
        "locationContext": {
          "methodName": "testPvlanSetupCommandVmFailure",
          "methodAnnotations": [
            "@Test"
          ]
        }
      },
      {
        "type": "VERIFICATION",
        "code": "verify(citrixResourceBase, times(1)).getConnection();",
        "line": 1868,
        "locate": "Test Case",
        "locationContext": {
          "methodName": "testPvlanSetupCommandVmFailure",
          "methodAnnotations": [
            "@Test"
          ]
        }
      },
      {
        "type": "STUBBING",
        "code": "when(citrixResourceBase.getConnection()).thenReturn(conn);",
        "line": 1882,
        "locate": "Test Case",
        "locationContext": {
          "methodName": "testPerformanceMonitorCommandSuccess",
          "methodAnnotations": [
            "@Test"
          ]
        }
      },
      {
        "type": "STUBBING",
        "code": "when(citrixResourceBase.getPerfMon(conn, performanceMonitor.getParams(), performanceMonitor.getWait())).thenReturn(\"performance\");",
        "line": 1883,
        "locate": "Test Case",
        "locationContext": {
          "methodName": "testPerformanceMonitorCommandSuccess",
          "methodAnnotations": [
            "@Test"
          ]
        }
      },
      {
        "type": "VERIFICATION",
        "code": "verify(citrixResourceBase, times(1)).getConnection();",
        "line": 1887,
        "locate": "Test Case",
        "locationContext": {
          "methodName": "testPerformanceMonitorCommandSuccess",
          "methodAnnotations": [
            "@Test"
          ]
        }
      },
      {
        "type": "STUBBING",
        "code": "when(citrixResourceBase.getConnection()).thenReturn(conn);",
        "line": 1901,
        "locate": "Test Case",
        "locationContext": {
          "methodName": "testPerformanceMonitorCommandFailure",
          "methodAnnotations": [
            "@Test"
          ]
        }
      },
      {
        "type": "STUBBING",
        "code": "when(citrixResourceBase.getPerfMon(conn, performanceMonitor.getParams(), performanceMonitor.getWait())).thenReturn(null);",
        "line": 1902,
        "locate": "Test Case",
        "locationContext": {
          "methodName": "testPerformanceMonitorCommandFailure",
          "methodAnnotations": [
            "@Test"
          ]
        }
      },
      {
        "type": "VERIFICATION",
        "code": "verify(citrixResourceBase, times(1)).getConnection();",
        "line": 1906,
        "locate": "Test Case",
        "locationContext": {
          "methodName": "testPerformanceMonitorCommandFailure",
          "methodAnnotations": [
            "@Test"
          ]
        }
      },
      {
        "type": "STUBBING",
        "code": "when(citrixResourceBase.getVirtualRoutingResource()).thenReturn(routingResource);",
        "line": 1921,
        "locate": "Test Case",
        "locationContext": {
          "methodName": "testIpAssocVpcCommand",
          "methodAnnotations": [
            "@Test"
          ]
        }
      },
      {
        "type": "STUBBING",
        "code": "when(citrixResourceBase.getVirtualRoutingResource()).thenReturn(routingResource);",
        "line": 1941,
        "locate": "Test Case",
        "locationContext": {
          "methodName": "testIpAssocCommand",
          "methodAnnotations": [
            "@Test"
          ]
        }
      },
      {
        "type": "STUBBING",
        "code": "when(citrixResourceBase.getStorageHandler()).thenReturn(handler);",
        "line": 1958,
        "locate": "Test Case",
        "locationContext": {
          "methodName": "testStorageSubSystemCommand",
          "methodAnnotations": [
            "@Test"
          ]
        }
      },
      {
        "type": "STUBBING",
        "code": "when(citrixResourceBase.getConnection()).thenReturn(conn);",
        "line": 1986,
        "locate": "Test Case",
        "locationContext": {
          "methodName": "testGetVmIpAddressCommand",
          "methodAnnotations": [
            "@Test"
          ]
        }
      },
      {
        "type": "STUBBING",
        "code": "when(citrixResourceBase.getVM(conn, getVmIpAddrCmd.getVmName())).thenReturn(vm);",
        "line": 1987,
        "locate": "Test Case",
        "locationContext": {
          "methodName": "testGetVmIpAddressCommand",
          "methodAnnotations": [
            "@Test"
          ]
        }
      },
      {
        "type": "VERIFICATION",
        "code": "verify(citrixResourceBase, times(1)).getConnection();",
        "line": 1993,
        "locate": "Test Case",
        "locationContext": {
          "methodName": "testGetVmIpAddressCommand",
          "methodAnnotations": [
            "@Test"
          ]
        }
      }
    ],
    "pattern_id": 8
  }
]