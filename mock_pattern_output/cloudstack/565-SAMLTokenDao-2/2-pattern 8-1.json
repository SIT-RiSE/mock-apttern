[
  {
    "variableName": "samlTokenDao",
    "variableType": "SAMLTokenDao",
    "mockedClass": "SAMLTokenDao",
    "isReuseableMock": "Hybrid",
    "mockPattern": "Creation:\n\u2014 Attribute Mock Creation\n\nStubbing:\n\u2014 Test Case\n\nVerification:\n\u2014 Test Case",
    "classContext": {
      "packageName": "org.apache.cloudstack",
      "filePath": "C:\\java tool\\Apache\\cloudstack\\plugins\\user-authenticators\\saml2\\src\\test\\java\\org\\apache\\cloudstack\\SAML2AuthManagerImplTest.java",
      "className": "SAML2AuthManagerImplTest"
    },
    "statements": [
      {
        "type": "FIELD_MOCK_CREATION",
        "code": "@Mock\r\nprivate SAMLTokenDao samlTokenDao;",
        "line": 47,
        "locate": "Attribute",
        "locationContext": {
          "methodName": "[FieldDeclaration]",
          "methodAnnotations": [
            "@Mock"
          ]
        }
      },
      {
        "type": "STUBBING",
        "code": "// duplicate token test\r\nMockito.when(samlTokenDao.findByUuid(Mockito.anyString())).thenReturn(new SAMLTokenVO());",
        "line": 125,
        "locate": "Test Case",
        "locationContext": {
          "methodName": "testSaveToken",
          "methodAnnotations": [
            "@Test"
          ]
        }
      },
      {
        "type": "VERIFICATION",
        "code": "Mockito.verify(samlTokenDao, Mockito.times(0)).persist(Mockito.any(SAMLTokenVO.class));",
        "line": 127,
        "locate": "Test Case",
        "locationContext": {
          "methodName": "testSaveToken",
          "methodAnnotations": [
            "@Test"
          ]
        }
      },
      {
        "type": "STUBBING",
        "code": "// valid test\r\nMockito.when(samlTokenDao.findByUuid(Mockito.anyString())).thenReturn(null);",
        "line": 130,
        "locate": "Test Case",
        "locationContext": {
          "methodName": "testSaveToken",
          "methodAnnotations": [
            "@Test"
          ]
        }
      },
      {
        "type": "VERIFICATION",
        "code": "Mockito.verify(samlTokenDao, Mockito.times(1)).persist(Mockito.any(SAMLTokenVO.class));",
        "line": 132,
        "locate": "Test Case",
        "locationContext": {
          "methodName": "testSaveToken",
          "methodAnnotations": [
            "@Test"
          ]
        }
      },
      {
        "type": "STUBBING",
        "code": "Mockito.when(samlTokenDao.findByUuid(Mockito.anyString())).thenReturn(randomToken);",
        "line": 138,
        "locate": "Test Case",
        "locationContext": {
          "methodName": "testGetToken",
          "methodAnnotations": [
            "@Test"
          ]
        }
      },
      {
        "type": "VERIFICATION",
        "code": "Mockito.verify(samlTokenDao, Mockito.atLeast(1)).expireTokens();",
        "line": 145,
        "locate": "Test Case",
        "locationContext": {
          "methodName": "testExpireToken",
          "methodAnnotations": [
            "@Test"
          ]
        }
      }
    ],
    "pattern_id": 8
  }
]