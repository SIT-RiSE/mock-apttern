[
  {
    "variableName": "strategy",
    "variableType": "DataMotionStrategy",
    "mockedClass": "DataMotionStrategy",
    "isReuseableMock": false,
    "mockPattern": "Creation:\n\u2014 Local Mock Creation in Test Case\n\u2014 Local Assignment in Test Case\n\nStubbing:\n\u2014 None\n\nVerification:\n\u2014 None",
    "classContext": {
      "packageName": "org.apache.cloudstack.engine.subsystem.api.storage",
      "filePath": "C:\\java tool\\Apache\\cloudstack\\engine\\storage\\src\\test\\java\\org\\apache\\cloudstack\\engine\\subsystem\\api\\storage\\StrategyPriorityTest.java",
      "className": "StrategyPriorityTest"
    },
    "statements": [
      {
        "type": "DECLARATION",
        "code": "DataMotionStrategy strategy = null;",
        "line": 86,
        "locate": "Test Case",
        "locationContext": {
          "methodName": "testSortDataMotionStrategies",
          "methodAnnotations": [
            "@Test"
          ]
        }
      },
      {
        "type": "ASSIGNMENT",
        "code": "strategy = factory.getDataMotionStrategy(mock(DataObject.class), mock(DataObject.class));",
        "line": 92,
        "locate": "Test Case",
        "locationContext": {
          "methodName": "testSortDataMotionStrategies",
          "methodAnnotations": [
            "@Test"
          ]
        }
      },
      {
        "type": "ASSIGNMENT",
        "code": "strategy = factory.getDataMotionStrategy(mock(DataObject.class), mock(DataObject.class));",
        "line": 96,
        "locate": "Test Case",
        "locationContext": {
          "methodName": "testSortDataMotionStrategies",
          "methodAnnotations": [
            "@Test"
          ]
        }
      },
      {
        "type": "ASSIGNMENT",
        "code": "strategy = factory.getDataMotionStrategy(mock(DataObject.class), mock(DataObject.class));",
        "line": 100,
        "locate": "Test Case",
        "locationContext": {
          "methodName": "testSortDataMotionStrategies",
          "methodAnnotations": [
            "@Test"
          ]
        }
      },
      {
        "type": "ASSIGNMENT",
        "code": "strategy = factory.getDataMotionStrategy(mock(DataObject.class), mock(DataObject.class));",
        "line": 104,
        "locate": "Test Case",
        "locationContext": {
          "methodName": "testSortDataMotionStrategies",
          "methodAnnotations": [
            "@Test"
          ]
        }
      }
    ],
    "pattern_id": 19
  },
  {
    "variableName": "strategy",
    "variableType": "DataMotionStrategy",
    "mockedClass": "DataMotionStrategy",
    "isReuseableMock": false,
    "mockPattern": "Creation:\n\u2014 Local Mock Creation in Test Case\n\u2014 Local Assignment in Test Case\n\nStubbing:\n\u2014 None\n\nVerification:\n\u2014 None",
    "classContext": {
      "packageName": "org.apache.cloudstack.engine.subsystem.api.storage",
      "filePath": "C:\\java tool\\Apache\\cloudstack\\engine\\storage\\src\\test\\java\\org\\apache\\cloudstack\\engine\\subsystem\\api\\storage\\StrategyPriorityTest.java",
      "className": "StrategyPriorityTest"
    },
    "statements": [
      {
        "type": "DECLARATION",
        "code": "DataMotionStrategy strategy = null;",
        "line": 122,
        "locate": "Test Case",
        "locationContext": {
          "methodName": "testSortDataMotionStrategies2",
          "methodAnnotations": [
            "@Test",
            "@SuppressWarnings"
          ]
        }
      },
      {
        "type": "ASSIGNMENT",
        "code": "strategy = factory.getDataMotionStrategy(mock(Map.class), mock(Host.class), mock(Host.class));",
        "line": 128,
        "locate": "Test Case",
        "locationContext": {
          "methodName": "testSortDataMotionStrategies2",
          "methodAnnotations": [
            "@Test",
            "@SuppressWarnings"
          ]
        }
      },
      {
        "type": "ASSIGNMENT",
        "code": "strategy = factory.getDataMotionStrategy(mock(Map.class), mock(Host.class), mock(Host.class));",
        "line": 132,
        "locate": "Test Case",
        "locationContext": {
          "methodName": "testSortDataMotionStrategies2",
          "methodAnnotations": [
            "@Test",
            "@SuppressWarnings"
          ]
        }
      },
      {
        "type": "ASSIGNMENT",
        "code": "strategy = factory.getDataMotionStrategy(mock(Map.class), mock(Host.class), mock(Host.class));",
        "line": 136,
        "locate": "Test Case",
        "locationContext": {
          "methodName": "testSortDataMotionStrategies2",
          "methodAnnotations": [
            "@Test",
            "@SuppressWarnings"
          ]
        }
      },
      {
        "type": "ASSIGNMENT",
        "code": "strategy = factory.getDataMotionStrategy(mock(Map.class), mock(Host.class), mock(Host.class));",
        "line": 140,
        "locate": "Test Case",
        "locationContext": {
          "methodName": "testSortDataMotionStrategies2",
          "methodAnnotations": [
            "@Test",
            "@SuppressWarnings"
          ]
        }
      }
    ],
    "pattern_id": 19
  }
]