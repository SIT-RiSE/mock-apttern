[
  {
    "variableName": "userAccount",
    "variableType": "UserAccount",
    "mockedClass": "UserAccount",
    "isReuseableMock": "Hybrid",
    "mockPattern": "Creation:\n\u2014 Attribute Mock Creation\n\nStubbing:\n\u2014 Test Case\n\nVerification:\n\u2014 None",
    "classContext": {
      "packageName": "com.cloud.api",
      "filePath": "C:\\java tool\\Apache\\cloudstack\\server\\src\\test\\java\\com\\cloud\\api\\ApiServletTest.java",
      "className": "ApiServletTest"
    },
    "statements": [
      {
        "type": "FIELD_MOCK_CREATION",
        "code": "@Mock\r\nUserAccount userAccount;",
        "line": 96,
        "locate": "Attribute",
        "locationContext": {
          "methodName": "[FieldDeclaration]",
          "methodAnnotations": [
            "@Mock"
          ]
        }
      },
      {
        "type": "STUBBING",
        "code": "Mockito.when(userAccount.isUser2faEnabled()).thenReturn(true);",
        "line": 345,
        "locate": "Test Case",
        "locationContext": {
          "methodName": "testDoNotSkip2FAcheckForUserWhen2FAEnabled",
          "methodAnnotations": [
            "@Test"
          ]
        }
      },
      {
        "type": "STUBBING",
        "code": "Mockito.when(userAccount.getDomainId()).thenReturn(1L);",
        "line": 359,
        "locate": "Test Case",
        "locationContext": {
          "methodName": "testDoNotSkip2FAcheckForUserWhen2FAMandated",
          "methodAnnotations": [
            "@Test"
          ]
        }
      },
      {
        "type": "STUBBING",
        "code": "Mockito.when(userAccount.isUser2faEnabled()).thenReturn(false);",
        "line": 360,
        "locate": "Test Case",
        "locationContext": {
          "methodName": "testDoNotSkip2FAcheckForUserWhen2FAMandated",
          "methodAnnotations": [
            "@Test"
          ]
        }
      },
      {
        "type": "STUBBING",
        "code": "Mockito.when(userAccount.getDomainId()).thenReturn(1L);",
        "line": 378,
        "locate": "Test Case",
        "locationContext": {
          "methodName": "testSkip2FAcheckForUserWhen2FAisNotEnabledAndNotMandated",
          "methodAnnotations": [
            "@Test"
          ]
        }
      },
      {
        "type": "STUBBING",
        "code": "Mockito.when(userAccount.isUser2faEnabled()).thenReturn(false);",
        "line": 379,
        "locate": "Test Case",
        "locationContext": {
          "methodName": "testSkip2FAcheckForUserWhen2FAisNotEnabledAndNotMandated",
          "methodAnnotations": [
            "@Test"
          ]
        }
      },
      {
        "type": "STUBBING",
        "code": "Mockito.when(userAccount.isUser2faEnabled()).thenReturn(true);",
        "line": 427,
        "locate": "Test Case",
        "locationContext": {
          "methodName": "testVerify2FAWhenExpectedCommandIsNotCalled",
          "methodAnnotations": [
            "@Test"
          ]
        }
      }
    ],
    "pattern_id": 4
  }
]