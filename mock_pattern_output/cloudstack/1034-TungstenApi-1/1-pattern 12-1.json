[
  {
    "variableName": "tungstenApi",
    "variableType": "TungstenApi",
    "mockedClass": "TungstenApi",
    "isReuseableMock": "Fully Shared",
    "mockPattern": "Creation:\n\u2014 Attribute Mock Creation\n\nStubbing:\n\u2014 @Before\n\u2014 Test Case\n\nVerification:\n\u2014 None",
    "classContext": {
      "packageName": "org.apache.cloudstack.network.tungsten.resource",
      "filePath": "C:\\java tool\\Apache\\cloudstack\\plugins\\network-elements\\tungsten\\src\\test\\java\\org\\apache\\cloudstack\\network\\tungsten\\resource\\TungstenResourceTest.java",
      "className": "TungstenResourceTest"
    },
    "statements": [
      {
        "type": "FIELD_MOCK_CREATION",
        "code": "@Mock\r\nTungstenApi tungstenApi;",
        "line": 183,
        "locate": "Attribute",
        "locationContext": {
          "methodName": "[FieldDeclaration]",
          "methodAnnotations": [
            "@Mock"
          ]
        }
      },
      {
        "type": "STUBBING",
        "code": "when(tungstenApi.getTungstenProjectByFqn(any())).thenReturn(project);",
        "line": 198,
        "locate": "@Before",
        "locationContext": {
          "methodName": "setup",
          "methodAnnotations": [
            "@Before"
          ]
        }
      },
      {
        "type": "STUBBING",
        "code": "when(tungstenApi.createTungstenNetwork(anyString(), anyString(), anyString(), anyString(), anyBoolean(), anyBoolean(), anyString(), anyInt(), anyString(), anyBoolean(), anyString(), anyString(), anyString(), anyBoolean(), anyBoolean(), anyString())).thenReturn(virtualNetwork);",
        "line": 238,
        "locate": "Test Case",
        "locationContext": {
          "methodName": "executeRequestCreateTungstenNetworkCommandTest",
          "methodAnnotations": [
            "@Test"
          ]
        }
      },
      {
        "type": "STUBBING",
        "code": "when(tungstenApi.deleteTungstenObject(eq(VirtualNetwork.class), anyString())).thenReturn(true);",
        "line": 250,
        "locate": "Test Case",
        "locationContext": {
          "methodName": "executeRequestDeleteTungstenNetworkCommandTest",
          "methodAnnotations": [
            "@Test"
          ]
        }
      },
      {
        "type": "STUBBING",
        "code": "when(tungstenApi.getTungstenObjectByName(eq(VirtualMachineInterface.class), any(), anyString())).thenReturn(virtualMachineInterface);",
        "line": 261,
        "locate": "Test Case",
        "locationContext": {
          "methodName": "executeRequestDeleteTungstenVmInterfaceCommandTest",
          "methodAnnotations": [
            "@Test"
          ]
        }
      },
      {
        "type": "STUBBING",
        "code": "when(tungstenApi.deleteTungstenVmInterface(any(VirtualMachineInterface.class))).thenReturn(true);",
        "line": 263,
        "locate": "Test Case",
        "locationContext": {
          "methodName": "executeRequestDeleteTungstenVmInterfaceCommandTest",
          "methodAnnotations": [
            "@Test"
          ]
        }
      },
      {
        "type": "STUBBING",
        "code": "when(tungstenApi.deleteTungstenObject(eq(VirtualMachine.class), anyString())).thenReturn(true);",
        "line": 273,
        "locate": "Test Case",
        "locationContext": {
          "methodName": "executeRequestDeleteTungstenVmCommandTest",
          "methodAnnotations": [
            "@Test"
          ]
        }
      },
      {
        "type": "STUBBING",
        "code": "when(tungstenApi.createTungstenLogicalRouter(anyString(), anyString(), anyString())).thenReturn(logicalRouter);",
        "line": 285,
        "locate": "Test Case",
        "locationContext": {
          "methodName": "executeRequestCreateTungstenLogicalRouterCommandTest",
          "methodAnnotations": [
            "@Test"
          ]
        }
      },
      {
        "type": "STUBBING",
        "code": "when(tungstenApi.getTungstenObject(eq(VirtualNetwork.class), anyString())).thenReturn(virtualNetwork);",
        "line": 304,
        "locate": "Test Case",
        "locationContext": {
          "methodName": "executeRequestCreateTungstenVirtualMachineCommandTest",
          "methodAnnotations": [
            "@Test"
          ]
        }
      },
      {
        "type": "STUBBING",
        "code": "when(tungstenApi.createTungstenVirtualMachine(anyString(), anyString())).thenReturn(virtualMachine);",
        "line": 305,
        "locate": "Test Case",
        "locationContext": {
          "methodName": "executeRequestCreateTungstenVirtualMachineCommandTest",
          "methodAnnotations": [
            "@Test"
          ]
        }
      },
      {
        "type": "STUBBING",
        "code": "when(tungstenApi.createTungstenVmInterface(anyString(), anyString(), anyString(), anyString(), anyString(), anyString(), anyString(), anyBoolean())).thenReturn(virtualMachineInterface);",
        "line": 306,
        "locate": "Test Case",
        "locationContext": {
          "methodName": "executeRequestCreateTungstenVirtualMachineCommandTest",
          "methodAnnotations": [
            "@Test"
          ]
        }
      },
      {
        "type": "STUBBING",
        "code": "when(tungstenApi.createTungstenInstanceIp(anyString(), anyString(), anyString(), anyString())).thenReturn(instanceIp);",
        "line": 308,
        "locate": "Test Case",
        "locationContext": {
          "methodName": "executeRequestCreateTungstenVirtualMachineCommandTest",
          "methodAnnotations": [
            "@Test"
          ]
        }
      },
      {
        "type": "STUBBING",
        "code": "when(tungstenApi.getTungstenObjectByName(eq(LogicalRouter.class), any(), anyString())).thenReturn(logicalRouter);",
        "line": 326,
        "locate": "Test Case",
        "locationContext": {
          "methodName": "executeRequestSetTungstenNetworkGatewayCommandTest",
          "methodAnnotations": [
            "@Test"
          ]
        }
      },
      {
        "type": "STUBBING",
        "code": "when(tungstenApi.createTungstenGatewayVmi(anyString(), anyString(), anyString())).thenReturn(virtualMachineInterface);",
        "line": 328,
        "locate": "Test Case",
        "locationContext": {
          "methodName": "executeRequestSetTungstenNetworkGatewayCommandTest",
          "methodAnnotations": [
            "@Test"
          ]
        }
      },
      {
        "type": "STUBBING",
        "code": "when(tungstenApi.createTungstenInstanceIp(anyString(), anyString(), anyString(), anyString())).thenReturn(instanceIp);",
        "line": 330,
        "locate": "Test Case",
        "locationContext": {
          "methodName": "executeRequestSetTungstenNetworkGatewayCommandTest",
          "methodAnnotations": [
            "@Test"
          ]
        }
      },
      {
        "type": "STUBBING",
        "code": "when(tungstenApi.updateTungstenObject(any(LogicalRouter.class))).thenReturn(true);",
        "line": 332,
        "locate": "Test Case",
        "locationContext": {
          "methodName": "executeRequestSetTungstenNetworkGatewayCommandTest",
          "methodAnnotations": [
            "@Test"
          ]
        }
      },
      {
        "type": "STUBBING",
        "code": "when(tungstenApi.getTungstenNetworkDns(anyString(), anyString())).thenReturn(\"192.168.1.253\");",
        "line": 343,
        "locate": "Test Case",
        "locationContext": {
          "methodName": "executeRequestGetTungstenNetworkDnsCommandTest",
          "methodAnnotations": [
            "@Test"
          ]
        }
      },
      {
        "type": "STUBBING",
        "code": "when(tungstenApi.getTungstenObjectByName(eq(NetworkPolicy.class), any(), anyString())).thenReturn(networkPolicy);",
        "line": 355,
        "locate": "Test Case",
        "locationContext": {
          "methodName": "executeRequestGetTungstenPolicyCommandTest",
          "methodAnnotations": [
            "@Test"
          ]
        }
      },
      {
        "type": "STUBBING",
        "code": "when(tungstenApi.getTungstenObjectByName(eq(LogicalRouter.class), any(), anyString())).thenReturn(logicalRouter);",
        "line": 369,
        "locate": "Test Case",
        "locationContext": {
          "methodName": "executeRequestClearTungstenNetworkGatewayCommandTest",
          "methodAnnotations": [
            "@Test"
          ]
        }
      },
      {
        "type": "STUBBING",
        "code": "when(tungstenApi.deleteTungstenObject(any(LogicalRouter.class))).thenReturn(true);",
        "line": 371,
        "locate": "Test Case",
        "locationContext": {
          "methodName": "executeRequestClearTungstenNetworkGatewayCommandTest",
          "methodAnnotations": [
            "@Test"
          ]
        }
      },
      {
        "type": "STUBBING",
        "code": "when(tungstenApi.getTungstenObjectByName(eq(VirtualMachineInterface.class), any(), anyString())).thenReturn(virtualMachineInterface);",
        "line": 372,
        "locate": "Test Case",
        "locationContext": {
          "methodName": "executeRequestClearTungstenNetworkGatewayCommandTest",
          "methodAnnotations": [
            "@Test"
          ]
        }
      },
      {
        "type": "STUBBING",
        "code": "when(tungstenApi.deleteTungstenVmInterface(any(VirtualMachineInterface.class))).thenReturn(true);",
        "line": 374,
        "locate": "Test Case",
        "locationContext": {
          "methodName": "executeRequestClearTungstenNetworkGatewayCommandTest",
          "methodAnnotations": [
            "@Test"
          ]
        }
      },
      {
        "type": "STUBBING",
        "code": "when(tungstenApi.createTungstenFloatingIpPool(anyString(), anyString())).thenReturn(floatingIpPool);",
        "line": 386,
        "locate": "Test Case",
        "locationContext": {
          "methodName": "executeRequestCreateTungstenFloatingIpPoolCommandTest",
          "methodAnnotations": [
            "@Test"
          ]
        }
      },
      {
        "type": "STUBBING",
        "code": "when(tungstenApi.createTungstenFloatingIp(anyString(), anyString(), anyString(), anyString(), anyString())).thenReturn(floatingIp);",
        "line": 399,
        "locate": "Test Case",
        "locationContext": {
          "methodName": "executeRequestCreateTungstenFloatingIpCommandTest",
          "methodAnnotations": [
            "@Test"
          ]
        }
      },
      {
        "type": "STUBBING",
        "code": "when(tungstenApi.assignTungstenFloatingIp(anyString(), anyString(), anyString(), anyString(), anyString())).thenReturn(true);",
        "line": 412,
        "locate": "Test Case",
        "locationContext": {
          "methodName": "executeRequestAssignTungstenFloatingIpCommandTest",
          "methodAnnotations": [
            "@Test"
          ]
        }
      },
      {
        "type": "STUBBING",
        "code": "when(tungstenApi.releaseTungstenFloatingIp(anyString(), anyString(), anyString())).thenReturn(true);",
        "line": 425,
        "locate": "Test Case",
        "locationContext": {
          "methodName": "executeRequestReleaseTungstenFloatingIpCommandTest",
          "methodAnnotations": [
            "@Test"
          ]
        }
      },
      {
        "type": "STUBBING",
        "code": "when(tungstenApi.getTungstenNatIp(anyString(), anyString())).thenReturn(\"192.168.100.100\");",
        "line": 435,
        "locate": "Test Case",
        "locationContext": {
          "methodName": "executeRequestGetTungstenNatIpCommandTest",
          "methodAnnotations": [
            "@Test"
          ]
        }
      },
      {
        "type": "STUBBING",
        "code": "when(tungstenApi.getTungstenObject(eq(VirtualNetwork.class), anyString())).thenReturn(virtualNetwork);",
        "line": 461,
        "locate": "Test Case",
        "locationContext": {
          "methodName": "executeRequestDeleteTungstenFloatingIpCommandTest",
          "methodAnnotations": [
            "@Test"
          ]
        }
      },
      {
        "type": "STUBBING",
        "code": "when(tungstenApi.getTungstenObjectByName(eq(FloatingIpPool.class), any(), anyString())).thenReturn(floatingIpPool);",
        "line": 462,
        "locate": "Test Case",
        "locationContext": {
          "methodName": "executeRequestDeleteTungstenFloatingIpCommandTest",
          "methodAnnotations": [
            "@Test"
          ]
        }
      },
      {
        "type": "STUBBING",
        "code": "when(tungstenApi.getTungstenObjectByName(eq(FloatingIp.class), any(), anyString())).thenReturn(floatingIp);",
        "line": 464,
        "locate": "Test Case",
        "locationContext": {
          "methodName": "executeRequestDeleteTungstenFloatingIpCommandTest",
          "methodAnnotations": [
            "@Test"
          ]
        }
      },
      {
        "type": "STUBBING",
        "code": "when(tungstenApi.deleteTungstenObject(any(FloatingIp.class))).thenReturn(true);",
        "line": 465,
        "locate": "Test Case",
        "locationContext": {
          "methodName": "executeRequestDeleteTungstenFloatingIpCommandTest",
          "methodAnnotations": [
            "@Test"
          ]
        }
      },
      {
        "type": "STUBBING",
        "code": "when(tungstenApi.getTungstenObject(eq(VirtualNetwork.class), anyString())).thenReturn(virtualNetwork);",
        "line": 478,
        "locate": "Test Case",
        "locationContext": {
          "methodName": "executeRequestDeleteTungstenFloatingIpPoolCommandTest",
          "methodAnnotations": [
            "@Test"
          ]
        }
      },
      {
        "type": "STUBBING",
        "code": "when(tungstenApi.getTungstenObjectByName(eq(FloatingIpPool.class), any(), anyString())).thenReturn(floatingIpPool);",
        "line": 479,
        "locate": "Test Case",
        "locationContext": {
          "methodName": "executeRequestDeleteTungstenFloatingIpPoolCommandTest",
          "methodAnnotations": [
            "@Test"
          ]
        }
      },
      {
        "type": "STUBBING",
        "code": "when(tungstenApi.deleteTungstenObject(any(FloatingIpPool.class))).thenReturn(true);",
        "line": 481,
        "locate": "Test Case",
        "locationContext": {
          "methodName": "executeRequestDeleteTungstenFloatingIpPoolCommandTest",
          "methodAnnotations": [
            "@Test"
          ]
        }
      },
      {
        "type": "STUBBING",
        "code": "when(tungstenApi.createOrUpdateTungstenNetworkPolicy(anyString(), anyString(), eq(tungstenRuleList))).thenReturn(networkPolicy);",
        "line": 494,
        "locate": "Test Case",
        "locationContext": {
          "methodName": "executeRequestCreateTungstenNetworkPolicyCommandest",
          "methodAnnotations": [
            "@Test"
          ]
        }
      },
      {
        "type": "STUBBING",
        "code": "when(tungstenApi.getTungstenObject(eq(VirtualNetwork.class), anyString())).thenReturn(virtualNetwork);",
        "line": 508,
        "locate": "Test Case",
        "locationContext": {
          "methodName": "executeRequestDeleteTungstenNetworkPolicyCommandTest",
          "methodAnnotations": [
            "@Test"
          ]
        }
      },
      {
        "type": "STUBBING",
        "code": "when(tungstenApi.getTungstenObjectByName(eq(NetworkPolicy.class), any(), anyString())).thenReturn(networkPolicy);",
        "line": 509,
        "locate": "Test Case",
        "locationContext": {
          "methodName": "executeRequestDeleteTungstenNetworkPolicyCommandTest",
          "methodAnnotations": [
            "@Test"
          ]
        }
      },
      {
        "type": "STUBBING",
        "code": "when(tungstenApi.updateTungstenObject(any(VirtualNetwork.class))).thenReturn(true);",
        "line": 511,
        "locate": "Test Case",
        "locationContext": {
          "methodName": "executeRequestDeleteTungstenNetworkPolicyCommandTest",
          "methodAnnotations": [
            "@Test"
          ]
        }
      },
      {
        "type": "STUBBING",
        "code": "when(tungstenApi.deleteTungstenObject(any(NetworkPolicy.class))).thenReturn(true);",
        "line": 512,
        "locate": "Test Case",
        "locationContext": {
          "methodName": "executeRequestDeleteTungstenNetworkPolicyCommandTest",
          "methodAnnotations": [
            "@Test"
          ]
        }
      },
      {
        "type": "STUBBING",
        "code": "when(tungstenApi.getTungstenObject(eq(VirtualNetwork.class), anyString())).thenReturn(virtualNetwork);",
        "line": 527,
        "locate": "Test Case",
        "locationContext": {
          "methodName": "executeRequestGetTungstenFloatingIpsCommandTest",
          "methodAnnotations": [
            "@Test"
          ]
        }
      },
      {
        "type": "STUBBING",
        "code": "when(tungstenApi.getTungstenObjectByName(eq(FloatingIpPool.class), any(), anyString())).thenReturn(floatingIpPool);",
        "line": 528,
        "locate": "Test Case",
        "locationContext": {
          "methodName": "executeRequestGetTungstenFloatingIpsCommandTest",
          "methodAnnotations": [
            "@Test"
          ]
        }
      },
      {
        "type": "STUBBING",
        "code": "when(tungstenApi.getTungstenObjectByName(eq(NetworkPolicy.class), any(), anyString())).thenReturn(networkPolicy);",
        "line": 551,
        "locate": "Test Case",
        "locationContext": {
          "methodName": "executeRequestApplyTungstenNetworkPolicyCommandTest",
          "methodAnnotations": [
            "@Test"
          ]
        }
      },
      {
        "type": "STUBBING",
        "code": "when(tungstenApi.applyTungstenNetworkPolicy(anyString(), anyString(), anyInt(), anyInt())).thenReturn(networkPolicy);",
        "line": 553,
        "locate": "Test Case",
        "locationContext": {
          "methodName": "executeRequestApplyTungstenNetworkPolicyCommandTest",
          "methodAnnotations": [
            "@Test"
          ]
        }
      },
      {
        "type": "STUBBING",
        "code": "when(tungstenApi.getTungstenFabricNetwork()).thenReturn(virtualNetwork);",
        "line": 567,
        "locate": "Test Case",
        "locationContext": {
          "methodName": "executeRequestGetTungstenFabricNetworkCommand",
          "methodAnnotations": [
            "@Test"
          ]
        }
      },
      {
        "type": "STUBBING",
        "code": "when(tungstenApi.createTungstenDomain(anyString(), anyString())).thenReturn(domain);",
        "line": 579,
        "locate": "Test Case",
        "locationContext": {
          "methodName": "executeRequestCreateTungstenDomainCommandTest",
          "methodAnnotations": [
            "@Test"
          ]
        }
      },
      {
        "type": "STUBBING",
        "code": "when(tungstenApi.createTungstenProject(anyString(), anyString(), anyString(), anyString())).thenReturn(project);",
        "line": 592,
        "locate": "Test Case",
        "locationContext": {
          "methodName": "executeRequestCreateTungstenProjectCommandTest",
          "methodAnnotations": [
            "@Test"
          ]
        }
      },
      {
        "type": "STUBBING",
        "code": "when(tungstenApi.deleteTungstenDomain(anyString())).thenReturn(true);",
        "line": 603,
        "locate": "Test Case",
        "locationContext": {
          "methodName": "executeRequestDeleteTungstenDomainCommandTest",
          "methodAnnotations": [
            "@Test"
          ]
        }
      },
      {
        "type": "STUBBING",
        "code": "when(tungstenApi.deleteTungstenProject(anyString())).thenReturn(true);",
        "line": 613,
        "locate": "Test Case",
        "locationContext": {
          "methodName": "executeRequestDeleteTungstenProjectCommandTest",
          "methodAnnotations": [
            "@Test"
          ]
        }
      },
      {
        "type": "STUBBING",
        "code": "when(tungstenApi.getTungstenObject(eq(VirtualNetwork.class), anyString())).thenReturn(virtualNetwork);",
        "line": 649,
        "locate": "Test Case",
        "locationContext": {
          "methodName": "executeRequestCreateTungstenNetworkLoadbalancerCommandTest",
          "methodAnnotations": [
            "@Test"
          ]
        }
      },
      {
        "type": "STUBBING",
        "code": "when(tungstenApi.getTungstenObjectByName(eq(FloatingIpPool.class), any(), anyString())).thenReturn(floatingIpPool);",
        "line": 650,
        "locate": "Test Case",
        "locationContext": {
          "methodName": "executeRequestCreateTungstenNetworkLoadbalancerCommandTest",
          "methodAnnotations": [
            "@Test"
          ]
        }
      },
      {
        "type": "STUBBING",
        "code": "when(tungstenApi.getSubnetUuid(anyString())).thenReturn(\"b604c7f7-1dbc-42d8-bceb-2c0898034a7a\");",
        "line": 652,
        "locate": "Test Case",
        "locationContext": {
          "methodName": "executeRequestCreateTungstenNetworkLoadbalancerCommandTest",
          "methodAnnotations": [
            "@Test"
          ]
        }
      },
      {
        "type": "STUBBING",
        "code": "when(tungstenApi.createTungstenLbVmi(anyString(), anyString(), anyString())).thenReturn(virtualMachineInterface);",
        "line": 653,
        "locate": "Test Case",
        "locationContext": {
          "methodName": "executeRequestCreateTungstenNetworkLoadbalancerCommandTest",
          "methodAnnotations": [
            "@Test"
          ]
        }
      },
      {
        "type": "STUBBING",
        "code": "when(tungstenApi.createTungstenInstanceIp(anyString(), anyString(), anyString(), anyString(), anyString())).thenReturn(instanceIp);",
        "line": 655,
        "locate": "Test Case",
        "locationContext": {
          "methodName": "executeRequestCreateTungstenNetworkLoadbalancerCommandTest",
          "methodAnnotations": [
            "@Test"
          ]
        }
      },
      {
        "type": "STUBBING",
        "code": "when(tungstenApi.assignTungstenFloatingIp(anyString(), anyString(), anyString(), anyString(), anyString())).thenReturn(true);",
        "line": 657,
        "locate": "Test Case",
        "locationContext": {
          "methodName": "executeRequestCreateTungstenNetworkLoadbalancerCommandTest",
          "methodAnnotations": [
            "@Test"
          ]
        }
      },
      {
        "type": "STUBBING",
        "code": "when(tungstenApi.createTungstenLoadbalancer(anyString(), anyString(), anyString(), anyString(), anyString())).thenReturn(loadbalancer);",
        "line": 659,
        "locate": "Test Case",
        "locationContext": {
          "methodName": "executeRequestCreateTungstenNetworkLoadbalancerCommandTest",
          "methodAnnotations": [
            "@Test"
          ]
        }
      },
      {
        "type": "STUBBING",
        "code": "when(tungstenApi.createTungstenLoadbalancerListener(anyString(), anyString(), anyString(), anyString(), anyInt())).thenReturn(loadbalancerListener);",
        "line": 661,
        "locate": "Test Case",
        "locationContext": {
          "methodName": "executeRequestCreateTungstenNetworkLoadbalancerCommandTest",
          "methodAnnotations": [
            "@Test"
          ]
        }
      },
      {
        "type": "STUBBING",
        "code": "when(tungstenApi.createTungstenLoadbalancerHealthMonitor(anyString(), anyString(), anyString(), anyInt(), anyInt(), anyInt(), anyString(), anyString(), anyString())).thenReturn(loadbalancerHealthmonitor);",
        "line": 663,
        "locate": "Test Case",
        "locationContext": {
          "methodName": "executeRequestCreateTungstenNetworkLoadbalancerCommandTest",
          "methodAnnotations": [
            "@Test"
          ]
        }
      },
      {
        "type": "STUBBING",
        "code": "when(tungstenApi.createTungstenLoadbalancerPool(anyString(), anyString(), anyString(), anyString(), anyString(), anyString())).thenReturn(loadbalancerPool);",
        "line": 665,
        "locate": "Test Case",
        "locationContext": {
          "methodName": "executeRequestCreateTungstenNetworkLoadbalancerCommandTest",
          "methodAnnotations": [
            "@Test"
          ]
        }
      },
      {
        "type": "STUBBING",
        "code": "when(tungstenApi.createTungstenLoadbalancerMember(anyString(), anyString(), anyString(), anyString(), anyInt(), anyInt())).thenReturn(member1).thenReturn(member2);",
        "line": 667,
        "locate": "Test Case",
        "locationContext": {
          "methodName": "executeRequestCreateTungstenNetworkLoadbalancerCommandTest",
          "methodAnnotations": [
            "@Test"
          ]
        }
      },
      {
        "type": "STUBBING",
        "code": "when(tungstenApi.updateLBServiceInstanceFatFlow(anyString(), anyString(), anyString())).thenReturn(true);",
        "line": 680,
        "locate": "Test Case",
        "locationContext": {
          "methodName": "executeRequestUpdateLoadBalancerServiceInstanceCommandTest",
          "methodAnnotations": [
            "@Test"
          ]
        }
      },
      {
        "type": "STUBBING",
        "code": "when(tungstenApi.getTungstenObjectByName(eq(Loadbalancer.class), any(), anyString())).thenReturn(loadbalancer);",
        "line": 708,
        "locate": "Test Case",
        "locationContext": {
          "methodName": "executeRequestDeleteTungstenLoadBalancerCommandTest",
          "methodAnnotations": [
            "@Test"
          ]
        }
      },
      {
        "type": "STUBBING",
        "code": "when(tungstenApi.getTungstenObjectByName(eq(VirtualMachineInterface.class), any(), anyString())).thenReturn(virtualMachineInterface);",
        "line": 709,
        "locate": "Test Case",
        "locationContext": {
          "methodName": "executeRequestDeleteTungstenLoadBalancerCommandTest",
          "methodAnnotations": [
            "@Test"
          ]
        }
      },
      {
        "type": "STUBBING",
        "code": "when(tungstenApi.getTungstenObject(eq(LoadbalancerListener.class), anyString())).thenReturn(loadbalancerListener);",
        "line": 711,
        "locate": "Test Case",
        "locationContext": {
          "methodName": "executeRequestDeleteTungstenLoadBalancerCommandTest",
          "methodAnnotations": [
            "@Test"
          ]
        }
      },
      {
        "type": "STUBBING",
        "code": "when(tungstenApi.getTungstenObject(eq(LoadbalancerPool.class), anyString())).thenReturn(loadbalancerPool);",
        "line": 713,
        "locate": "Test Case",
        "locationContext": {
          "methodName": "executeRequestDeleteTungstenLoadBalancerCommandTest",
          "methodAnnotations": [
            "@Test"
          ]
        }
      },
      {
        "type": "STUBBING",
        "code": "when(tungstenApi.getTungstenObject(eq(LoadbalancerMember.class), anyString())).thenReturn(loadbalancerMember1).thenReturn(loadbalancerMember2);",
        "line": 714,
        "locate": "Test Case",
        "locationContext": {
          "methodName": "executeRequestDeleteTungstenLoadBalancerCommandTest",
          "methodAnnotations": [
            "@Test"
          ]
        }
      },
      {
        "type": "STUBBING",
        "code": "when(tungstenApi.deleteTungstenObject(any())).thenReturn(true);",
        "line": 716,
        "locate": "Test Case",
        "locationContext": {
          "methodName": "executeRequestDeleteTungstenLoadBalancerCommandTest",
          "methodAnnotations": [
            "@Test"
          ]
        }
      },
      {
        "type": "STUBBING",
        "code": "when(tungstenApi.releaseTungstenFloatingIp(anyString(), anyString(), anyString())).thenReturn(true);",
        "line": 717,
        "locate": "Test Case",
        "locationContext": {
          "methodName": "executeRequestDeleteTungstenLoadBalancerCommandTest",
          "methodAnnotations": [
            "@Test"
          ]
        }
      },
      {
        "type": "STUBBING",
        "code": "when(tungstenApi.deleteTungstenVmInterface(any(VirtualMachineInterface.class))).thenReturn(true);",
        "line": 718,
        "locate": "Test Case",
        "locationContext": {
          "methodName": "executeRequestDeleteTungstenLoadBalancerCommandTest",
          "methodAnnotations": [
            "@Test"
          ]
        }
      },
      {
        "type": "STUBBING",
        "code": "when(tungstenApi.getTungstenObjectByName(eq(LoadbalancerListener.class), any(), anyString())).thenReturn(loadbalancerListener);",
        "line": 729,
        "locate": "Test Case",
        "locationContext": {
          "methodName": "executeRequestDeleteTungstenLoadBalancerListenerCommandTest",
          "methodAnnotations": [
            "@Test"
          ]
        }
      },
      {
        "type": "STUBBING",
        "code": "when(tungstenApi.deleteTungstenObject(any(LoadbalancerListener.class))).thenReturn(true);",
        "line": 731,
        "locate": "Test Case",
        "locationContext": {
          "methodName": "executeRequestDeleteTungstenLoadBalancerListenerCommandTest",
          "methodAnnotations": [
            "@Test"
          ]
        }
      },
      {
        "type": "STUBBING",
        "code": "when(tungstenApi.updateLoadBalancerPool(anyString(), anyString(), anyString(), anyString(), anyString(), anyString(), anyBoolean(), anyString(), anyString(), anyString())).thenReturn(true);",
        "line": 741,
        "locate": "Test Case",
        "locationContext": {
          "methodName": "executeRequestUpdateTungstenLoadBalancerPoolCommandTest",
          "methodAnnotations": [
            "@Test"
          ]
        }
      },
      {
        "type": "STUBBING",
        "code": "when(tungstenApi.updateLoadBalancerListener(anyString(), anyString(), anyString(), anyInt(), anyString())).thenReturn(true);",
        "line": 751,
        "locate": "Test Case",
        "locationContext": {
          "methodName": "executeRequestUpdateTungstenLoadBalancerListenerCommandTest",
          "methodAnnotations": [
            "@Test"
          ]
        }
      },
      {
        "type": "STUBBING",
        "code": "when(tungstenApi.getSubnetUuid(anyString())).thenReturn(\"4185e240-0fcd-11ec-82a8-0242ac130003\");",
        "line": 760,
        "locate": "Test Case",
        "locationContext": {
          "methodName": "executeRequestUpdateTungstenLoadBalancerMemberCommandTest",
          "methodAnnotations": [
            "@Test"
          ]
        }
      },
      {
        "type": "STUBBING",
        "code": "when(tungstenApi.updateLoadBalancerMember(anyString(), anyString(), anyList(), anyString())).thenReturn(true);",
        "line": 761,
        "locate": "Test Case",
        "locationContext": {
          "methodName": "executeRequestUpdateTungstenLoadBalancerMemberCommandTest",
          "methodAnnotations": [
            "@Test"
          ]
        }
      },
      {
        "type": "STUBBING",
        "code": "when(tungstenApi.getTungstenObjectByName(eq(Loadbalancer.class), anyList(), anyString())).thenReturn(loadbalancer);",
        "line": 770,
        "locate": "Test Case",
        "locationContext": {
          "methodName": "executeRequestGetTungstenLoadBalancerCommandTest",
          "methodAnnotations": [
            "@Test"
          ]
        }
      },
      {
        "type": "STUBBING",
        "code": "when(tungstenApi.applyTungstenPortForwarding(anyBoolean(), anyString(), anyString(), anyString(), anyString(), anyString(), anyInt(), anyInt())).thenReturn(true);",
        "line": 781,
        "locate": "Test Case",
        "locationContext": {
          "methodName": "executeRequestApplyTungstenPortForwardingCommandTest",
          "methodAnnotations": [
            "@Test"
          ]
        }
      },
      {
        "type": "STUBBING",
        "code": "when(tungstenApi.deleteTungstenObject(any(ApiObjectBase.class))).thenReturn(true);",
        "line": 791,
        "locate": "Test Case",
        "locationContext": {
          "methodName": "executeRequestDeleteTungstenObjectCommandTest",
          "methodAnnotations": [
            "@Test"
          ]
        }
      },
      {
        "type": "STUBBING",
        "code": "when(tungstenApi.addTungstenNetworkSubnetCommand(anyString(), anyString(), anyInt(), anyString(), anyBoolean(), anyString(), anyString(), anyString(), anyBoolean(), anyString())).thenReturn(true);",
        "line": 801,
        "locate": "Test Case",
        "locationContext": {
          "methodName": "executeRequestAddTungstenNetworkSubnetCommandTest",
          "methodAnnotations": [
            "@Test"
          ]
        }
      },
      {
        "type": "STUBBING",
        "code": "when(tungstenApi.removeTungstenNetworkSubnetCommand(anyString(), anyString())).thenReturn(true);",
        "line": 810,
        "locate": "Test Case",
        "locationContext": {
          "methodName": "executeRequestRemoveTungstenNetworkSubnetCommandTest",
          "methodAnnotations": [
            "@Test"
          ]
        }
      },
      {
        "type": "STUBBING",
        "code": "when(tungstenApi.createTungstenSecurityGroup(anyString(), anyString(), anyString(), anyString())).thenReturn(securityGroup);",
        "line": 820,
        "locate": "Test Case",
        "locationContext": {
          "methodName": "executeRequestCreateTungstenSecurityGroupCommandTest",
          "methodAnnotations": [
            "@Test"
          ]
        }
      },
      {
        "type": "STUBBING",
        "code": "when(tungstenApi.deleteTungstenObject(eq(SecurityGroup.class), anyString())).thenReturn(true);",
        "line": 829,
        "locate": "Test Case",
        "locationContext": {
          "methodName": "executeRequestDeleteTungstenSecurityGroupCommandTest",
          "methodAnnotations": [
            "@Test"
          ]
        }
      },
      {
        "type": "STUBBING",
        "code": "when(tungstenApi.getTungstenObject(eq(SecurityGroup.class), anyString())).thenReturn(securityGroup);",
        "line": 838,
        "locate": "Test Case",
        "locationContext": {
          "methodName": "executeRequestGetTungstenSecurityGroupCommandTest",
          "methodAnnotations": [
            "@Test"
          ]
        }
      },
      {
        "type": "STUBBING",
        "code": "when(tungstenApi.addTungstenSecurityGroupRule(anyString(), anyString(), anyString(), anyInt(), anyInt(), anyString(), anyString(), anyString())).thenReturn(true);",
        "line": 849,
        "locate": "Test Case",
        "locationContext": {
          "methodName": "executeRequestAddTungstenSecurityGroupRuleCommandTest",
          "methodAnnotations": [
            "@Test"
          ]
        }
      },
      {
        "type": "STUBBING",
        "code": "when(tungstenApi.addInstanceToSecurityGroup(anyString(), eq(securityGroupUuidList))).thenReturn(true);",
        "line": 859,
        "locate": "Test Case",
        "locationContext": {
          "methodName": "executeRequestAddTungstenVmToSecurityGroupCommandTest",
          "methodAnnotations": [
            "@Test"
          ]
        }
      },
      {
        "type": "STUBBING",
        "code": "when(tungstenApi.removeInstanceFromSecurityGroup(anyString(), eq(securityGroupUuidList))).thenReturn(true);",
        "line": 868,
        "locate": "Test Case",
        "locationContext": {
          "methodName": "executeRequestRemoveTungstenVmFromSecurityGroupCommandTest",
          "methodAnnotations": [
            "@Test"
          ]
        }
      },
      {
        "type": "STUBBING",
        "code": "when(tungstenApi.removeTungstenSecurityGroupRule(anyString(), anyString())).thenReturn(true);",
        "line": 877,
        "locate": "Test Case",
        "locationContext": {
          "methodName": "executeRequestRemoveTungstenSecurityGroupRuleCommandTest",
          "methodAnnotations": [
            "@Test"
          ]
        }
      },
      {
        "type": "STUBBING",
        "code": "when(tungstenApi.addSecondaryIpAddress(anyString(), anyString(), anyString(), anyString())).thenReturn(true);",
        "line": 886,
        "locate": "Test Case",
        "locationContext": {
          "methodName": "executeRequestAddTungstenSecondaryIpAddressCommandTest",
          "methodAnnotations": [
            "@Test"
          ]
        }
      },
      {
        "type": "STUBBING",
        "code": "when(tungstenApi.removeSecondaryIpAddress(anyString())).thenReturn(true);",
        "line": 894,
        "locate": "Test Case",
        "locationContext": {
          "methodName": "executeRequestRemoveTungstenSecondaryIpAddressCommandTest",
          "methodAnnotations": [
            "@Test"
          ]
        }
      },
      {
        "type": "STUBBING",
        "code": "when(tungstenApi.createTungstenPolicy(anyString(), anyString(), anyString())).thenReturn(new NetworkPolicy());",
        "line": 905,
        "locate": "Test Case",
        "locationContext": {
          "methodName": "executeRequestCreateTungstenPolicyCommandTest",
          "methodAnnotations": [
            "@Test"
          ]
        }
      },
      {
        "type": "STUBBING",
        "code": "when(tungstenApi.getNetworksFromNetworkPolicy(any(NetworkPolicy.class))).thenReturn(virtualNetworks);",
        "line": 906,
        "locate": "Test Case",
        "locationContext": {
          "methodName": "executeRequestCreateTungstenPolicyCommandTest",
          "methodAnnotations": [
            "@Test"
          ]
        }
      },
      {
        "type": "STUBBING",
        "code": "when(tungstenApi.addTungstenPolicyRule(anyString(), anyString(), anyString(), anyString(), anyString(), anyString(), anyString(), anyInt(), anyInt(), anyInt(), anyString(), anyString(), anyInt(), anyInt(), anyInt())).thenReturn(networkPolicy);",
        "line": 917,
        "locate": "Test Case",
        "locationContext": {
          "methodName": "executeRequestAddTungstenPolicyRuleCommandTest",
          "methodAnnotations": [
            "@Test"
          ]
        }
      },
      {
        "type": "STUBBING",
        "code": "when(tungstenApi.removeTungstenNetworkPolicyRule(anyString(), anyString())).thenReturn(new NetworkPolicy());",
        "line": 930,
        "locate": "Test Case",
        "locationContext": {
          "methodName": "executeRequestRemoveTungstenPolicyRuleCommandTest",
          "methodAnnotations": [
            "@Test"
          ]
        }
      },
      {
        "type": "STUBBING",
        "code": "when(tungstenApi.getNetworksFromNetworkPolicy(any(NetworkPolicy.class))).thenReturn(virtualNetworks);",
        "line": 931,
        "locate": "Test Case",
        "locationContext": {
          "methodName": "executeRequestRemoveTungstenPolicyRuleCommandTest",
          "methodAnnotations": [
            "@Test"
          ]
        }
      },
      {
        "type": "STUBBING",
        "code": "when(tungstenApi.getTungstenObject(eq(NetworkPolicy.class), anyString())).thenReturn(new NetworkPolicy());",
        "line": 939,
        "locate": "Test Case",
        "locationContext": {
          "methodName": "executeRequestDeleteTungstenPolicyCommandTest",
          "methodAnnotations": [
            "@Test"
          ]
        }
      },
      {
        "type": "STUBBING",
        "code": "when(tungstenApi.deleteTungstenObject(any(ApiObjectBase.class))).thenReturn(true);",
        "line": 940,
        "locate": "Test Case",
        "locationContext": {
          "methodName": "executeRequestDeleteTungstenPolicyCommandTest",
          "methodAnnotations": [
            "@Test"
          ]
        }
      },
      {
        "type": "STUBBING",
        "code": "when(tungstenApi.listTungstenNetworkPolicy(anyString(), anyString())).thenAnswer(networkPoliciesAnswer);",
        "line": 955,
        "locate": "Test Case",
        "locationContext": {
          "methodName": "executeRequestListTungstenPolicyCommandTest",
          "methodAnnotations": [
            "@Test"
          ]
        }
      },
      {
        "type": "STUBBING",
        "code": "when(tungstenApi.getNetworksFromNetworkPolicy(any(NetworkPolicy.class))).thenReturn(virtualNetworks);",
        "line": 956,
        "locate": "Test Case",
        "locationContext": {
          "methodName": "executeRequestListTungstenPolicyCommandTest",
          "methodAnnotations": [
            "@Test"
          ]
        }
      },
      {
        "type": "STUBBING",
        "code": "when(tungstenApi.getTungstenObject(eq(NetworkPolicy.class), anyString())).thenReturn(new NetworkPolicy());",
        "line": 965,
        "locate": "Test Case",
        "locationContext": {
          "methodName": "executeRequestListTungstenPolicyRuleCommandTest",
          "methodAnnotations": [
            "@Test"
          ]
        }
      },
      {
        "type": "STUBBING",
        "code": "when(tungstenApi.listTungstenNetwork(anyString(), anyString())).thenAnswer(virtualNetworksAnswer);",
        "line": 976,
        "locate": "Test Case",
        "locationContext": {
          "methodName": "executeRequestListTungstenNetworkCommandTest",
          "methodAnnotations": [
            "@Test"
          ]
        }
      },
      {
        "type": "STUBBING",
        "code": "when(tungstenApi.listTungstenVm(anyString(), anyString())).thenAnswer(virtualMachinesAnswer);",
        "line": 987,
        "locate": "Test Case",
        "locationContext": {
          "methodName": "executeRequestListTungstenVmCommandTest",
          "methodAnnotations": [
            "@Test"
          ]
        }
      },
      {
        "type": "STUBBING",
        "code": "when(tungstenApi.listTungstenNic(anyString(), anyString())).thenAnswer(virtualMachineInterfacesAnswer);",
        "line": 998,
        "locate": "Test Case",
        "locationContext": {
          "methodName": "executeRequestListTungstenNicCommandTest",
          "methodAnnotations": [
            "@Test"
          ]
        }
      },
      {
        "type": "STUBBING",
        "code": "when(tungstenApi.createTungstenTag(anyString(), anyString(), anyString(), any())).thenReturn(tag);",
        "line": 1019,
        "locate": "Test Case",
        "locationContext": {
          "methodName": "executeRequestCreateTungstenTagCommandTest",
          "methodAnnotations": [
            "@Test"
          ]
        }
      },
      {
        "type": "STUBBING",
        "code": "when(tungstenApi.getBackRefFromVirtualNetwork(eq(VirtualNetwork.class), anyList())).thenAnswer(virtualNetworksAnswer);",
        "line": 1020,
        "locate": "Test Case",
        "locationContext": {
          "methodName": "executeRequestCreateTungstenTagCommandTest",
          "methodAnnotations": [
            "@Test"
          ]
        }
      },
      {
        "type": "STUBBING",
        "code": "when(tungstenApi.getBackRefFromVirtualMachine(eq(VirtualMachine.class), anyList())).thenAnswer(virtualMachinesAnswer);",
        "line": 1021,
        "locate": "Test Case",
        "locationContext": {
          "methodName": "executeRequestCreateTungstenTagCommandTest",
          "methodAnnotations": [
            "@Test"
          ]
        }
      },
      {
        "type": "STUBBING",
        "code": "when(tungstenApi.getBackRefFromVirtualMachineInterface(eq(VirtualMachineInterface.class), anyList())).thenAnswer(virtualMachineInterfacesAnswer);",
        "line": 1022,
        "locate": "Test Case",
        "locationContext": {
          "methodName": "executeRequestCreateTungstenTagCommandTest",
          "methodAnnotations": [
            "@Test"
          ]
        }
      },
      {
        "type": "STUBBING",
        "code": "when(tungstenApi.getBackRefFromNetworkPolicy(eq(NetworkPolicy.class), anyList())).thenAnswer(networkPoliciesAnswer);",
        "line": 1023,
        "locate": "Test Case",
        "locationContext": {
          "methodName": "executeRequestCreateTungstenTagCommandTest",
          "methodAnnotations": [
            "@Test"
          ]
        }
      },
      {
        "type": "STUBBING",
        "code": "when(tungstenApi.createTungstenTagType(anyString(), anyString())).thenReturn(tagType);",
        "line": 1033,
        "locate": "Test Case",
        "locationContext": {
          "methodName": "executeRequestCreateTungstenTagTypeCommandTest",
          "methodAnnotations": [
            "@Test"
          ]
        }
      },
      {
        "type": "STUBBING",
        "code": "when(tungstenApi.getTungstenObject(eq(Tag.class), anyString())).thenReturn(tag);",
        "line": 1043,
        "locate": "Test Case",
        "locationContext": {
          "methodName": "executeRequestDeleteTungstenTagCommandTest",
          "methodAnnotations": [
            "@Test"
          ]
        }
      },
      {
        "type": "STUBBING",
        "code": "when(tungstenApi.deleteTungstenObject(any(Tag.class))).thenReturn(true);",
        "line": 1044,
        "locate": "Test Case",
        "locationContext": {
          "methodName": "executeRequestDeleteTungstenTagCommandTest",
          "methodAnnotations": [
            "@Test"
          ]
        }
      },
      {
        "type": "STUBBING",
        "code": "when(tungstenApi.getTungstenObject(eq(TagType.class), anyString())).thenReturn(tagType);",
        "line": 1053,
        "locate": "Test Case",
        "locationContext": {
          "methodName": "executeRequestDeleteTungstenTagTypeCommandTest",
          "methodAnnotations": [
            "@Test"
          ]
        }
      },
      {
        "type": "STUBBING",
        "code": "when(tungstenApi.deleteTungstenObject(any(TagType.class))).thenReturn(true);",
        "line": 1054,
        "locate": "Test Case",
        "locationContext": {
          "methodName": "executeRequestDeleteTungstenTagTypeCommandTest",
          "methodAnnotations": [
            "@Test"
          ]
        }
      },
      {
        "type": "STUBBING",
        "code": "when(tungstenApi.listTungstenTagType(anyString())).thenAnswer(tagTypesAnswer);",
        "line": 1091,
        "locate": "Test Case",
        "locationContext": {
          "methodName": "executeRequestListTungstenTagTypeCommandTest",
          "methodAnnotations": [
            "@Test"
          ]
        }
      },
      {
        "type": "STUBBING",
        "code": "when(tungstenApi.applyTungstenPolicyTag(anyString(), anyString())).thenReturn(true);",
        "line": 1117,
        "locate": "Test Case",
        "locationContext": {
          "methodName": "executeRequestApplyTungstenTagCommandTest",
          "methodAnnotations": [
            "@Test"
          ]
        }
      },
      {
        "type": "STUBBING",
        "code": "when(tungstenApi.getTungstenObject(eq(Tag.class), anyString())).thenReturn(tag);",
        "line": 1118,
        "locate": "Test Case",
        "locationContext": {
          "methodName": "executeRequestApplyTungstenTagCommandTest",
          "methodAnnotations": [
            "@Test"
          ]
        }
      },
      {
        "type": "STUBBING",
        "code": "when(tungstenApi.getBackRefFromVirtualNetwork(eq(VirtualNetwork.class), anyList())).thenAnswer(virtualNetworksAnswer);",
        "line": 1119,
        "locate": "Test Case",
        "locationContext": {
          "methodName": "executeRequestApplyTungstenTagCommandTest",
          "methodAnnotations": [
            "@Test"
          ]
        }
      },
      {
        "type": "STUBBING",
        "code": "when(tungstenApi.getBackRefFromVirtualMachine(eq(VirtualMachine.class), anyList())).thenAnswer(virtualMachinesAnswer);",
        "line": 1120,
        "locate": "Test Case",
        "locationContext": {
          "methodName": "executeRequestApplyTungstenTagCommandTest",
          "methodAnnotations": [
            "@Test"
          ]
        }
      },
      {
        "type": "STUBBING",
        "code": "when(tungstenApi.getBackRefFromVirtualMachineInterface(eq(VirtualMachineInterface.class), anyList())).thenAnswer(virtualMachineInterfacesAnswer);",
        "line": 1121,
        "locate": "Test Case",
        "locationContext": {
          "methodName": "executeRequestApplyTungstenTagCommandTest",
          "methodAnnotations": [
            "@Test"
          ]
        }
      },
      {
        "type": "STUBBING",
        "code": "when(tungstenApi.getBackRefFromNetworkPolicy(eq(NetworkPolicy.class), anyList())).thenAnswer(networkPoliciesAnswer);",
        "line": 1122,
        "locate": "Test Case",
        "locationContext": {
          "methodName": "executeRequestApplyTungstenTagCommandTest",
          "methodAnnotations": [
            "@Test"
          ]
        }
      },
      {
        "type": "STUBBING",
        "code": "when(tungstenApi.getBackRefFromApplicationPolicySet(eq(ApplicationPolicySet.class), anyList())).thenAnswer(applicationPoliciesAnswer);",
        "line": 1123,
        "locate": "Test Case",
        "locationContext": {
          "methodName": "executeRequestApplyTungstenTagCommandTest",
          "methodAnnotations": [
            "@Test"
          ]
        }
      },
      {
        "type": "STUBBING",
        "code": "when(tungstenApi.removeTungstenPolicy(anyString(), anyString())).thenReturn(networkPolicy);",
        "line": 1137,
        "locate": "Test Case",
        "locationContext": {
          "methodName": "executeRequestRemoveTungstenPolicyCommandTest",
          "methodAnnotations": [
            "@Test"
          ]
        }
      },
      {
        "type": "STUBBING",
        "code": "when(tungstenApi.getNetworksFromNetworkPolicy(any(NetworkPolicy.class))).thenReturn(virtualNetworks);",
        "line": 1138,
        "locate": "Test Case",
        "locationContext": {
          "methodName": "executeRequestRemoveTungstenPolicyCommandTest",
          "methodAnnotations": [
            "@Test"
          ]
        }
      },
      {
        "type": "STUBBING",
        "code": "when(tungstenApi.removeTungstenTag(anyList(), anyList(), anyList(), anyString(), anyString(), anyString())).thenReturn(tag);",
        "line": 1168,
        "locate": "Test Case",
        "locationContext": {
          "methodName": "executeRequestRemoveTungstenTagCommandTest",
          "methodAnnotations": [
            "@Test"
          ]
        }
      },
      {
        "type": "STUBBING",
        "code": "when(tungstenApi.getBackRefFromVirtualNetwork(eq(VirtualNetwork.class), anyList())).thenAnswer(virtualNetworksAnswer);",
        "line": 1169,
        "locate": "Test Case",
        "locationContext": {
          "methodName": "executeRequestRemoveTungstenTagCommandTest",
          "methodAnnotations": [
            "@Test"
          ]
        }
      },
      {
        "type": "STUBBING",
        "code": "when(tungstenApi.getBackRefFromVirtualMachine(eq(VirtualMachine.class), anyList())).thenAnswer(virtualMachinesAnswer);",
        "line": 1170,
        "locate": "Test Case",
        "locationContext": {
          "methodName": "executeRequestRemoveTungstenTagCommandTest",
          "methodAnnotations": [
            "@Test"
          ]
        }
      },
      {
        "type": "STUBBING",
        "code": "when(tungstenApi.getBackRefFromVirtualMachineInterface(eq(VirtualMachineInterface.class), anyList())).thenAnswer(virtualMachineInterfacesAnswer);",
        "line": 1171,
        "locate": "Test Case",
        "locationContext": {
          "methodName": "executeRequestRemoveTungstenTagCommandTest",
          "methodAnnotations": [
            "@Test"
          ]
        }
      },
      {
        "type": "STUBBING",
        "code": "when(tungstenApi.getBackRefFromNetworkPolicy(eq(NetworkPolicy.class), anyList())).thenAnswer(networkPoliciesAnswer);",
        "line": 1172,
        "locate": "Test Case",
        "locationContext": {
          "methodName": "executeRequestRemoveTungstenTagCommandTest",
          "methodAnnotations": [
            "@Test"
          ]
        }
      },
      {
        "type": "STUBBING",
        "code": "when(tungstenApi.getBackRefFromApplicationPolicySet(eq(ApplicationPolicySet.class), anyList())).thenAnswer(applicationPoliciesAnswer);",
        "line": 1173,
        "locate": "Test Case",
        "locationContext": {
          "methodName": "executeRequestRemoveTungstenTagCommandTest",
          "methodAnnotations": [
            "@Test"
          ]
        }
      },
      {
        "type": "STUBBING",
        "code": "when(tungstenApi.createTungstenApplicationPolicySet(anyString(), anyString())).thenReturn(applicationPolicySet);",
        "line": 1183,
        "locate": "Test Case",
        "locationContext": {
          "methodName": "executeRequestCreateTungstenApplicationPolicySetCommandTest",
          "methodAnnotations": [
            "@Test"
          ]
        }
      },
      {
        "type": "STUBBING",
        "code": "when(tungstenApi.createTungstenFirewallPolicy(anyString(), anyString(), anyString(), anyInt())).thenReturn(firewallPolicy);",
        "line": 1193,
        "locate": "Test Case",
        "locationContext": {
          "methodName": "executeRequestCreateTungstenFirewallPolicyCommandTest",
          "methodAnnotations": [
            "@Test"
          ]
        }
      },
      {
        "type": "STUBBING",
        "code": "when(tungstenApi.createTungstenFirewallRule(anyString(), anyString(), anyString(), anyString(), anyString(), anyString(), anyString(), anyString(), anyString(), anyString(), anyString(), anyString(), anyString(), anyInt())).thenReturn(firewallRule);",
        "line": 1207,
        "locate": "Test Case",
        "locationContext": {
          "methodName": "executeRequestCreateTungstenFirewallRuleCommandTest",
          "methodAnnotations": [
            "@Test"
          ]
        }
      },
      {
        "type": "STUBBING",
        "code": "when(tungstenApi.createTungstenServiceGroup(anyString(), anyString(), anyString(), anyInt(), anyInt())).thenReturn(serviceGroup);",
        "line": 1218,
        "locate": "Test Case",
        "locationContext": {
          "methodName": "executeRequestCreateTungstenServiceGroupCommandTest",
          "methodAnnotations": [
            "@Test"
          ]
        }
      },
      {
        "type": "STUBBING",
        "code": "when(tungstenApi.createTungstenAddressGroup(anyString(), anyString(), anyString(), anyInt())).thenReturn(addressGroup);",
        "line": 1228,
        "locate": "Test Case",
        "locationContext": {
          "methodName": "executeRequestCreateTungstenAddressGroupCommandTest",
          "methodAnnotations": [
            "@Test"
          ]
        }
      },
      {
        "type": "STUBBING",
        "code": "when(tungstenApi.listTungstenApplicationPolicySet(anyString())).thenAnswer(applicationPolicySetsAnswer);",
        "line": 1240,
        "locate": "Test Case",
        "locationContext": {
          "methodName": "executeRequestListTungstenApplicationPolicySetCommandTest",
          "methodAnnotations": [
            "@Test"
          ]
        }
      },
      {
        "type": "STUBBING",
        "code": "when(tungstenApi.listTungstenFirewallPolicy(anyString(), anyString())).thenAnswer(firewallPoliciesAnswer);",
        "line": 1253,
        "locate": "Test Case",
        "locationContext": {
          "methodName": "executeRequestListTungstenFirewallPolicyCommandTest",
          "methodAnnotations": [
            "@Test"
          ]
        }
      },
      {
        "type": "STUBBING",
        "code": "when(tungstenApi.listTungstenFirewallRule(anyString(), anyString())).thenAnswer(firewallRulesAnswer);",
        "line": 1266,
        "locate": "Test Case",
        "locationContext": {
          "methodName": "executeRequestListTungstenFirewallRuleCommandTest",
          "methodAnnotations": [
            "@Test"
          ]
        }
      },
      {
        "type": "STUBBING",
        "code": "when(tungstenApi.listTungstenServiceGroup(anyString())).thenAnswer(serviceGroupsAnswer);",
        "line": 1278,
        "locate": "Test Case",
        "locationContext": {
          "methodName": "executeRequestListTungstenServiceGroupCommandTest",
          "methodAnnotations": [
            "@Test"
          ]
        }
      },
      {
        "type": "STUBBING",
        "code": "when(tungstenApi.listTungstenAddressGroup(anyString())).thenAnswer(addressGroupsAnswer);",
        "line": 1290,
        "locate": "Test Case",
        "locationContext": {
          "methodName": "executeRequestListTungstenAddressGroupCommandTest",
          "methodAnnotations": [
            "@Test"
          ]
        }
      },
      {
        "type": "STUBBING",
        "code": "when(tungstenApi.getTungstenObject(eq(ApplicationPolicySet.class), anyString())).thenReturn(applicationPolicySet);",
        "line": 1300,
        "locate": "Test Case",
        "locationContext": {
          "methodName": "executeRequestDeleteTungstenApplicationPolicySetCommandTest",
          "methodAnnotations": [
            "@Test"
          ]
        }
      },
      {
        "type": "STUBBING",
        "code": "when(tungstenApi.deleteTungstenObject(any(ApplicationPolicySet.class))).thenReturn(true);",
        "line": 1301,
        "locate": "Test Case",
        "locationContext": {
          "methodName": "executeRequestDeleteTungstenApplicationPolicySetCommandTest",
          "methodAnnotations": [
            "@Test"
          ]
        }
      },
      {
        "type": "STUBBING",
        "code": "when(tungstenApi.getTungstenObject(eq(FirewallPolicy.class), anyString())).thenReturn(firewallPolicy);",
        "line": 1310,
        "locate": "Test Case",
        "locationContext": {
          "methodName": "executeRequestDeleteTungstenFirewallPolicyCommandTest",
          "methodAnnotations": [
            "@Test"
          ]
        }
      },
      {
        "type": "STUBBING",
        "code": "when(tungstenApi.deleteTungstenObject(any(FirewallPolicy.class))).thenReturn(true);",
        "line": 1311,
        "locate": "Test Case",
        "locationContext": {
          "methodName": "executeRequestDeleteTungstenFirewallPolicyCommandTest",
          "methodAnnotations": [
            "@Test"
          ]
        }
      },
      {
        "type": "STUBBING",
        "code": "when(tungstenApi.getTungstenObject(eq(FirewallRule.class), anyString())).thenReturn(firewallRule);",
        "line": 1320,
        "locate": "Test Case",
        "locationContext": {
          "methodName": "executeRequestDeleteTungstenFirewallRuleCommandTest",
          "methodAnnotations": [
            "@Test"
          ]
        }
      },
      {
        "type": "STUBBING",
        "code": "when(tungstenApi.deleteTungstenObject(any(FirewallRule.class))).thenReturn(true);",
        "line": 1321,
        "locate": "Test Case",
        "locationContext": {
          "methodName": "executeRequestDeleteTungstenFirewallRuleCommandTest",
          "methodAnnotations": [
            "@Test"
          ]
        }
      },
      {
        "type": "STUBBING",
        "code": "when(tungstenApi.getTungstenObject(eq(ServiceGroup.class), anyString())).thenReturn(serviceGroup);",
        "line": 1330,
        "locate": "Test Case",
        "locationContext": {
          "methodName": "executeRequestDeleteTungstenServiceGroupCommandTest",
          "methodAnnotations": [
            "@Test"
          ]
        }
      },
      {
        "type": "STUBBING",
        "code": "when(tungstenApi.deleteTungstenObject(any(ServiceGroup.class))).thenReturn(true);",
        "line": 1331,
        "locate": "Test Case",
        "locationContext": {
          "methodName": "executeRequestDeleteTungstenServiceGroupCommandTest",
          "methodAnnotations": [
            "@Test"
          ]
        }
      },
      {
        "type": "STUBBING",
        "code": "when(tungstenApi.getTungstenObject(eq(AddressGroup.class), anyString())).thenReturn(addressGroup);",
        "line": 1340,
        "locate": "Test Case",
        "locationContext": {
          "methodName": "executeRequestDeleteTungstenAddressGroupCommandTest",
          "methodAnnotations": [
            "@Test"
          ]
        }
      },
      {
        "type": "STUBBING",
        "code": "when(tungstenApi.deleteTungstenObject(any(AddressGroup.class))).thenReturn(true);",
        "line": 1341,
        "locate": "Test Case",
        "locationContext": {
          "methodName": "executeRequestDeleteTungstenAddressGroupCommandTest",
          "methodAnnotations": [
            "@Test"
          ]
        }
      },
      {
        "type": "STUBBING",
        "code": "when(tungstenApi.updateTungstenVrouterConfig(anyString())).thenReturn(globalVrouterConfig);",
        "line": 1350,
        "locate": "Test Case",
        "locationContext": {
          "methodName": "executeRequestUpdateTungstenVrouterConfigCommandTest",
          "methodAnnotations": [
            "@Test"
          ]
        }
      },
      {
        "type": "STUBBING",
        "code": "when(tungstenApi.updateTungstenDefaultSecurityGroup(anyString())).thenReturn(true);",
        "line": 1359,
        "locate": "Test Case",
        "locationContext": {
          "methodName": "executeRequestUpdateTungstenDefaultSecurityGroupCommandTest",
          "methodAnnotations": [
            "@Test"
          ]
        }
      },
      {
        "type": "STUBBING",
        "code": "when(tungstenApi.createRoutingLogicalRouter(anyString(), anyString(), anyString())).thenReturn(logicalRouter);",
        "line": 1371,
        "locate": "Test Case",
        "locationContext": {
          "methodName": "executeRequestCreateTungstenRoutingLogicalRouterCommandTest",
          "methodAnnotations": [
            "@Test"
          ]
        }
      },
      {
        "type": "STUBBING",
        "code": "when(tungstenApi.listConnectedNetworkFromLogicalRouter(any(LogicalRouter.class))).thenAnswer(virtualNetworksAnswer);",
        "line": 1372,
        "locate": "Test Case",
        "locationContext": {
          "methodName": "executeRequestCreateTungstenRoutingLogicalRouterCommandTest",
          "methodAnnotations": [
            "@Test"
          ]
        }
      },
      {
        "type": "STUBBING",
        "code": "when(tungstenApi.getTungstenObject(eq(LogicalRouter.class), anyString())).thenReturn(logicalRouter);",
        "line": 1388,
        "locate": "Test Case",
        "locationContext": {
          "methodName": "executeRequestAddTungstenNetworkGatewayToLogicalRouterCommandTest",
          "methodAnnotations": [
            "@Test"
          ]
        }
      },
      {
        "type": "STUBBING",
        "code": "when(tungstenApi.listConnectedNetworkFromLogicalRouter(any(LogicalRouter.class))).thenAnswer(virtualNetworksAnswer);",
        "line": 1389,
        "locate": "Test Case",
        "locationContext": {
          "methodName": "executeRequestAddTungstenNetworkGatewayToLogicalRouterCommandTest",
          "methodAnnotations": [
            "@Test"
          ]
        }
      },
      {
        "type": "STUBBING",
        "code": "when(tungstenApi.addNetworkGatewayToLogicalRouter(anyString(), anyString(), anyString())).thenReturn(logicalRouter);",
        "line": 1390,
        "locate": "Test Case",
        "locationContext": {
          "methodName": "executeRequestAddTungstenNetworkGatewayToLogicalRouterCommandTest",
          "methodAnnotations": [
            "@Test"
          ]
        }
      },
      {
        "type": "STUBBING",
        "code": "when(tungstenApi.listConnectedNetworkFromLogicalRouter(any(LogicalRouter.class))).thenAnswer(virtualNetworksAnswer);",
        "line": 1391,
        "locate": "Test Case",
        "locationContext": {
          "methodName": "executeRequestAddTungstenNetworkGatewayToLogicalRouterCommandTest",
          "methodAnnotations": [
            "@Test"
          ]
        }
      },
      {
        "type": "STUBBING",
        "code": "when(tungstenApi.removeNetworkGatewayFromLogicalRouter(anyString(), anyString())).thenReturn(logicalRouter);",
        "line": 1405,
        "locate": "Test Case",
        "locationContext": {
          "methodName": "executeRequestRemoveTungstenNetworkGatewayFromLogicalRouterCommandTest",
          "methodAnnotations": [
            "@Test"
          ]
        }
      },
      {
        "type": "STUBBING",
        "code": "when(tungstenApi.listConnectedNetworkFromLogicalRouter(any(LogicalRouter.class))).thenReturn(virtualNetworks);",
        "line": 1406,
        "locate": "Test Case",
        "locationContext": {
          "methodName": "executeRequestRemoveTungstenNetworkGatewayFromLogicalRouterCommandTest",
          "methodAnnotations": [
            "@Test"
          ]
        }
      },
      {
        "type": "STUBBING",
        "code": "when(tungstenApi.listRoutingLogicalRouter(anyString())).thenAnswer(logicalRoutersAnswer);",
        "line": 1421,
        "locate": "Test Case",
        "locationContext": {
          "methodName": "executeRequestListTungstenRoutingLogicalRouterCommandTest",
          "methodAnnotations": [
            "@Test"
          ]
        }
      },
      {
        "type": "STUBBING",
        "code": "when(tungstenApi.listConnectedNetworkFromLogicalRouter(any(LogicalRouter.class))).thenReturn(virtualNetworks);",
        "line": 1422,
        "locate": "Test Case",
        "locationContext": {
          "methodName": "executeRequestListTungstenRoutingLogicalRouterCommandTest",
          "methodAnnotations": [
            "@Test"
          ]
        }
      },
      {
        "type": "STUBBING",
        "code": "when(tungstenApi.getTungstenObject(eq(LogicalRouter.class), anyString())).thenReturn(logicalRouter);",
        "line": 1433,
        "locate": "Test Case",
        "locationContext": {
          "methodName": "executeRequestDeleteTungstenRoutingLogicalRouterCommandSuccessTest",
          "methodAnnotations": [
            "@Test"
          ]
        }
      },
      {
        "type": "STUBBING",
        "code": "when(tungstenApi.deleteTungstenObject(any(LogicalRouter.class))).thenReturn(true);",
        "line": 1434,
        "locate": "Test Case",
        "locationContext": {
          "methodName": "executeRequestDeleteTungstenRoutingLogicalRouterCommandSuccessTest",
          "methodAnnotations": [
            "@Test"
          ]
        }
      },
      {
        "type": "STUBBING",
        "code": "when(tungstenApi.getTungstenObject(eq(LogicalRouter.class), anyString())).thenReturn(logicalRouter);",
        "line": 1447,
        "locate": "Test Case",
        "locationContext": {
          "methodName": "executeRequestDeleteTungstenRoutingLogicalRouterCommandFailTest",
          "methodAnnotations": [
            "@Test"
          ]
        }
      },
      {
        "type": "STUBBING",
        "code": "when(tungstenApi.updateTungstenObject(any(LogicalRouter.class))).thenReturn(true);",
        "line": 1449,
        "locate": "Test Case",
        "locationContext": {
          "methodName": "executeRequestDeleteTungstenRoutingLogicalRouterCommandFailTest",
          "methodAnnotations": [
            "@Test"
          ]
        }
      },
      {
        "type": "STUBBING",
        "code": "when(tungstenApi.getTungstenObject(eq(VirtualMachineInterface.class), anyString())).thenReturn(virtualMachineInterface);",
        "line": 1450,
        "locate": "Test Case",
        "locationContext": {
          "methodName": "executeRequestDeleteTungstenRoutingLogicalRouterCommandFailTest",
          "methodAnnotations": [
            "@Test"
          ]
        }
      },
      {
        "type": "STUBBING",
        "code": "when(tungstenApi.deleteTungstenVmInterface(any(VirtualMachineInterface.class))).thenReturn(true);",
        "line": 1451,
        "locate": "Test Case",
        "locationContext": {
          "methodName": "executeRequestDeleteTungstenRoutingLogicalRouterCommandFailTest",
          "methodAnnotations": [
            "@Test"
          ]
        }
      },
      {
        "type": "STUBBING",
        "code": "when(tungstenApi.deleteTungstenObject(any(LogicalRouter.class))).thenReturn(true);",
        "line": 1452,
        "locate": "Test Case",
        "locationContext": {
          "methodName": "executeRequestDeleteTungstenRoutingLogicalRouterCommandFailTest",
          "methodAnnotations": [
            "@Test"
          ]
        }
      }
    ],
    "pattern_id": 12
  }
]