[
  {
    "variableName": "_physicalNetworkDao",
    "variableType": "PhysicalNetworkDao",
    "mockedClass": "PhysicalNetworkDao",
    "isReuseableMock": false,
    "mockPattern": "Creation:\n\u2014 Attribute Mock Creation\n\nStubbing:\n\u2014 Test Case\n\u2014 Other Methods\n\nVerification:\n\u2014 None",
    "classContext": {
      "packageName": "com.cloud.network",
      "filePath": "C:\\java tool\\Apache\\cloudstack\\server\\src\\test\\java\\com\\cloud\\network\\DedicateGuestVlanRangesTest.java",
      "className": "DedicateGuestVlanRangesTest"
    },
    "statements": [
      {
        "type": "FIELD_MOCK_CREATION",
        "code": "@Mock\r\nPhysicalNetworkDao _physicalNetworkDao;",
        "line": 81,
        "locate": "Attribute",
        "locationContext": {
          "methodName": "[FieldDeclaration]",
          "methodAnnotations": [
            "@Mock"
          ]
        }
      },
      {
        "type": "STUBBING",
        "code": "when(networkService._physicalNetworkDao.findById(anyLong())).thenReturn(physicalNetwork);",
        "line": 195,
        "locate": "Test Case",
        "locationContext": {
          "methodName": "runDedicateGuestVlanRangePostiveTest",
          "methodAnnotations": []
        }
      },
      {
        "type": "STUBBING",
        "code": "when(networkService._physicalNetworkDao.findById(anyLong())).thenReturn(physicalNetwork);",
        "line": 230,
        "locate": "Other Methods",
        "locationContext": {
          "methodName": "runDedicateGuestVlanRangeInvalidFormat",
          "methodAnnotations": []
        }
      },
      {
        "type": "STUBBING",
        "code": "when(networkService._physicalNetworkDao.findById(anyLong())).thenReturn(physicalNetwork);",
        "line": 251,
        "locate": "Other Methods",
        "locationContext": {
          "methodName": "runDedicateGuestVlanRangeInvalidRangeValue",
          "methodAnnotations": []
        }
      },
      {
        "type": "STUBBING",
        "code": "when(networkService._physicalNetworkDao.findById(anyLong())).thenReturn(physicalNetwork);",
        "line": 271,
        "locate": "Other Methods",
        "locationContext": {
          "methodName": "runDedicateGuestVlanRangeAllocatedVlans",
          "methodAnnotations": []
        }
      },
      {
        "type": "STUBBING",
        "code": "when(networkService._physicalNetworkDao.findById(anyLong())).thenReturn(physicalNetwork);",
        "line": 298,
        "locate": "Other Methods",
        "locationContext": {
          "methodName": "runDedicateGuestVlanRangeDedicatedRange",
          "methodAnnotations": []
        }
      },
      {
        "type": "STUBBING",
        "code": "when(networkService._physicalNetworkDao.findById(anyLong())).thenReturn(physicalNetwork);",
        "line": 328,
        "locate": "Other Methods",
        "locationContext": {
          "methodName": "runDedicateGuestVlanRangePartiallyDedicated",
          "methodAnnotations": []
        }
      }
    ],
    "pattern_id": 25
  },
  {
    "variableName": "_physicalNetworkDao",
    "variableType": "PhysicalNetworkDao",
    "mockedClass": "PhysicalNetworkDao",
    "isReuseableMock": false,
    "mockPattern": "Creation:\n\u2014 Attribute Mock Creation\n\nStubbing:\n\u2014 Test Case\n\u2014 Other Methods\n\nVerification:\n\u2014 None",
    "classContext": {
      "packageName": "com.cloud.network",
      "filePath": "C:\\java tool\\Apache\\cloudstack\\server\\src\\test\\java\\com\\cloud\\network\\DedicateGuestVlanRangesTest.java",
      "className": "DedicateGuestVlanRangesTest"
    },
    "statements": [
      {
        "type": "FIELD_MOCK_CREATION",
        "code": "@Mock\r\nPhysicalNetworkDao _physicalNetworkDao;",
        "line": 81,
        "locate": "Attribute",
        "locationContext": {
          "methodName": "[FieldDeclaration]",
          "methodAnnotations": [
            "@Mock"
          ]
        }
      },
      {
        "type": "STUBBING",
        "code": "when(networkService._physicalNetworkDao.findById(anyLong())).thenReturn(physicalNetwork);",
        "line": 195,
        "locate": "Test Case",
        "locationContext": {
          "methodName": "runDedicateGuestVlanRangePostiveTest",
          "methodAnnotations": []
        }
      },
      {
        "type": "STUBBING",
        "code": "when(networkService._physicalNetworkDao.findById(anyLong())).thenReturn(physicalNetwork);",
        "line": 230,
        "locate": "Other Methods",
        "locationContext": {
          "methodName": "runDedicateGuestVlanRangeInvalidFormat",
          "methodAnnotations": []
        }
      },
      {
        "type": "STUBBING",
        "code": "when(networkService._physicalNetworkDao.findById(anyLong())).thenReturn(physicalNetwork);",
        "line": 251,
        "locate": "Other Methods",
        "locationContext": {
          "methodName": "runDedicateGuestVlanRangeInvalidRangeValue",
          "methodAnnotations": []
        }
      },
      {
        "type": "STUBBING",
        "code": "when(networkService._physicalNetworkDao.findById(anyLong())).thenReturn(physicalNetwork);",
        "line": 271,
        "locate": "Other Methods",
        "locationContext": {
          "methodName": "runDedicateGuestVlanRangeAllocatedVlans",
          "methodAnnotations": []
        }
      },
      {
        "type": "STUBBING",
        "code": "when(networkService._physicalNetworkDao.findById(anyLong())).thenReturn(physicalNetwork);",
        "line": 298,
        "locate": "Other Methods",
        "locationContext": {
          "methodName": "runDedicateGuestVlanRangeDedicatedRange",
          "methodAnnotations": []
        }
      },
      {
        "type": "STUBBING",
        "code": "when(networkService._physicalNetworkDao.findById(anyLong())).thenReturn(physicalNetwork);",
        "line": 328,
        "locate": "Other Methods",
        "locationContext": {
          "methodName": "runDedicateGuestVlanRangePartiallyDedicated",
          "methodAnnotations": []
        }
      }
    ],
    "pattern_id": 25
  },
  {
    "variableName": "_physicalNetworkDao",
    "variableType": "PhysicalNetworkDao",
    "mockedClass": "PhysicalNetworkDao",
    "isReuseableMock": false,
    "mockPattern": "Creation:\n\u2014 Attribute Mock Creation\n\nStubbing:\n\u2014 Test Case\n\u2014 Other Methods\n\nVerification:\n\u2014 None",
    "classContext": {
      "packageName": "com.cloud.network",
      "filePath": "C:\\java tool\\Apache\\cloudstack\\server\\src\\test\\java\\com\\cloud\\network\\DedicateGuestVlanRangesTest.java",
      "className": "DedicateGuestVlanRangesTest"
    },
    "statements": [
      {
        "type": "FIELD_MOCK_CREATION",
        "code": "@Mock\r\nPhysicalNetworkDao _physicalNetworkDao;",
        "line": 81,
        "locate": "Attribute",
        "locationContext": {
          "methodName": "[FieldDeclaration]",
          "methodAnnotations": [
            "@Mock"
          ]
        }
      },
      {
        "type": "STUBBING",
        "code": "when(networkService._physicalNetworkDao.findById(anyLong())).thenReturn(physicalNetwork);",
        "line": 195,
        "locate": "Test Case",
        "locationContext": {
          "methodName": "runDedicateGuestVlanRangePostiveTest",
          "methodAnnotations": []
        }
      },
      {
        "type": "STUBBING",
        "code": "when(networkService._physicalNetworkDao.findById(anyLong())).thenReturn(physicalNetwork);",
        "line": 230,
        "locate": "Other Methods",
        "locationContext": {
          "methodName": "runDedicateGuestVlanRangeInvalidFormat",
          "methodAnnotations": []
        }
      },
      {
        "type": "STUBBING",
        "code": "when(networkService._physicalNetworkDao.findById(anyLong())).thenReturn(physicalNetwork);",
        "line": 251,
        "locate": "Other Methods",
        "locationContext": {
          "methodName": "runDedicateGuestVlanRangeInvalidRangeValue",
          "methodAnnotations": []
        }
      },
      {
        "type": "STUBBING",
        "code": "when(networkService._physicalNetworkDao.findById(anyLong())).thenReturn(physicalNetwork);",
        "line": 271,
        "locate": "Other Methods",
        "locationContext": {
          "methodName": "runDedicateGuestVlanRangeAllocatedVlans",
          "methodAnnotations": []
        }
      },
      {
        "type": "STUBBING",
        "code": "when(networkService._physicalNetworkDao.findById(anyLong())).thenReturn(physicalNetwork);",
        "line": 298,
        "locate": "Other Methods",
        "locationContext": {
          "methodName": "runDedicateGuestVlanRangeDedicatedRange",
          "methodAnnotations": []
        }
      },
      {
        "type": "STUBBING",
        "code": "when(networkService._physicalNetworkDao.findById(anyLong())).thenReturn(physicalNetwork);",
        "line": 328,
        "locate": "Other Methods",
        "locationContext": {
          "methodName": "runDedicateGuestVlanRangePartiallyDedicated",
          "methodAnnotations": []
        }
      }
    ],
    "pattern_id": 25
  },
  {
    "variableName": "_physicalNetworkDao",
    "variableType": "PhysicalNetworkDao",
    "mockedClass": "PhysicalNetworkDao",
    "isReuseableMock": false,
    "mockPattern": "Creation:\n\u2014 Attribute Mock Creation\n\nStubbing:\n\u2014 Test Case\n\u2014 Other Methods\n\nVerification:\n\u2014 None",
    "classContext": {
      "packageName": "com.cloud.network",
      "filePath": "C:\\java tool\\Apache\\cloudstack\\server\\src\\test\\java\\com\\cloud\\network\\DedicateGuestVlanRangesTest.java",
      "className": "DedicateGuestVlanRangesTest"
    },
    "statements": [
      {
        "type": "FIELD_MOCK_CREATION",
        "code": "@Mock\r\nPhysicalNetworkDao _physicalNetworkDao;",
        "line": 81,
        "locate": "Attribute",
        "locationContext": {
          "methodName": "[FieldDeclaration]",
          "methodAnnotations": [
            "@Mock"
          ]
        }
      },
      {
        "type": "STUBBING",
        "code": "when(networkService._physicalNetworkDao.findById(anyLong())).thenReturn(physicalNetwork);",
        "line": 195,
        "locate": "Test Case",
        "locationContext": {
          "methodName": "runDedicateGuestVlanRangePostiveTest",
          "methodAnnotations": []
        }
      },
      {
        "type": "STUBBING",
        "code": "when(networkService._physicalNetworkDao.findById(anyLong())).thenReturn(physicalNetwork);",
        "line": 230,
        "locate": "Other Methods",
        "locationContext": {
          "methodName": "runDedicateGuestVlanRangeInvalidFormat",
          "methodAnnotations": []
        }
      },
      {
        "type": "STUBBING",
        "code": "when(networkService._physicalNetworkDao.findById(anyLong())).thenReturn(physicalNetwork);",
        "line": 251,
        "locate": "Other Methods",
        "locationContext": {
          "methodName": "runDedicateGuestVlanRangeInvalidRangeValue",
          "methodAnnotations": []
        }
      },
      {
        "type": "STUBBING",
        "code": "when(networkService._physicalNetworkDao.findById(anyLong())).thenReturn(physicalNetwork);",
        "line": 271,
        "locate": "Other Methods",
        "locationContext": {
          "methodName": "runDedicateGuestVlanRangeAllocatedVlans",
          "methodAnnotations": []
        }
      },
      {
        "type": "STUBBING",
        "code": "when(networkService._physicalNetworkDao.findById(anyLong())).thenReturn(physicalNetwork);",
        "line": 298,
        "locate": "Other Methods",
        "locationContext": {
          "methodName": "runDedicateGuestVlanRangeDedicatedRange",
          "methodAnnotations": []
        }
      },
      {
        "type": "STUBBING",
        "code": "when(networkService._physicalNetworkDao.findById(anyLong())).thenReturn(physicalNetwork);",
        "line": 328,
        "locate": "Other Methods",
        "locationContext": {
          "methodName": "runDedicateGuestVlanRangePartiallyDedicated",
          "methodAnnotations": []
        }
      }
    ],
    "pattern_id": 25
  },
  {
    "variableName": "physicalNetworkDao",
    "variableType": "PhysicalNetworkDao",
    "mockedClass": "PhysicalNetworkDao",
    "isReuseableMock": false,
    "mockPattern": "Creation:\n\u2014 Attribute Mock Creation\n\nStubbing:\n\u2014 @Before\n\u2014 Helper Method\n\nVerification:\n\u2014 None",
    "classContext": {
      "packageName": "com.cloud.network",
      "filePath": "C:\\java tool\\Apache\\cloudstack\\server\\src\\test\\java\\com\\cloud\\network\\NetworkServiceImplTest.java",
      "className": "NetworkServiceImplTest"
    },
    "statements": [
      {
        "type": "FIELD_MOCK_CREATION",
        "code": "@Mock\r\nPhysicalNetworkDao physicalNetworkDao;",
        "line": 112,
        "locate": "Attribute",
        "locationContext": {
          "methodName": "[FieldDeclaration]",
          "methodAnnotations": [
            "@Mock"
          ]
        }
      },
      {
        "type": "STUBBING",
        "code": "Mockito.when(physicalNetworkDao.findById(Mockito.anyLong())).thenReturn(phyNet);",
        "line": 249,
        "locate": "@Before",
        "locationContext": {
          "methodName": "setup",
          "methodAnnotations": [
            "@Before"
          ]
        }
      },
      {
        "type": "STUBBING",
        "code": "Mockito.when(physicalNetworkDao.findById(Mockito.anyLong())).thenReturn(Mockito.mock(PhysicalNetworkVO.class));",
        "line": 516,
        "locate": "Helper Method",
        "locationContext": {
          "methodName": "prepareCreateNetworkDnsMocks",
          "methodAnnotations": []
        }
      }
    ],
    "pattern_id": 65
  }
]