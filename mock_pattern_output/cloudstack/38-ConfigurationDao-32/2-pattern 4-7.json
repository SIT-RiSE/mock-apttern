[
  {
    "variableName": "configDao",
    "variableType": "ConfigurationDao",
    "mockedClass": "ConfigurationDao",
    "isReuseableMock": "Hybrid",
    "mockPattern": "Creation:\n\u2014 Attribute Mock Creation\n\nStubbing:\n\u2014 Test Case\n\nVerification:\n\u2014 None",
    "classContext": {
      "packageName": "org.apache.cloudstack.network.tungsten.service",
      "filePath": "C:\\java tool\\Apache\\cloudstack\\plugins\\network-elements\\tungsten\\src\\test\\java\\org\\apache\\cloudstack\\network\\tungsten\\service\\TungstenElementTest.java",
      "className": "TungstenElementTest"
    },
    "statements": [
      {
        "type": "FIELD_MOCK_CREATION",
        "code": "@Mock\r\nConfigurationDao configDao;",
        "line": 146,
        "locate": "Attribute",
        "locationContext": {
          "methodName": "[FieldDeclaration]",
          "methodAnnotations": [
            "@Mock"
          ]
        }
      },
      {
        "type": "STUBBING",
        "code": "when(configDao.getValue(Config.NetworkLBHaproxyStatsVisbility.key())).thenReturn(\"enabled\");",
        "line": 385,
        "locate": "Test Case",
        "locationContext": {
          "methodName": "applyLBRulesAddRuleSuccessTest",
          "methodAnnotations": [
            "@Test"
          ]
        }
      },
      {
        "type": "STUBBING",
        "code": "when(configDao.getValue(Config.NetworkLBHaproxyStatsVisbility.key())).thenReturn(\"disabled\");",
        "line": 439,
        "locate": "Test Case",
        "locationContext": {
          "methodName": "applyLBRulesAddRuleFailTest",
          "methodAnnotations": [
            "@Test"
          ]
        }
      }
    ],
    "pattern_id": 4
  },
  {
    "variableName": "configDao",
    "variableType": "ConfigurationDao",
    "mockedClass": "ConfigurationDao",
    "isReuseableMock": "Hybrid",
    "mockPattern": "Creation:\n\u2014 Attribute Mock Creation\n\nStubbing:\n\u2014 Test Case\n\nVerification:\n\u2014 None",
    "classContext": {
      "packageName": "org.apache.cloudstack.network.tungsten.service",
      "filePath": "C:\\java tool\\Apache\\cloudstack\\plugins\\network-elements\\tungsten\\src\\test\\java\\org\\apache\\cloudstack\\network\\tungsten\\service\\TungstenServiceImplTest.java",
      "className": "TungstenServiceImplTest"
    },
    "statements": [
      {
        "type": "FIELD_MOCK_CREATION",
        "code": "@Mock\r\nConfigurationDao configDao;",
        "line": 232,
        "locate": "Attribute",
        "locationContext": {
          "methodName": "[FieldDeclaration]",
          "methodAnnotations": [
            "@Mock"
          ]
        }
      },
      {
        "type": "STUBBING",
        "code": "when(configDao.getValue(Config.NetworkLBHaproxyStatsVisbility.key())).thenReturn(\"enabled\");",
        "line": 708,
        "locate": "Test Case",
        "locationContext": {
          "methodName": "updateLoadBalancerTest",
          "methodAnnotations": [
            "@Test"
          ]
        }
      }
    ],
    "pattern_id": 4
  },
  {
    "variableName": "configDao",
    "variableType": "ConfigurationDao",
    "mockedClass": "ConfigurationDao",
    "isReuseableMock": "Hybrid",
    "mockPattern": "Creation:\n\u2014 Attribute Mock Creation\n\nStubbing:\n\u2014 Test Case\n\nVerification:\n\u2014 None",
    "classContext": {
      "packageName": "org.apache.cloudstack.storage.datastore.driver",
      "filePath": "C:\\java tool\\Apache\\cloudstack\\plugins\\storage\\volume\\scaleio\\src\\test\\java\\org\\apache\\cloudstack\\storage\\datastore\\driver\\ScaleIOPrimaryDataStoreDriverTest.java",
      "className": "ScaleIOPrimaryDataStoreDriverTest"
    },
    "statements": [
      {
        "type": "FIELD_MOCK_CREATION",
        "code": "@Mock\r\nConfigurationDao configDao;",
        "line": 93,
        "locate": "Attribute",
        "locationContext": {
          "methodName": "[FieldDeclaration]",
          "methodAnnotations": [
            "@Mock"
          ]
        }
      },
      {
        "type": "STUBBING",
        "code": "when(configDao.getValue(Config.MigrateWait.key())).thenReturn(\"3600\");",
        "line": 194,
        "locate": "Test Case",
        "locationContext": {
          "methodName": "testMigrateVolumeWithinSameScaleIOClusterSuccess",
          "methodAnnotations": [
            "@Test"
          ]
        }
      },
      {
        "type": "STUBBING",
        "code": "when(configDao.getValue(Config.MigrateWait.key())).thenReturn(\"3600\");",
        "line": 239,
        "locate": "Test Case",
        "locationContext": {
          "methodName": "testMigrateVolumeWithinSameScaleIOClusterFailure",
          "methodAnnotations": [
            "@Test"
          ]
        }
      },
      {
        "type": "STUBBING",
        "code": "when(configDao.getValue(Config.CopyVolumeWait.key())).thenReturn(\"3600\");",
        "line": 485,
        "locate": "Test Case",
        "locationContext": {
          "methodName": "testCopyOfflineVolume",
          "methodAnnotations": [
            "@Test"
          ]
        }
      },
      {
        "type": "STUBBING",
        "code": "when(configDao.getValue(Config.CopyVolumeWait.key())).thenReturn(\"3600\");",
        "line": 509,
        "locate": "Test Case",
        "locationContext": {
          "methodName": "testCopyOfflineVolumeFailureWhenNoEndpointFound",
          "methodAnnotations": [
            "@Test"
          ]
        }
      }
    ],
    "pattern_id": 4
  },
  {
    "variableName": "_configDao",
    "variableType": "ConfigurationDao",
    "mockedClass": "ConfigurationDao",
    "isReuseableMock": "Hybrid",
    "mockPattern": "Creation:\n\u2014 Attribute Mock Creation\n\nStubbing:\n\u2014 Test Case\n\nVerification:\n\u2014 None",
    "classContext": {
      "packageName": "com.cloud.configuration",
      "filePath": "C:\\java tool\\Apache\\cloudstack\\server\\src\\test\\java\\com\\cloud\\configuration\\ConfigurationManagerTest.java",
      "className": "ConfigurationManagerTest"
    },
    "statements": [
      {
        "type": "FIELD_MOCK_CREATION",
        "code": "@Mock\r\nConfigurationDao _configDao;",
        "line": 193,
        "locate": "Attribute",
        "locationContext": {
          "methodName": "[FieldDeclaration]",
          "methodAnnotations": [
            "@Mock"
          ]
        }
      },
      {
        "type": "STUBBING",
        "code": "Mockito.when(_configDao.getValue(Config.ControlCidr.key())).thenReturn(Config.ControlCidr.getDefaultValue());",
        "line": 1322,
        "locate": "Test Case",
        "locationContext": {
          "methodName": "testEdgeZoneCreatePod",
          "methodAnnotations": [
            "@Test"
          ]
        }
      }
    ],
    "pattern_id": 4
  },
  {
    "variableName": "_configDao",
    "variableType": "ConfigurationDao",
    "mockedClass": "ConfigurationDao",
    "isReuseableMock": "Hybrid",
    "mockPattern": "Creation:\n\u2014 Attribute Mock Creation\n\nStubbing:\n\u2014 Test Case\n\nVerification:\n\u2014 None",
    "classContext": {
      "packageName": "com.cloud.configuration",
      "filePath": "C:\\java tool\\Apache\\cloudstack\\server\\src\\test\\java\\com\\cloud\\configuration\\ConfigurationManagerTest.java",
      "className": "ConfigurationManagerTest"
    },
    "statements": [
      {
        "type": "FIELD_MOCK_CREATION",
        "code": "@Mock\r\nConfigurationDao _configDao;",
        "line": 193,
        "locate": "Attribute",
        "locationContext": {
          "methodName": "[FieldDeclaration]",
          "methodAnnotations": [
            "@Mock"
          ]
        }
      },
      {
        "type": "STUBBING",
        "code": "Mockito.when(_configDao.getValue(Config.ControlCidr.key())).thenReturn(Config.ControlCidr.getDefaultValue());",
        "line": 1322,
        "locate": "Test Case",
        "locationContext": {
          "methodName": "testEdgeZoneCreatePod",
          "methodAnnotations": [
            "@Test"
          ]
        }
      }
    ],
    "pattern_id": 4
  },
  {
    "variableName": "_configDao",
    "variableType": "ConfigurationDao",
    "mockedClass": "ConfigurationDao",
    "isReuseableMock": "Hybrid",
    "mockPattern": "Creation:\n\u2014 Attribute Mock Creation\n\nStubbing:\n\u2014 Test Case\n\nVerification:\n\u2014 None",
    "classContext": {
      "packageName": "com.cloud.configuration",
      "filePath": "C:\\java tool\\Apache\\cloudstack\\server\\src\\test\\java\\com\\cloud\\configuration\\ConfigurationManagerTest.java",
      "className": "ConfigurationManagerTest"
    },
    "statements": [
      {
        "type": "FIELD_MOCK_CREATION",
        "code": "@Mock\r\nConfigurationDao _configDao;",
        "line": 193,
        "locate": "Attribute",
        "locationContext": {
          "methodName": "[FieldDeclaration]",
          "methodAnnotations": [
            "@Mock"
          ]
        }
      },
      {
        "type": "STUBBING",
        "code": "Mockito.when(_configDao.getValue(Config.ControlCidr.key())).thenReturn(Config.ControlCidr.getDefaultValue());",
        "line": 1322,
        "locate": "Test Case",
        "locationContext": {
          "methodName": "testEdgeZoneCreatePod",
          "methodAnnotations": [
            "@Test"
          ]
        }
      }
    ],
    "pattern_id": 4
  },
  {
    "variableName": "_configDao",
    "variableType": "ConfigurationDao",
    "mockedClass": "ConfigurationDao",
    "isReuseableMock": "Hybrid",
    "mockPattern": "Creation:\n\u2014 Attribute Mock Creation\n\nStubbing:\n\u2014 Test Case\n\nVerification:\n\u2014 None",
    "classContext": {
      "packageName": "com.cloud.server",
      "filePath": "C:\\java tool\\Apache\\cloudstack\\server\\src\\test\\java\\com\\cloud\\server\\ConfigurationServerImplTest.java",
      "className": "ConfigurationServerImplTest"
    },
    "statements": [
      {
        "type": "FIELD_MOCK_CREATION",
        "code": "@Mock\r\nprivate ConfigurationDao _configDao;",
        "line": 48,
        "locate": "Attribute",
        "locationContext": {
          "methodName": "[FieldDeclaration]",
          "methodAnnotations": [
            "@Mock"
          ]
        }
      },
      {
        "type": "STUBBING",
        "code": "Mockito.when(_configDao.getValue(\"system.vm.random.password\")).thenReturn(String.valueOf(true));",
        "line": 114,
        "locate": "Test Case",
        "locationContext": {
          "methodName": "testUpdateSystemvmPassword",
          "methodAnnotations": [
            "@Test"
          ]
        }
      }
    ],
    "pattern_id": 4
  }
]