[
  {
    "variableName": "s_configDao",
    "variableType": "ConfigurationDao",
    "mockedClass": "ConfigurationDao",
    "isReuseableMock": false,
    "mockPattern": "Creation:\n\u2014 Attribute Mock Creation\n\nStubbing:\n\u2014 @Before\n\nVerification:\n\u2014 None",
    "classContext": {
      "packageName": "org.apache.cloudstack.ratelimit",
      "filePath": "C:\\java tool\\Apache\\cloudstack\\plugins\\api\\rate-limit\\src\\test\\java\\org\\apache\\cloudstack\\ratelimit\\ApiRateLimitTest.java",
      "className": "ApiRateLimitTest"
    },
    "statements": [
      {
        "type": "FIELD_MOCK_CREATION",
        "code": "static ConfigurationDao s_configDao = mock(ConfigurationDao.class);",
        "line": 51,
        "locate": "Attribute",
        "locationContext": {
          "methodName": "[FieldDeclaration]",
          "methodAnnotations": []
        }
      },
      {
        "type": "STUBBING",
        "code": "when(s_configDao.getValue(Config.ApiLimitInterval.key())).thenReturn(null);",
        "line": 58,
        "locate": "@Before",
        "locationContext": {
          "methodName": "setUp",
          "methodAnnotations": [
            "@BeforeClass"
          ]
        }
      },
      {
        "type": "STUBBING",
        "code": "when(s_configDao.getValue(Config.ApiLimitMax.key())).thenReturn(null);",
        "line": 59,
        "locate": "@Before",
        "locationContext": {
          "methodName": "setUp",
          "methodAnnotations": [
            "@BeforeClass"
          ]
        }
      },
      {
        "type": "STUBBING",
        "code": "when(s_configDao.getValue(Config.ApiLimitCacheSize.key())).thenReturn(null);",
        "line": 60,
        "locate": "@Before",
        "locationContext": {
          "methodName": "setUp",
          "methodAnnotations": [
            "@BeforeClass"
          ]
        }
      },
      {
        "type": "STUBBING",
        "code": "// enable api rate limiting\r\nwhen(s_configDao.getValue(Config.ApiLimitEnabled.key())).thenReturn(\"true\");",
        "line": 61,
        "locate": "@Before",
        "locationContext": {
          "methodName": "setUp",
          "methodAnnotations": [
            "@BeforeClass"
          ]
        }
      }
    ],
    "pattern_id": 7
  },
  {
    "variableName": "configDao",
    "variableType": "ConfigurationDao",
    "mockedClass": "ConfigurationDao",
    "isReuseableMock": false,
    "mockPattern": "Creation:\n\u2014 Attribute Mock Creation\n\nStubbing:\n\u2014 @Before\n\nVerification:\n\u2014 None",
    "classContext": {
      "packageName": "org.apache.cloudstack.quota",
      "filePath": "C:\\java tool\\Apache\\cloudstack\\plugins\\database\\quota\\src\\test\\java\\org\\apache\\cloudstack\\quota\\QuotaServiceImplTest.java",
      "className": "QuotaServiceImplTest"
    },
    "statements": [
      {
        "type": "FIELD_MOCK_CREATION",
        "code": "@Mock\r\nConfigurationDao configDao;",
        "line": 59,
        "locate": "Attribute",
        "locationContext": {
          "methodName": "[FieldDeclaration]",
          "methodAnnotations": [
            "@Mock"
          ]
        }
      },
      {
        "type": "STUBBING",
        "code": "Mockito.when(configDao.getValue(Mockito.eq(Config.UsageAggregationTimezone.toString()))).thenReturn(\"IST\");",
        "line": 101,
        "locate": "@Before",
        "locationContext": {
          "methodName": "setup",
          "methodAnnotations": [
            "@Before"
          ]
        }
      },
      {
        "type": "STUBBING",
        "code": "Mockito.when(configDao.getValue(Mockito.eq(Config.UsageStatsJobAggregationRange.toString()))).thenReturn(\"1\");",
        "line": 102,
        "locate": "@Before",
        "locationContext": {
          "methodName": "setup",
          "methodAnnotations": [
            "@Before"
          ]
        }
      }
    ],
    "pattern_id": 7
  },
  {
    "variableName": "_configDao",
    "variableType": "ConfigurationDao",
    "mockedClass": "ConfigurationDao",
    "isReuseableMock": false,
    "mockPattern": "Creation:\n\u2014 Attribute Mock Creation\n\nStubbing:\n\u2014 @Before\n\nVerification:\n\u2014 None",
    "classContext": {
      "packageName": "com.cloud.network.element",
      "filePath": "C:\\java tool\\Apache\\cloudstack\\server\\src\\test\\java\\com\\cloud\\network\\element\\ConfigDriveNetworkElementTest.java",
      "className": "ConfigDriveNetworkElementTest"
    },
    "statements": [
      {
        "type": "FIELD_MOCK_CREATION",
        "code": "@Mock\r\nprivate ConfigurationDao _configDao;",
        "line": 127,
        "locate": "Attribute",
        "locationContext": {
          "methodName": "[FieldDeclaration]",
          "methodAnnotations": [
            "@Mock"
          ]
        }
      },
      {
        "type": "STUBBING",
        "code": "when(_configDao.getValue(\"cloud.identifier\")).thenReturn(CLOUD_ID);",
        "line": 180,
        "locate": "@Before",
        "locationContext": {
          "methodName": "setUp",
          "methodAnnotations": [
            "@Before"
          ]
        }
      }
    ],
    "pattern_id": 7
  },
  {
    "variableName": "configurationDao",
    "variableType": "ConfigurationDao",
    "mockedClass": "ConfigurationDao",
    "isReuseableMock": false,
    "mockPattern": "Creation:\n\u2014 Attribute Mock Creation\n\nStubbing:\n\u2014 @Before\n\nVerification:\n\u2014 None",
    "classContext": {
      "packageName": "com.cloud.storage",
      "filePath": "C:\\java tool\\Apache\\cloudstack\\server\\src\\test\\java\\com\\cloud\\storage\\ImageStoreDetailsUtilTest.java",
      "className": "ImageStoreDetailsUtilTest"
    },
    "statements": [
      {
        "type": "FIELD_MOCK_CREATION",
        "code": "ConfigurationDao configurationDao = mock(ConfigurationDao.class);",
        "line": 47,
        "locate": "Attribute",
        "locationContext": {
          "methodName": "[FieldDeclaration]",
          "methodAnnotations": []
        }
      },
      {
        "type": "STUBBING",
        "code": "when(configurationDao.findByName(nfsVersionKey)).thenReturn(confVO);",
        "line": 63,
        "locate": "@Before",
        "locationContext": {
          "methodName": "setup",
          "methodAnnotations": [
            "@Before"
          ]
        }
      }
    ],
    "pattern_id": 7
  },
  {
    "variableName": "configurationDao",
    "variableType": "ConfigurationDao",
    "mockedClass": "ConfigurationDao",
    "isReuseableMock": false,
    "mockPattern": "Creation:\n\u2014 Attribute Mock Creation\n\nStubbing:\n\u2014 @Before\n\nVerification:\n\u2014 None",
    "classContext": {
      "packageName": "org.apache.cloudstack.vm",
      "filePath": "C:\\java tool\\Apache\\cloudstack\\server\\src\\test\\java\\org\\apache\\cloudstack\\vm\\UnmanagedVMsManagerImplTest.java",
      "className": "UnmanagedVMsManagerImplTest"
    },
    "statements": [
      {
        "type": "FIELD_MOCK_CREATION",
        "code": "@Mock\r\nprivate ConfigurationDao configurationDao;",
        "line": 174,
        "locate": "Attribute",
        "locationContext": {
          "methodName": "[FieldDeclaration]",
          "methodAnnotations": [
            "@Mock"
          ]
        }
      },
      {
        "type": "STUBBING",
        "code": "when(configurationDao.getValue(Mockito.anyString())).thenReturn(null);",
        "line": 235,
        "locate": "@Before",
        "locationContext": {
          "methodName": "setUp",
          "methodAnnotations": [
            "@Before"
          ]
        }
      }
    ],
    "pattern_id": 7
  }
]