[
  {
    "variableName": "userDataDaoMock",
    "variableType": "UserDataDao",
    "mockedClass": "UserDataDao",
    "isReuseableMock": false,
    "mockPattern": "Creation:\n\u2014 Attribute Mock Creation\n\nStubbing:\n\u2014 Test Case\n\nVerification:\n\u2014 None",
    "classContext": {
      "packageName": "com.cloud.api",
      "filePath": "C:\\java tool\\Apache\\cloudstack\\server\\src\\test\\java\\com\\cloud\\api\\ApiResponseHelperTest.java",
      "className": "ApiResponseHelperTest"
    },
    "statements": [
      {
        "type": "FIELD_MOCK_CREATION",
        "code": "@Mock\r\nUserDataDao userDataDaoMock;",
        "line": 95,
        "locate": "Attribute",
        "locationContext": {
          "methodName": "[FieldDeclaration]",
          "methodAnnotations": [
            "@Mock"
          ]
        }
      },
      {
        "type": "STUBBING",
        "code": "when(userDataDaoMock.findById(anyLong())).thenReturn(userDataVO);",
        "line": 341,
        "locate": "Test Case",
        "locationContext": {
          "methodName": "testAutoScaleVmProfileResponse",
          "methodAnnotations": [
            "@Test",
            "@PrepareForTest"
          ]
        }
      }
    ],
    "pattern_id": 4
  },
  {
    "variableName": "_userDataDao",
    "variableType": "UserDataDao",
    "mockedClass": "UserDataDao",
    "isReuseableMock": false,
    "mockPattern": "Creation:\n\u2014 Attribute Mock Creation\n\nStubbing:\n\u2014 Test Case\n\nVerification:\n\u2014 None",
    "classContext": {
      "packageName": "com.cloud.server",
      "filePath": "C:\\java tool\\Apache\\cloudstack\\server\\src\\test\\java\\com\\cloud\\server\\ManagementServerImplTest.java",
      "className": "ManagementServerImplTest"
    },
    "statements": [
      {
        "type": "FIELD_MOCK_CREATION",
        "code": "@Mock\r\nUserDataDao _userDataDao;",
        "line": 112,
        "locate": "Attribute",
        "locationContext": {
          "methodName": "[FieldDeclaration]",
          "methodAnnotations": [
            "@Mock"
          ]
        }
      },
      {
        "type": "STUBBING",
        "code": "when(_userDataDao.findByName(account.getAccountId(), account.getDomainId(), \"testName\")).thenReturn(null);",
        "line": 312,
        "locate": "Test Case",
        "locationContext": {
          "methodName": "testSuccessfulRegisterUserdata",
          "methodAnnotations": [
            "@Test"
          ]
        }
      },
      {
        "type": "STUBBING",
        "code": "when(_userDataDao.findByUserData(account.getAccountId(), account.getDomainId(), \"testUserdata\")).thenReturn(null);",
        "line": 313,
        "locate": "Test Case",
        "locationContext": {
          "methodName": "testSuccessfulRegisterUserdata",
          "methodAnnotations": [
            "@Test"
          ]
        }
      },
      {
        "type": "STUBBING",
        "code": "when(_userDataDao.findByName(account.getAccountId(), account.getDomainId(), \"testName\")).thenReturn(null);",
        "line": 337,
        "locate": "Test Case",
        "locationContext": {
          "methodName": "testRegisterExistingUserdata",
          "methodAnnotations": [
            "@Test"
          ]
        }
      },
      {
        "type": "STUBBING",
        "code": "when(_userDataDao.findByUserData(account.getAccountId(), account.getDomainId(), \"testUserdata\")).thenReturn(userData);",
        "line": 338,
        "locate": "Test Case",
        "locationContext": {
          "methodName": "testRegisterExistingUserdata",
          "methodAnnotations": [
            "@Test"
          ]
        }
      },
      {
        "type": "STUBBING",
        "code": "when(_userDataDao.findByName(account.getAccountId(), account.getDomainId(), \"testName\")).thenReturn(userData);",
        "line": 358,
        "locate": "Test Case",
        "locationContext": {
          "methodName": "testRegisterExistingName",
          "methodAnnotations": [
            "@Test"
          ]
        }
      },
      {
        "type": "STUBBING",
        "code": "when(_userDataDao.findById(1L)).thenReturn(userData);",
        "line": 381,
        "locate": "Test Case",
        "locationContext": {
          "methodName": "testSuccessfulDeleteUserdata",
          "methodAnnotations": [
            "@Test"
          ]
        }
      },
      {
        "type": "STUBBING",
        "code": "when(_userDataDao.findByName(account.getAccountId(), account.getDomainId(), \"testName\")).thenReturn(null);",
        "line": 382,
        "locate": "Test Case",
        "locationContext": {
          "methodName": "testSuccessfulDeleteUserdata",
          "methodAnnotations": [
            "@Test"
          ]
        }
      },
      {
        "type": "STUBBING",
        "code": "when(_userDataDao.remove(1L)).thenReturn(true);",
        "line": 385,
        "locate": "Test Case",
        "locationContext": {
          "methodName": "testSuccessfulDeleteUserdata",
          "methodAnnotations": [
            "@Test"
          ]
        }
      },
      {
        "type": "STUBBING",
        "code": "when(_userDataDao.findById(1L)).thenReturn(userData);",
        "line": 409,
        "locate": "Test Case",
        "locationContext": {
          "methodName": "testDeleteUserdataLinkedToTemplate",
          "methodAnnotations": [
            "@Test"
          ]
        }
      },
      {
        "type": "STUBBING",
        "code": "when(_userDataDao.findByName(account.getAccountId(), account.getDomainId(), \"testName\")).thenReturn(null);",
        "line": 410,
        "locate": "Test Case",
        "locationContext": {
          "methodName": "testDeleteUserdataLinkedToTemplate",
          "methodAnnotations": [
            "@Test"
          ]
        }
      },
      {
        "type": "STUBBING",
        "code": "when(_userDataDao.findById(1L)).thenReturn(userData);",
        "line": 438,
        "locate": "Test Case",
        "locationContext": {
          "methodName": "testDeleteUserdataUsedByVM",
          "methodAnnotations": [
            "@Test"
          ]
        }
      },
      {
        "type": "STUBBING",
        "code": "when(_userDataDao.findByName(account.getAccountId(), account.getDomainId(), \"testName\")).thenReturn(null);",
        "line": 439,
        "locate": "Test Case",
        "locationContext": {
          "methodName": "testDeleteUserdataUsedByVM",
          "methodAnnotations": [
            "@Test"
          ]
        }
      },
      {
        "type": "STUBBING",
        "code": "when(_userDataDao.createSearchBuilder()).thenReturn(sb);",
        "line": 470,
        "locate": "Test Case",
        "locationContext": {
          "methodName": "testListUserDataById",
          "methodAnnotations": [
            "@Test"
          ]
        }
      },
      {
        "type": "STUBBING",
        "code": "when(_userDataDao.searchAndCount(nullable(SearchCriteria.class), nullable(Filter.class))).thenReturn(result);",
        "line": 479,
        "locate": "Test Case",
        "locationContext": {
          "methodName": "testListUserDataById",
          "methodAnnotations": [
            "@Test"
          ]
        }
      },
      {
        "type": "STUBBING",
        "code": "when(_userDataDao.createSearchBuilder()).thenReturn(sb);",
        "line": 505,
        "locate": "Test Case",
        "locationContext": {
          "methodName": "testListUserDataByName",
          "methodAnnotations": [
            "@Test"
          ]
        }
      },
      {
        "type": "STUBBING",
        "code": "when(_userDataDao.searchAndCount(nullable(SearchCriteria.class), nullable(Filter.class))).thenReturn(result);",
        "line": 514,
        "locate": "Test Case",
        "locationContext": {
          "methodName": "testListUserDataByName",
          "methodAnnotations": [
            "@Test"
          ]
        }
      },
      {
        "type": "STUBBING",
        "code": "when(_userDataDao.createSearchBuilder()).thenReturn(sb);",
        "line": 540,
        "locate": "Test Case",
        "locationContext": {
          "methodName": "testListUserDataByKeyword",
          "methodAnnotations": [
            "@Test"
          ]
        }
      },
      {
        "type": "STUBBING",
        "code": "when(_userDataDao.searchAndCount(nullable(SearchCriteria.class), nullable(Filter.class))).thenReturn(result);",
        "line": 549,
        "locate": "Test Case",
        "locationContext": {
          "methodName": "testListUserDataByKeyword",
          "methodAnnotations": [
            "@Test"
          ]
        }
      }
    ],
    "pattern_id": 4
  },
  {
    "variableName": "userDataDao",
    "variableType": "UserDataDao",
    "mockedClass": "UserDataDao",
    "isReuseableMock": false,
    "mockPattern": "Creation:\n\u2014 Attribute Mock Creation\n\nStubbing:\n\u2014 Test Case\n\nVerification:\n\u2014 None",
    "classContext": {
      "packageName": "com.cloud.vm",
      "filePath": "C:\\java tool\\Apache\\cloudstack\\server\\src\\test\\java\\com\\cloud\\vm\\UserVmManagerImplTest.java",
      "className": "UserVmManagerImplTest"
    },
    "statements": [
      {
        "type": "FIELD_MOCK_CREATION",
        "code": "@Mock\r\nUserDataDao userDataDao;",
        "line": 181,
        "locate": "Attribute",
        "locationContext": {
          "methodName": "[FieldDeclaration]",
          "methodAnnotations": [
            "@Mock"
          ]
        }
      },
      {
        "type": "STUBBING",
        "code": "when(userDataDao.findById(1L)).thenReturn(apiUserDataVO);",
        "line": 888,
        "locate": "Test Case",
        "locationContext": {
          "methodName": "testResetVMUserDataSuccessResetWithUserdataId",
          "methodAnnotations": [
            "@Test",
            "@PrepareForTest"
          ]
        }
      }
    ],
    "pattern_id": 4
  }
]