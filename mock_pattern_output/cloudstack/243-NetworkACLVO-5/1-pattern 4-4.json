[
  {
    "variableName": "acl",
    "variableType": "NetworkACLVO",
    "mockedClass": "NetworkACLVO",
    "isReuseableMock": false,
    "mockPattern": "Creation:\n\u2014 Attribute Mock Creation\n\nStubbing:\n\u2014 Test Case\n\nVerification:\n\u2014 None",
    "classContext": {
      "packageName": "com.cloud.network.vpc",
      "filePath": "C:\\java tool\\Apache\\cloudstack\\server\\src\\test\\java\\com\\cloud\\network\\vpc\\NetworkACLManagerTest.java",
      "className": "NetworkACLManagerTest"
    },
    "statements": [
      {
        "type": "FIELD_DECLARATION",
        "code": "private NetworkACLVO acl;",
        "line": 106,
        "locate": "Attribute",
        "locationContext": {
          "methodName": "[FieldDeclaration]",
          "methodAnnotations": []
        }
      },
      {
        "type": "ASSIGNMENT",
        "code": "acl = Mockito.mock(NetworkACLVO.class);",
        "line": 117,
        "locate": "@Before",
        "locationContext": {
          "methodName": "setUp",
          "methodAnnotations": [
            "@Override",
            "@Before"
          ]
        }
      },
      {
        "type": "STUBBING",
        "code": "Mockito.when(acl.getId()).thenReturn(3l);",
        "line": 250,
        "locate": "Test Case",
        "locationContext": {
          "methodName": "deleteNonEmptyACL",
          "methodAnnotations": [
            "@Test"
          ]
        }
      }
    ],
    "pattern_id": 4
  },
  {
    "variableName": "acl",
    "variableType": "NetworkACLVO",
    "mockedClass": "NetworkACLVO",
    "isReuseableMock": false,
    "mockPattern": "Creation:\n\u2014 Attribute Mock Creation\n\nStubbing:\n\u2014 Test Case\n\nVerification:\n\u2014 None",
    "classContext": {
      "packageName": "com.cloud.network.vpc",
      "filePath": "C:\\java tool\\Apache\\cloudstack\\server\\src\\test\\java\\com\\cloud\\network\\vpc\\NetworkACLManagerTest.java",
      "className": "NetworkACLManagerTest"
    },
    "statements": [
      {
        "type": "FIELD_DECLARATION",
        "code": "private NetworkACLVO acl;",
        "line": 106,
        "locate": "Attribute",
        "locationContext": {
          "methodName": "[FieldDeclaration]",
          "methodAnnotations": []
        }
      },
      {
        "type": "ASSIGNMENT",
        "code": "acl = Mockito.mock(NetworkACLVO.class);",
        "line": 117,
        "locate": "@Before",
        "locationContext": {
          "methodName": "setUp",
          "methodAnnotations": [
            "@Override",
            "@Before"
          ]
        }
      },
      {
        "type": "STUBBING",
        "code": "Mockito.when(acl.getId()).thenReturn(3l);",
        "line": 250,
        "locate": "Test Case",
        "locationContext": {
          "methodName": "deleteNonEmptyACL",
          "methodAnnotations": [
            "@Test"
          ]
        }
      }
    ],
    "pattern_id": 4
  },
  {
    "variableName": "acl",
    "variableType": "NetworkACLVO",
    "mockedClass": "NetworkACLVO",
    "isReuseableMock": false,
    "mockPattern": "Creation:\n\u2014 Attribute Mock Creation\n\nStubbing:\n\u2014 Test Case\n\nVerification:\n\u2014 None",
    "classContext": {
      "packageName": "com.cloud.network.vpc",
      "filePath": "C:\\java tool\\Apache\\cloudstack\\server\\src\\test\\java\\com\\cloud\\network\\vpc\\NetworkACLManagerTest.java",
      "className": "NetworkACLManagerTest"
    },
    "statements": [
      {
        "type": "FIELD_DECLARATION",
        "code": "private NetworkACLVO acl;",
        "line": 106,
        "locate": "Attribute",
        "locationContext": {
          "methodName": "[FieldDeclaration]",
          "methodAnnotations": []
        }
      },
      {
        "type": "ASSIGNMENT",
        "code": "acl = Mockito.mock(NetworkACLVO.class);",
        "line": 117,
        "locate": "@Before",
        "locationContext": {
          "methodName": "setUp",
          "methodAnnotations": [
            "@Override",
            "@Before"
          ]
        }
      },
      {
        "type": "STUBBING",
        "code": "Mockito.when(acl.getId()).thenReturn(3l);",
        "line": 250,
        "locate": "Test Case",
        "locationContext": {
          "methodName": "deleteNonEmptyACL",
          "methodAnnotations": [
            "@Test"
          ]
        }
      }
    ],
    "pattern_id": 4
  },
  {
    "variableName": "networkAclMock",
    "variableType": "NetworkACLVO",
    "mockedClass": "NetworkACLVO",
    "isReuseableMock": false,
    "mockPattern": "Creation:\n\u2014 Attribute Mock Creation\n\nStubbing:\n\u2014 Test Case\n\nVerification:\n\u2014 None",
    "classContext": {
      "packageName": "com.cloud.network.vpc",
      "filePath": "C:\\java tool\\Apache\\cloudstack\\server\\src\\test\\java\\com\\cloud\\network\\vpc\\NetworkACLServiceImplTest.java",
      "className": "NetworkACLServiceImplTest"
    },
    "statements": [
      {
        "type": "FIELD_MOCK_CREATION",
        "code": "@Mock\r\nprivate NetworkACLVO networkAclMock;",
        "line": 96,
        "locate": "Attribute",
        "locationContext": {
          "methodName": "[FieldDeclaration]",
          "methodAnnotations": [
            "@Mock"
          ]
        }
      },
      {
        "type": "STUBBING",
        "code": "Mockito.when(networkAclMock.getVpcId()).thenReturn(networkMockVpcMockId);",
        "line": 149,
        "locate": "Test Case",
        "locationContext": {
          "methodName": "befoteTest",
          "methodAnnotations": [
            "@Before"
          ]
        }
      },
      {
        "type": "STUBBING",
        "code": "Mockito.when(networkAclMock.getId()).thenReturn(2L);",
        "line": 386,
        "locate": "Test Case",
        "locationContext": {
          "methodName": "validateNetworkAclTestAclDefaulAllow",
          "methodAnnotations": [
            "@Test"
          ]
        }
      },
      {
        "type": "STUBBING",
        "code": "Mockito.when(networkAclMock.getId()).thenReturn(1L);",
        "line": 392,
        "locate": "Test Case",
        "locationContext": {
          "methodName": "validateNetworkAclTestAclDefaulDeny",
          "methodAnnotations": [
            "@Test"
          ]
        }
      },
      {
        "type": "STUBBING",
        "code": "Mockito.when(networkAclMock.getId()).thenReturn(3L);",
        "line": 398,
        "locate": "Test Case",
        "locationContext": {
          "methodName": "validateNetworkAclTestAclNotDefaulWithoutVpc",
          "methodAnnotations": [
            "@Test"
          ]
        }
      },
      {
        "type": "STUBBING",
        "code": "Mockito.when(networkAclMock.getId()).thenReturn(3L);",
        "line": 414,
        "locate": "Test Case",
        "locationContext": {
          "methodName": "validateNetworkAclTestAclNotDefaulWithVpc",
          "methodAnnotations": [
            "@Test",
            "@PrepareForTest"
          ]
        }
      },
      {
        "type": "STUBBING",
        "code": "Mockito.when(networkAclMock.getVpcId()).thenReturn(networkMockVpcMockId);",
        "line": 415,
        "locate": "Test Case",
        "locationContext": {
          "methodName": "validateNetworkAclTestAclNotDefaulWithVpc",
          "methodAnnotations": [
            "@Test",
            "@PrepareForTest"
          ]
        }
      },
      {
        "type": "STUBBING",
        "code": "Mockito.when(networkAclMock.getId()).thenReturn(networkAclMockId);",
        "line": 750,
        "locate": "Test Case",
        "locationContext": {
          "methodName": "transferDataToNetworkAclRulePojoTestNumberOfAcltoBeUpdatedAlreadyInUse",
          "methodAnnotations": [
            "@Test"
          ]
        }
      }
    ],
    "pattern_id": 4
  }
]