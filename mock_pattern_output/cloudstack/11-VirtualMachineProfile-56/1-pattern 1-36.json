[
  {
    "variableName": "profile",
    "variableType": "VirtualMachineProfile",
    "mockedClass": "VirtualMachineProfile",
    "isReuseableMock": "Fully Localized",
    "mockPattern": "Creation:\n\u2014 Local Mock Creation in Test Case\n\nStubbing:\n\u2014 Test Case\n\nVerification:\n\u2014 None",
    "classContext": {
      "packageName": "com.cloud.vm",
      "filePath": "C:\\java tool\\Apache\\cloudstack\\engine\\orchestration\\src\\test\\java\\com\\cloud\\vm\\VirtualMachineManagerImplTest.java",
      "className": "VirtualMachineManagerImplTest"
    },
    "statements": [
      {
        "type": "DECLARATION",
        "code": "VirtualMachineProfile profile = mock(VirtualMachineProfile.class);",
        "line": 282,
        "locate": "Test Case",
        "locationContext": {
          "methodName": "testSendStopWithOkAnswer",
          "methodAnnotations": [
            "@Test"
          ]
        }
      },
      {
        "type": "STUBBING",
        "code": "when(profile.getVirtualMachine()).thenReturn(vm);",
        "line": 284,
        "locate": "Test Case",
        "locationContext": {
          "methodName": "testSendStopWithOkAnswer",
          "methodAnnotations": [
            "@Test"
          ]
        }
      }
    ],
    "pattern_id": 1
  },
  {
    "variableName": "profile",
    "variableType": "VirtualMachineProfile",
    "mockedClass": "VirtualMachineProfile",
    "isReuseableMock": "Fully Localized",
    "mockPattern": "Creation:\n\u2014 Local Mock Creation in Test Case\n\nStubbing:\n\u2014 Test Case\n\nVerification:\n\u2014 None",
    "classContext": {
      "packageName": "com.cloud.vm",
      "filePath": "C:\\java tool\\Apache\\cloudstack\\engine\\orchestration\\src\\test\\java\\com\\cloud\\vm\\VirtualMachineManagerImplTest.java",
      "className": "VirtualMachineManagerImplTest"
    },
    "statements": [
      {
        "type": "DECLARATION",
        "code": "VirtualMachineProfile profile = mock(VirtualMachineProfile.class);",
        "line": 297,
        "locate": "Test Case",
        "locationContext": {
          "methodName": "testSendStopWithFailAnswer",
          "methodAnnotations": [
            "@Test"
          ]
        }
      },
      {
        "type": "STUBBING",
        "code": "when(profile.getVirtualMachine()).thenReturn(vm);",
        "line": 299,
        "locate": "Test Case",
        "locationContext": {
          "methodName": "testSendStopWithFailAnswer",
          "methodAnnotations": [
            "@Test"
          ]
        }
      }
    ],
    "pattern_id": 1
  },
  {
    "variableName": "profile",
    "variableType": "VirtualMachineProfile",
    "mockedClass": "VirtualMachineProfile",
    "isReuseableMock": "Fully Localized",
    "mockPattern": "Creation:\n\u2014 Local Mock Creation in Test Case\n\nStubbing:\n\u2014 Test Case\n\nVerification:\n\u2014 None",
    "classContext": {
      "packageName": "com.cloud.vm",
      "filePath": "C:\\java tool\\Apache\\cloudstack\\engine\\orchestration\\src\\test\\java\\com\\cloud\\vm\\VirtualMachineManagerImplTest.java",
      "className": "VirtualMachineManagerImplTest"
    },
    "statements": [
      {
        "type": "DECLARATION",
        "code": "VirtualMachineProfile profile = mock(VirtualMachineProfile.class);",
        "line": 312,
        "locate": "Test Case",
        "locationContext": {
          "methodName": "testSendStopWithNullAnswer",
          "methodAnnotations": [
            "@Test"
          ]
        }
      },
      {
        "type": "STUBBING",
        "code": "when(profile.getVirtualMachine()).thenReturn(vm);",
        "line": 313,
        "locate": "Test Case",
        "locationContext": {
          "methodName": "testSendStopWithNullAnswer",
          "methodAnnotations": [
            "@Test"
          ]
        }
      }
    ],
    "pattern_id": 1
  },
  {
    "variableName": "vm",
    "variableType": "VirtualMachineProfile",
    "mockedClass": "VirtualMachineProfile",
    "isReuseableMock": "Fully Localized",
    "mockPattern": "Creation:\n\u2014 Local Mock Creation in Test Case\n\nStubbing:\n\u2014 Test Case\n\nVerification:\n\u2014 None",
    "classContext": {
      "packageName": "org.apache.cloudstack.engine.orchestration",
      "filePath": "C:\\java tool\\Apache\\cloudstack\\engine\\orchestration\\src\\test\\java\\org\\apache\\cloudstack\\engine\\orchestration\\NetworkOrchestratorTest.java",
      "className": "NetworkOrchestratorTest"
    },
    "statements": [
      {
        "type": "DECLARATION",
        "code": "// make local mocks\r\nVirtualMachineProfile vm = mock(VirtualMachineProfile.class);",
        "line": 151,
        "locate": "Test Case",
        "locationContext": {
          "methodName": "testRemoveDhcpServiceWithNic",
          "methodAnnotations": [
            "@Test"
          ]
        }
      },
      {
        "type": "STUBBING",
        "code": "// make sure that release dhcp will be called\r\nwhen(vm.getType()).thenReturn(Type.User);",
        "line": 156,
        "locate": "Test Case",
        "locationContext": {
          "methodName": "testRemoveDhcpServiceWithNic",
          "methodAnnotations": [
            "@Test"
          ]
        }
      }
    ],
    "pattern_id": 1
  },
  {
    "variableName": "vm",
    "variableType": "VirtualMachineProfile",
    "mockedClass": "VirtualMachineProfile",
    "isReuseableMock": "Fully Localized",
    "mockPattern": "Creation:\n\u2014 Local Mock Creation in Test Case\n\nStubbing:\n\u2014 Test Case\n\nVerification:\n\u2014 None",
    "classContext": {
      "packageName": "org.apache.cloudstack.engine.orchestration",
      "filePath": "C:\\java tool\\Apache\\cloudstack\\engine\\orchestration\\src\\test\\java\\org\\apache\\cloudstack\\engine\\orchestration\\NetworkOrchestratorTest.java",
      "className": "NetworkOrchestratorTest"
    },
    "statements": [
      {
        "type": "DECLARATION",
        "code": "// make local mocks\r\nVirtualMachineProfile vm = mock(VirtualMachineProfile.class);",
        "line": 176,
        "locate": "Test Case",
        "locationContext": {
          "methodName": "testDontRemoveDhcpServiceFromDomainRouter",
          "methodAnnotations": [
            "@Test"
          ]
        }
      },
      {
        "type": "STUBBING",
        "code": "// make sure that release dhcp won't be called\r\nwhen(vm.getType()).thenReturn(Type.DomainRouter);",
        "line": 181,
        "locate": "Test Case",
        "locationContext": {
          "methodName": "testDontRemoveDhcpServiceFromDomainRouter",
          "methodAnnotations": [
            "@Test"
          ]
        }
      }
    ],
    "pattern_id": 1
  },
  {
    "variableName": "vm",
    "variableType": "VirtualMachineProfile",
    "mockedClass": "VirtualMachineProfile",
    "isReuseableMock": "Fully Localized",
    "mockPattern": "Creation:\n\u2014 Local Mock Creation in Test Case\n\nStubbing:\n\u2014 Test Case\n\nVerification:\n\u2014 None",
    "classContext": {
      "packageName": "org.apache.cloudstack.engine.orchestration",
      "filePath": "C:\\java tool\\Apache\\cloudstack\\engine\\orchestration\\src\\test\\java\\org\\apache\\cloudstack\\engine\\orchestration\\NetworkOrchestratorTest.java",
      "className": "NetworkOrchestratorTest"
    },
    "statements": [
      {
        "type": "DECLARATION",
        "code": "// make local mocks\r\nVirtualMachineProfile vm = mock(VirtualMachineProfile.class);",
        "line": 196,
        "locate": "Test Case",
        "locationContext": {
          "methodName": "testDontRemoveDhcpServiceWhenNotProvided",
          "methodAnnotations": [
            "@Test"
          ]
        }
      },
      {
        "type": "STUBBING",
        "code": "// make sure that release dhcp will *not* be called\r\nwhen(vm.getType()).thenReturn(Type.User);",
        "line": 201,
        "locate": "Test Case",
        "locationContext": {
          "methodName": "testDontRemoveDhcpServiceWhenNotProvided",
          "methodAnnotations": [
            "@Test"
          ]
        }
      }
    ],
    "pattern_id": 1
  },
  {
    "variableName": "vm",
    "variableType": "VirtualMachineProfile",
    "mockedClass": "VirtualMachineProfile",
    "isReuseableMock": "Fully Localized",
    "mockPattern": "Creation:\n\u2014 Local Mock Creation in Test Case\n\nStubbing:\n\u2014 Test Case\n\nVerification:\n\u2014 None",
    "classContext": {
      "packageName": "org.apache.cloudstack.engine.orchestration",
      "filePath": "C:\\java tool\\Apache\\cloudstack\\engine\\orchestration\\src\\test\\java\\org\\apache\\cloudstack\\engine\\orchestration\\NetworkOrchestratorTest.java",
      "className": "NetworkOrchestratorTest"
    },
    "statements": [
      {
        "type": "DECLARATION",
        "code": "VirtualMachineProfile vm = mock(VirtualMachineProfile.class);",
        "line": 495,
        "locate": "Test Case",
        "locationContext": {
          "methodName": "testDontReleaseNicWhenPreserveNicsSettingEnabled",
          "methodAnnotations": [
            "@Test"
          ]
        }
      },
      {
        "type": "STUBBING",
        "code": "when(vm.getType()).thenReturn(Type.User);",
        "line": 499,
        "locate": "Test Case",
        "locationContext": {
          "methodName": "testDontReleaseNicWhenPreserveNicsSettingEnabled",
          "methodAnnotations": [
            "@Test"
          ]
        }
      },
      {
        "type": "STUBBING",
        "code": "when(vm.getParameter(VirtualMachineProfile.Param.PreserveNics)).thenReturn(true);",
        "line": 505,
        "locate": "Test Case",
        "locationContext": {
          "methodName": "testDontReleaseNicWhenPreserveNicsSettingEnabled",
          "methodAnnotations": [
            "@Test"
          ]
        }
      }
    ],
    "pattern_id": 1
  },
  {
    "variableName": "vmProfile",
    "variableType": "VirtualMachineProfile",
    "mockedClass": "VirtualMachineProfile",
    "isReuseableMock": "Fully Localized",
    "mockPattern": "Creation:\n\u2014 Local Mock Creation in Test Case\n\nStubbing:\n\u2014 Test Case\n\nVerification:\n\u2014 None",
    "classContext": {
      "packageName": "org.apache.cloudstack.storage.allocator",
      "filePath": "C:\\java tool\\Apache\\cloudstack\\engine\\storage\\integration-test\\src\\test\\java\\org\\apache\\cloudstack\\storage\\allocator\\StorageAllocatorTest.java",
      "className": "StorageAllocatorTest"
    },
    "statements": [
      {
        "type": "DECLARATION",
        "code": "VirtualMachineProfile vmProfile = Mockito.mock(VirtualMachineProfile.class);",
        "line": 330,
        "locate": "Test Case",
        "locationContext": {
          "methodName": "testZoneWideStorageAllocator",
          "methodAnnotations": [
            "@Test"
          ]
        }
      },
      {
        "type": "STUBBING",
        "code": "Mockito.when(vmProfile.getHypervisorType()).thenReturn(HypervisorType.KVM);",
        "line": 331,
        "locate": "Test Case",
        "locationContext": {
          "methodName": "testZoneWideStorageAllocator",
          "methodAnnotations": [
            "@Test"
          ]
        }
      }
    ],
    "pattern_id": 1
  },
  {
    "variableName": "vmProfile",
    "variableType": "VirtualMachineProfile",
    "mockedClass": "VirtualMachineProfile",
    "isReuseableMock": "Fully Localized",
    "mockPattern": "Creation:\n\u2014 Local Mock Creation in Test Case\n\nStubbing:\n\u2014 Test Case\n\nVerification:\n\u2014 None",
    "classContext": {
      "packageName": "org.apache.cloudstack.storage.allocator",
      "filePath": "C:\\java tool\\Apache\\cloudstack\\engine\\storage\\integration-test\\src\\test\\java\\org\\apache\\cloudstack\\storage\\allocator\\StorageAllocatorTest.java",
      "className": "StorageAllocatorTest"
    },
    "statements": [
      {
        "type": "DECLARATION",
        "code": "VirtualMachineProfile vmProfile = Mockito.mock(VirtualMachineProfile.class);",
        "line": 366,
        "locate": "Test Case",
        "locationContext": {
          "methodName": "testCLOUDSTACK3481",
          "methodAnnotations": [
            "@Test"
          ]
        }
      },
      {
        "type": "STUBBING",
        "code": "Mockito.when(vmProfile.getHypervisorType()).thenReturn(HypervisorType.KVM);",
        "line": 369,
        "locate": "Test Case",
        "locationContext": {
          "methodName": "testCLOUDSTACK3481",
          "methodAnnotations": [
            "@Test"
          ]
        }
      },
      {
        "type": "STUBBING",
        "code": "Mockito.when(vmProfile.getOwner()).thenReturn(account);",
        "line": 370,
        "locate": "Test Case",
        "locationContext": {
          "methodName": "testCLOUDSTACK3481",
          "methodAnnotations": [
            "@Test"
          ]
        }
      }
    ],
    "pattern_id": 1
  },
  {
    "variableName": "vmProfile",
    "variableType": "VirtualMachineProfile",
    "mockedClass": "VirtualMachineProfile",
    "isReuseableMock": "Fully Localized",
    "mockPattern": "Creation:\n\u2014 Local Mock Creation in Test Case\n\nStubbing:\n\u2014 Test Case\n\nVerification:\n\u2014 None",
    "classContext": {
      "packageName": "org.apache.cloudstack.affinity",
      "filePath": "C:\\java tool\\Apache\\cloudstack\\plugins\\affinity-group-processors\\non-strict-host-affinity\\src\\test\\java\\org\\apache\\cloudstack\\affinity\\NonStrictHostAffinityProcessorTest.java",
      "className": "NonStrictHostAffinityProcessorTest"
    },
    "statements": [
      {
        "type": "DECLARATION",
        "code": "VirtualMachineProfile vmProfile = Mockito.mock(VirtualMachineProfile.class);",
        "line": 77,
        "locate": "Test Case",
        "locationContext": {
          "methodName": "testProcessWithEmptyPlan",
          "methodAnnotations": [
            "@Test"
          ]
        }
      },
      {
        "type": "STUBBING",
        "code": "when(vmProfile.getVirtualMachine()).thenReturn(vm);",
        "line": 78,
        "locate": "Test Case",
        "locationContext": {
          "methodName": "testProcessWithEmptyPlan",
          "methodAnnotations": [
            "@Test"
          ]
        }
      }
    ],
    "pattern_id": 1
  },
  {
    "variableName": "vmProfile",
    "variableType": "VirtualMachineProfile",
    "mockedClass": "VirtualMachineProfile",
    "isReuseableMock": "Fully Localized",
    "mockPattern": "Creation:\n\u2014 Local Mock Creation in Test Case\n\nStubbing:\n\u2014 Test Case\n\nVerification:\n\u2014 None",
    "classContext": {
      "packageName": "org.apache.cloudstack.affinity",
      "filePath": "C:\\java tool\\Apache\\cloudstack\\plugins\\affinity-group-processors\\non-strict-host-affinity\\src\\test\\java\\org\\apache\\cloudstack\\affinity\\NonStrictHostAffinityProcessorTest.java",
      "className": "NonStrictHostAffinityProcessorTest"
    },
    "statements": [
      {
        "type": "DECLARATION",
        "code": "VirtualMachineProfile vmProfile = Mockito.mock(VirtualMachineProfile.class);",
        "line": 107,
        "locate": "Test Case",
        "locationContext": {
          "methodName": "testProcessWithPlan",
          "methodAnnotations": [
            "@Test"
          ]
        }
      },
      {
        "type": "STUBBING",
        "code": "when(vmProfile.getVirtualMachine()).thenReturn(vm);",
        "line": 108,
        "locate": "Test Case",
        "locationContext": {
          "methodName": "testProcessWithPlan",
          "methodAnnotations": [
            "@Test"
          ]
        }
      }
    ],
    "pattern_id": 1
  },
  {
    "variableName": "vmProfile",
    "variableType": "VirtualMachineProfile",
    "mockedClass": "VirtualMachineProfile",
    "isReuseableMock": "Fully Localized",
    "mockPattern": "Creation:\n\u2014 Local Mock Creation in Test Case\n\nStubbing:\n\u2014 Test Case\n\nVerification:\n\u2014 None",
    "classContext": {
      "packageName": "org.apache.cloudstack.affinity",
      "filePath": "C:\\java tool\\Apache\\cloudstack\\plugins\\affinity-group-processors\\non-strict-host-affinity\\src\\test\\java\\org\\apache\\cloudstack\\affinity\\NonStrictHostAffinityProcessorTest.java",
      "className": "NonStrictHostAffinityProcessorTest"
    },
    "statements": [
      {
        "type": "DECLARATION",
        "code": "VirtualMachineProfile vmProfile = Mockito.mock(VirtualMachineProfile.class);",
        "line": 144,
        "locate": "Test Case",
        "locationContext": {
          "methodName": "testProcessWithNotRunningVM",
          "methodAnnotations": [
            "@Test"
          ]
        }
      },
      {
        "type": "STUBBING",
        "code": "when(vmProfile.getVirtualMachine()).thenReturn(vm);",
        "line": 145,
        "locate": "Test Case",
        "locationContext": {
          "methodName": "testProcessWithNotRunningVM",
          "methodAnnotations": [
            "@Test"
          ]
        }
      }
    ],
    "pattern_id": 1
  },
  {
    "variableName": "vmProfile",
    "variableType": "VirtualMachineProfile",
    "mockedClass": "VirtualMachineProfile",
    "isReuseableMock": "Fully Localized",
    "mockPattern": "Creation:\n\u2014 Local Mock Creation in Test Case\n\nStubbing:\n\u2014 Test Case\n\nVerification:\n\u2014 None",
    "classContext": {
      "packageName": "org.apache.cloudstack.affinity",
      "filePath": "C:\\java tool\\Apache\\cloudstack\\plugins\\affinity-group-processors\\non-strict-host-anti-affinity\\src\\test\\java\\org\\apache\\cloudstack\\affinity\\NonStrictHostAntiAffinityProcessorTest.java",
      "className": "NonStrictHostAntiAffinityProcessorTest"
    },
    "statements": [
      {
        "type": "DECLARATION",
        "code": "VirtualMachineProfile vmProfile = Mockito.mock(VirtualMachineProfile.class);",
        "line": 76,
        "locate": "Test Case",
        "locationContext": {
          "methodName": "testProcessWithEmptyPlan",
          "methodAnnotations": [
            "@Test"
          ]
        }
      },
      {
        "type": "STUBBING",
        "code": "when(vmProfile.getVirtualMachine()).thenReturn(vm);",
        "line": 77,
        "locate": "Test Case",
        "locationContext": {
          "methodName": "testProcessWithEmptyPlan",
          "methodAnnotations": [
            "@Test"
          ]
        }
      }
    ],
    "pattern_id": 1
  },
  {
    "variableName": "vmProfile",
    "variableType": "VirtualMachineProfile",
    "mockedClass": "VirtualMachineProfile",
    "isReuseableMock": "Fully Localized",
    "mockPattern": "Creation:\n\u2014 Local Mock Creation in Test Case\n\nStubbing:\n\u2014 Test Case\n\nVerification:\n\u2014 None",
    "classContext": {
      "packageName": "org.apache.cloudstack.affinity",
      "filePath": "C:\\java tool\\Apache\\cloudstack\\plugins\\affinity-group-processors\\non-strict-host-anti-affinity\\src\\test\\java\\org\\apache\\cloudstack\\affinity\\NonStrictHostAntiAffinityProcessorTest.java",
      "className": "NonStrictHostAntiAffinityProcessorTest"
    },
    "statements": [
      {
        "type": "DECLARATION",
        "code": "VirtualMachineProfile vmProfile = Mockito.mock(VirtualMachineProfile.class);",
        "line": 106,
        "locate": "Test Case",
        "locationContext": {
          "methodName": "testProcessWithPlan",
          "methodAnnotations": [
            "@Test"
          ]
        }
      },
      {
        "type": "STUBBING",
        "code": "when(vmProfile.getVirtualMachine()).thenReturn(vm);",
        "line": 107,
        "locate": "Test Case",
        "locationContext": {
          "methodName": "testProcessWithPlan",
          "methodAnnotations": [
            "@Test"
          ]
        }
      }
    ],
    "pattern_id": 1
  },
  {
    "variableName": "vmProfile",
    "variableType": "VirtualMachineProfile",
    "mockedClass": "VirtualMachineProfile",
    "isReuseableMock": "Fully Localized",
    "mockPattern": "Creation:\n\u2014 Local Mock Creation in Test Case\n\nStubbing:\n\u2014 Test Case\n\nVerification:\n\u2014 None",
    "classContext": {
      "packageName": "org.apache.cloudstack.affinity",
      "filePath": "C:\\java tool\\Apache\\cloudstack\\plugins\\affinity-group-processors\\non-strict-host-anti-affinity\\src\\test\\java\\org\\apache\\cloudstack\\affinity\\NonStrictHostAntiAffinityProcessorTest.java",
      "className": "NonStrictHostAntiAffinityProcessorTest"
    },
    "statements": [
      {
        "type": "DECLARATION",
        "code": "VirtualMachineProfile vmProfile = Mockito.mock(VirtualMachineProfile.class);",
        "line": 143,
        "locate": "Test Case",
        "locationContext": {
          "methodName": "testProcessWithNotRunningVM",
          "methodAnnotations": [
            "@Test"
          ]
        }
      },
      {
        "type": "STUBBING",
        "code": "when(vmProfile.getVirtualMachine()).thenReturn(vm);",
        "line": 144,
        "locate": "Test Case",
        "locationContext": {
          "methodName": "testProcessWithNotRunningVM",
          "methodAnnotations": [
            "@Test"
          ]
        }
      }
    ],
    "pattern_id": 1
  },
  {
    "variableName": "vm",
    "variableType": "VirtualMachineProfile",
    "mockedClass": "VirtualMachineProfile",
    "isReuseableMock": "Fully Localized",
    "mockPattern": "Creation:\n\u2014 Local Mock Creation in Test Case\n\nStubbing:\n\u2014 Test Case\n\nVerification:\n\u2014 None",
    "classContext": {
      "packageName": "com.globo.globodns.cloudstack.element",
      "filePath": "C:\\java tool\\Apache\\cloudstack\\plugins\\network-elements\\globodns\\src\\test\\java\\com\\globo\\globodns\\cloudstack\\element\\GloboDnsElementTest.java",
      "className": "GloboDnsElementTest"
    },
    "statements": [
      {
        "type": "DECLARATION",
        "code": "VirtualMachineProfile vm = mock(VirtualMachineProfile.class);",
        "line": 139,
        "locate": "Test Case",
        "locationContext": {
          "methodName": "testUpperCaseCharactersAreNotAllowed",
          "methodAnnotations": [
            "@Test"
          ]
        }
      },
      {
        "type": "STUBBING",
        "code": "when(vm.getHostName()).thenReturn(\"UPPERCASENAME\");",
        "line": 140,
        "locate": "Test Case",
        "locationContext": {
          "methodName": "testUpperCaseCharactersAreNotAllowed",
          "methodAnnotations": [
            "@Test"
          ]
        }
      },
      {
        "type": "STUBBING",
        "code": "when(vm.getType()).thenReturn(VirtualMachine.Type.User);",
        "line": 141,
        "locate": "Test Case",
        "locationContext": {
          "methodName": "testUpperCaseCharactersAreNotAllowed",
          "methodAnnotations": [
            "@Test"
          ]
        }
      }
    ],
    "pattern_id": 1
  },
  {
    "variableName": "vm",
    "variableType": "VirtualMachineProfile",
    "mockedClass": "VirtualMachineProfile",
    "isReuseableMock": "Fully Localized",
    "mockPattern": "Creation:\n\u2014 Local Mock Creation in Test Case\n\nStubbing:\n\u2014 Test Case\n\nVerification:\n\u2014 None",
    "classContext": {
      "packageName": "com.globo.globodns.cloudstack.element",
      "filePath": "C:\\java tool\\Apache\\cloudstack\\plugins\\network-elements\\globodns\\src\\test\\java\\com\\globo\\globodns\\cloudstack\\element\\GloboDnsElementTest.java",
      "className": "GloboDnsElementTest"
    },
    "statements": [
      {
        "type": "DECLARATION",
        "code": "VirtualMachineProfile vm = mock(VirtualMachineProfile.class);",
        "line": 155,
        "locate": "Test Case",
        "locationContext": {
          "methodName": "testPrepareMethodCallGloboDnsToRegisterHostName",
          "methodAnnotations": [
            "@Test"
          ]
        }
      },
      {
        "type": "STUBBING",
        "code": "when(vm.getHostName()).thenReturn(\"vm-name\");",
        "line": 156,
        "locate": "Test Case",
        "locationContext": {
          "methodName": "testPrepareMethodCallGloboDnsToRegisterHostName",
          "methodAnnotations": [
            "@Test"
          ]
        }
      },
      {
        "type": "STUBBING",
        "code": "when(vm.getType()).thenReturn(VirtualMachine.Type.User);",
        "line": 157,
        "locate": "Test Case",
        "locationContext": {
          "methodName": "testPrepareMethodCallGloboDnsToRegisterHostName",
          "methodAnnotations": [
            "@Test"
          ]
        }
      }
    ],
    "pattern_id": 1
  },
  {
    "variableName": "vm",
    "variableType": "VirtualMachineProfile",
    "mockedClass": "VirtualMachineProfile",
    "isReuseableMock": "Fully Localized",
    "mockPattern": "Creation:\n\u2014 Local Mock Creation in Test Case\n\nStubbing:\n\u2014 Test Case\n\nVerification:\n\u2014 None",
    "classContext": {
      "packageName": "com.globo.globodns.cloudstack.element",
      "filePath": "C:\\java tool\\Apache\\cloudstack\\plugins\\network-elements\\globodns\\src\\test\\java\\com\\globo\\globodns\\cloudstack\\element\\GloboDnsElementTest.java",
      "className": "GloboDnsElementTest"
    },
    "statements": [
      {
        "type": "DECLARATION",
        "code": "VirtualMachineProfile vm = mock(VirtualMachineProfile.class);",
        "line": 188,
        "locate": "Test Case",
        "locationContext": {
          "methodName": "testReleaseMethodCallResource",
          "methodAnnotations": [
            "@Test"
          ]
        }
      },
      {
        "type": "STUBBING",
        "code": "when(vm.getHostName()).thenReturn(\"vm-name\");",
        "line": 189,
        "locate": "Test Case",
        "locationContext": {
          "methodName": "testReleaseMethodCallResource",
          "methodAnnotations": [
            "@Test"
          ]
        }
      },
      {
        "type": "STUBBING",
        "code": "when(vm.getType()).thenReturn(VirtualMachine.Type.User);",
        "line": 190,
        "locate": "Test Case",
        "locationContext": {
          "methodName": "testReleaseMethodCallResource",
          "methodAnnotations": [
            "@Test"
          ]
        }
      }
    ],
    "pattern_id": 1
  },
  {
    "variableName": "virtualMachineProfile",
    "variableType": "VirtualMachineProfile",
    "mockedClass": "VirtualMachineProfile",
    "isReuseableMock": "Fully Localized",
    "mockPattern": "Creation:\n\u2014 Local Mock Creation in Test Case\n\nStubbing:\n\u2014 Test Case\n\nVerification:\n\u2014 None",
    "classContext": {
      "packageName": "org.apache.cloudstack.network.tungsten.service",
      "filePath": "C:\\java tool\\Apache\\cloudstack\\plugins\\network-elements\\tungsten\\src\\test\\java\\org\\apache\\cloudstack\\network\\tungsten\\service\\TungstenElementTest.java",
      "className": "TungstenElementTest"
    },
    "statements": [
      {
        "type": "DECLARATION",
        "code": "VirtualMachineProfile virtualMachineProfile = mock(VirtualMachineProfile.class);",
        "line": 605,
        "locate": "Test Case",
        "locationContext": {
          "methodName": "preparePublicNetworkTest",
          "methodAnnotations": [
            "@Test"
          ]
        }
      },
      {
        "type": "STUBBING",
        "code": "when(virtualMachineProfile.getType()).thenReturn(VirtualMachine.Type.ConsoleProxy);",
        "line": 621,
        "locate": "Test Case",
        "locationContext": {
          "methodName": "preparePublicNetworkTest",
          "methodAnnotations": [
            "@Test"
          ]
        }
      }
    ],
    "pattern_id": 1
  },
  {
    "variableName": "virtualMachineProfile",
    "variableType": "VirtualMachineProfile",
    "mockedClass": "VirtualMachineProfile",
    "isReuseableMock": "Fully Localized",
    "mockPattern": "Creation:\n\u2014 Local Mock Creation in Test Case\n\nStubbing:\n\u2014 Test Case\n\nVerification:\n\u2014 None",
    "classContext": {
      "packageName": "org.apache.cloudstack.network.tungsten.service",
      "filePath": "C:\\java tool\\Apache\\cloudstack\\plugins\\network-elements\\tungsten\\src\\test\\java\\org\\apache\\cloudstack\\network\\tungsten\\service\\TungstenElementTest.java",
      "className": "TungstenElementTest"
    },
    "statements": [
      {
        "type": "DECLARATION",
        "code": "VirtualMachineProfile virtualMachineProfile = mock(VirtualMachineProfile.class);",
        "line": 636,
        "locate": "Test Case",
        "locationContext": {
          "methodName": "prepareManagementNetworkTest",
          "methodAnnotations": [
            "@Test"
          ]
        }
      },
      {
        "type": "STUBBING",
        "code": "when(virtualMachineProfile.getType()).thenReturn(VirtualMachine.Type.SecondaryStorageVm);",
        "line": 648,
        "locate": "Test Case",
        "locationContext": {
          "methodName": "prepareManagementNetworkTest",
          "methodAnnotations": [
            "@Test"
          ]
        }
      }
    ],
    "pattern_id": 1
  },
  {
    "variableName": "virtualMachineProfile",
    "variableType": "VirtualMachineProfile",
    "mockedClass": "VirtualMachineProfile",
    "isReuseableMock": "Fully Localized",
    "mockPattern": "Creation:\n\u2014 Local Mock Creation in Test Case\n\nStubbing:\n\u2014 Test Case\n\nVerification:\n\u2014 None",
    "classContext": {
      "packageName": "org.apache.cloudstack.network.tungsten.service",
      "filePath": "C:\\java tool\\Apache\\cloudstack\\plugins\\network-elements\\tungsten\\src\\test\\java\\org\\apache\\cloudstack\\network\\tungsten\\service\\TungstenElementTest.java",
      "className": "TungstenElementTest"
    },
    "statements": [
      {
        "type": "DECLARATION",
        "code": "VirtualMachineProfile virtualMachineProfile = mock(VirtualMachineProfile.class);",
        "line": 662,
        "locate": "Test Case",
        "locationContext": {
          "methodName": "prepareWithExceptionTest",
          "methodAnnotations": [
            "@Test"
          ]
        }
      },
      {
        "type": "STUBBING",
        "code": "when(virtualMachineProfile.getType()).thenReturn(VirtualMachine.Type.SecondaryStorageVm);",
        "line": 674,
        "locate": "Test Case",
        "locationContext": {
          "methodName": "prepareWithExceptionTest",
          "methodAnnotations": [
            "@Test"
          ]
        }
      }
    ],
    "pattern_id": 1
  },
  {
    "variableName": "virtualMachineProfile",
    "variableType": "VirtualMachineProfile",
    "mockedClass": "VirtualMachineProfile",
    "isReuseableMock": "Fully Localized",
    "mockPattern": "Creation:\n\u2014 Local Mock Creation in Test Case\n\nStubbing:\n\u2014 Test Case\n\nVerification:\n\u2014 None",
    "classContext": {
      "packageName": "org.apache.cloudstack.network.tungsten.service",
      "filePath": "C:\\java tool\\Apache\\cloudstack\\plugins\\network-elements\\tungsten\\src\\test\\java\\org\\apache\\cloudstack\\network\\tungsten\\service\\TungstenElementTest.java",
      "className": "TungstenElementTest"
    },
    "statements": [
      {
        "type": "DECLARATION",
        "code": "VirtualMachineProfile virtualMachineProfile = mock(VirtualMachineProfile.class);",
        "line": 683,
        "locate": "Test Case",
        "locationContext": {
          "methodName": "releasePublicNetworkTest",
          "methodAnnotations": [
            "@Test"
          ]
        }
      },
      {
        "type": "STUBBING",
        "code": "when(virtualMachineProfile.getType()).thenReturn(VirtualMachine.Type.SecondaryStorageVm);",
        "line": 697,
        "locate": "Test Case",
        "locationContext": {
          "methodName": "releasePublicNetworkTest",
          "methodAnnotations": [
            "@Test"
          ]
        }
      }
    ],
    "pattern_id": 1
  },
  {
    "variableName": "virtualMachineProfile",
    "variableType": "VirtualMachineProfile",
    "mockedClass": "VirtualMachineProfile",
    "isReuseableMock": "Fully Localized",
    "mockPattern": "Creation:\n\u2014 Local Mock Creation in Test Case\n\nStubbing:\n\u2014 Test Case\n\nVerification:\n\u2014 None",
    "classContext": {
      "packageName": "org.apache.cloudstack.network.tungsten.service",
      "filePath": "C:\\java tool\\Apache\\cloudstack\\plugins\\network-elements\\tungsten\\src\\test\\java\\org\\apache\\cloudstack\\network\\tungsten\\service\\TungstenElementTest.java",
      "className": "TungstenElementTest"
    },
    "statements": [
      {
        "type": "DECLARATION",
        "code": "VirtualMachineProfile virtualMachineProfile = mock(VirtualMachineProfile.class);",
        "line": 715,
        "locate": "Test Case",
        "locationContext": {
          "methodName": "releaseManagementNetworkTest",
          "methodAnnotations": [
            "@Test"
          ]
        }
      },
      {
        "type": "STUBBING",
        "code": "when(virtualMachineProfile.getType()).thenReturn(VirtualMachine.Type.SecondaryStorageVm);",
        "line": 727,
        "locate": "Test Case",
        "locationContext": {
          "methodName": "releaseManagementNetworkTest",
          "methodAnnotations": [
            "@Test"
          ]
        }
      }
    ],
    "pattern_id": 1
  },
  {
    "variableName": "virtualMachineProfile",
    "variableType": "VirtualMachineProfile",
    "mockedClass": "VirtualMachineProfile",
    "isReuseableMock": "Fully Localized",
    "mockPattern": "Creation:\n\u2014 Local Mock Creation in Test Case\n\nStubbing:\n\u2014 Test Case\n\nVerification:\n\u2014 None",
    "classContext": {
      "packageName": "org.apache.cloudstack.network.tungsten.service",
      "filePath": "C:\\java tool\\Apache\\cloudstack\\plugins\\network-elements\\tungsten\\src\\test\\java\\org\\apache\\cloudstack\\network\\tungsten\\service\\TungstenElementTest.java",
      "className": "TungstenElementTest"
    },
    "statements": [
      {
        "type": "DECLARATION",
        "code": "VirtualMachineProfile virtualMachineProfile = mock(VirtualMachineProfile.class);",
        "line": 742,
        "locate": "Test Case",
        "locationContext": {
          "methodName": "releaseWithExceptionTest",
          "methodAnnotations": [
            "@Test"
          ]
        }
      },
      {
        "type": "STUBBING",
        "code": "when(virtualMachineProfile.getType()).thenReturn(VirtualMachine.Type.SecondaryStorageVm);",
        "line": 753,
        "locate": "Test Case",
        "locationContext": {
          "methodName": "releaseWithExceptionTest",
          "methodAnnotations": [
            "@Test"
          ]
        }
      }
    ],
    "pattern_id": 1
  },
  {
    "variableName": "vm",
    "variableType": "VirtualMachineProfile",
    "mockedClass": "VirtualMachineProfile",
    "isReuseableMock": "Fully Localized",
    "mockPattern": "Creation:\n\u2014 Local Mock Creation in Test Case\n\nStubbing:\n\u2014 Test Case\n\nVerification:\n\u2014 None",
    "classContext": {
      "packageName": "org.apache.cloudstack.network.tungsten.service",
      "filePath": "C:\\java tool\\Apache\\cloudstack\\plugins\\network-elements\\tungsten\\src\\test\\java\\org\\apache\\cloudstack\\network\\tungsten\\service\\TungstenElementTest.java",
      "className": "TungstenElementTest"
    },
    "statements": [
      {
        "type": "DECLARATION",
        "code": "VirtualMachineProfile vm = mock(VirtualMachineProfile.class);",
        "line": 1009,
        "locate": "Test Case",
        "locationContext": {
          "methodName": "prepareMigrationTest",
          "methodAnnotations": [
            "@Test"
          ]
        }
      },
      {
        "type": "STUBBING",
        "code": "when(vm.getType()).thenReturn(VirtualMachine.Type.ConsoleProxy);",
        "line": 1016,
        "locate": "Test Case",
        "locationContext": {
          "methodName": "prepareMigrationTest",
          "methodAnnotations": [
            "@Test"
          ]
        }
      }
    ],
    "pattern_id": 1
  },
  {
    "variableName": "vm",
    "variableType": "VirtualMachineProfile",
    "mockedClass": "VirtualMachineProfile",
    "isReuseableMock": "Fully Localized",
    "mockPattern": "Creation:\n\u2014 Local Mock Creation in Test Case\n\nStubbing:\n\u2014 Test Case\n\nVerification:\n\u2014 None",
    "classContext": {
      "packageName": "org.apache.cloudstack.network.tungsten.service",
      "filePath": "C:\\java tool\\Apache\\cloudstack\\plugins\\network-elements\\tungsten\\src\\test\\java\\org\\apache\\cloudstack\\network\\tungsten\\service\\TungstenElementTest.java",
      "className": "TungstenElementTest"
    },
    "statements": [
      {
        "type": "DECLARATION",
        "code": "VirtualMachineProfile vm = mock(VirtualMachineProfile.class);",
        "line": 1030,
        "locate": "Test Case",
        "locationContext": {
          "methodName": "rollbackMigration",
          "methodAnnotations": [
            "@Test"
          ]
        }
      },
      {
        "type": "STUBBING",
        "code": "when(vm.getType()).thenReturn(VirtualMachine.Type.ConsoleProxy);",
        "line": 1036,
        "locate": "Test Case",
        "locationContext": {
          "methodName": "rollbackMigration",
          "methodAnnotations": [
            "@Test"
          ]
        }
      },
      {
        "type": "STUBBING",
        "code": "when(vm.getVirtualMachine()).thenReturn(virtualMachine);",
        "line": 1037,
        "locate": "Test Case",
        "locationContext": {
          "methodName": "rollbackMigration",
          "methodAnnotations": [
            "@Test"
          ]
        }
      }
    ],
    "pattern_id": 1
  },
  {
    "variableName": "vm",
    "variableType": "VirtualMachineProfile",
    "mockedClass": "VirtualMachineProfile",
    "isReuseableMock": "Fully Localized",
    "mockPattern": "Creation:\n\u2014 Local Mock Creation in Test Case\n\nStubbing:\n\u2014 Test Case\n\nVerification:\n\u2014 None",
    "classContext": {
      "packageName": "org.apache.cloudstack.network.tungsten.service",
      "filePath": "C:\\java tool\\Apache\\cloudstack\\plugins\\network-elements\\tungsten\\src\\test\\java\\org\\apache\\cloudstack\\network\\tungsten\\service\\TungstenElementTest.java",
      "className": "TungstenElementTest"
    },
    "statements": [
      {
        "type": "DECLARATION",
        "code": "VirtualMachineProfile vm = mock(VirtualMachineProfile.class);",
        "line": 1048,
        "locate": "Test Case",
        "locationContext": {
          "methodName": "commitMigration",
          "methodAnnotations": [
            "@Test"
          ]
        }
      },
      {
        "type": "STUBBING",
        "code": "when(vm.getType()).thenReturn(VirtualMachine.Type.ConsoleProxy);",
        "line": 1054,
        "locate": "Test Case",
        "locationContext": {
          "methodName": "commitMigration",
          "methodAnnotations": [
            "@Test"
          ]
        }
      },
      {
        "type": "STUBBING",
        "code": "when(vm.getVirtualMachine()).thenReturn(virtualMachine);",
        "line": 1055,
        "locate": "Test Case",
        "locationContext": {
          "methodName": "commitMigration",
          "methodAnnotations": [
            "@Test"
          ]
        }
      }
    ],
    "pattern_id": 1
  },
  {
    "variableName": "virtualMachineProfile",
    "variableType": "VirtualMachineProfile",
    "mockedClass": "VirtualMachineProfile",
    "isReuseableMock": "Fully Localized",
    "mockPattern": "Creation:\n\u2014 Local Mock Creation in Test Case\n\nStubbing:\n\u2014 Test Case\n\nVerification:\n\u2014 None",
    "classContext": {
      "packageName": "org.apache.cloudstack.network.tungsten.service",
      "filePath": "C:\\java tool\\Apache\\cloudstack\\plugins\\network-elements\\tungsten\\src\\test\\java\\org\\apache\\cloudstack\\network\\tungsten\\service\\TungstenGuestNetworkGuruTest.java",
      "className": "TungstenGuestNetworkGuruTest"
    },
    "statements": [
      {
        "type": "DECLARATION",
        "code": "final VirtualMachineProfile virtualMachineProfile = mock(VirtualMachineProfile.class);",
        "line": 243,
        "locate": "Test Case",
        "locationContext": {
          "methodName": "testDeallocate",
          "methodAnnotations": [
            "@Test"
          ]
        }
      },
      {
        "type": "STUBBING",
        "code": "when(virtualMachineProfile.getType()).thenReturn(VirtualMachine.Type.User);",
        "line": 248,
        "locate": "Test Case",
        "locationContext": {
          "methodName": "testDeallocate",
          "methodAnnotations": [
            "@Test"
          ]
        }
      }
    ],
    "pattern_id": 1
  },
  {
    "variableName": "virtualMachineProfile",
    "variableType": "VirtualMachineProfile",
    "mockedClass": "VirtualMachineProfile",
    "isReuseableMock": "Fully Localized",
    "mockPattern": "Creation:\n\u2014 Local Mock Creation in Test Case\n\nStubbing:\n\u2014 Test Case\n\nVerification:\n\u2014 None",
    "classContext": {
      "packageName": "org.apache.cloudstack.network.tungsten.service",
      "filePath": "C:\\java tool\\Apache\\cloudstack\\plugins\\network-elements\\tungsten\\src\\test\\java\\org\\apache\\cloudstack\\network\\tungsten\\service\\TungstenGuestNetworkGuruTest.java",
      "className": "TungstenGuestNetworkGuruTest"
    },
    "statements": [
      {
        "type": "DECLARATION",
        "code": "final VirtualMachineProfile virtualMachineProfile = mock(VirtualMachineProfile.class);",
        "line": 260,
        "locate": "Test Case",
        "locationContext": {
          "methodName": "testDeallocateWithException",
          "methodAnnotations": [
            "@Test"
          ]
        }
      },
      {
        "type": "STUBBING",
        "code": "when(virtualMachineProfile.getType()).thenReturn(VirtualMachine.Type.User);",
        "line": 267,
        "locate": "Test Case",
        "locationContext": {
          "methodName": "testDeallocateWithException",
          "methodAnnotations": [
            "@Test"
          ]
        }
      }
    ],
    "pattern_id": 1
  },
  {
    "variableName": "vm",
    "variableType": "VirtualMachineProfile",
    "mockedClass": "VirtualMachineProfile",
    "isReuseableMock": "Fully Localized",
    "mockPattern": "Creation:\n\u2014 Local Mock Creation in Test Case\n\nStubbing:\n\u2014 Test Case\n\nVerification:\n\u2014 None",
    "classContext": {
      "packageName": "org.apache.cloudstack.network.tungsten.service",
      "filePath": "C:\\java tool\\Apache\\cloudstack\\plugins\\network-elements\\tungsten\\src\\test\\java\\org\\apache\\cloudstack\\network\\tungsten\\service\\TungstenGuestNetworkGuruTest.java",
      "className": "TungstenGuestNetworkGuruTest"
    },
    "statements": [
      {
        "type": "DECLARATION",
        "code": "final VirtualMachineProfile vm = mock(VirtualMachineProfile.class);",
        "line": 379,
        "locate": "Test Case",
        "locationContext": {
          "methodName": "testReserve",
          "methodAnnotations": [
            "@Test"
          ]
        }
      },
      {
        "type": "STUBBING",
        "code": "when(vm.getType()).thenReturn(VirtualMachine.Type.User);",
        "line": 386,
        "locate": "Test Case",
        "locationContext": {
          "methodName": "testReserve",
          "methodAnnotations": [
            "@Test"
          ]
        }
      }
    ],
    "pattern_id": 1
  },
  {
    "variableName": "vm",
    "variableType": "VirtualMachineProfile",
    "mockedClass": "VirtualMachineProfile",
    "isReuseableMock": "Fully Localized",
    "mockPattern": "Creation:\n\u2014 Local Mock Creation in Test Case\n\nStubbing:\n\u2014 Test Case\n\nVerification:\n\u2014 None",
    "classContext": {
      "packageName": "org.apache.cloudstack.network.tungsten.service",
      "filePath": "C:\\java tool\\Apache\\cloudstack\\plugins\\network-elements\\tungsten\\src\\test\\java\\org\\apache\\cloudstack\\network\\tungsten\\service\\TungstenGuestNetworkGuruTest.java",
      "className": "TungstenGuestNetworkGuruTest"
    },
    "statements": [
      {
        "type": "DECLARATION",
        "code": "final VirtualMachineProfile vm = mock(VirtualMachineProfile.class);",
        "line": 399,
        "locate": "Test Case",
        "locationContext": {
          "methodName": "testRelease",
          "methodAnnotations": [
            "@Test"
          ]
        }
      },
      {
        "type": "STUBBING",
        "code": "when(vm.getType()).thenReturn(VirtualMachine.Type.User);",
        "line": 404,
        "locate": "Test Case",
        "locationContext": {
          "methodName": "testRelease",
          "methodAnnotations": [
            "@Test"
          ]
        }
      }
    ],
    "pattern_id": 1
  },
  {
    "variableName": "vm",
    "variableType": "VirtualMachineProfile",
    "mockedClass": "VirtualMachineProfile",
    "isReuseableMock": "Fully Localized",
    "mockPattern": "Creation:\n\u2014 Local Mock Creation in Test Case\n\nStubbing:\n\u2014 Test Case\n\nVerification:\n\u2014 None",
    "classContext": {
      "packageName": "org.apache.cloudstack.network.tungsten.service",
      "filePath": "C:\\java tool\\Apache\\cloudstack\\plugins\\network-elements\\tungsten\\src\\test\\java\\org\\apache\\cloudstack\\network\\tungsten\\service\\TungstenGuestNetworkGuruTest.java",
      "className": "TungstenGuestNetworkGuruTest"
    },
    "statements": [
      {
        "type": "DECLARATION",
        "code": "final VirtualMachineProfile vm = mock(VirtualMachineProfile.class);",
        "line": 479,
        "locate": "Test Case",
        "locationContext": {
          "methodName": "testPrepareMigration",
          "methodAnnotations": [
            "@Test"
          ]
        }
      },
      {
        "type": "STUBBING",
        "code": "when(vm.getType()).thenReturn(VirtualMachine.Type.User);",
        "line": 485,
        "locate": "Test Case",
        "locationContext": {
          "methodName": "testPrepareMigration",
          "methodAnnotations": [
            "@Test"
          ]
        }
      }
    ],
    "pattern_id": 1
  },
  {
    "variableName": "vmProfile",
    "variableType": "VirtualMachineProfile",
    "mockedClass": "VirtualMachineProfile",
    "isReuseableMock": "Fully Localized",
    "mockPattern": "Creation:\n\u2014 Local Mock Creation in Test Case\n\nStubbing:\n\u2014 Test Case\n\nVerification:\n\u2014 None",
    "classContext": {
      "packageName": "org.apache.cloudstack.network.tungsten.service",
      "filePath": "C:\\java tool\\Apache\\cloudstack\\plugins\\network-elements\\tungsten\\src\\test\\java\\org\\apache\\cloudstack\\network\\tungsten\\service\\TungstenGuestNetworkGuruTest.java",
      "className": "TungstenGuestNetworkGuruTest"
    },
    "statements": [
      {
        "type": "DECLARATION",
        "code": "final VirtualMachineProfile vmProfile = mock(VirtualMachineProfile.class);",
        "line": 501,
        "locate": "Test Case",
        "locationContext": {
          "methodName": "testRollbackMigration",
          "methodAnnotations": [
            "@Test"
          ]
        }
      },
      {
        "type": "STUBBING",
        "code": "when(vmProfile.getType()).thenReturn(VirtualMachine.Type.User);",
        "line": 506,
        "locate": "Test Case",
        "locationContext": {
          "methodName": "testRollbackMigration",
          "methodAnnotations": [
            "@Test"
          ]
        }
      },
      {
        "type": "STUBBING",
        "code": "when(vmProfile.getVirtualMachine()).thenReturn(vm);",
        "line": 507,
        "locate": "Test Case",
        "locationContext": {
          "methodName": "testRollbackMigration",
          "methodAnnotations": [
            "@Test"
          ]
        }
      }
    ],
    "pattern_id": 1
  },
  {
    "variableName": "vmProfile",
    "variableType": "VirtualMachineProfile",
    "mockedClass": "VirtualMachineProfile",
    "isReuseableMock": "Fully Localized",
    "mockPattern": "Creation:\n\u2014 Local Mock Creation in Test Case\n\nStubbing:\n\u2014 Test Case\n\nVerification:\n\u2014 None",
    "classContext": {
      "packageName": "org.apache.cloudstack.network.tungsten.service",
      "filePath": "C:\\java tool\\Apache\\cloudstack\\plugins\\network-elements\\tungsten\\src\\test\\java\\org\\apache\\cloudstack\\network\\tungsten\\service\\TungstenGuestNetworkGuruTest.java",
      "className": "TungstenGuestNetworkGuruTest"
    },
    "statements": [
      {
        "type": "DECLARATION",
        "code": "final VirtualMachineProfile vmProfile = mock(VirtualMachineProfile.class);",
        "line": 519,
        "locate": "Test Case",
        "locationContext": {
          "methodName": "testCommitMigration",
          "methodAnnotations": [
            "@Test"
          ]
        }
      },
      {
        "type": "STUBBING",
        "code": "when(vmProfile.getType()).thenReturn(VirtualMachine.Type.User);",
        "line": 524,
        "locate": "Test Case",
        "locationContext": {
          "methodName": "testCommitMigration",
          "methodAnnotations": [
            "@Test"
          ]
        }
      },
      {
        "type": "STUBBING",
        "code": "when(vmProfile.getVirtualMachine()).thenReturn(vm);",
        "line": 525,
        "locate": "Test Case",
        "locationContext": {
          "methodName": "testCommitMigration",
          "methodAnnotations": [
            "@Test"
          ]
        }
      }
    ],
    "pattern_id": 1
  },
  {
    "variableName": "vmProfile",
    "variableType": "VirtualMachineProfile",
    "mockedClass": "VirtualMachineProfile",
    "isReuseableMock": "Fully Localized",
    "mockPattern": "Creation:\n\u2014 Local Mock Creation in Test Case\n\nStubbing:\n\u2014 Test Case\n\nVerification:\n\u2014 None",
    "classContext": {
      "packageName": "com.cloud.deploy",
      "filePath": "C:\\java tool\\Apache\\cloudstack\\server\\src\\test\\java\\com\\cloud\\deploy\\DeploymentPlanningManagerImplTest.java",
      "className": "DeploymentPlanningManagerImplTest"
    },
    "statements": [
      {
        "type": "DECLARATION",
        "code": "VirtualMachineProfile vmProfile = Mockito.mock(VirtualMachineProfile.class);",
        "line": 396,
        "locate": "Test Case",
        "locationContext": {
          "methodName": "prepareAndVerifyAvoidDisabledResourcesTest",
          "methodAnnotations": []
        }
      },
      {
        "type": "STUBBING",
        "code": "Mockito.when(vmProfile.getType()).thenReturn(vmType);",
        "line": 400,
        "locate": "Test Case",
        "locationContext": {
          "methodName": "prepareAndVerifyAvoidDisabledResourcesTest",
          "methodAnnotations": []
        }
      },
      {
        "type": "STUBBING",
        "code": "Mockito.when(vmProfile.getId()).thenReturn(1l);",
        "line": 401,
        "locate": "Test Case",
        "locationContext": {
          "methodName": "prepareAndVerifyAvoidDisabledResourcesTest",
          "methodAnnotations": []
        }
      }
    ],
    "pattern_id": 1
  },
  {
    "variableName": "vm",
    "variableType": "VirtualMachineProfile",
    "mockedClass": "VirtualMachineProfile",
    "isReuseableMock": "Fully Localized",
    "mockPattern": "Creation:\n\u2014 Local Mock Creation in Test Case\n\nStubbing:\n\u2014 Test Case\n\nVerification:\n\u2014 None",
    "classContext": {
      "packageName": "com.cloud.network.element",
      "filePath": "C:\\java tool\\Apache\\cloudstack\\server\\src\\test\\java\\com\\cloud\\network\\element\\VirtualRouterElementTest.java",
      "className": "VirtualRouterElementTest"
    },
    "statements": [
      {
        "type": "DECLARATION",
        "code": "VirtualMachineProfile vm = Mockito.mock(VirtualMachineProfile.class);",
        "line": 478,
        "locate": "Test Case",
        "locationContext": {
          "methodName": "testAddPasswordAndUserdata",
          "methodAnnotations": [
            "@Test"
          ]
        }
      },
      {
        "type": "STUBBING",
        "code": "lenient().when(vm.getType()).thenReturn(VirtualMachine.Type.User);",
        "line": 496,
        "locate": "Test Case",
        "locationContext": {
          "methodName": "testAddPasswordAndUserdata",
          "methodAnnotations": [
            "@Test"
          ]
        }
      }
    ],
    "pattern_id": 1
  }
]