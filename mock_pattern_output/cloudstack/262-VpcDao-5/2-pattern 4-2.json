[
  {
    "variableName": "vpcDao",
    "variableType": "VpcDao",
    "mockedClass": "VpcDao",
    "isReuseableMock": "Hybrid",
    "mockPattern": "Creation:\n\u2014 Attribute Mock Creation\n\nStubbing:\n\u2014 Test Case\n\nVerification:\n\u2014 None",
    "classContext": {
      "packageName": "com.cloud.network",
      "filePath": "C:\\java tool\\Apache\\cloudstack\\server\\src\\test\\java\\com\\cloud\\network\\NetworkServiceImplTest.java",
      "className": "NetworkServiceImplTest"
    },
    "statements": [
      {
        "type": "FIELD_MOCK_CREATION",
        "code": "@Mock\r\nVpcDao vpcDao;",
        "line": 152,
        "locate": "Attribute",
        "locationContext": {
          "methodName": "[FieldDeclaration]",
          "methodAnnotations": [
            "@Mock"
          ]
        }
      },
      {
        "type": "STUBBING",
        "code": "Mockito.when(vpcDao.findById(anyLong())).thenReturn(vpc);",
        "line": 413,
        "locate": "Test Case",
        "locationContext": {
          "methodName": "testValidateBypassingPublicMtuPassedDuringNetworkTierCreationForVpcs",
          "methodAnnotations": [
            "@Test"
          ]
        }
      },
      {
        "type": "STUBBING",
        "code": "Mockito.when(vpcDao.findById(anyLong())).thenReturn(vpcVO);",
        "line": 482,
        "locate": "Test Case",
        "locationContext": {
          "methodName": "testUpdatePublicInterfaceMtuViaNetworkTiersForVpcNetworks",
          "methodAnnotations": [
            "@Test"
          ]
        }
      }
    ],
    "pattern_id": 4
  },
  {
    "variableName": "vpcDao",
    "variableType": "VpcDao",
    "mockedClass": "VpcDao",
    "isReuseableMock": "Hybrid",
    "mockPattern": "Creation:\n\u2014 Attribute Mock Creation\n\nStubbing:\n\u2014 Test Case\n\nVerification:\n\u2014 None",
    "classContext": {
      "packageName": "com.cloud.network.vpc",
      "filePath": "C:\\java tool\\Apache\\cloudstack\\server\\src\\test\\java\\com\\cloud\\network\\vpc\\VpcManagerImplTest.java",
      "className": "VpcManagerImplTest"
    },
    "statements": [
      {
        "type": "FIELD_MOCK_CREATION",
        "code": "@Mock\r\nVpcDao vpcDao;",
        "line": 111,
        "locate": "Attribute",
        "locationContext": {
          "methodName": "[FieldDeclaration]",
          "methodAnnotations": [
            "@Mock"
          ]
        }
      },
      {
        "type": "STUBBING",
        "code": "Mockito.when(vpcDao.findById(anyLong())).thenReturn(vpcMockVO);",
        "line": 327,
        "locate": "Test Case",
        "locationContext": {
          "methodName": "testCreateVpcNetwork",
          "methodAnnotations": [
            "@Test"
          ]
        }
      },
      {
        "type": "STUBBING",
        "code": "Mockito.when(vpcDao.acquireInLockTable(VPC_ID)).thenReturn(vpcMockVO);",
        "line": 333,
        "locate": "Test Case",
        "locationContext": {
          "methodName": "testCreateVpcNetwork",
          "methodAnnotations": [
            "@Test"
          ]
        }
      },
      {
        "type": "STUBBING",
        "code": "Mockito.when(vpcDao.findById(vpcId)).thenReturn(vpcVO);",
        "line": 378,
        "locate": "Test Case",
        "locationContext": {
          "methodName": "testUpdateVpcNetwork",
          "methodAnnotations": [
            "@Test"
          ]
        }
      },
      {
        "type": "STUBBING",
        "code": "Mockito.when(vpcDao.createForUpdate(anyLong())).thenReturn(vpcVO);",
        "line": 379,
        "locate": "Test Case",
        "locationContext": {
          "methodName": "testUpdateVpcNetwork",
          "methodAnnotations": [
            "@Test"
          ]
        }
      },
      {
        "type": "STUBBING",
        "code": "Mockito.when(vpcDao.update(vpcId, vpcVO)).thenReturn(true);",
        "line": 399,
        "locate": "Test Case",
        "locationContext": {
          "methodName": "testUpdateVpcNetwork",
          "methodAnnotations": [
            "@Test"
          ]
        }
      },
      {
        "type": "STUBBING",
        "code": "Mockito.when(vpcDao.findById(vpcId)).thenReturn(vpcVO);",
        "line": 414,
        "locate": "Test Case",
        "locationContext": {
          "methodName": "testUpdatePublicMtuToGreaterThanThreshold",
          "methodAnnotations": [
            "@Test"
          ]
        }
      },
      {
        "type": "STUBBING",
        "code": "Mockito.when(vpcDao.createForUpdate(anyLong())).thenReturn(vpcVO);",
        "line": 415,
        "locate": "Test Case",
        "locationContext": {
          "methodName": "testUpdatePublicMtuToGreaterThanThreshold",
          "methodAnnotations": [
            "@Test"
          ]
        }
      }
    ],
    "pattern_id": 4
  }
]