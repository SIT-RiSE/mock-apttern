[
  {
    "variableName": "ldapManager",
    "variableType": "LdapManager",
    "mockedClass": "LdapManager",
    "isReuseableMock": "Hybrid",
    "mockPattern": "Creation:\n\u2014 Attribute Mock Creation\n\nStubbing:\n\u2014 Test Case\n\nVerification:\n\u2014 None",
    "classContext": {
      "packageName": "org.apache.cloudstack.api.command",
      "filePath": "C:\\java tool\\Apache\\cloudstack\\plugins\\user-authenticators\\ldap\\src\\test\\java\\org\\apache\\cloudstack\\api\\command\\LdapCreateAccountCmdTest.java",
      "className": "LdapCreateAccountCmdTest"
    },
    "statements": [
      {
        "type": "FIELD_MOCK_CREATION",
        "code": "@Mock\r\nLdapManager ldapManager;",
        "line": 40,
        "locate": "Attribute",
        "locationContext": {
          "methodName": "[FieldDeclaration]",
          "methodAnnotations": [
            "@Mock"
          ]
        }
      },
      {
        "type": "STUBBING",
        "code": "// We have an LdapManager, AccountService and LdapCreateAccountCmd and LDAP user that doesn't exist\r\nwhen(ldapManager.getUser(nullable(String.class), isNull())).thenThrow(NoLdapUserMatchingQueryException.class);",
        "line": 59,
        "locate": "Test Case",
        "locationContext": {
          "methodName": "failureToRetrieveLdapUser",
          "methodAnnotations": [
            "@Test"
          ]
        }
      },
      {
        "type": "STUBBING",
        "code": "when(ldapManager.getUser(nullable(String.class), isNull())).thenReturn(mrMurphy).thenReturn(mrMurphy);",
        "line": 68,
        "locate": "Test Case",
        "locationContext": {
          "methodName": "failedCreationDueToANullResponseFromCloudstackAccountCreator",
          "methodAnnotations": [
            "@Test"
          ]
        }
      }
    ],
    "pattern_id": 4
  },
  {
    "variableName": "ldapManager",
    "variableType": "LdapManager",
    "mockedClass": "LdapManager",
    "isReuseableMock": "Hybrid",
    "mockPattern": "Creation:\n\u2014 Attribute Mock Creation\n\nStubbing:\n\u2014 Test Case\n\nVerification:\n\u2014 None",
    "classContext": {
      "packageName": "org.apache.cloudstack.api.command",
      "filePath": "C:\\java tool\\Apache\\cloudstack\\plugins\\user-authenticators\\ldap\\src\\test\\java\\org\\apache\\cloudstack\\api\\command\\LdapImportUsersCmdTest.java",
      "className": "LdapImportUsersCmdTest"
    },
    "statements": [
      {
        "type": "FIELD_MOCK_CREATION",
        "code": "@Mock\r\nLdapManager ldapManager;",
        "line": 48,
        "locate": "Attribute",
        "locationContext": {
          "methodName": "[FieldDeclaration]",
          "methodAnnotations": [
            "@Mock"
          ]
        }
      },
      {
        "type": "STUBBING",
        "code": "when(ldapManager.getUsers(null)).thenReturn(users);",
        "line": 71,
        "locate": "Test Case",
        "locationContext": {
          "methodName": "successfulResponseFromExecute",
          "methodAnnotations": [
            "@Test"
          ]
        }
      },
      {
        "type": "STUBBING",
        "code": "when(ldapManager.createLdapUserResponse(any(LdapUser.class))).thenReturn(response1).thenReturn(response2);",
        "line": 74,
        "locate": "Test Case",
        "locationContext": {
          "methodName": "successfulResponseFromExecute",
          "methodAnnotations": [
            "@Test"
          ]
        }
      }
    ],
    "pattern_id": 4
  },
  {
    "variableName": "ldapManager",
    "variableType": "LdapManager",
    "mockedClass": "LdapManager",
    "isReuseableMock": "Hybrid",
    "mockPattern": "Creation:\n\u2014 Attribute Mock Creation\n\nStubbing:\n\u2014 Test Case\n\nVerification:\n\u2014 None",
    "classContext": {
      "packageName": "org.apache.cloudstack.api.command",
      "filePath": "C:\\java tool\\Apache\\cloudstack\\plugins\\user-authenticators\\ldap\\src\\test\\java\\org\\apache\\cloudstack\\api\\command\\LinkAccountToLdapCmdTest.java",
      "className": "LinkAccountToLdapCmdTest"
    },
    "statements": [
      {
        "type": "FIELD_MOCK_CREATION",
        "code": "@Mock\r\nLdapManager ldapManager;",
        "line": 44,
        "locate": "Attribute",
        "locationContext": {
          "methodName": "[FieldDeclaration]",
          "methodAnnotations": [
            "@Mock"
          ]
        }
      },
      {
        "type": "STUBBING",
        "code": "when(ldapManager.linkAccountToLdap(linkAccountToLdapCmd)).thenReturn(response);",
        "line": 78,
        "locate": "Test Case",
        "locationContext": {
          "methodName": "execute",
          "methodAnnotations": [
            "@Test"
          ]
        }
      },
      {
        "type": "STUBBING",
        "code": "when(ldapManager.getUser(username, type, ldapDomain, 1L)).thenReturn(new LdapUser(username, \"admin@ccp.citrix.com\", \"Admin\", \"Admin\", ldapDomain, \"ccp\", false, null));",
        "line": 79,
        "locate": "Test Case",
        "locationContext": {
          "methodName": "execute",
          "methodAnnotations": [
            "@Test"
          ]
        }
      }
    ],
    "pattern_id": 4
  },
  {
    "variableName": "ldapManager",
    "variableType": "LdapManager",
    "mockedClass": "LdapManager",
    "isReuseableMock": "Hybrid",
    "mockPattern": "Creation:\n\u2014 Attribute Mock Creation\n\nStubbing:\n\u2014 Test Case\n\nVerification:\n\u2014 None",
    "classContext": {
      "packageName": "org.apache.cloudstack.api.command",
      "filePath": "C:\\java tool\\Apache\\cloudstack\\plugins\\user-authenticators\\ldap\\src\\test\\java\\org\\apache\\cloudstack\\api\\command\\LinkDomainToLdapCmdTest.java",
      "className": "LinkDomainToLdapCmdTest"
    },
    "statements": [
      {
        "type": "FIELD_MOCK_CREATION",
        "code": "@Mock\r\nLdapManager ldapManager;",
        "line": 43,
        "locate": "Attribute",
        "locationContext": {
          "methodName": "[FieldDeclaration]",
          "methodAnnotations": [
            "@Mock"
          ]
        }
      },
      {
        "type": "STUBBING",
        "code": "when(ldapManager.linkDomainToLdap(linkDomainToLdapCmd)).thenReturn(response);",
        "line": 77,
        "locate": "Test Case",
        "locationContext": {
          "methodName": "execute",
          "methodAnnotations": [
            "@Test"
          ]
        }
      },
      {
        "type": "STUBBING",
        "code": "when(ldapManager.getUser(username, type, ldapDomain, 1L)).thenReturn(new LdapUser(username, \"admin@ccp.citrix.com\", \"Admin\", \"Admin\", ldapDomain, \"ccp\", false, null));",
        "line": 78,
        "locate": "Test Case",
        "locationContext": {
          "methodName": "execute",
          "methodAnnotations": [
            "@Test"
          ]
        }
      }
    ],
    "pattern_id": 4
  },
  {
    "variableName": "ldapManager",
    "variableType": "LdapManager",
    "mockedClass": "LdapManager",
    "isReuseableMock": "Hybrid",
    "mockPattern": "Creation:\n\u2014 Attribute Mock Creation\n\nStubbing:\n\u2014 Test Case\n\nVerification:\n\u2014 None",
    "classContext": {
      "packageName": "org.apache.cloudstack.ldap",
      "filePath": "C:\\java tool\\Apache\\cloudstack\\plugins\\user-authenticators\\ldap\\src\\test\\java\\org\\apache\\cloudstack\\ldap\\LdapAuthenticatorTest.java",
      "className": "LdapAuthenticatorTest"
    },
    "statements": [
      {
        "type": "FIELD_MOCK_CREATION",
        "code": "@Mock\r\nLdapManager ldapManager;",
        "line": 53,
        "locate": "Attribute",
        "locationContext": {
          "methodName": "[FieldDeclaration]",
          "methodAnnotations": [
            "@Mock"
          ]
        }
      },
      {
        "type": "STUBBING",
        "code": "when(ldapManager.getUser(username, domainId)).thenReturn(ldapUser);",
        "line": 89,
        "locate": "Test Case",
        "locationContext": {
          "methodName": "authenticateWithoutAccount",
          "methodAnnotations": [
            "@Test"
          ]
        }
      },
      {
        "type": "STUBBING",
        "code": "when(ldapManager.getUser(username, domainId)).thenReturn(userSpy);",
        "line": 117,
        "locate": "Test Case",
        "locationContext": {
          "methodName": "authenticateFailingOnSyncedAccount",
          "methodAnnotations": [
            "@Test"
          ]
        }
      },
      {
        "type": "STUBBING",
        "code": "when(ldapManager.getLinkedLdapGroup(domainId, \"g1\")).thenReturn(trustMap);",
        "line": 118,
        "locate": "Test Case",
        "locationContext": {
          "methodName": "authenticateFailingOnSyncedAccount",
          "methodAnnotations": [
            "@Test"
          ]
        }
      },
      {
        "type": "STUBBING",
        "code": "when(ldapManager.getUser(username, domainId)).thenReturn(ldapUser);",
        "line": 127,
        "locate": "Test Case",
        "locationContext": {
          "methodName": "authenticate",
          "methodAnnotations": [
            "@Test"
          ]
        }
      },
      {
        "type": "STUBBING",
        "code": "when(ldapManager.canAuthenticate(principal, hardcoded, domainId)).thenReturn(true);",
        "line": 128,
        "locate": "Test Case",
        "locationContext": {
          "methodName": "authenticate",
          "methodAnnotations": [
            "@Test"
          ]
        }
      }
    ],
    "pattern_id": 4
  }
]