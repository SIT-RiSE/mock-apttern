[
  {
    "variableName": "mockCurrentDiskOffering",
    "variableType": "DiskOfferingVO",
    "mockedClass": "DiskOfferingVO",
    "isReuseableMock": "Fully Localized",
    "mockPattern": "Creation:\n\u2014 Local Mock Creation in Test Case\n\nStubbing:\n\u2014 Test Case\n\nVerification:\n\u2014 None",
    "classContext": {
      "packageName": "com.cloud.vm",
      "filePath": "C:\\java tool\\Apache\\cloudstack\\engine\\orchestration\\src\\test\\java\\com\\cloud\\vm\\VirtualMachineManagerImplTest.java",
      "className": "VirtualMachineManagerImplTest"
    },
    "statements": [
      {
        "type": "DECLARATION",
        "code": "DiskOfferingVO mockCurrentDiskOffering = mock(DiskOfferingVO.class);",
        "line": 358,
        "locate": "Test Case",
        "locationContext": {
          "methodName": "testCheckIfCanUpgrade",
          "methodAnnotations": [
            "@Test"
          ]
        }
      },
      {
        "type": "STUBBING",
        "code": "when(mockCurrentDiskOffering.getTagsArray()).thenReturn(oldDOStorageTags);",
        "line": 368,
        "locate": "Test Case",
        "locationContext": {
          "methodName": "testCheckIfCanUpgrade",
          "methodAnnotations": [
            "@Test"
          ]
        }
      }
    ],
    "pattern_id": 1
  },
  {
    "variableName": "diskOfferingMock",
    "variableType": "DiskOfferingVO",
    "mockedClass": "DiskOfferingVO",
    "isReuseableMock": "Fully Localized",
    "mockPattern": "Creation:\n\u2014 Local Mock Creation in Test Case\n\nStubbing:\n\u2014 Test Case\n\nVerification:\n\u2014 None",
    "classContext": {
      "packageName": "com.cloud.network.as",
      "filePath": "C:\\java tool\\Apache\\cloudstack\\server\\src\\test\\java\\com\\cloud\\network\\as\\AutoScaleManagerImplTest.java",
      "className": "AutoScaleManagerImplTest"
    },
    "statements": [
      {
        "type": "DECLARATION",
        "code": "DiskOfferingVO diskOfferingMock = Mockito.mock(DiskOfferingVO.class);",
        "line": 1426,
        "locate": "Test Case",
        "locationContext": {
          "methodName": "getVmOverrideDiskOfferingId",
          "methodAnnotations": [
            "@Test"
          ]
        }
      },
      {
        "type": "STUBBING",
        "code": "when(diskOfferingMock.getId()).thenReturn(overrideDiskOfferingId);",
        "line": 1428,
        "locate": "Test Case",
        "locationContext": {
          "methodName": "getVmOverrideDiskOfferingId",
          "methodAnnotations": [
            "@Test"
          ]
        }
      }
    ],
    "pattern_id": 1
  },
  {
    "variableName": "diskOfferingMock",
    "variableType": "DiskOfferingVO",
    "mockedClass": "DiskOfferingVO",
    "isReuseableMock": "Fully Localized",
    "mockPattern": "Creation:\n\u2014 Local Mock Creation in Test Case\n\nStubbing:\n\u2014 Test Case\n\nVerification:\n\u2014 None",
    "classContext": {
      "packageName": "com.cloud.network.as",
      "filePath": "C:\\java tool\\Apache\\cloudstack\\server\\src\\test\\java\\com\\cloud\\network\\as\\AutoScaleManagerImplTest.java",
      "className": "AutoScaleManagerImplTest"
    },
    "statements": [
      {
        "type": "DECLARATION",
        "code": "DiskOfferingVO diskOfferingMock = Mockito.mock(DiskOfferingVO.class);",
        "line": 1440,
        "locate": "Test Case",
        "locationContext": {
          "methodName": "getVmDiskOfferingId",
          "methodAnnotations": [
            "@Test"
          ]
        }
      },
      {
        "type": "STUBBING",
        "code": "when(diskOfferingMock.getId()).thenReturn(diskOfferingId);",
        "line": 1442,
        "locate": "Test Case",
        "locationContext": {
          "methodName": "getVmDiskOfferingId",
          "methodAnnotations": [
            "@Test"
          ]
        }
      }
    ],
    "pattern_id": 1
  },
  {
    "variableName": "diskOffering",
    "variableType": "DiskOfferingVO",
    "mockedClass": "DiskOfferingVO",
    "isReuseableMock": "Fully Localized",
    "mockPattern": "Creation:\n\u2014 Local Mock Creation in Test Case\n\nStubbing:\n\u2014 Test Case\n\nVerification:\n\u2014 None",
    "classContext": {
      "packageName": "com.cloud.storage",
      "filePath": "C:\\java tool\\Apache\\cloudstack\\server\\src\\test\\java\\com\\cloud\\storage\\VolumeApiServiceImplTest.java",
      "className": "VolumeApiServiceImplTest"
    },
    "statements": [
      {
        "type": "DECLARATION",
        "code": "DiskOfferingVO diskOffering = Mockito.mock(DiskOfferingVO.class);",
        "line": 516,
        "locate": "Test Case",
        "locationContext": {
          "methodName": "attachDiskWithEncryptEnabledOfferingonNonKVM",
          "methodAnnotations": [
            "@Test"
          ]
        }
      },
      {
        "type": "STUBBING",
        "code": "when(diskOffering.getEncrypt()).thenReturn(true);",
        "line": 517,
        "locate": "Test Case",
        "locationContext": {
          "methodName": "attachDiskWithEncryptEnabledOfferingonNonKVM",
          "methodAnnotations": [
            "@Test"
          ]
        }
      }
    ],
    "pattern_id": 1
  },
  {
    "variableName": "diskOffering",
    "variableType": "DiskOfferingVO",
    "mockedClass": "DiskOfferingVO",
    "isReuseableMock": "Fully Localized",
    "mockPattern": "Creation:\n\u2014 Local Mock Creation in Test Case\n\nStubbing:\n\u2014 Test Case\n\nVerification:\n\u2014 None",
    "classContext": {
      "packageName": "com.cloud.storage",
      "filePath": "C:\\java tool\\Apache\\cloudstack\\server\\src\\test\\java\\com\\cloud\\storage\\VolumeApiServiceImplTest.java",
      "className": "VolumeApiServiceImplTest"
    },
    "statements": [
      {
        "type": "DECLARATION",
        "code": "DiskOfferingVO diskOffering = Mockito.mock(DiskOfferingVO.class);",
        "line": 526,
        "locate": "Test Case",
        "locationContext": {
          "methodName": "attachDiskWithEncryptEnabledOfferingOnKVM",
          "methodAnnotations": [
            "@Test"
          ]
        }
      },
      {
        "type": "STUBBING",
        "code": "when(diskOffering.getEncrypt()).thenReturn(true);",
        "line": 527,
        "locate": "Test Case",
        "locationContext": {
          "methodName": "attachDiskWithEncryptEnabledOfferingOnKVM",
          "methodAnnotations": [
            "@Test"
          ]
        }
      }
    ],
    "pattern_id": 1
  },
  {
    "variableName": "diskfferingVo",
    "variableType": "DiskOfferingVO",
    "mockedClass": "DiskOfferingVO",
    "isReuseableMock": "Fully Localized",
    "mockPattern": "Creation:\n\u2014 Local Mock Creation in Test Case\n\nStubbing:\n\u2014 Test Case\n\nVerification:\n\u2014 None",
    "classContext": {
      "packageName": "com.cloud.vm",
      "filePath": "C:\\java tool\\Apache\\cloudstack\\server\\src\\test\\java\\com\\cloud\\vm\\UserVmManagerImplTest.java",
      "className": "UserVmManagerImplTest"
    },
    "statements": [
      {
        "type": "DECLARATION",
        "code": "DiskOfferingVO diskfferingVo = Mockito.mock(DiskOfferingVO.class);",
        "line": 536,
        "locate": "Test Case",
        "locationContext": {
          "methodName": "prepareAndRunConfigureCustomRootDiskSizeTest",
          "methodAnnotations": []
        }
      },
      {
        "type": "STUBBING",
        "code": "Mockito.when(diskfferingVo.getDiskSize()).thenReturn(offeringRootDiskSize);",
        "line": 538,
        "locate": "Test Case",
        "locationContext": {
          "methodName": "prepareAndRunConfigureCustomRootDiskSizeTest",
          "methodAnnotations": []
        }
      }
    ],
    "pattern_id": 1
  }
]