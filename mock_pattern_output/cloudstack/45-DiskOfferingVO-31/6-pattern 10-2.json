[
  {
    "variableName": "newRootDiskOffering",
    "variableType": "DiskOfferingVO",
    "mockedClass": "DiskOfferingVO",
    "isReuseableMock": false,
    "mockPattern": "Creation:\n\u2014 Local Mock Creation in Helper\n\nStubbing:\n\u2014 Helper Method\n\nVerification:\n\u2014 None",
    "classContext": {
      "packageName": "com.cloud.vm",
      "filePath": "C:\\java tool\\Apache\\cloudstack\\server\\src\\test\\java\\com\\cloud\\vm\\UserVmManagerImplTest.java",
      "className": "UserVmManagerImplTest"
    },
    "statements": [
      {
        "type": "DECLARATION",
        "code": "DiskOfferingVO newRootDiskOffering = Mockito.mock(DiskOfferingVO.class);",
        "line": 655,
        "locate": "Helper Method",
        "locationContext": {
          "methodName": "prepareDiskOffering",
          "methodAnnotations": []
        }
      },
      {
        "type": "STUBBING",
        "code": "Mockito.when(newRootDiskOffering.getDiskSize()).thenReturn(rootSize);",
        "line": 656,
        "locate": "Helper Method",
        "locationContext": {
          "methodName": "prepareDiskOffering",
          "methodAnnotations": []
        }
      },
      {
        "type": "STUBBING",
        "code": "Mockito.when(newRootDiskOffering.getId()).thenReturn(diskOfferingId);",
        "line": 657,
        "locate": "Helper Method",
        "locationContext": {
          "methodName": "prepareDiskOffering",
          "methodAnnotations": []
        }
      },
      {
        "type": "STUBBING",
        "code": "Mockito.when(newRootDiskOffering.getMinIops()).thenReturn(offeringMinIops);",
        "line": 658,
        "locate": "Helper Method",
        "locationContext": {
          "methodName": "prepareDiskOffering",
          "methodAnnotations": []
        }
      },
      {
        "type": "STUBBING",
        "code": "Mockito.when(newRootDiskOffering.getMaxIops()).thenReturn(offeringMaxIops);",
        "line": 659,
        "locate": "Helper Method",
        "locationContext": {
          "methodName": "prepareDiskOffering",
          "methodAnnotations": []
        }
      },
      {
        "type": "STUBBING",
        "code": "Mockito.when(newRootDiskOffering.getName()).thenReturn(\"OfferingName\");",
        "line": 660,
        "locate": "Helper Method",
        "locationContext": {
          "methodName": "prepareDiskOffering",
          "methodAnnotations": []
        }
      }
    ],
    "pattern_id": 10
  },
  {
    "variableName": "diskOffering",
    "variableType": "DiskOfferingVO",
    "mockedClass": "DiskOfferingVO",
    "isReuseableMock": false,
    "mockPattern": "Creation:\n\u2014 Local Mock Creation in Helper\n\nStubbing:\n\u2014 Helper Method\n\nVerification:\n\u2014 None",
    "classContext": {
      "packageName": "com.cloud.vm",
      "filePath": "C:\\java tool\\Apache\\cloudstack\\server\\src\\test\\java\\com\\cloud\\vm\\UserVmManagerImplTest.java",
      "className": "UserVmManagerImplTest"
    },
    "statements": [
      {
        "type": "DECLARATION",
        "code": "DiskOfferingVO diskOffering = Mockito.mock(DiskOfferingVO.class);",
        "line": 666,
        "locate": "Helper Method",
        "locationContext": {
          "methodName": "prepareOfferingsForEncryptionValidation",
          "methodAnnotations": []
        }
      },
      {
        "type": "STUBBING",
        "code": "Mockito.when(diskOffering.getEncrypt()).thenReturn(encryption);",
        "line": 669,
        "locate": "Helper Method",
        "locationContext": {
          "methodName": "prepareOfferingsForEncryptionValidation",
          "methodAnnotations": []
        }
      }
    ],
    "pattern_id": 10
  }
]