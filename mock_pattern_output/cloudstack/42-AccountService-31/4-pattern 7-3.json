[
  {
    "variableName": "s_accountService",
    "variableType": "AccountService",
    "mockedClass": "AccountService",
    "isReuseableMock": "Fully Shared",
    "mockPattern": "Creation:\n\u2014 Attribute Mock Creation\n\nStubbing:\n\u2014 @Before\n\nVerification:\n\u2014 None",
    "classContext": {
      "packageName": "org.apache.cloudstack.ratelimit",
      "filePath": "C:\\java tool\\Apache\\cloudstack\\plugins\\api\\rate-limit\\src\\test\\java\\org\\apache\\cloudstack\\ratelimit\\ApiRateLimitTest.java",
      "className": "ApiRateLimitTest"
    },
    "statements": [
      {
        "type": "FIELD_MOCK_CREATION",
        "code": "static AccountService s_accountService = mock(AccountService.class);",
        "line": 50,
        "locate": "Attribute",
        "locationContext": {
          "methodName": "[FieldDeclaration]",
          "methodAnnotations": []
        }
      },
      {
        "type": "STUBBING",
        "code": "when(s_accountService.getAccount(5L)).thenReturn(s_testAccount);",
        "line": 74,
        "locate": "@Before",
        "locationContext": {
          "methodName": "setUp",
          "methodAnnotations": [
            "@BeforeClass"
          ]
        }
      },
      {
        "type": "STUBBING",
        "code": "when(s_accountService.isRootAdmin(5L)).thenReturn(false);",
        "line": 75,
        "locate": "@Before",
        "locationContext": {
          "methodName": "setUp",
          "methodAnnotations": [
            "@BeforeClass"
          ]
        }
      }
    ],
    "pattern_id": 7
  },
  {
    "variableName": "accountService",
    "variableType": "AccountService",
    "mockedClass": "AccountService",
    "isReuseableMock": "Fully Shared",
    "mockPattern": "Creation:\n\u2014 Attribute Mock Creation\n\nStubbing:\n\u2014 @Before\n\nVerification:\n\u2014 None",
    "classContext": {
      "packageName": "com.cloud.api",
      "filePath": "C:\\java tool\\Apache\\cloudstack\\server\\src\\test\\java\\com\\cloud\\api\\ApiServletTest.java",
      "className": "ApiServletTest"
    },
    "statements": [
      {
        "type": "FIELD_MOCK_CREATION",
        "code": "@Mock\r\nAccountService accountService;",
        "line": 75,
        "locate": "Attribute",
        "locationContext": {
          "methodName": "[FieldDeclaration]",
          "methodAnnotations": [
            "@Mock"
          ]
        }
      },
      {
        "type": "STUBBING",
        "code": "Mockito.when(accountService.getSystemUser()).thenReturn(user);",
        "line": 117,
        "locate": "@Before",
        "locationContext": {
          "methodName": "setup",
          "methodAnnotations": [
            "@SuppressWarnings",
            "@Before"
          ]
        }
      },
      {
        "type": "STUBBING",
        "code": "Mockito.when(accountService.getSystemAccount()).thenReturn(account);",
        "line": 118,
        "locate": "@Before",
        "locationContext": {
          "methodName": "setup",
          "methodAnnotations": [
            "@SuppressWarnings",
            "@Before"
          ]
        }
      }
    ],
    "pattern_id": 7
  },
  {
    "variableName": "accountService",
    "variableType": "AccountService",
    "mockedClass": "AccountService",
    "isReuseableMock": "Fully Shared",
    "mockPattern": "Creation:\n\u2014 Attribute Mock Creation\n\nStubbing:\n\u2014 @Before\n\nVerification:\n\u2014 None",
    "classContext": {
      "packageName": "org.apache.cloudstack.vm",
      "filePath": "C:\\java tool\\Apache\\cloudstack\\server\\src\\test\\java\\org\\apache\\cloudstack\\vm\\UnmanagedVMsManagerImplTest.java",
      "className": "UnmanagedVMsManagerImplTest"
    },
    "statements": [
      {
        "type": "FIELD_MOCK_CREATION",
        "code": "@Mock\r\nprivate AccountService accountService;",
        "line": 142,
        "locate": "Attribute",
        "locationContext": {
          "methodName": "[FieldDeclaration]",
          "methodAnnotations": [
            "@Mock"
          ]
        }
      },
      {
        "type": "STUBBING",
        "code": "when(accountService.getActiveAccountById(Mockito.anyLong())).thenReturn(Mockito.mock(Account.class));",
        "line": 258,
        "locate": "@Before",
        "locationContext": {
          "methodName": "setUp",
          "methodAnnotations": [
            "@Before"
          ]
        }
      }
    ],
    "pattern_id": 7
  }
]