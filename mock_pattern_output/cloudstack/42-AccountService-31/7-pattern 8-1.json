[
  {
    "variableName": "accountService",
    "variableType": "AccountService",
    "mockedClass": "AccountService",
    "isReuseableMock": "Hybrid",
    "mockPattern": "Creation:\n\u2014 Attribute Mock Creation\n\nStubbing:\n\u2014 Test Case\n\nVerification:\n\u2014 Test Case",
    "classContext": {
      "packageName": "org.apache.cloudstack.api.command",
      "filePath": "C:\\java tool\\Apache\\cloudstack\\plugins\\user-authenticators\\saml2\\src\\test\\java\\org\\apache\\cloudstack\\api\\command\\ListAndSwitchSAMLAccountCmdTest.java",
      "className": "ListAndSwitchSAMLAccountCmdTest"
    },
    "statements": [
      {
        "type": "FIELD_MOCK_CREATION",
        "code": "@Mock\r\nAccountService accountService;",
        "line": 71,
        "locate": "Attribute",
        "locationContext": {
          "methodName": "[FieldDeclaration]",
          "methodAnnotations": [
            "@Mock"
          ]
        }
      },
      {
        "type": "VERIFICATION",
        "code": "Mockito.verify(accountService, Mockito.times(0)).getUserAccountById(Mockito.anyLong());",
        "line": 140,
        "locate": "Test Case",
        "locationContext": {
          "methodName": "testListAndSwitchSAMLAccountCmd",
          "methodAnnotations": [
            "@Test"
          ]
        }
      },
      {
        "type": "VERIFICATION",
        "code": "Mockito.verify(accountService, Mockito.times(0)).getUserAccountById(Mockito.anyLong());",
        "line": 151,
        "locate": "Test Case",
        "locationContext": {
          "methodName": "testListAndSwitchSAMLAccountCmd",
          "methodAnnotations": [
            "@Test"
          ]
        }
      },
      {
        "type": "VERIFICATION",
        "code": "Mockito.verify(accountService, Mockito.times(0)).getUserAccountById(Mockito.anyLong());",
        "line": 165,
        "locate": "Test Case",
        "locationContext": {
          "methodName": "testListAndSwitchSAMLAccountCmd",
          "methodAnnotations": [
            "@Test"
          ]
        }
      },
      {
        "type": "VERIFICATION",
        "code": "Mockito.verify(accountService, Mockito.times(1)).getUserAccountById(Mockito.anyLong());",
        "line": 179,
        "locate": "Test Case",
        "locationContext": {
          "methodName": "testListAndSwitchSAMLAccountCmd",
          "methodAnnotations": [
            "@Test"
          ]
        }
      },
      {
        "type": "STUBBING",
        "code": "Mockito.when(accountService.getUserAccountById(Mockito.anyLong())).thenReturn(mockedUserAccount);",
        "line": 190,
        "locate": "Test Case",
        "locationContext": {
          "methodName": "testListAndSwitchSAMLAccountCmd",
          "methodAnnotations": [
            "@Test"
          ]
        }
      },
      {
        "type": "VERIFICATION",
        "code": "// accountService should have been called twice by now, for this case and the case above\r\nMockito.verify(accountService, Mockito.times(2)).getUserAccountById(Mockito.anyLong());",
        "line": 197,
        "locate": "Test Case",
        "locationContext": {
          "methodName": "testListAndSwitchSAMLAccountCmd",
          "methodAnnotations": [
            "@Test"
          ]
        }
      },
      {
        "type": "STUBBING",
        "code": "Mockito.when(accountService.getUserAccountById(Mockito.anyLong())).thenReturn(mockedUserAccount);",
        "line": 202,
        "locate": "Test Case",
        "locationContext": {
          "methodName": "testListAndSwitchSAMLAccountCmd",
          "methodAnnotations": [
            "@Test"
          ]
        }
      },
      {
        "type": "VERIFICATION",
        "code": "// accountService should have been called 4 times by now, for this case twice and 2 for cases above\r\nMockito.verify(accountService, Mockito.times(4)).getUserAccountById(Mockito.anyLong());",
        "line": 223,
        "locate": "Test Case",
        "locationContext": {
          "methodName": "testListAndSwitchSAMLAccountCmd",
          "methodAnnotations": [
            "@Test"
          ]
        }
      }
    ],
    "pattern_id": 8
  }
]