[
  {
    "variableName": "volumeDaoMock",
    "variableType": "VolumeDao",
    "mockedClass": "VolumeDao",
    "isReuseableMock": false,
    "mockPattern": "Creation:\n\u2014 Attribute Mock Creation\n\nStubbing:\n\u2014 None\n\nVerification:\n\u2014 Test Case",
    "classContext": {
      "packageName": "org.apache.cloudstack.storage.volume",
      "filePath": "C:\\java tool\\Apache\\cloudstack\\engine\\storage\\volume\\src\\test\\java\\org\\apache\\cloudstack\\storage\\volume\\VolumeObjectTest.java",
      "className": "VolumeObjectTest"
    },
    "statements": [
      {
        "type": "FIELD_MOCK_CREATION",
        "code": "@Mock\r\nVolumeDao volumeDaoMock;",
        "line": 79,
        "locate": "Attribute",
        "locationContext": {
          "methodName": "[FieldDeclaration]",
          "methodAnnotations": [
            "@Mock"
          ]
        }
      },
      {
        "type": "VERIFICATION",
        "code": "Mockito.verify(volumeDaoMock, Mockito.times(1)).update(Mockito.anyLong(), Mockito.any());",
        "line": 434,
        "locate": "Test Case",
        "locationContext": {
          "methodName": "validateUpdateVolumeInfoSetSetVolumeSizeFalseAndVolumeSizeNullDoNotSetVolumeSize",
          "methodAnnotations": [
            "@Test"
          ]
        }
      },
      {
        "type": "VERIFICATION",
        "code": "Mockito.verify(volumeDaoMock, Mockito.times(1)).update(Mockito.anyLong(), Mockito.any());",
        "line": 446,
        "locate": "Test Case",
        "locationContext": {
          "methodName": "validateUpdateVolumeInfoSetSetVolumeSizeTrueAndVolumeSizeNullDoNotSetVolumeSize",
          "methodAnnotations": [
            "@Test"
          ]
        }
      },
      {
        "type": "VERIFICATION",
        "code": "Mockito.verify(volumeDaoMock, Mockito.times(1)).update(Mockito.anyLong(), Mockito.any());",
        "line": 458,
        "locate": "Test Case",
        "locationContext": {
          "methodName": "validateUpdateVolumeInfoSetSetVolumeSizeFalseAndVolumeSizeNotNullDoNotSetVolumeSize",
          "methodAnnotations": [
            "@Test"
          ]
        }
      },
      {
        "type": "VERIFICATION",
        "code": "Mockito.verify(volumeDaoMock, Mockito.times(1)).update(Mockito.anyLong(), Mockito.any());",
        "line": 470,
        "locate": "Test Case",
        "locationContext": {
          "methodName": "validateUpdateVolumeInfoSetSetVolumeSizeTrueAndVolumeSizeNotNullVolumeSize",
          "methodAnnotations": [
            "@Test"
          ]
        }
      },
      {
        "type": "VERIFICATION",
        "code": "Mockito.verifyNoInteractions(volumeObjectToMock, volumeDaoMock);",
        "line": 477,
        "locate": "Test Case",
        "locationContext": {
          "methodName": "validateHandleProcessEventAnswerCreateObjectAnswerIsNotPrimaryDataStore",
          "methodAnnotations": [
            "@Test"
          ]
        }
      },
      {
        "type": "VERIFICATION",
        "code": "Mockito.verify(volumeDaoMock, Mockito.times(1)).findById(Mockito.anyLong());",
        "line": 489,
        "locate": "Test Case",
        "locationContext": {
          "methodName": "validateHandleProcessEventAnswerCreateObjectAnswerPrimaryDataStore",
          "methodAnnotations": [
            "@Test"
          ]
        }
      },
      {
        "type": "VERIFICATION",
        "code": "Mockito.verify(volumeDaoMock, Mockito.times(1)).findById(Mockito.anyLong());",
        "line": 541,
        "locate": "Test Case",
        "locationContext": {
          "methodName": "validateHandleProcessEventCopyCmdAnswerPrimaryStore",
          "methodAnnotations": [
            "@Test"
          ]
        }
      }
    ],
    "pattern_id": 9
  },
  {
    "variableName": "volumeDaoMock",
    "variableType": "VolumeDao",
    "mockedClass": "VolumeDao",
    "isReuseableMock": false,
    "mockPattern": "Creation:\n\u2014 Attribute Mock Creation\n\nStubbing:\n\u2014 None\n\nVerification:\n\u2014 Test Case",
    "classContext": {
      "packageName": "org.apache.cloudstack.quota.activationrule.presetvariables",
      "filePath": "C:\\java tool\\Apache\\cloudstack\\framework\\quota\\src\\test\\java\\org\\apache\\cloudstack\\quota\\activationrule\\presetvariables\\PresetVariableHelperTest.java",
      "className": "PresetVariableHelperTest"
    },
    "statements": [
      {
        "type": "FIELD_MOCK_CREATION",
        "code": "@Mock\r\nVolumeDao volumeDaoMock;",
        "line": 160,
        "locate": "Attribute",
        "locationContext": {
          "methodName": "[FieldDeclaration]",
          "methodAnnotations": [
            "@Mock"
          ]
        }
      },
      {
        "type": "VERIFICATION",
        "code": "Mockito.verifyNoInteractions(volumeDaoMock);",
        "line": 634,
        "locate": "Test Case",
        "locationContext": {
          "methodName": "loadPresetVariableValueForVolumeTestRecordIsNotAVolumeDoNothing",
          "methodAnnotations": [
            "@Test"
          ]
        }
      }
    ],
    "pattern_id": 9
  },
  {
    "variableName": "volumeDaoMock",
    "variableType": "VolumeDao",
    "mockedClass": "VolumeDao",
    "isReuseableMock": false,
    "mockPattern": "Creation:\n\u2014 Attribute Mock Creation\n\nStubbing:\n\u2014 None\n\nVerification:\n\u2014 Test Case",
    "classContext": {
      "packageName": "com.cloud.vm",
      "filePath": "C:\\java tool\\Apache\\cloudstack\\server\\src\\test\\java\\com\\cloud\\vm\\UserVmManagerImplTest.java",
      "className": "UserVmManagerImplTest"
    },
    "statements": [
      {
        "type": "FIELD_MOCK_CREATION",
        "code": "@Mock\r\nprivate VolumeDao volumeDaoMock;",
        "line": 187,
        "locate": "Attribute",
        "locationContext": {
          "methodName": "[FieldDeclaration]",
          "methodAnnotations": [
            "@Mock"
          ]
        }
      },
      {
        "type": "VERIFICATION",
        "code": "Mockito.verify(volumeDaoMock).attachVolume(volumeVOMock.getId(), vmId, UserVmManagerImpl.ROOT_DEVICE_ID);",
        "line": 912,
        "locate": "Test Case",
        "locationContext": {
          "methodName": "recoverRootVolumeTestDestroyState",
          "methodAnnotations": [
            "@Test"
          ]
        }
      }
    ],
    "pattern_id": 9
  }
]