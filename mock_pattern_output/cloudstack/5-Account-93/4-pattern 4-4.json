[
  {
    "variableName": "account",
    "variableType": "Account",
    "mockedClass": "Account",
    "isReuseableMock": "Hybrid",
    "mockPattern": "Creation:\n\u2014 Attribute Mock Creation\n\nStubbing:\n\u2014 Test Case\n\nVerification:\n\u2014 None",
    "classContext": {
      "packageName": "com.cloud.resourcelimit",
      "filePath": "C:\\java tool\\Apache\\cloudstack\\server\\src\\test\\java\\com\\cloud\\resourcelimit\\CheckedReservationTest.java",
      "className": "CheckedReservationTest"
    },
    "statements": [
      {
        "type": "FIELD_MOCK_CREATION",
        "code": "@Mock\r\nAccount account;",
        "line": 45,
        "locate": "Attribute",
        "locationContext": {
          "methodName": "[FieldDeclaration]",
          "methodAnnotations": [
            "@Mock"
          ]
        }
      },
      {
        "type": "STUBBING",
        "code": "when(account.getAccountId()).thenReturn(1l);",
        "line": 67,
        "locate": "Test Case",
        "locationContext": {
          "methodName": "getId",
          "methodAnnotations": [
            "@Test"
          ]
        }
      },
      {
        "type": "STUBBING",
        "code": "when(account.getDomainId()).thenReturn(4l);",
        "line": 68,
        "locate": "Test Case",
        "locationContext": {
          "methodName": "getId",
          "methodAnnotations": [
            "@Test"
          ]
        }
      },
      {
        "type": "STUBBING",
        "code": "when(account.getAccountId()).thenReturn(1l);",
        "line": 89,
        "locate": "Test Case",
        "locationContext": {
          "methodName": "getNoAmount",
          "methodAnnotations": [
            "@Test"
          ]
        }
      }
    ],
    "pattern_id": 4
  },
  {
    "variableName": "account",
    "variableType": "Account",
    "mockedClass": "Account",
    "isReuseableMock": "Hybrid",
    "mockPattern": "Creation:\n\u2014 Attribute Mock Creation\n\nStubbing:\n\u2014 Test Case\n\nVerification:\n\u2014 None",
    "classContext": {
      "packageName": "com.cloud.server",
      "filePath": "C:\\java tool\\Apache\\cloudstack\\server\\src\\test\\java\\com\\cloud\\server\\ManagementServerImplTest.java",
      "className": "ManagementServerImplTest"
    },
    "statements": [
      {
        "type": "FIELD_MOCK_CREATION",
        "code": "@Mock\r\nAccount account;",
        "line": 97,
        "locate": "Attribute",
        "locationContext": {
          "methodName": "[FieldDeclaration]",
          "methodAnnotations": [
            "@Mock"
          ]
        }
      },
      {
        "type": "STUBBING",
        "code": "when(account.getAccountId()).thenReturn(1L);",
        "line": 302,
        "locate": "Test Case",
        "locationContext": {
          "methodName": "testSuccessfulRegisterUserdata",
          "methodAnnotations": [
            "@Test"
          ]
        }
      },
      {
        "type": "STUBBING",
        "code": "when(account.getDomainId()).thenReturn(2L);",
        "line": 303,
        "locate": "Test Case",
        "locationContext": {
          "methodName": "testSuccessfulRegisterUserdata",
          "methodAnnotations": [
            "@Test"
          ]
        }
      },
      {
        "type": "STUBBING",
        "code": "when(account.getAccountId()).thenReturn(1L);",
        "line": 327,
        "locate": "Test Case",
        "locationContext": {
          "methodName": "testRegisterExistingUserdata",
          "methodAnnotations": [
            "@Test"
          ]
        }
      },
      {
        "type": "STUBBING",
        "code": "when(account.getDomainId()).thenReturn(2L);",
        "line": 328,
        "locate": "Test Case",
        "locationContext": {
          "methodName": "testRegisterExistingUserdata",
          "methodAnnotations": [
            "@Test"
          ]
        }
      },
      {
        "type": "STUBBING",
        "code": "when(account.getAccountId()).thenReturn(1L);",
        "line": 348,
        "locate": "Test Case",
        "locationContext": {
          "methodName": "testRegisterExistingName",
          "methodAnnotations": [
            "@Test"
          ]
        }
      },
      {
        "type": "STUBBING",
        "code": "when(account.getDomainId()).thenReturn(2L);",
        "line": 349,
        "locate": "Test Case",
        "locationContext": {
          "methodName": "testRegisterExistingName",
          "methodAnnotations": [
            "@Test"
          ]
        }
      },
      {
        "type": "STUBBING",
        "code": "when(account.getAccountId()).thenReturn(1L);",
        "line": 368,
        "locate": "Test Case",
        "locationContext": {
          "methodName": "testSuccessfulDeleteUserdata",
          "methodAnnotations": [
            "@Test"
          ]
        }
      },
      {
        "type": "STUBBING",
        "code": "when(account.getDomainId()).thenReturn(2L);",
        "line": 369,
        "locate": "Test Case",
        "locationContext": {
          "methodName": "testSuccessfulDeleteUserdata",
          "methodAnnotations": [
            "@Test"
          ]
        }
      },
      {
        "type": "STUBBING",
        "code": "when(account.getAccountId()).thenReturn(1L);",
        "line": 396,
        "locate": "Test Case",
        "locationContext": {
          "methodName": "testDeleteUserdataLinkedToTemplate",
          "methodAnnotations": [
            "@Test"
          ]
        }
      },
      {
        "type": "STUBBING",
        "code": "when(account.getDomainId()).thenReturn(2L);",
        "line": 397,
        "locate": "Test Case",
        "locationContext": {
          "methodName": "testDeleteUserdataLinkedToTemplate",
          "methodAnnotations": [
            "@Test"
          ]
        }
      },
      {
        "type": "STUBBING",
        "code": "when(account.getAccountId()).thenReturn(1L);",
        "line": 425,
        "locate": "Test Case",
        "locationContext": {
          "methodName": "testDeleteUserdataUsedByVM",
          "methodAnnotations": [
            "@Test"
          ]
        }
      },
      {
        "type": "STUBBING",
        "code": "when(account.getDomainId()).thenReturn(2L);",
        "line": 426,
        "locate": "Test Case",
        "locationContext": {
          "methodName": "testDeleteUserdataUsedByVM",
          "methodAnnotations": [
            "@Test"
          ]
        }
      },
      {
        "type": "STUBBING",
        "code": "when(account.getAccountId()).thenReturn(1L);",
        "line": 456,
        "locate": "Test Case",
        "locationContext": {
          "methodName": "testListUserDataById",
          "methodAnnotations": [
            "@Test"
          ]
        }
      },
      {
        "type": "STUBBING",
        "code": "when(account.getDomainId()).thenReturn(2L);",
        "line": 457,
        "locate": "Test Case",
        "locationContext": {
          "methodName": "testListUserDataById",
          "methodAnnotations": [
            "@Test"
          ]
        }
      },
      {
        "type": "STUBBING",
        "code": "when(account.getAccountId()).thenReturn(1L);",
        "line": 491,
        "locate": "Test Case",
        "locationContext": {
          "methodName": "testListUserDataByName",
          "methodAnnotations": [
            "@Test"
          ]
        }
      },
      {
        "type": "STUBBING",
        "code": "when(account.getDomainId()).thenReturn(2L);",
        "line": 492,
        "locate": "Test Case",
        "locationContext": {
          "methodName": "testListUserDataByName",
          "methodAnnotations": [
            "@Test"
          ]
        }
      },
      {
        "type": "STUBBING",
        "code": "when(account.getAccountId()).thenReturn(1L);",
        "line": 526,
        "locate": "Test Case",
        "locationContext": {
          "methodName": "testListUserDataByKeyword",
          "methodAnnotations": [
            "@Test"
          ]
        }
      },
      {
        "type": "STUBBING",
        "code": "when(account.getDomainId()).thenReturn(2L);",
        "line": 527,
        "locate": "Test Case",
        "locationContext": {
          "methodName": "testListUserDataByKeyword",
          "methodAnnotations": [
            "@Test"
          ]
        }
      }
    ],
    "pattern_id": 4
  },
  {
    "variableName": "accountMock",
    "variableType": "Account",
    "mockedClass": "Account",
    "isReuseableMock": "Hybrid",
    "mockPattern": "Creation:\n\u2014 Attribute Mock Creation\n\nStubbing:\n\u2014 Test Case\n\nVerification:\n\u2014 None",
    "classContext": {
      "packageName": "com.cloud.user",
      "filePath": "C:\\java tool\\Apache\\cloudstack\\server\\src\\test\\java\\com\\cloud\\user\\AccountManagerImplTest.java",
      "className": "AccountManagerImplTest"
    },
    "statements": [
      {
        "type": "FIELD_MOCK_CREATION",
        "code": "@Mock\r\nprivate Account accountMock;",
        "line": 92,
        "locate": "Attribute",
        "locationContext": {
          "methodName": "[FieldDeclaration]",
          "methodAnnotations": [
            "@Mock"
          ]
        }
      },
      {
        "type": "STUBBING",
        "code": "Mockito.lenient().when(accountMock.getAccountId()).thenReturn(2L);",
        "line": 239,
        "locate": "Test Case",
        "locationContext": {
          "methodName": "testgetUserCmd",
          "methodAnnotations": [
            "@Test"
          ]
        }
      },
      {
        "type": "STUBBING",
        "code": "Mockito.lenient().when(accountMock.getAccountId()).thenReturn(2L);",
        "line": 269,
        "locate": "Test Case",
        "locationContext": {
          "methodName": "testGetUserKeysCmdDomainAdminRootAdminUser",
          "methodAnnotations": [
            "@Test"
          ]
        }
      }
    ],
    "pattern_id": 4
  },
  {
    "variableName": "account",
    "variableType": "Account",
    "mockedClass": "Account",
    "isReuseableMock": "Hybrid",
    "mockPattern": "Creation:\n\u2014 Attribute Mock Creation\n\nStubbing:\n\u2014 Test Case\n\nVerification:\n\u2014 None",
    "classContext": {
      "packageName": "org.apache.cloudstack.consoleproxy",
      "filePath": "C:\\java tool\\Apache\\cloudstack\\server\\src\\test\\java\\org\\apache\\cloudstack\\consoleproxy\\ConsoleAccessManagerImplTest.java",
      "className": "ConsoleAccessManagerImplTest"
    },
    "statements": [
      {
        "type": "FIELD_MOCK_CREATION",
        "code": "@Mock\r\nAccount account;",
        "line": 66,
        "locate": "Attribute",
        "locationContext": {
          "methodName": "[FieldDeclaration]",
          "methodAnnotations": [
            "@Mock"
          ]
        }
      },
      {
        "type": "STUBBING",
        "code": "Mockito.when(account.getId()).thenReturn(1L);",
        "line": 71,
        "locate": "Test Case",
        "locationContext": {
          "methodName": "testCheckSessionPermissionAdminAccount",
          "methodAnnotations": [
            "@Test"
          ]
        }
      },
      {
        "type": "STUBBING",
        "code": "Mockito.when(account.getId()).thenReturn(1L);",
        "line": 78,
        "locate": "Test Case",
        "locationContext": {
          "methodName": "testCheckSessionPermissionUserOwnedVm",
          "methodAnnotations": [
            "@Test"
          ]
        }
      },
      {
        "type": "STUBBING",
        "code": "Mockito.when(account.getId()).thenReturn(1L);",
        "line": 89,
        "locate": "Test Case",
        "locationContext": {
          "methodName": "testCheckSessionPermissionDifferentUserOwnedVm",
          "methodAnnotations": [
            "@Test"
          ]
        }
      },
      {
        "type": "STUBBING",
        "code": "Mockito.when(account.getId()).thenReturn(1L);",
        "line": 100,
        "locate": "Test Case",
        "locationContext": {
          "methodName": "testCheckSessionPermissionForUsersOnSystemVms",
          "methodAnnotations": [
            "@Test"
          ]
        }
      }
    ],
    "pattern_id": 4
  }
]