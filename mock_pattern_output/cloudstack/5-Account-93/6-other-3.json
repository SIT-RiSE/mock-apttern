[
  {
    "variableName": "account",
    "variableType": "Account",
    "mockedClass": "Account",
    "isReuseableMock": false,
    "mockPattern": "Creation:\n\u2014 Local Mock Creation in @Override\n\nStubbing:\n\u2014 @Override\n\nVerification:\n\u2014 None",
    "classContext": {
      "packageName": "org.apache.cloudstack.storage.test",
      "filePath": "C:\\java tool\\Apache\\cloudstack\\engine\\storage\\integration-test\\src\\test\\java\\org\\apache\\cloudstack\\storage\\test\\SnapshotTestWithFakeData.java",
      "className": "SnapshotTestWithFakeData"
    },
    "statements": [
      {
        "type": "DECLARATION",
        "code": "Account account = mock(Account.class);",
        "line": 335,
        "locate": "@Override",
        "locationContext": {
          "methodName": "call",
          "methodAnnotations": [
            "@Override"
          ]
        }
      },
      {
        "type": "STUBBING",
        "code": "when(account.getId()).thenReturn(1L);",
        "line": 336,
        "locate": "@Override",
        "locationContext": {
          "methodName": "call",
          "methodAnnotations": [
            "@Override"
          ]
        }
      }
    ],
    "pattern_id": 24
  },
  {
    "variableName": "caller",
    "variableType": "Account",
    "mockedClass": "Account",
    "isReuseableMock": false,
    "mockPattern": "Creation:\n\u2014 Local Mock Creation in Other Methods\n\nStubbing:\n\u2014 Other Methods\n\nVerification:\n\u2014 None",
    "classContext": {
      "packageName": "com.cloud.acl",
      "filePath": "C:\\java tool\\Apache\\cloudstack\\server\\src\\test\\java\\com\\cloud\\acl\\DomainCheckerTest.java",
      "className": "DomainCheckerTest"
    },
    "statements": [
      {
        "type": "DECLARATION",
        "code": "Account caller = Mockito.mock(Account.class);",
        "line": 106,
        "locate": "Other Methods",
        "locationContext": {
          "methodName": "getProjectAccessCheckResources",
          "methodAnnotations": []
        }
      },
      {
        "type": "STUBBING",
        "code": "Mockito.when(caller.getId()).thenReturn(100L);",
        "line": 107,
        "locate": "Other Methods",
        "locationContext": {
          "methodName": "getProjectAccessCheckResources",
          "methodAnnotations": []
        }
      },
      {
        "type": "STUBBING",
        "code": "Mockito.when(caller.getType()).thenReturn(Account.Type.PROJECT);",
        "line": 108,
        "locate": "Other Methods",
        "locationContext": {
          "methodName": "getProjectAccessCheckResources",
          "methodAnnotations": []
        }
      }
    ],
    "pattern_id": 20
  },
  {
    "variableName": "accountMock",
    "variableType": "Account",
    "mockedClass": "Account",
    "isReuseableMock": false,
    "mockPattern": "Creation:\n\u2014 Attribute Mock Creation\n\u2014 Global Init in @Before\n\nStubbing:\n\u2014 None\n\nVerification:\n\u2014 None",
    "classContext": {
      "packageName": "com.cloud.network",
      "filePath": "C:\\java tool\\Apache\\cloudstack\\server\\src\\test\\java\\com\\cloud\\network\\NetworkServiceImplTest.java",
      "className": "NetworkServiceImplTest"
    },
    "statements": [
      {
        "type": "FIELD_MOCK_CREATION",
        "code": "@Mock\r\nprivate Account accountMock;",
        "line": 178,
        "locate": "Attribute",
        "locationContext": {
          "methodName": "[FieldDeclaration]",
          "methodAnnotations": [
            "@Mock"
          ]
        }
      },
      {
        "type": "ASSIGNMENT",
        "code": "accountMock = PowerMockito.mock(Account.class);",
        "line": 242,
        "locate": "@Before",
        "locationContext": {
          "methodName": "setup",
          "methodAnnotations": [
            "@Before"
          ]
        }
      }
    ],
    "pattern_id": 27
  }
]