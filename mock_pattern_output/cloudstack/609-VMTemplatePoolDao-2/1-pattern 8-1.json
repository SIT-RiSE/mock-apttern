[
  {
    "variableName": "vmTemplatePoolDao",
    "variableType": "VMTemplatePoolDao",
    "mockedClass": "VMTemplatePoolDao",
    "isReuseableMock": "Hybrid",
    "mockPattern": "Creation:\n\u2014 Attribute Mock Creation\n\nStubbing:\n\u2014 Test Case\n\nVerification:\n\u2014 Test Case",
    "classContext": {
      "packageName": "org.apache.cloudstack.storage.motion",
      "filePath": "C:\\java tool\\Apache\\cloudstack\\engine\\storage\\datamotion\\src\\test\\java\\org\\apache\\cloudstack\\storage\\motion\\KvmNonManagedStorageSystemDataMotionTest.java",
      "className": "KvmNonManagedStorageSystemDataMotionTest"
    },
    "statements": [
      {
        "type": "FIELD_MOCK_CREATION",
        "code": "@Mock\r\nprivate VMTemplatePoolDao vmTemplatePoolDao;",
        "line": 96,
        "locate": "Attribute",
        "locationContext": {
          "methodName": "[FieldDeclaration]",
          "methodAnnotations": [
            "@Mock"
          ]
        }
      },
      {
        "type": "STUBBING",
        "code": "Mockito.when(vmTemplatePoolDao.findByPoolTemplate(Mockito.anyLong(), Mockito.anyLong(), nullable(String.class))).thenReturn(vmTemplateStoragePoolVO);",
        "line": 386,
        "locate": "Test Case",
        "locationContext": {
          "methodName": "configureAndTestcopyTemplateToTargetStorageIfNeeded",
          "methodAnnotations": []
        }
      },
      {
        "type": "VERIFICATION",
        "code": "verifyInOrder.verify(vmTemplatePoolDao, Mockito.times(1)).findByPoolTemplate(Mockito.anyLong(), Mockito.anyLong(), nullable(String.class));",
        "line": 395,
        "locate": "Test Case",
        "locationContext": {
          "methodName": "configureAndTestcopyTemplateToTargetStorageIfNeeded",
          "methodAnnotations": []
        }
      }
    ],
    "pattern_id": 8
  }
]