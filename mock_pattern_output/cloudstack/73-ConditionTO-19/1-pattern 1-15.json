[
  {
    "variableName": "conditionTO",
    "variableType": "ConditionTO",
    "mockedClass": "ConditionTO",
    "isReuseableMock": false,
    "mockPattern": "Creation:\n\u2014 Local Mock Creation in Test Case\n\nStubbing:\n\u2014 Test Case\n\nVerification:\n\u2014 None",
    "classContext": {
      "packageName": "com.cloud.network.as",
      "filePath": "C:\\java tool\\Apache\\cloudstack\\server\\src\\test\\java\\com\\cloud\\network\\as\\AutoScaleManagerImplTest.java",
      "className": "AutoScaleManagerImplTest"
    },
    "statements": [
      {
        "type": "DECLARATION",
        "code": "ConditionTO conditionTO = Mockito.mock(ConditionTO.class);",
        "line": 1630,
        "locate": "Test Case",
        "locationContext": {
          "methodName": "isNativeTrue",
          "methodAnnotations": [
            "@Test"
          ]
        }
      },
      {
        "type": "STUBBING",
        "code": "when(conditionTO.getCounter()).thenReturn(counterTO);",
        "line": 1636,
        "locate": "Test Case",
        "locationContext": {
          "methodName": "isNativeTrue",
          "methodAnnotations": [
            "@Test"
          ]
        }
      }
    ],
    "pattern_id": 1
  },
  {
    "variableName": "conditionTO",
    "variableType": "ConditionTO",
    "mockedClass": "ConditionTO",
    "isReuseableMock": false,
    "mockPattern": "Creation:\n\u2014 Local Mock Creation in Test Case\n\nStubbing:\n\u2014 Test Case\n\nVerification:\n\u2014 None",
    "classContext": {
      "packageName": "com.cloud.network.as",
      "filePath": "C:\\java tool\\Apache\\cloudstack\\server\\src\\test\\java\\com\\cloud\\network\\as\\AutoScaleManagerImplTest.java",
      "className": "AutoScaleManagerImplTest"
    },
    "statements": [
      {
        "type": "DECLARATION",
        "code": "ConditionTO conditionTO = Mockito.mock(ConditionTO.class);",
        "line": 1647,
        "locate": "Test Case",
        "locationContext": {
          "methodName": "isNativeFalse",
          "methodAnnotations": [
            "@Test"
          ]
        }
      },
      {
        "type": "STUBBING",
        "code": "when(conditionTO.getCounter()).thenReturn(counterTO);",
        "line": 1653,
        "locate": "Test Case",
        "locationContext": {
          "methodName": "isNativeFalse",
          "methodAnnotations": [
            "@Test"
          ]
        }
      }
    ],
    "pattern_id": 1
  },
  {
    "variableName": "conditionTO",
    "variableType": "ConditionTO",
    "mockedClass": "ConditionTO",
    "isReuseableMock": false,
    "mockPattern": "Creation:\n\u2014 Local Mock Creation in Test Case\n\nStubbing:\n\u2014 Test Case\n\nVerification:\n\u2014 None",
    "classContext": {
      "packageName": "com.cloud.network.as",
      "filePath": "C:\\java tool\\Apache\\cloudstack\\server\\src\\test\\java\\com\\cloud\\network\\as\\AutoScaleManagerImplTest.java",
      "className": "AutoScaleManagerImplTest"
    },
    "statements": [
      {
        "type": "DECLARATION",
        "code": "ConditionTO conditionTO = Mockito.mock(ConditionTO.class);",
        "line": 1664,
        "locate": "Test Case",
        "locationContext": {
          "methodName": "hasSourceVirtualRouterTrue",
          "methodAnnotations": [
            "@Test"
          ]
        }
      },
      {
        "type": "STUBBING",
        "code": "when(conditionTO.getCounter()).thenReturn(counterTO);",
        "line": 1670,
        "locate": "Test Case",
        "locationContext": {
          "methodName": "hasSourceVirtualRouterTrue",
          "methodAnnotations": [
            "@Test"
          ]
        }
      }
    ],
    "pattern_id": 1
  },
  {
    "variableName": "conditionTO",
    "variableType": "ConditionTO",
    "mockedClass": "ConditionTO",
    "isReuseableMock": false,
    "mockPattern": "Creation:\n\u2014 Local Mock Creation in Test Case\n\nStubbing:\n\u2014 Test Case\n\nVerification:\n\u2014 None",
    "classContext": {
      "packageName": "com.cloud.network.as",
      "filePath": "C:\\java tool\\Apache\\cloudstack\\server\\src\\test\\java\\com\\cloud\\network\\as\\AutoScaleManagerImplTest.java",
      "className": "AutoScaleManagerImplTest"
    },
    "statements": [
      {
        "type": "DECLARATION",
        "code": "ConditionTO conditionTO = Mockito.mock(ConditionTO.class);",
        "line": 1681,
        "locate": "Test Case",
        "locationContext": {
          "methodName": "hasSourceVirtualRouterFalse",
          "methodAnnotations": [
            "@Test"
          ]
        }
      },
      {
        "type": "STUBBING",
        "code": "when(conditionTO.getCounter()).thenReturn(counterTO);",
        "line": 1687,
        "locate": "Test Case",
        "locationContext": {
          "methodName": "hasSourceVirtualRouterFalse",
          "methodAnnotations": [
            "@Test"
          ]
        }
      }
    ],
    "pattern_id": 1
  },
  {
    "variableName": "conditionTO1",
    "variableType": "ConditionTO",
    "mockedClass": "ConditionTO",
    "isReuseableMock": false,
    "mockPattern": "Creation:\n\u2014 Local Mock Creation in Test Case\n\nStubbing:\n\u2014 Test Case\n\nVerification:\n\u2014 None",
    "classContext": {
      "packageName": "com.cloud.network.as",
      "filePath": "C:\\java tool\\Apache\\cloudstack\\server\\src\\test\\java\\com\\cloud\\network\\as\\AutoScaleManagerImplTest.java",
      "className": "AutoScaleManagerImplTest"
    },
    "statements": [
      {
        "type": "DECLARATION",
        "code": "ConditionTO conditionTO1 = Mockito.mock(ConditionTO.class);",
        "line": 1716,
        "locate": "Test Case",
        "locationContext": {
          "methodName": "getPolicyCounters",
          "methodAnnotations": [
            "@Test"
          ]
        }
      },
      {
        "type": "STUBBING",
        "code": "when(conditionTO1.getCounter()).thenReturn(counterTO1);",
        "line": 1723,
        "locate": "Test Case",
        "locationContext": {
          "methodName": "getPolicyCounters",
          "methodAnnotations": [
            "@Test"
          ]
        }
      }
    ],
    "pattern_id": 1
  },
  {
    "variableName": "conditionTO2",
    "variableType": "ConditionTO",
    "mockedClass": "ConditionTO",
    "isReuseableMock": false,
    "mockPattern": "Creation:\n\u2014 Local Mock Creation in Test Case\n\nStubbing:\n\u2014 Test Case\n\nVerification:\n\u2014 None",
    "classContext": {
      "packageName": "com.cloud.network.as",
      "filePath": "C:\\java tool\\Apache\\cloudstack\\server\\src\\test\\java\\com\\cloud\\network\\as\\AutoScaleManagerImplTest.java",
      "className": "AutoScaleManagerImplTest"
    },
    "statements": [
      {
        "type": "DECLARATION",
        "code": "ConditionTO conditionTO2 = Mockito.mock(ConditionTO.class);",
        "line": 1718,
        "locate": "Test Case",
        "locationContext": {
          "methodName": "getPolicyCounters",
          "methodAnnotations": [
            "@Test"
          ]
        }
      },
      {
        "type": "STUBBING",
        "code": "when(conditionTO2.getCounter()).thenReturn(counterTO2);",
        "line": 1724,
        "locate": "Test Case",
        "locationContext": {
          "methodName": "getPolicyCounters",
          "methodAnnotations": [
            "@Test"
          ]
        }
      }
    ],
    "pattern_id": 1
  },
  {
    "variableName": "conditionTO1",
    "variableType": "ConditionTO",
    "mockedClass": "ConditionTO",
    "isReuseableMock": false,
    "mockPattern": "Creation:\n\u2014 Local Mock Creation in Test Case\n\nStubbing:\n\u2014 Test Case\n\nVerification:\n\u2014 None",
    "classContext": {
      "packageName": "com.cloud.network.as",
      "filePath": "C:\\java tool\\Apache\\cloudstack\\server\\src\\test\\java\\com\\cloud\\network\\as\\AutoScaleManagerImplTest.java",
      "className": "AutoScaleManagerImplTest"
    },
    "statements": [
      {
        "type": "DECLARATION",
        "code": "ConditionTO conditionTO1 = Mockito.mock(ConditionTO.class);",
        "line": 1859,
        "locate": "Test Case",
        "locationContext": {
          "methodName": "setPerformanceMonitorCommandParams",
          "methodAnnotations": [
            "@Test"
          ]
        }
      },
      {
        "type": "STUBBING",
        "code": "when(conditionTO1.getCounter()).thenReturn(counterTO1);",
        "line": 1867,
        "locate": "Test Case",
        "locationContext": {
          "methodName": "setPerformanceMonitorCommandParams",
          "methodAnnotations": [
            "@Test"
          ]
        }
      },
      {
        "type": "STUBBING",
        "code": "when(conditionTO1.getId()).thenReturn(conditionId);",
        "line": 1869,
        "locate": "Test Case",
        "locationContext": {
          "methodName": "setPerformanceMonitorCommandParams",
          "methodAnnotations": [
            "@Test"
          ]
        }
      }
    ],
    "pattern_id": 1
  },
  {
    "variableName": "conditionTO2",
    "variableType": "ConditionTO",
    "mockedClass": "ConditionTO",
    "isReuseableMock": false,
    "mockPattern": "Creation:\n\u2014 Local Mock Creation in Test Case\n\nStubbing:\n\u2014 Test Case\n\nVerification:\n\u2014 None",
    "classContext": {
      "packageName": "com.cloud.network.as",
      "filePath": "C:\\java tool\\Apache\\cloudstack\\server\\src\\test\\java\\com\\cloud\\network\\as\\AutoScaleManagerImplTest.java",
      "className": "AutoScaleManagerImplTest"
    },
    "statements": [
      {
        "type": "DECLARATION",
        "code": "ConditionTO conditionTO2 = Mockito.mock(ConditionTO.class);",
        "line": 1861,
        "locate": "Test Case",
        "locationContext": {
          "methodName": "setPerformanceMonitorCommandParams",
          "methodAnnotations": [
            "@Test"
          ]
        }
      },
      {
        "type": "STUBBING",
        "code": "when(conditionTO2.getCounter()).thenReturn(counterTO2);",
        "line": 1868,
        "locate": "Test Case",
        "locationContext": {
          "methodName": "setPerformanceMonitorCommandParams",
          "methodAnnotations": [
            "@Test"
          ]
        }
      },
      {
        "type": "STUBBING",
        "code": "when(conditionTO2.getId()).thenReturn(conditionId + 1L);",
        "line": 1870,
        "locate": "Test Case",
        "locationContext": {
          "methodName": "setPerformanceMonitorCommandParams",
          "methodAnnotations": [
            "@Test"
          ]
        }
      }
    ],
    "pattern_id": 1
  },
  {
    "variableName": "scaleUpConditionTO",
    "variableType": "ConditionTO",
    "mockedClass": "ConditionTO",
    "isReuseableMock": false,
    "mockPattern": "Creation:\n\u2014 Local Mock Creation in Test Case\n\nStubbing:\n\u2014 Test Case\n\nVerification:\n\u2014 None",
    "classContext": {
      "packageName": "com.cloud.network.as",
      "filePath": "C:\\java tool\\Apache\\cloudstack\\server\\src\\test\\java\\com\\cloud\\network\\as\\AutoScaleManagerImplTest.java",
      "className": "AutoScaleManagerImplTest"
    },
    "statements": [
      {
        "type": "DECLARATION",
        "code": "ConditionTO scaleUpConditionTO = Mockito.mock(ConditionTO.class);",
        "line": 2039,
        "locate": "Test Case",
        "locationContext": {
          "methodName": "updateCountersMap1",
          "methodAnnotations": [
            "@Test"
          ]
        }
      },
      {
        "type": "STUBBING",
        "code": "when(scaleUpConditionTO.getId()).thenReturn(scaleUpConditionId);",
        "line": 2042,
        "locate": "Test Case",
        "locationContext": {
          "methodName": "updateCountersMap1",
          "methodAnnotations": [
            "@Test"
          ]
        }
      },
      {
        "type": "STUBBING",
        "code": "when(scaleUpConditionTO.getCounter()).thenReturn(scaleUpCounterTO);",
        "line": 2043,
        "locate": "Test Case",
        "locationContext": {
          "methodName": "updateCountersMap1",
          "methodAnnotations": [
            "@Test"
          ]
        }
      }
    ],
    "pattern_id": 1
  },
  {
    "variableName": "scaleDownConditionTO",
    "variableType": "ConditionTO",
    "mockedClass": "ConditionTO",
    "isReuseableMock": false,
    "mockPattern": "Creation:\n\u2014 Local Mock Creation in Test Case\n\nStubbing:\n\u2014 Test Case\n\nVerification:\n\u2014 None",
    "classContext": {
      "packageName": "com.cloud.network.as",
      "filePath": "C:\\java tool\\Apache\\cloudstack\\server\\src\\test\\java\\com\\cloud\\network\\as\\AutoScaleManagerImplTest.java",
      "className": "AutoScaleManagerImplTest"
    },
    "statements": [
      {
        "type": "DECLARATION",
        "code": "ConditionTO scaleDownConditionTO = Mockito.mock(ConditionTO.class);",
        "line": 2050,
        "locate": "Test Case",
        "locationContext": {
          "methodName": "updateCountersMap1",
          "methodAnnotations": [
            "@Test"
          ]
        }
      },
      {
        "type": "STUBBING",
        "code": "when(scaleDownConditionTO.getId()).thenReturn(scaleDownConditionId);",
        "line": 2053,
        "locate": "Test Case",
        "locationContext": {
          "methodName": "updateCountersMap1",
          "methodAnnotations": [
            "@Test"
          ]
        }
      },
      {
        "type": "STUBBING",
        "code": "when(scaleDownConditionTO.getCounter()).thenReturn(scaleDownCounterTO);",
        "line": 2054,
        "locate": "Test Case",
        "locationContext": {
          "methodName": "updateCountersMap1",
          "methodAnnotations": [
            "@Test"
          ]
        }
      }
    ],
    "pattern_id": 1
  },
  {
    "variableName": "scaleUpConditionTO",
    "variableType": "ConditionTO",
    "mockedClass": "ConditionTO",
    "isReuseableMock": false,
    "mockPattern": "Creation:\n\u2014 Local Mock Creation in Test Case\n\nStubbing:\n\u2014 Test Case\n\nVerification:\n\u2014 None",
    "classContext": {
      "packageName": "com.cloud.network.as",
      "filePath": "C:\\java tool\\Apache\\cloudstack\\server\\src\\test\\java\\com\\cloud\\network\\as\\AutoScaleManagerImplTest.java",
      "className": "AutoScaleManagerImplTest"
    },
    "statements": [
      {
        "type": "DECLARATION",
        "code": "ConditionTO scaleUpConditionTO = Mockito.mock(ConditionTO.class);",
        "line": 2096,
        "locate": "Test Case",
        "locationContext": {
          "methodName": "updateCountersMap2",
          "methodAnnotations": [
            "@Test"
          ]
        }
      },
      {
        "type": "STUBBING",
        "code": "when(scaleUpConditionTO.getId()).thenReturn(scaleUpConditionId);",
        "line": 2099,
        "locate": "Test Case",
        "locationContext": {
          "methodName": "updateCountersMap2",
          "methodAnnotations": [
            "@Test"
          ]
        }
      },
      {
        "type": "STUBBING",
        "code": "when(scaleUpConditionTO.getCounter()).thenReturn(scaleUpCounterTO);",
        "line": 2100,
        "locate": "Test Case",
        "locationContext": {
          "methodName": "updateCountersMap2",
          "methodAnnotations": [
            "@Test"
          ]
        }
      }
    ],
    "pattern_id": 1
  },
  {
    "variableName": "scaleUpConditionTO",
    "variableType": "ConditionTO",
    "mockedClass": "ConditionTO",
    "isReuseableMock": false,
    "mockPattern": "Creation:\n\u2014 Local Mock Creation in Test Case\n\nStubbing:\n\u2014 Test Case\n\nVerification:\n\u2014 None",
    "classContext": {
      "packageName": "com.cloud.network.as",
      "filePath": "C:\\java tool\\Apache\\cloudstack\\server\\src\\test\\java\\com\\cloud\\network\\as\\AutoScaleManagerImplTest.java",
      "className": "AutoScaleManagerImplTest"
    },
    "statements": [
      {
        "type": "DECLARATION",
        "code": "ConditionTO scaleUpConditionTO = Mockito.mock(ConditionTO.class);",
        "line": 2218,
        "locate": "Test Case",
        "locationContext": {
          "methodName": "monitorVirtualRouterAsGroup",
          "methodAnnotations": [
            "@Test"
          ]
        }
      },
      {
        "type": "STUBBING",
        "code": "when(scaleUpConditionTO.getCounter()).thenReturn(scaleUpCounterTO);",
        "line": 2221,
        "locate": "Test Case",
        "locationContext": {
          "methodName": "monitorVirtualRouterAsGroup",
          "methodAnnotations": [
            "@Test"
          ]
        }
      }
    ],
    "pattern_id": 1
  },
  {
    "variableName": "scaleDownConditionTO",
    "variableType": "ConditionTO",
    "mockedClass": "ConditionTO",
    "isReuseableMock": false,
    "mockPattern": "Creation:\n\u2014 Local Mock Creation in Test Case\n\nStubbing:\n\u2014 Test Case\n\nVerification:\n\u2014 None",
    "classContext": {
      "packageName": "com.cloud.network.as",
      "filePath": "C:\\java tool\\Apache\\cloudstack\\server\\src\\test\\java\\com\\cloud\\network\\as\\AutoScaleManagerImplTest.java",
      "className": "AutoScaleManagerImplTest"
    },
    "statements": [
      {
        "type": "DECLARATION",
        "code": "ConditionTO scaleDownConditionTO = Mockito.mock(ConditionTO.class);",
        "line": 2225,
        "locate": "Test Case",
        "locationContext": {
          "methodName": "monitorVirtualRouterAsGroup",
          "methodAnnotations": [
            "@Test"
          ]
        }
      },
      {
        "type": "STUBBING",
        "code": "when(scaleDownConditionTO.getCounter()).thenReturn(scaleDownCounterTO);",
        "line": 2228,
        "locate": "Test Case",
        "locationContext": {
          "methodName": "monitorVirtualRouterAsGroup",
          "methodAnnotations": [
            "@Test"
          ]
        }
      }
    ],
    "pattern_id": 1
  },
  {
    "variableName": "scaleUpConditionTO",
    "variableType": "ConditionTO",
    "mockedClass": "ConditionTO",
    "isReuseableMock": false,
    "mockPattern": "Creation:\n\u2014 Local Mock Creation in Test Case\n\nStubbing:\n\u2014 Test Case\n\nVerification:\n\u2014 None",
    "classContext": {
      "packageName": "com.cloud.network.as",
      "filePath": "C:\\java tool\\Apache\\cloudstack\\server\\src\\test\\java\\com\\cloud\\network\\as\\AutoScaleManagerImplTest.java",
      "className": "AutoScaleManagerImplTest"
    },
    "statements": [
      {
        "type": "DECLARATION",
        "code": "ConditionTO scaleUpConditionTO = Mockito.mock(ConditionTO.class);",
        "line": 2379,
        "locate": "Test Case",
        "locationContext": {
          "methodName": "setGetAutoScaleMetricsCommandMetrics",
          "methodAnnotations": [
            "@Test"
          ]
        }
      },
      {
        "type": "STUBBING",
        "code": "when(scaleUpConditionTO.getCounter()).thenReturn(scaleUpCounterTO);",
        "line": 2383,
        "locate": "Test Case",
        "locationContext": {
          "methodName": "setGetAutoScaleMetricsCommandMetrics",
          "methodAnnotations": [
            "@Test"
          ]
        }
      }
    ],
    "pattern_id": 1
  },
  {
    "variableName": "scaleDownConditionTO",
    "variableType": "ConditionTO",
    "mockedClass": "ConditionTO",
    "isReuseableMock": false,
    "mockPattern": "Creation:\n\u2014 Local Mock Creation in Test Case\n\nStubbing:\n\u2014 Test Case\n\nVerification:\n\u2014 None",
    "classContext": {
      "packageName": "com.cloud.network.as",
      "filePath": "C:\\java tool\\Apache\\cloudstack\\server\\src\\test\\java\\com\\cloud\\network\\as\\AutoScaleManagerImplTest.java",
      "className": "AutoScaleManagerImplTest"
    },
    "statements": [
      {
        "type": "DECLARATION",
        "code": "ConditionTO scaleDownConditionTO = Mockito.mock(ConditionTO.class);",
        "line": 2389,
        "locate": "Test Case",
        "locationContext": {
          "methodName": "setGetAutoScaleMetricsCommandMetrics",
          "methodAnnotations": [
            "@Test"
          ]
        }
      },
      {
        "type": "STUBBING",
        "code": "when(scaleDownConditionTO.getCounter()).thenReturn(scaleDownCounterTO);",
        "line": 2393,
        "locate": "Test Case",
        "locationContext": {
          "methodName": "setGetAutoScaleMetricsCommandMetrics",
          "methodAnnotations": [
            "@Test"
          ]
        }
      }
    ],
    "pattern_id": 1
  }
]