[
  {
    "variableName": "mockResponse",
    "variableType": "CloseableHttpResponse",
    "mockedClass": "CloseableHttpResponse",
    "isReuseableMock": false,
    "mockPattern": "Creation:\n\u2014 Attribute Mock Creation\n\nStubbing:\n\u2014 Test Case\n\nVerification:\n\u2014 None",
    "classContext": {
      "packageName": "com.cloud.network.nicira",
      "filePath": "C:\\java tool\\Apache\\cloudstack\\plugins\\network-elements\\nicira-nvp\\src\\test\\java\\com\\cloud\\network\\nicira\\NiciraRestClientTest.java",
      "className": "NiciraRestClientTest"
    },
    "statements": [
      {
        "type": "FIELD_MOCK_CREATION",
        "code": "private final CloseableHttpResponse mockResponse = mock(CloseableHttpResponse.class);",
        "line": 81,
        "locate": "Attribute",
        "locationContext": {
          "methodName": "[FieldDeclaration]",
          "methodAnnotations": []
        }
      },
      {
        "type": "STUBBING",
        "code": "when(mockResponse.getStatusLine()).thenReturn(HTTP_200_STATUSLINE);",
        "line": 116,
        "locate": "Test Case",
        "locationContext": {
          "methodName": "testExecuteSuccessAtFirstAttempt",
          "methodAnnotations": [
            "@Test"
          ]
        }
      },
      {
        "type": "STUBBING",
        "code": "when(mockResponse.getStatusLine()).thenReturn(HTTP_401_STATUSLINE).thenReturn(HTTP_200_STATUSLINE).thenReturn(HTTP_200_STATUSLINE);",
        "line": 128,
        "locate": "Test Case",
        "locationContext": {
          "methodName": "testExecuteUnauthorizedThenSuccess",
          "methodAnnotations": [
            "@Test"
          ]
        }
      },
      {
        "type": "STUBBING",
        "code": "when(mockResponse.getStatusLine()).thenReturn(HTTP_401_STATUSLINE).thenReturn(HTTP_401_STATUSLINE);",
        "line": 149,
        "locate": "Test Case",
        "locationContext": {
          "methodName": "testExecuteTwoConsecutiveUnauthorizedExecutions",
          "methodAnnotations": [
            "@Test"
          ]
        }
      },
      {
        "type": "STUBBING",
        "code": "when(mockResponse.getStatusLine()).thenReturn(HTTP_401_STATUSLINE).thenReturn(HTTP_200_STATUSLINE).thenReturn(HTTP_401_STATUSLINE).thenReturn(HTTP_200_STATUSLINE).thenReturn(HTTP_401_STATUSLINE).thenReturn(HTTP_200_STATUSLINE).thenReturn(HTTP_401_STATUSLINE).thenReturn(HTTP_200_STATUSLINE).thenReturn(HTTP_401_STATUSLINE);",
        "line": 178,
        "locate": "Test Case",
        "locationContext": {
          "methodName": "testExecuteLiveLockWhenControllerAllowsLoginAndFollowsWithUnauthorizedButDoesNotRediect",
          "methodAnnotations": [
            "@Test"
          ]
        }
      }
    ],
    "pattern_id": 4
  },
  {
    "variableName": "mockResponse",
    "variableType": "CloseableHttpResponse",
    "mockedClass": "CloseableHttpResponse",
    "isReuseableMock": false,
    "mockPattern": "Creation:\n\u2014 Attribute Mock Creation\n\nStubbing:\n\u2014 Test Case\n\nVerification:\n\u2014 None",
    "classContext": {
      "packageName": "com.cloud.utils.rest",
      "filePath": "C:\\java tool\\Apache\\cloudstack\\utils\\src\\test\\java\\com\\cloud\\utils\\rest\\BasicRestClientTest.java",
      "className": "BasicRestClientTest"
    },
    "statements": [
      {
        "type": "FIELD_MOCK_CREATION",
        "code": "private static final CloseableHttpResponse mockResponse = mock(CloseableHttpResponse.class);",
        "line": 51,
        "locate": "Attribute",
        "locationContext": {
          "methodName": "[FieldDeclaration]",
          "methodAnnotations": []
        }
      },
      {
        "type": "STUBBING",
        "code": "when(mockResponse.getStatusLine()).thenReturn(HTTP_200_REPSONSE);",
        "line": 67,
        "locate": "Test Case",
        "locationContext": {
          "methodName": "testExecuteRequest",
          "methodAnnotations": [
            "@Test"
          ]
        }
      },
      {
        "type": "STUBBING",
        "code": "when(mockResponse.getStatusLine()).thenReturn(HTTP_503_STATUSLINE);",
        "line": 83,
        "locate": "Test Case",
        "locationContext": {
          "methodName": "testExecuteRequestStatusCodeIsNotOk",
          "methodAnnotations": [
            "@Test"
          ]
        }
      }
    ],
    "pattern_id": 4
  }
]