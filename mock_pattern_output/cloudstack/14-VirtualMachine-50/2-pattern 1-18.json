[
  {
    "variableName": "vm",
    "variableType": "VirtualMachine",
    "mockedClass": "VirtualMachine",
    "isReuseableMock": "Fully Localized",
    "mockPattern": "Creation:\n\u2014 Local Mock Creation in Test Case\n\nStubbing:\n\u2014 Test Case\n\nVerification:\n\u2014 None",
    "classContext": {
      "packageName": "com.cloud.vm",
      "filePath": "C:\\java tool\\Apache\\cloudstack\\engine\\orchestration\\src\\test\\java\\com\\cloud\\vm\\VirtualMachineManagerImplTest.java",
      "className": "VirtualMachineManagerImplTest"
    },
    "statements": [
      {
        "type": "DECLARATION",
        "code": "VirtualMachine vm = mock(VirtualMachine.class);",
        "line": 281,
        "locate": "Test Case",
        "locationContext": {
          "methodName": "testSendStopWithOkAnswer",
          "methodAnnotations": [
            "@Test"
          ]
        }
      },
      {
        "type": "STUBBING",
        "code": "when(vm.getHostId()).thenReturn(1L);",
        "line": 285,
        "locate": "Test Case",
        "locationContext": {
          "methodName": "testSendStopWithOkAnswer",
          "methodAnnotations": [
            "@Test"
          ]
        }
      }
    ],
    "pattern_id": 1
  },
  {
    "variableName": "vm",
    "variableType": "VirtualMachine",
    "mockedClass": "VirtualMachine",
    "isReuseableMock": "Fully Localized",
    "mockPattern": "Creation:\n\u2014 Local Mock Creation in Test Case\n\nStubbing:\n\u2014 Test Case\n\nVerification:\n\u2014 None",
    "classContext": {
      "packageName": "com.cloud.vm",
      "filePath": "C:\\java tool\\Apache\\cloudstack\\engine\\orchestration\\src\\test\\java\\com\\cloud\\vm\\VirtualMachineManagerImplTest.java",
      "className": "VirtualMachineManagerImplTest"
    },
    "statements": [
      {
        "type": "DECLARATION",
        "code": "VirtualMachine vm = mock(VirtualMachine.class);",
        "line": 296,
        "locate": "Test Case",
        "locationContext": {
          "methodName": "testSendStopWithFailAnswer",
          "methodAnnotations": [
            "@Test"
          ]
        }
      },
      {
        "type": "STUBBING",
        "code": "when(vm.getHostId()).thenReturn(1L);",
        "line": 300,
        "locate": "Test Case",
        "locationContext": {
          "methodName": "testSendStopWithFailAnswer",
          "methodAnnotations": [
            "@Test"
          ]
        }
      }
    ],
    "pattern_id": 1
  },
  {
    "variableName": "vm",
    "variableType": "VirtualMachine",
    "mockedClass": "VirtualMachine",
    "isReuseableMock": "Fully Localized",
    "mockPattern": "Creation:\n\u2014 Local Mock Creation in Test Case\n\nStubbing:\n\u2014 Test Case\n\nVerification:\n\u2014 None",
    "classContext": {
      "packageName": "com.cloud.vm",
      "filePath": "C:\\java tool\\Apache\\cloudstack\\engine\\orchestration\\src\\test\\java\\com\\cloud\\vm\\VirtualMachineManagerImplTest.java",
      "className": "VirtualMachineManagerImplTest"
    },
    "statements": [
      {
        "type": "DECLARATION",
        "code": "VirtualMachine vm = mock(VirtualMachine.class);",
        "line": 311,
        "locate": "Test Case",
        "locationContext": {
          "methodName": "testSendStopWithNullAnswer",
          "methodAnnotations": [
            "@Test"
          ]
        }
      },
      {
        "type": "STUBBING",
        "code": "when(vm.getHostId()).thenReturn(1L);",
        "line": 314,
        "locate": "Test Case",
        "locationContext": {
          "methodName": "testSendStopWithNullAnswer",
          "methodAnnotations": [
            "@Test"
          ]
        }
      }
    ],
    "pattern_id": 1
  },
  {
    "variableName": "vm",
    "variableType": "VirtualMachine",
    "mockedClass": "VirtualMachine",
    "isReuseableMock": "Fully Localized",
    "mockPattern": "Creation:\n\u2014 Local Mock Creation in Test Case\n\nStubbing:\n\u2014 Test Case\n\nVerification:\n\u2014 None",
    "classContext": {
      "packageName": "org.apache.cloudstack.affinity",
      "filePath": "C:\\java tool\\Apache\\cloudstack\\plugins\\affinity-group-processors\\non-strict-host-affinity\\src\\test\\java\\org\\apache\\cloudstack\\affinity\\NonStrictHostAffinityProcessorTest.java",
      "className": "NonStrictHostAffinityProcessorTest"
    },
    "statements": [
      {
        "type": "DECLARATION",
        "code": "VirtualMachine vm = Mockito.mock(VirtualMachine.class);",
        "line": 75,
        "locate": "Test Case",
        "locationContext": {
          "methodName": "testProcessWithEmptyPlan",
          "methodAnnotations": [
            "@Test"
          ]
        }
      },
      {
        "type": "STUBBING",
        "code": "when(vm.getId()).thenReturn(vmId);",
        "line": 76,
        "locate": "Test Case",
        "locationContext": {
          "methodName": "testProcessWithEmptyPlan",
          "methodAnnotations": [
            "@Test"
          ]
        }
      }
    ],
    "pattern_id": 1
  },
  {
    "variableName": "vm",
    "variableType": "VirtualMachine",
    "mockedClass": "VirtualMachine",
    "isReuseableMock": "Fully Localized",
    "mockPattern": "Creation:\n\u2014 Local Mock Creation in Test Case\n\nStubbing:\n\u2014 Test Case\n\nVerification:\n\u2014 None",
    "classContext": {
      "packageName": "org.apache.cloudstack.affinity",
      "filePath": "C:\\java tool\\Apache\\cloudstack\\plugins\\affinity-group-processors\\non-strict-host-affinity\\src\\test\\java\\org\\apache\\cloudstack\\affinity\\NonStrictHostAffinityProcessorTest.java",
      "className": "NonStrictHostAffinityProcessorTest"
    },
    "statements": [
      {
        "type": "DECLARATION",
        "code": "VirtualMachine vm = Mockito.mock(VirtualMachine.class);",
        "line": 105,
        "locate": "Test Case",
        "locationContext": {
          "methodName": "testProcessWithPlan",
          "methodAnnotations": [
            "@Test"
          ]
        }
      },
      {
        "type": "STUBBING",
        "code": "when(vm.getId()).thenReturn(vmId);",
        "line": 106,
        "locate": "Test Case",
        "locationContext": {
          "methodName": "testProcessWithPlan",
          "methodAnnotations": [
            "@Test"
          ]
        }
      }
    ],
    "pattern_id": 1
  },
  {
    "variableName": "vm",
    "variableType": "VirtualMachine",
    "mockedClass": "VirtualMachine",
    "isReuseableMock": "Fully Localized",
    "mockPattern": "Creation:\n\u2014 Local Mock Creation in Test Case\n\nStubbing:\n\u2014 Test Case\n\nVerification:\n\u2014 None",
    "classContext": {
      "packageName": "org.apache.cloudstack.affinity",
      "filePath": "C:\\java tool\\Apache\\cloudstack\\plugins\\affinity-group-processors\\non-strict-host-affinity\\src\\test\\java\\org\\apache\\cloudstack\\affinity\\NonStrictHostAffinityProcessorTest.java",
      "className": "NonStrictHostAffinityProcessorTest"
    },
    "statements": [
      {
        "type": "DECLARATION",
        "code": "VirtualMachine vm = Mockito.mock(VirtualMachine.class);",
        "line": 142,
        "locate": "Test Case",
        "locationContext": {
          "methodName": "testProcessWithNotRunningVM",
          "methodAnnotations": [
            "@Test"
          ]
        }
      },
      {
        "type": "STUBBING",
        "code": "when(vm.getId()).thenReturn(vmId);",
        "line": 143,
        "locate": "Test Case",
        "locationContext": {
          "methodName": "testProcessWithNotRunningVM",
          "methodAnnotations": [
            "@Test"
          ]
        }
      }
    ],
    "pattern_id": 1
  },
  {
    "variableName": "vm",
    "variableType": "VirtualMachine",
    "mockedClass": "VirtualMachine",
    "isReuseableMock": "Fully Localized",
    "mockPattern": "Creation:\n\u2014 Local Mock Creation in Test Case\n\nStubbing:\n\u2014 Test Case\n\nVerification:\n\u2014 None",
    "classContext": {
      "packageName": "org.apache.cloudstack.affinity",
      "filePath": "C:\\java tool\\Apache\\cloudstack\\plugins\\affinity-group-processors\\non-strict-host-anti-affinity\\src\\test\\java\\org\\apache\\cloudstack\\affinity\\NonStrictHostAntiAffinityProcessorTest.java",
      "className": "NonStrictHostAntiAffinityProcessorTest"
    },
    "statements": [
      {
        "type": "DECLARATION",
        "code": "VirtualMachine vm = Mockito.mock(VirtualMachine.class);",
        "line": 74,
        "locate": "Test Case",
        "locationContext": {
          "methodName": "testProcessWithEmptyPlan",
          "methodAnnotations": [
            "@Test"
          ]
        }
      },
      {
        "type": "STUBBING",
        "code": "when(vm.getId()).thenReturn(vmId);",
        "line": 75,
        "locate": "Test Case",
        "locationContext": {
          "methodName": "testProcessWithEmptyPlan",
          "methodAnnotations": [
            "@Test"
          ]
        }
      }
    ],
    "pattern_id": 1
  },
  {
    "variableName": "vm",
    "variableType": "VirtualMachine",
    "mockedClass": "VirtualMachine",
    "isReuseableMock": "Fully Localized",
    "mockPattern": "Creation:\n\u2014 Local Mock Creation in Test Case\n\nStubbing:\n\u2014 Test Case\n\nVerification:\n\u2014 None",
    "classContext": {
      "packageName": "org.apache.cloudstack.affinity",
      "filePath": "C:\\java tool\\Apache\\cloudstack\\plugins\\affinity-group-processors\\non-strict-host-anti-affinity\\src\\test\\java\\org\\apache\\cloudstack\\affinity\\NonStrictHostAntiAffinityProcessorTest.java",
      "className": "NonStrictHostAntiAffinityProcessorTest"
    },
    "statements": [
      {
        "type": "DECLARATION",
        "code": "VirtualMachine vm = Mockito.mock(VirtualMachine.class);",
        "line": 104,
        "locate": "Test Case",
        "locationContext": {
          "methodName": "testProcessWithPlan",
          "methodAnnotations": [
            "@Test"
          ]
        }
      },
      {
        "type": "STUBBING",
        "code": "when(vm.getId()).thenReturn(vmId);",
        "line": 105,
        "locate": "Test Case",
        "locationContext": {
          "methodName": "testProcessWithPlan",
          "methodAnnotations": [
            "@Test"
          ]
        }
      }
    ],
    "pattern_id": 1
  },
  {
    "variableName": "vm",
    "variableType": "VirtualMachine",
    "mockedClass": "VirtualMachine",
    "isReuseableMock": "Fully Localized",
    "mockPattern": "Creation:\n\u2014 Local Mock Creation in Test Case\n\nStubbing:\n\u2014 Test Case\n\nVerification:\n\u2014 None",
    "classContext": {
      "packageName": "org.apache.cloudstack.affinity",
      "filePath": "C:\\java tool\\Apache\\cloudstack\\plugins\\affinity-group-processors\\non-strict-host-anti-affinity\\src\\test\\java\\org\\apache\\cloudstack\\affinity\\NonStrictHostAntiAffinityProcessorTest.java",
      "className": "NonStrictHostAntiAffinityProcessorTest"
    },
    "statements": [
      {
        "type": "DECLARATION",
        "code": "VirtualMachine vm = Mockito.mock(VirtualMachine.class);",
        "line": 141,
        "locate": "Test Case",
        "locationContext": {
          "methodName": "testProcessWithNotRunningVM",
          "methodAnnotations": [
            "@Test"
          ]
        }
      },
      {
        "type": "STUBBING",
        "code": "when(vm.getId()).thenReturn(vmId);",
        "line": 142,
        "locate": "Test Case",
        "locationContext": {
          "methodName": "testProcessWithNotRunningVM",
          "methodAnnotations": [
            "@Test"
          ]
        }
      }
    ],
    "pattern_id": 1
  },
  {
    "variableName": "vm",
    "variableType": "VirtualMachine",
    "mockedClass": "VirtualMachine",
    "isReuseableMock": "Fully Localized",
    "mockPattern": "Creation:\n\u2014 Local Mock Creation in Test Case\n\nStubbing:\n\u2014 Test Case\n\nVerification:\n\u2014 None",
    "classContext": {
      "packageName": "com.cloud.hypervisor.guru",
      "filePath": "C:\\java tool\\Apache\\cloudstack\\plugins\\hypervisors\\vmware\\src\\test\\java\\com\\cloud\\hypervisor\\guru\\VMwareGuruTest.java",
      "className": "VMwareGuruTest"
    },
    "statements": [
      {
        "type": "DECLARATION",
        "code": "VirtualMachine vm = Mockito.mock(VirtualMachine.class);",
        "line": 88,
        "locate": "Test Case",
        "locationContext": {
          "methodName": "finalizeMigrateForLocalStorageToHaveTargetHostGuid",
          "methodAnnotations": [
            "@Test"
          ]
        }
      },
      {
        "type": "STUBBING",
        "code": "Mockito.when(vm.getId()).thenReturn(1L);",
        "line": 102,
        "locate": "Test Case",
        "locationContext": {
          "methodName": "finalizeMigrateForLocalStorageToHaveTargetHostGuid",
          "methodAnnotations": [
            "@Test"
          ]
        }
      }
    ],
    "pattern_id": 1
  },
  {
    "variableName": "vm",
    "variableType": "VirtualMachine",
    "mockedClass": "VirtualMachine",
    "isReuseableMock": "Fully Localized",
    "mockPattern": "Creation:\n\u2014 Local Mock Creation in Test Case\n\nStubbing:\n\u2014 Test Case\n\nVerification:\n\u2014 None",
    "classContext": {
      "packageName": "com.cloud.event",
      "filePath": "C:\\java tool\\Apache\\cloudstack\\server\\src\\test\\java\\com\\cloud\\event\\ActionEventUtilsTest.java",
      "className": "ActionEventUtilsTest"
    },
    "statements": [
      {
        "type": "DECLARATION",
        "code": "VirtualMachine vm = Mockito.mock(VirtualMachine.class);",
        "line": 263,
        "locate": "Test Case",
        "locationContext": {
          "methodName": "testPublishedEventResource",
          "methodAnnotations": [
            "@Test"
          ]
        }
      },
      {
        "type": "STUBBING",
        "code": "Mockito.when(vm.getUuid()).thenReturn(resourceUuid);",
        "line": 264,
        "locate": "Test Case",
        "locationContext": {
          "methodName": "testPublishedEventResource",
          "methodAnnotations": [
            "@Test"
          ]
        }
      }
    ],
    "pattern_id": 1
  },
  {
    "variableName": "vm",
    "variableType": "VirtualMachine",
    "mockedClass": "VirtualMachine",
    "isReuseableMock": "Fully Localized",
    "mockPattern": "Creation:\n\u2014 Local Mock Creation in Test Case\n\nStubbing:\n\u2014 Test Case\n\nVerification:\n\u2014 None",
    "classContext": {
      "packageName": "com.cloud.event",
      "filePath": "C:\\java tool\\Apache\\cloudstack\\server\\src\\test\\java\\com\\cloud\\event\\ActionEventUtilsTest.java",
      "className": "ActionEventUtilsTest"
    },
    "statements": [
      {
        "type": "DECLARATION",
        "code": "VirtualMachine vm = Mockito.mock(VirtualMachine.class);",
        "line": 279,
        "locate": "Test Case",
        "locationContext": {
          "methodName": "testPublishedEventResourceWithCallContext",
          "methodAnnotations": [
            "@Test"
          ]
        }
      },
      {
        "type": "STUBBING",
        "code": "Mockito.when(vm.getId()).thenReturn(resourceId);",
        "line": 280,
        "locate": "Test Case",
        "locationContext": {
          "methodName": "testPublishedEventResourceWithCallContext",
          "methodAnnotations": [
            "@Test"
          ]
        }
      }
    ],
    "pattern_id": 1
  },
  {
    "variableName": "vm",
    "variableType": "VirtualMachine",
    "mockedClass": "VirtualMachine",
    "isReuseableMock": "Fully Localized",
    "mockPattern": "Creation:\n\u2014 Local Mock Creation in Test Case\n\nStubbing:\n\u2014 Test Case\n\nVerification:\n\u2014 None",
    "classContext": {
      "packageName": "com.cloud.event",
      "filePath": "C:\\java tool\\Apache\\cloudstack\\server\\src\\test\\java\\com\\cloud\\event\\ActionEventUtilsTest.java",
      "className": "ActionEventUtilsTest"
    },
    "statements": [
      {
        "type": "DECLARATION",
        "code": "VirtualMachine vm = Mockito.mock(VirtualMachine.class);",
        "line": 296,
        "locate": "Test Case",
        "locationContext": {
          "methodName": "testScheduledEvent",
          "methodAnnotations": [
            "@Test"
          ]
        }
      },
      {
        "type": "STUBBING",
        "code": "Mockito.when(vm.getId()).thenReturn(resourceId);",
        "line": 297,
        "locate": "Test Case",
        "locationContext": {
          "methodName": "testScheduledEvent",
          "methodAnnotations": [
            "@Test"
          ]
        }
      }
    ],
    "pattern_id": 1
  },
  {
    "variableName": "vm",
    "variableType": "VirtualMachine",
    "mockedClass": "VirtualMachine",
    "isReuseableMock": "Fully Localized",
    "mockPattern": "Creation:\n\u2014 Local Mock Creation in Test Case\n\nStubbing:\n\u2014 Test Case\n\nVerification:\n\u2014 None",
    "classContext": {
      "packageName": "com.cloud.event",
      "filePath": "C:\\java tool\\Apache\\cloudstack\\server\\src\\test\\java\\com\\cloud\\event\\ActionEventUtilsTest.java",
      "className": "ActionEventUtilsTest"
    },
    "statements": [
      {
        "type": "DECLARATION",
        "code": "VirtualMachine vm = Mockito.mock(VirtualMachine.class);",
        "line": 322,
        "locate": "Test Case",
        "locationContext": {
          "methodName": "testCreatedEvent",
          "methodAnnotations": [
            "@Test"
          ]
        }
      },
      {
        "type": "STUBBING",
        "code": "Mockito.when(vm.getId()).thenReturn(resourceId);",
        "line": 323,
        "locate": "Test Case",
        "locationContext": {
          "methodName": "testCreatedEvent",
          "methodAnnotations": [
            "@Test"
          ]
        }
      }
    ],
    "pattern_id": 1
  },
  {
    "variableName": "vm",
    "variableType": "VirtualMachine",
    "mockedClass": "VirtualMachine",
    "isReuseableMock": "Fully Localized",
    "mockPattern": "Creation:\n\u2014 Local Mock Creation in Test Case\n\nStubbing:\n\u2014 Test Case\n\nVerification:\n\u2014 None",
    "classContext": {
      "packageName": "com.cloud.event",
      "filePath": "C:\\java tool\\Apache\\cloudstack\\server\\src\\test\\java\\com\\cloud\\event\\ActionEventUtilsTest.java",
      "className": "ActionEventUtilsTest"
    },
    "statements": [
      {
        "type": "DECLARATION",
        "code": "VirtualMachine vm = Mockito.mock(VirtualMachine.class);",
        "line": 348,
        "locate": "Test Case",
        "locationContext": {
          "methodName": "testNestedEvent",
          "methodAnnotations": [
            "@Test"
          ]
        }
      },
      {
        "type": "STUBBING",
        "code": "Mockito.when(vm.getId()).thenReturn(resourceId);",
        "line": 349,
        "locate": "Test Case",
        "locationContext": {
          "methodName": "testNestedEvent",
          "methodAnnotations": [
            "@Test"
          ]
        }
      }
    ],
    "pattern_id": 1
  },
  {
    "variableName": "vm",
    "variableType": "VirtualMachine",
    "mockedClass": "VirtualMachine",
    "isReuseableMock": "Fully Localized",
    "mockPattern": "Creation:\n\u2014 Local Mock Creation in Test Case\n\nStubbing:\n\u2014 Test Case\n\nVerification:\n\u2014 None",
    "classContext": {
      "packageName": "com.cloud.event",
      "filePath": "C:\\java tool\\Apache\\cloudstack\\server\\src\\test\\java\\com\\cloud\\event\\ActionEventUtilsTest.java",
      "className": "ActionEventUtilsTest"
    },
    "statements": [
      {
        "type": "DECLARATION",
        "code": "VirtualMachine vm = Mockito.mock(VirtualMachine.class);",
        "line": 398,
        "locate": "Test Case",
        "locationContext": {
          "methodName": "testVmSnapshotEventResource",
          "methodAnnotations": [
            "@Test"
          ]
        }
      },
      {
        "type": "STUBBING",
        "code": "Mockito.when(vm.getUuid()).thenReturn(resourceUuid);",
        "line": 399,
        "locate": "Test Case",
        "locationContext": {
          "methodName": "testVmSnapshotEventResource",
          "methodAnnotations": [
            "@Test"
          ]
        }
      }
    ],
    "pattern_id": 1
  },
  {
    "variableName": "vm",
    "variableType": "VirtualMachine",
    "mockedClass": "VirtualMachine",
    "isReuseableMock": "Fully Localized",
    "mockPattern": "Creation:\n\u2014 Local Mock Creation in Test Case\n\nStubbing:\n\u2014 Test Case\n\nVerification:\n\u2014 None",
    "classContext": {
      "packageName": "com.cloud.event.dao",
      "filePath": "C:\\java tool\\Apache\\cloudstack\\server\\src\\test\\java\\com\\cloud\\event\\dao\\EventJoinDaoImplTest.java",
      "className": "EventJoinDaoImplTest"
    },
    "statements": [
      {
        "type": "DECLARATION",
        "code": "VirtualMachine vm = Mockito.mock(VirtualMachine.class);",
        "line": 58,
        "locate": "Test Case",
        "locationContext": {
          "methodName": "testNewEventViewResource",
          "methodAnnotations": [
            "@Test"
          ]
        }
      },
      {
        "type": "STUBBING",
        "code": "Mockito.when(vm.getUuid()).thenReturn(resourceUuid);",
        "line": 59,
        "locate": "Test Case",
        "locationContext": {
          "methodName": "testNewEventViewResource",
          "methodAnnotations": [
            "@Test"
          ]
        }
      },
      {
        "type": "STUBBING",
        "code": "Mockito.when(vm.getHostName()).thenReturn(null);",
        "line": 60,
        "locate": "Test Case",
        "locationContext": {
          "methodName": "testNewEventViewResource",
          "methodAnnotations": [
            "@Test"
          ]
        }
      },
      {
        "type": "STUBBING",
        "code": "Mockito.when(vm.getName()).thenReturn(resourceName);",
        "line": 61,
        "locate": "Test Case",
        "locationContext": {
          "methodName": "testNewEventViewResource",
          "methodAnnotations": [
            "@Test"
          ]
        }
      }
    ],
    "pattern_id": 1
  },
  {
    "variableName": "vm",
    "variableType": "VirtualMachine",
    "mockedClass": "VirtualMachine",
    "isReuseableMock": "Fully Localized",
    "mockPattern": "Creation:\n\u2014 Local Mock Creation in Test Case\n\nStubbing:\n\u2014 Test Case\n\nVerification:\n\u2014 None",
    "classContext": {
      "packageName": "org.apache.cloudstack.annotation",
      "filePath": "C:\\java tool\\Apache\\cloudstack\\server\\src\\test\\java\\org\\apache\\cloudstack\\annotation\\AnnotationManagerImplTest.java",
      "className": "AnnotationManagerImplTest"
    },
    "statements": [
      {
        "type": "DECLARATION",
        "code": "VirtualMachine vm = Mockito.mock(VirtualMachine.class);",
        "line": 174,
        "locate": "Test Case",
        "locationContext": {
          "methodName": "testRemoveAnnotationResourceDetailsUpdate",
          "methodAnnotations": [
            "@Test"
          ]
        }
      },
      {
        "type": "STUBBING",
        "code": "Mockito.when(vm.getId()).thenReturn(ENTITY_ID);",
        "line": 175,
        "locate": "Test Case",
        "locationContext": {
          "methodName": "testRemoveAnnotationResourceDetailsUpdate",
          "methodAnnotations": [
            "@Test"
          ]
        }
      }
    ],
    "pattern_id": 1
  }
]