[
  {
    "variableName": "_projectMgr",
    "variableType": "ProjectManager",
    "mockedClass": "ProjectManager",
    "isReuseableMock": false,
    "mockPattern": "Creation:\n\u2014 Attribute Mock Creation\n\nStubbing:\n\u2014 Test Case\n\nVerification:\n\u2014 None",
    "classContext": {
      "packageName": "com.cloud.acl",
      "filePath": "C:\\java tool\\Apache\\cloudstack\\server\\src\\test\\java\\com\\cloud\\acl\\DomainCheckerTest.java",
      "className": "DomainCheckerTest"
    },
    "statements": [
      {
        "type": "FIELD_MOCK_CREATION",
        "code": "@Mock\r\nProjectManager _projectMgr;",
        "line": 47,
        "locate": "Attribute",
        "locationContext": {
          "methodName": "[FieldDeclaration]",
          "methodAnnotations": [
            "@Mock"
          ]
        }
      },
      {
        "type": "STUBBING",
        "code": "Mockito.when(_projectMgr.canModifyProjectAccount(caller, projectAccount.getId())).thenReturn(true);",
        "line": 123,
        "locate": "Test Case",
        "locationContext": {
          "methodName": "testProjectOwnerCanModify",
          "methodAnnotations": [
            "@Test"
          ]
        }
      },
      {
        "type": "STUBBING",
        "code": "Mockito.when(_projectMgr.canModifyProjectAccount(caller, projectAccount.getId())).thenReturn(false);",
        "line": 136,
        "locate": "Test Case",
        "locationContext": {
          "methodName": "testProjectOwnerCannotModify",
          "methodAnnotations": [
            "@Test"
          ]
        }
      },
      {
        "type": "STUBBING",
        "code": "Mockito.when(_projectMgr.canAccessProjectAccount(caller, projectAccount.getId())).thenReturn(true);",
        "line": 148,
        "locate": "Test Case",
        "locationContext": {
          "methodName": "testProjectOwnerCanAccess",
          "methodAnnotations": [
            "@Test"
          ]
        }
      },
      {
        "type": "STUBBING",
        "code": "Mockito.when(_projectMgr.canAccessProjectAccount(caller, projectAccount.getId())).thenReturn(false);",
        "line": 161,
        "locate": "Test Case",
        "locationContext": {
          "methodName": "testProjectOwnerCannotAccess",
          "methodAnnotations": [
            "@Test"
          ]
        }
      }
    ],
    "pattern_id": 4
  }
]