[
  {
    "variableName": "ipAddressMock",
    "variableType": "IPAddressVO",
    "mockedClass": "IPAddressVO",
    "isReuseableMock": "Hybrid",
    "mockPattern": "Creation:\n\u2014 Attribute Mock Creation\n\nStubbing:\n\u2014 Test Case\n\nVerification:\n\u2014 None",
    "classContext": {
      "packageName": "com.cloud.network.as",
      "filePath": "C:\\java tool\\Apache\\cloudstack\\server\\src\\test\\java\\com\\cloud\\network\\as\\AutoScaleManagerImplTest.java",
      "className": "AutoScaleManagerImplTest"
    },
    "statements": [
      {
        "type": "FIELD_MOCK_CREATION",
        "code": "@Mock\r\nIPAddressVO ipAddressMock;",
        "line": 383,
        "locate": "Attribute",
        "locationContext": {
          "methodName": "[FieldDeclaration]",
          "methodAnnotations": [
            "@Mock"
          ]
        }
      },
      {
        "type": "STUBBING",
        "code": "when(ipAddressMock.getDataCenterId()).thenReturn(zoneId);",
        "line": 950,
        "locate": "Test Case",
        "locationContext": {
          "methodName": "testCreateAutoScaleVmGroup",
          "methodAnnotations": [
            "@Test"
          ]
        }
      },
      {
        "type": "STUBBING",
        "code": "when(ipAddressMock.getAddress()).thenReturn(new Ip(ipAddress));",
        "line": 1920,
        "locate": "Test Case",
        "locationContext": {
          "methodName": "getPublicIpAndPort",
          "methodAnnotations": [
            "@Test"
          ]
        }
      }
    ],
    "pattern_id": 4
  },
  {
    "variableName": "publicIp",
    "variableType": "IPAddressVO",
    "mockedClass": "IPAddressVO",
    "isReuseableMock": "Hybrid",
    "mockPattern": "Creation:\n\u2014 Attribute Mock Creation\n\nStubbing:\n\u2014 Test Case\n\nVerification:\n\u2014 None",
    "classContext": {
      "packageName": "com.cloud.network.element",
      "filePath": "C:\\java tool\\Apache\\cloudstack\\server\\src\\test\\java\\com\\cloud\\network\\element\\ConfigDriveNetworkElementTest.java",
      "className": "ConfigDriveNetworkElementTest"
    },
    "statements": [
      {
        "type": "FIELD_MOCK_CREATION",
        "code": "@Mock\r\nprivate IPAddressVO publicIp;",
        "line": 155,
        "locate": "Attribute",
        "locationContext": {
          "methodName": "[FieldDeclaration]",
          "methodAnnotations": [
            "@Mock"
          ]
        }
      },
      {
        "type": "STUBBING",
        "code": "when(publicIp.getAddress()).thenReturn(new Ip(\"7.7.7.7\"));",
        "line": 291,
        "locate": "Test Case",
        "locationContext": {
          "methodName": "testAddPasswordAndUserData",
          "methodAnnotations": [
            "@Test",
            "@SuppressWarnings",
            "@PrepareForTest"
          ]
        }
      }
    ],
    "pattern_id": 4
  },
  {
    "variableName": "ipAddressVoMock",
    "variableType": "IPAddressVO",
    "mockedClass": "IPAddressVO",
    "isReuseableMock": "Hybrid",
    "mockPattern": "Creation:\n\u2014 Attribute Mock Creation\n\nStubbing:\n\u2014 Test Case\n\nVerification:\n\u2014 None",
    "classContext": {
      "packageName": "com.cloud.network",
      "filePath": "C:\\java tool\\Apache\\cloudstack\\server\\src\\test\\java\\com\\cloud\\network\\IpAddressManagerTest.java",
      "className": "IpAddressManagerTest"
    },
    "statements": [
      {
        "type": "FIELD_MOCK_CREATION",
        "code": "@Mock\r\nIPAddressVO ipAddressVoMock;",
        "line": 68,
        "locate": "Attribute",
        "locationContext": {
          "methodName": "[FieldDeclaration]",
          "methodAnnotations": [
            "@Mock"
          ]
        }
      },
      {
        "type": "STUBBING",
        "code": "Mockito.when(ipAddressVoMock.getAssociatedWithNetworkId()).thenReturn(1L);",
        "line": 237,
        "locate": "Test Case",
        "locationContext": {
          "methodName": "prepareForCheckIfIpResourceCountShouldBeUpdatedTests",
          "methodAnnotations": []
        }
      },
      {
        "type": "STUBBING",
        "code": "Mockito.when(ipAddressVoMock.getVpcId()).thenReturn(1L);",
        "line": 238,
        "locate": "Test Case",
        "locationContext": {
          "methodName": "prepareForCheckIfIpResourceCountShouldBeUpdatedTests",
          "methodAnnotations": []
        }
      },
      {
        "type": "STUBBING",
        "code": "Mockito.when(ipAddressVoMock.getState()).thenReturn(IpAddress.State.Allocating);",
        "line": 240,
        "locate": "Test Case",
        "locationContext": {
          "methodName": "prepareForCheckIfIpResourceCountShouldBeUpdatedTests",
          "methodAnnotations": []
        }
      },
      {
        "type": "STUBBING",
        "code": "Mockito.when(ipAddressVoMock.getAssociatedWithNetworkId()).thenReturn(null);",
        "line": 246,
        "locate": "Test Case",
        "locationContext": {
          "methodName": "checkIfIpResourceCountShouldBeUpdatedTestIpIsDirectReturnFalse",
          "methodAnnotations": [
            "@Test"
          ]
        }
      },
      {
        "type": "STUBBING",
        "code": "Mockito.when(ipAddressVoMock.getVpcId()).thenReturn(null);",
        "line": 247,
        "locate": "Test Case",
        "locationContext": {
          "methodName": "checkIfIpResourceCountShouldBeUpdatedTestIpIsDirectReturnFalse",
          "methodAnnotations": [
            "@Test"
          ]
        }
      },
      {
        "type": "STUBBING",
        "code": "Mockito.when(ipAddressVoMock.getState()).thenReturn(IpAddress.State.Reserved);",
        "line": 267,
        "locate": "Test Case",
        "locationContext": {
          "methodName": "checkIfIpResourceCountShouldBeUpdatedTestIpIsReservedReturnFalse",
          "methodAnnotations": [
            "@Test"
          ]
        }
      },
      {
        "type": "STUBBING",
        "code": "Mockito.when(ipAddressVoMock.getAssociatedWithNetworkId()).thenReturn(null);",
        "line": 286,
        "locate": "Test Case",
        "locationContext": {
          "methodName": "checkIfIpResourceCountShouldBeUpdatedTestIpIsAssociatedToVpcAndNotDedicatedAndNotReservedReturnTrue",
          "methodAnnotations": [
            "@Test"
          ]
        }
      }
    ],
    "pattern_id": 4
  }
]