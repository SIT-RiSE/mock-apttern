[
  {
    "variableName": "accountManager",
    "variableType": "AccountManager",
    "mockedClass": "AccountManager",
    "isReuseableMock": false,
    "mockPattern": "Creation:\n\u2014 Attribute Mock Creation\n\nStubbing:\n\u2014 Test Case\n\nVerification:\n\u2014 None",
    "classContext": {
      "packageName": "com.cloud.kubernetes.version",
      "filePath": "C:\\java tool\\Apache\\cloudstack\\plugins\\integrations\\kubernetes-service\\src\\test\\java\\com\\cloud\\kubernetes\\version\\KubernetesVersionServiceTest.java",
      "className": "KubernetesVersionServiceTest"
    },
    "statements": [
      {
        "type": "FIELD_MOCK_CREATION",
        "code": "@Mock\r\nprivate AccountManager accountManager;",
        "line": 84,
        "locate": "Attribute",
        "locationContext": {
          "methodName": "[FieldDeclaration]",
          "methodAnnotations": [
            "@Mock"
          ]
        }
      },
      {
        "type": "STUBBING",
        "code": "when(accountManager.getSystemAccount()).thenReturn(systemAccount);",
        "line": 208,
        "locate": "Test Case",
        "locationContext": {
          "methodName": "addKubernetesSupportedVersionIsoUrlTest",
          "methodAnnotations": [
            "@Test"
          ]
        }
      }
    ],
    "pattern_id": 4
  },
  {
    "variableName": "accountMgr",
    "variableType": "AccountManager",
    "mockedClass": "AccountManager",
    "isReuseableMock": false,
    "mockPattern": "Creation:\n\u2014 Attribute Mock Creation\n\nStubbing:\n\u2014 Test Case\n\nVerification:\n\u2014 None",
    "classContext": {
      "packageName": "org.apache.cloudstack.network.tungsten.service",
      "filePath": "C:\\java tool\\Apache\\cloudstack\\plugins\\network-elements\\tungsten\\src\\test\\java\\org\\apache\\cloudstack\\network\\tungsten\\service\\TungstenElementTest.java",
      "className": "TungstenElementTest"
    },
    "statements": [
      {
        "type": "FIELD_MOCK_CREATION",
        "code": "@Mock\r\nAccountManager accountMgr;",
        "line": 150,
        "locate": "Attribute",
        "locationContext": {
          "methodName": "[FieldDeclaration]",
          "methodAnnotations": [
            "@Mock"
          ]
        }
      },
      {
        "type": "STUBBING",
        "code": "when(accountMgr.getActiveUser(anyLong())).thenReturn(caller);",
        "line": 355,
        "locate": "Test Case",
        "locationContext": {
          "methodName": "applyLBRulesAddRuleSuccessTest",
          "methodAnnotations": [
            "@Test"
          ]
        }
      }
    ],
    "pattern_id": 4
  },
  {
    "variableName": "accountManager",
    "variableType": "AccountManager",
    "mockedClass": "AccountManager",
    "isReuseableMock": false,
    "mockPattern": "Creation:\n\u2014 Attribute Mock Creation\n\nStubbing:\n\u2014 Test Case\n\nVerification:\n\u2014 None",
    "classContext": {
      "packageName": "org.apache.cloudstack.ldap",
      "filePath": "C:\\java tool\\Apache\\cloudstack\\plugins\\user-authenticators\\ldap\\src\\test\\java\\org\\apache\\cloudstack\\ldap\\LdapAuthenticatorTest.java",
      "className": "LdapAuthenticatorTest"
    },
    "statements": [
      {
        "type": "FIELD_MOCK_CREATION",
        "code": "@Mock\r\nAccountManager accountManager;",
        "line": 57,
        "locate": "Attribute",
        "locationContext": {
          "methodName": "[FieldDeclaration]",
          "methodAnnotations": [
            "@Mock"
          ]
        }
      },
      {
        "type": "STUBBING",
        "code": "when(accountManager.getAccount(anyLong())).thenReturn(account);",
        "line": 116,
        "locate": "Test Case",
        "locationContext": {
          "methodName": "authenticateFailingOnSyncedAccount",
          "methodAnnotations": [
            "@Test"
          ]
        }
      }
    ],
    "pattern_id": 4
  },
  {
    "variableName": "_accountMgr",
    "variableType": "AccountManager",
    "mockedClass": "AccountManager",
    "isReuseableMock": false,
    "mockPattern": "Creation:\n\u2014 Attribute Mock Creation\n\nStubbing:\n\u2014 Test Case\n\nVerification:\n\u2014 None",
    "classContext": {
      "packageName": "com.cloud.deploy",
      "filePath": "C:\\java tool\\Apache\\cloudstack\\server\\src\\test\\java\\com\\cloud\\deploy\\DeploymentPlanningManagerImplTest.java",
      "className": "DeploymentPlanningManagerImplTest"
    },
    "statements": [
      {
        "type": "FIELD_MOCK_CREATION",
        "code": "@Mock\r\nAccountManager _accountMgr;",
        "line": 211,
        "locate": "Attribute",
        "locationContext": {
          "methodName": "[FieldDeclaration]",
          "methodAnnotations": [
            "@Mock"
          ]
        }
      },
      {
        "type": "STUBBING",
        "code": "Mockito.when(_accountMgr.isRootAdmin(account.getId())).thenReturn(Boolean.FALSE);",
        "line": 766,
        "locate": "Test Case",
        "locationContext": {
          "methodName": "findSuitablePoolsForVolumesTest",
          "methodAnnotations": [
            "@Test"
          ]
        }
      }
    ],
    "pattern_id": 4
  },
  {
    "variableName": "_accountMgr",
    "variableType": "AccountManager",
    "mockedClass": "AccountManager",
    "isReuseableMock": false,
    "mockPattern": "Creation:\n\u2014 Attribute Mock Creation\n\nStubbing:\n\u2014 Test Case\n\nVerification:\n\u2014 None",
    "classContext": {
      "packageName": "com.cloud.deploy",
      "filePath": "C:\\java tool\\Apache\\cloudstack\\server\\src\\test\\java\\com\\cloud\\deploy\\DeploymentPlanningManagerImplTest.java",
      "className": "DeploymentPlanningManagerImplTest"
    },
    "statements": [
      {
        "type": "FIELD_MOCK_CREATION",
        "code": "@Mock\r\nAccountManager _accountMgr;",
        "line": 211,
        "locate": "Attribute",
        "locationContext": {
          "methodName": "[FieldDeclaration]",
          "methodAnnotations": [
            "@Mock"
          ]
        }
      },
      {
        "type": "STUBBING",
        "code": "Mockito.when(_accountMgr.isRootAdmin(account.getId())).thenReturn(Boolean.FALSE);",
        "line": 766,
        "locate": "Test Case",
        "locationContext": {
          "methodName": "findSuitablePoolsForVolumesTest",
          "methodAnnotations": [
            "@Test"
          ]
        }
      }
    ],
    "pattern_id": 4
  },
  {
    "variableName": "_accountMgr",
    "variableType": "AccountManager",
    "mockedClass": "AccountManager",
    "isReuseableMock": false,
    "mockPattern": "Creation:\n\u2014 Attribute Mock Creation\n\nStubbing:\n\u2014 Test Case\n\nVerification:\n\u2014 None",
    "classContext": {
      "packageName": "com.cloud.deploy",
      "filePath": "C:\\java tool\\Apache\\cloudstack\\server\\src\\test\\java\\com\\cloud\\deploy\\DeploymentPlanningManagerImplTest.java",
      "className": "DeploymentPlanningManagerImplTest"
    },
    "statements": [
      {
        "type": "FIELD_MOCK_CREATION",
        "code": "@Mock\r\nAccountManager _accountMgr;",
        "line": 211,
        "locate": "Attribute",
        "locationContext": {
          "methodName": "[FieldDeclaration]",
          "methodAnnotations": [
            "@Mock"
          ]
        }
      },
      {
        "type": "STUBBING",
        "code": "Mockito.when(_accountMgr.isRootAdmin(account.getId())).thenReturn(Boolean.FALSE);",
        "line": 766,
        "locate": "Test Case",
        "locationContext": {
          "methodName": "findSuitablePoolsForVolumesTest",
          "methodAnnotations": [
            "@Test"
          ]
        }
      }
    ],
    "pattern_id": 4
  },
  {
    "variableName": "_accountMgr",
    "variableType": "AccountManager",
    "mockedClass": "AccountManager",
    "isReuseableMock": false,
    "mockPattern": "Creation:\n\u2014 Attribute Mock Creation\n\nStubbing:\n\u2014 Test Case\n\nVerification:\n\u2014 None",
    "classContext": {
      "packageName": "com.cloud.server",
      "filePath": "C:\\java tool\\Apache\\cloudstack\\server\\src\\test\\java\\com\\cloud\\server\\ManagementServerImplTest.java",
      "className": "ManagementServerImplTest"
    },
    "statements": [
      {
        "type": "FIELD_MOCK_CREATION",
        "code": "@Mock\r\nAccountManager _accountMgr;",
        "line": 109,
        "locate": "Attribute",
        "locationContext": {
          "methodName": "[FieldDeclaration]",
          "methodAnnotations": [
            "@Mock"
          ]
        }
      },
      {
        "type": "STUBBING",
        "code": "when(_accountMgr.finalizeOwner(nullable(Account.class), nullable(String.class), nullable(Long.class), nullable(Long.class))).thenReturn(account);",
        "line": 305,
        "locate": "Test Case",
        "locationContext": {
          "methodName": "testSuccessfulRegisterUserdata",
          "methodAnnotations": [
            "@Test"
          ]
        }
      },
      {
        "type": "STUBBING",
        "code": "when(_accountMgr.finalizeOwner(nullable(Account.class), nullable(String.class), nullable(Long.class), nullable(Long.class))).thenReturn(account);",
        "line": 330,
        "locate": "Test Case",
        "locationContext": {
          "methodName": "testRegisterExistingUserdata",
          "methodAnnotations": [
            "@Test"
          ]
        }
      },
      {
        "type": "STUBBING",
        "code": "when(_accountMgr.finalizeOwner(nullable(Account.class), nullable(String.class), nullable(Long.class), nullable(Long.class))).thenReturn(account);",
        "line": 351,
        "locate": "Test Case",
        "locationContext": {
          "methodName": "testRegisterExistingName",
          "methodAnnotations": [
            "@Test"
          ]
        }
      },
      {
        "type": "STUBBING",
        "code": "when(_accountMgr.finalizeOwner(nullable(Account.class), nullable(String.class), nullable(Long.class), nullable(Long.class))).thenReturn(account);",
        "line": 371,
        "locate": "Test Case",
        "locationContext": {
          "methodName": "testSuccessfulDeleteUserdata",
          "methodAnnotations": [
            "@Test"
          ]
        }
      },
      {
        "type": "STUBBING",
        "code": "when(_accountMgr.finalizeOwner(nullable(Account.class), nullable(String.class), nullable(Long.class), nullable(Long.class))).thenReturn(account);",
        "line": 399,
        "locate": "Test Case",
        "locationContext": {
          "methodName": "testDeleteUserdataLinkedToTemplate",
          "methodAnnotations": [
            "@Test"
          ]
        }
      },
      {
        "type": "STUBBING",
        "code": "when(_accountMgr.finalizeOwner(nullable(Account.class), nullable(String.class), nullable(Long.class), nullable(Long.class))).thenReturn(account);",
        "line": 428,
        "locate": "Test Case",
        "locationContext": {
          "methodName": "testDeleteUserdataUsedByVM",
          "methodAnnotations": [
            "@Test"
          ]
        }
      },
      {
        "type": "STUBBING",
        "code": "when(_accountMgr.finalizeOwner(nullable(Account.class), nullable(String.class), nullable(Long.class), nullable(Long.class))).thenReturn(account);",
        "line": 459,
        "locate": "Test Case",
        "locationContext": {
          "methodName": "testListUserDataById",
          "methodAnnotations": [
            "@Test"
          ]
        }
      },
      {
        "type": "STUBBING",
        "code": "when(_accountMgr.finalizeOwner(nullable(Account.class), nullable(String.class), nullable(Long.class), nullable(Long.class))).thenReturn(account);",
        "line": 494,
        "locate": "Test Case",
        "locationContext": {
          "methodName": "testListUserDataByName",
          "methodAnnotations": [
            "@Test"
          ]
        }
      },
      {
        "type": "STUBBING",
        "code": "when(_accountMgr.finalizeOwner(nullable(Account.class), nullable(String.class), nullable(Long.class), nullable(Long.class))).thenReturn(account);",
        "line": 529,
        "locate": "Test Case",
        "locationContext": {
          "methodName": "testListUserDataByKeyword",
          "methodAnnotations": [
            "@Test"
          ]
        }
      }
    ],
    "pattern_id": 4
  },
  {
    "variableName": "accountManager",
    "variableType": "AccountManager",
    "mockedClass": "AccountManager",
    "isReuseableMock": false,
    "mockPattern": "Creation:\n\u2014 Attribute Mock Creation\n\nStubbing:\n\u2014 Test Case\n\nVerification:\n\u2014 None",
    "classContext": {
      "packageName": "com.cloud.tags",
      "filePath": "C:\\java tool\\Apache\\cloudstack\\server\\src\\test\\java\\com\\cloud\\tags\\TaggedResourceManagerImplTest.java",
      "className": "TaggedResourceManagerImplTest"
    },
    "statements": [
      {
        "type": "FIELD_MOCK_CREATION",
        "code": "@Mock\r\nAccountManager accountManager;",
        "line": 48,
        "locate": "Attribute",
        "locationContext": {
          "methodName": "[FieldDeclaration]",
          "methodAnnotations": [
            "@Mock"
          ]
        }
      },
      {
        "type": "STUBBING",
        "code": "Mockito.when(accountManager.getAccount(ownerAccountId)).thenReturn(owner);",
        "line": 123,
        "locate": "Test Case",
        "locationContext": {
          "methodName": "testCheckTagsDeletePermissionFail",
          "methodAnnotations": [
            "@Test"
          ]
        }
      }
    ],
    "pattern_id": 4
  },
  {
    "variableName": "_accountMgr",
    "variableType": "AccountManager",
    "mockedClass": "AccountManager",
    "isReuseableMock": false,
    "mockPattern": "Creation:\n\u2014 Attribute Mock Creation\n\nStubbing:\n\u2014 Test Case\n\nVerification:\n\u2014 None",
    "classContext": {
      "packageName": "com.cloud.vm",
      "filePath": "C:\\java tool\\Apache\\cloudstack\\server\\src\\test\\java\\com\\cloud\\vm\\UserVmManagerTest.java",
      "className": "UserVmManagerTest"
    },
    "statements": [
      {
        "type": "FIELD_MOCK_CREATION",
        "code": "@Mock\r\nprivate AccountManager _accountMgr;",
        "line": 135,
        "locate": "Attribute",
        "locationContext": {
          "methodName": "[FieldDeclaration]",
          "methodAnnotations": [
            "@Mock"
          ]
        }
      },
      {
        "type": "STUBBING",
        "code": "when(_accountMgr.finalizeOwner(nullable(Account.class), nullable(String.class), nullable(Long.class), nullable(Long.class))).thenReturn(newAccount);",
        "line": 525,
        "locate": "Test Case",
        "locationContext": {
          "methodName": "testMoveVmToUser2",
          "methodAnnotations": [
            "@Test"
          ]
        }
      },
      {
        "type": "STUBBING",
        "code": "when(_accountMgr.isRootAdmin(anyLong())).thenReturn(true);",
        "line": 531,
        "locate": "Test Case",
        "locationContext": {
          "methodName": "testMoveVmToUser2",
          "methodAnnotations": [
            "@Test"
          ]
        }
      }
    ],
    "pattern_id": 4
  },
  {
    "variableName": "accountManager",
    "variableType": "AccountManager",
    "mockedClass": "AccountManager",
    "isReuseableMock": false,
    "mockPattern": "Creation:\n\u2014 Attribute Mock Creation\n\nStubbing:\n\u2014 Test Case\n\nVerification:\n\u2014 None",
    "classContext": {
      "packageName": "org.apache.cloudstack.consoleproxy",
      "filePath": "C:\\java tool\\Apache\\cloudstack\\server\\src\\test\\java\\org\\apache\\cloudstack\\consoleproxy\\ConsoleAccessManagerImplTest.java",
      "className": "ConsoleAccessManagerImplTest"
    },
    "statements": [
      {
        "type": "FIELD_MOCK_CREATION",
        "code": "@Mock\r\nprivate AccountManager accountManager;",
        "line": 45,
        "locate": "Attribute",
        "locationContext": {
          "methodName": "[FieldDeclaration]",
          "methodAnnotations": [
            "@Mock"
          ]
        }
      },
      {
        "type": "STUBBING",
        "code": "Mockito.when(accountManager.isRootAdmin(1L)).thenReturn(true);",
        "line": 72,
        "locate": "Test Case",
        "locationContext": {
          "methodName": "testCheckSessionPermissionAdminAccount",
          "methodAnnotations": [
            "@Test"
          ]
        }
      },
      {
        "type": "STUBBING",
        "code": "Mockito.when(accountManager.isRootAdmin(1L)).thenReturn(false);",
        "line": 79,
        "locate": "Test Case",
        "locationContext": {
          "methodName": "testCheckSessionPermissionUserOwnedVm",
          "methodAnnotations": [
            "@Test"
          ]
        }
      },
      {
        "type": "STUBBING",
        "code": "Mockito.when(accountManager.isRootAdmin(1L)).thenReturn(false);",
        "line": 90,
        "locate": "Test Case",
        "locationContext": {
          "methodName": "testCheckSessionPermissionDifferentUserOwnedVm",
          "methodAnnotations": [
            "@Test"
          ]
        }
      },
      {
        "type": "STUBBING",
        "code": "Mockito.when(accountManager.isRootAdmin(1L)).thenReturn(false);",
        "line": 101,
        "locate": "Test Case",
        "locationContext": {
          "methodName": "testCheckSessionPermissionForUsersOnSystemVms",
          "methodAnnotations": [
            "@Test"
          ]
        }
      }
    ],
    "pattern_id": 4
  }
]