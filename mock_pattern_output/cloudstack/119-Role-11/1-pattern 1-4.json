[
  {
    "variableName": "role",
    "variableType": "Role",
    "mockedClass": "Role",
    "isReuseableMock": "Fully Localized",
    "mockPattern": "Creation:\n\u2014 Local Mock Creation in Test Case\n\nStubbing:\n\u2014 Test Case\n\nVerification:\n\u2014 None",
    "classContext": {
      "packageName": "org.apache.cloudstack.acl",
      "filePath": "C:\\java tool\\Apache\\cloudstack\\api\\src\\test\\java\\org\\apache\\cloudstack\\acl\\RoleTypeTest.java",
      "className": "RoleTypeTest"
    },
    "statements": [
      {
        "type": "DECLARATION",
        "code": "Role role = Mockito.mock(Role.class);",
        "line": 95,
        "locate": "Test Case",
        "locationContext": {
          "methodName": "testGetAccountTypeByRole",
          "methodAnnotations": [
            "@Test"
          ]
        }
      },
      {
        "type": "STUBBING",
        "code": "Mockito.when(role.getRoleType()).thenReturn(RoleType.Admin);",
        "line": 96,
        "locate": "Test Case",
        "locationContext": {
          "methodName": "testGetAccountTypeByRole",
          "methodAnnotations": [
            "@Test"
          ]
        }
      },
      {
        "type": "STUBBING",
        "code": "Mockito.when(role.getId()).thenReturn(100L);",
        "line": 97,
        "locate": "Test Case",
        "locationContext": {
          "methodName": "testGetAccountTypeByRole",
          "methodAnnotations": [
            "@Test"
          ]
        }
      }
    ],
    "pattern_id": 1
  },
  {
    "variableName": "newRole",
    "variableType": "Role",
    "mockedClass": "Role",
    "isReuseableMock": "Fully Localized",
    "mockPattern": "Creation:\n\u2014 Local Mock Creation in Test Case\n\nStubbing:\n\u2014 Test Case\n\nVerification:\n\u2014 None",
    "classContext": {
      "packageName": "org.apache.cloudstack.api.command.test",
      "filePath": "C:\\java tool\\Apache\\cloudstack\\api\\src\\test\\java\\org\\apache\\cloudstack\\api\\command\\test\\CreateRoleCmdTest.java",
      "className": "CreateRoleCmdTest"
    },
    "statements": [
      {
        "type": "DECLARATION",
        "code": "Role newRole = Mockito.mock(Role.class);",
        "line": 68,
        "locate": "Test Case",
        "locationContext": {
          "methodName": "testCreateRoleWithExistingRole",
          "methodAnnotations": [
            "@Test"
          ]
        }
      },
      {
        "type": "STUBBING",
        "code": "when(newRole.getId()).thenReturn(2L);",
        "line": 69,
        "locate": "Test Case",
        "locationContext": {
          "methodName": "testCreateRoleWithExistingRole",
          "methodAnnotations": [
            "@Test"
          ]
        }
      },
      {
        "type": "STUBBING",
        "code": "when(newRole.getUuid()).thenReturn(\"67890-xyztestid\");",
        "line": 70,
        "locate": "Test Case",
        "locationContext": {
          "methodName": "testCreateRoleWithExistingRole",
          "methodAnnotations": [
            "@Test"
          ]
        }
      },
      {
        "type": "STUBBING",
        "code": "when(newRole.getDescription()).thenReturn(\"User test\");",
        "line": 71,
        "locate": "Test Case",
        "locationContext": {
          "methodName": "testCreateRoleWithExistingRole",
          "methodAnnotations": [
            "@Test"
          ]
        }
      },
      {
        "type": "STUBBING",
        "code": "when(newRole.getName()).thenReturn(\"testuser\");",
        "line": 72,
        "locate": "Test Case",
        "locationContext": {
          "methodName": "testCreateRoleWithExistingRole",
          "methodAnnotations": [
            "@Test"
          ]
        }
      },
      {
        "type": "STUBBING",
        "code": "when(newRole.getRoleType()).thenReturn(RoleType.User);",
        "line": 73,
        "locate": "Test Case",
        "locationContext": {
          "methodName": "testCreateRoleWithExistingRole",
          "methodAnnotations": [
            "@Test"
          ]
        }
      }
    ],
    "pattern_id": 1
  },
  {
    "variableName": "role",
    "variableType": "Role",
    "mockedClass": "Role",
    "isReuseableMock": "Fully Localized",
    "mockPattern": "Creation:\n\u2014 Local Mock Creation in Test Case\n\nStubbing:\n\u2014 Test Case\n\nVerification:\n\u2014 None",
    "classContext": {
      "packageName": "org.apache.cloudstack.annotation",
      "filePath": "C:\\java tool\\Apache\\cloudstack\\server\\src\\test\\java\\org\\apache\\cloudstack\\annotation\\AnnotationManagerImplTest.java",
      "className": "AnnotationManagerImplTest"
    },
    "statements": [
      {
        "type": "DECLARATION",
        "code": "Role role = Mockito.mock(Role.class);",
        "line": 156,
        "locate": "Test Case",
        "locationContext": {
          "methodName": "testAddAnnotationResourceDetailsUpdate",
          "methodAnnotations": [
            "@Test"
          ]
        }
      },
      {
        "type": "STUBBING",
        "code": "Mockito.when(role.getRoleType()).thenReturn(RoleType.User);",
        "line": 157,
        "locate": "Test Case",
        "locationContext": {
          "methodName": "testAddAnnotationResourceDetailsUpdate",
          "methodAnnotations": [
            "@Test"
          ]
        }
      }
    ],
    "pattern_id": 1
  },
  {
    "variableName": "role",
    "variableType": "Role",
    "mockedClass": "Role",
    "isReuseableMock": "Fully Localized",
    "mockPattern": "Creation:\n\u2014 Local Mock Creation in Test Case\n\nStubbing:\n\u2014 Test Case\n\nVerification:\n\u2014 None",
    "classContext": {
      "packageName": "org.apache.cloudstack.annotation",
      "filePath": "C:\\java tool\\Apache\\cloudstack\\server\\src\\test\\java\\org\\apache\\cloudstack\\annotation\\AnnotationManagerImplTest.java",
      "className": "AnnotationManagerImplTest"
    },
    "statements": [
      {
        "type": "DECLARATION",
        "code": "Role role = Mockito.mock(Role.class);",
        "line": 176,
        "locate": "Test Case",
        "locationContext": {
          "methodName": "testRemoveAnnotationResourceDetailsUpdate",
          "methodAnnotations": [
            "@Test"
          ]
        }
      },
      {
        "type": "STUBBING",
        "code": "Mockito.when(role.getRoleType()).thenReturn(RoleType.User);",
        "line": 177,
        "locate": "Test Case",
        "locationContext": {
          "methodName": "testRemoveAnnotationResourceDetailsUpdate",
          "methodAnnotations": [
            "@Test"
          ]
        }
      }
    ],
    "pattern_id": 1
  }
]