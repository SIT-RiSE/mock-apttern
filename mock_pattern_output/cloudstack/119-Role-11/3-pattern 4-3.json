[
  {
    "variableName": "role",
    "variableType": "Role",
    "mockedClass": "Role",
    "isReuseableMock": false,
    "mockPattern": "Creation:\n\u2014 Attribute Mock Creation\n\nStubbing:\n\u2014 Test Case\n\nVerification:\n\u2014 None",
    "classContext": {
      "packageName": "org.apache.cloudstack.api.command.test",
      "filePath": "C:\\java tool\\Apache\\cloudstack\\api\\src\\test\\java\\org\\apache\\cloudstack\\api\\command\\test\\CreateRoleCmdTest.java",
      "className": "CreateRoleCmdTest"
    },
    "statements": [
      {
        "type": "FIELD_DECLARATION",
        "code": "private Role role;",
        "line": 37,
        "locate": "Attribute",
        "locationContext": {
          "methodName": "[FieldDeclaration]",
          "methodAnnotations": []
        }
      },
      {
        "type": "ASSIGNMENT",
        "code": "role = Mockito.mock(Role.class);",
        "line": 46,
        "locate": "@Before",
        "locationContext": {
          "methodName": "setUp",
          "methodAnnotations": [
            "@Before"
          ]
        }
      },
      {
        "type": "STUBBING",
        "code": "when(role.getId()).thenReturn(1L);",
        "line": 52,
        "locate": "Test Case",
        "locationContext": {
          "methodName": "testCreateRoleWithRoleType",
          "methodAnnotations": [
            "@Test"
          ]
        }
      },
      {
        "type": "STUBBING",
        "code": "when(role.getUuid()).thenReturn(\"12345-abcgdkajd\");",
        "line": 53,
        "locate": "Test Case",
        "locationContext": {
          "methodName": "testCreateRoleWithRoleType",
          "methodAnnotations": [
            "@Test"
          ]
        }
      },
      {
        "type": "STUBBING",
        "code": "when(role.getDescription()).thenReturn(\"User test\");",
        "line": 54,
        "locate": "Test Case",
        "locationContext": {
          "methodName": "testCreateRoleWithRoleType",
          "methodAnnotations": [
            "@Test"
          ]
        }
      },
      {
        "type": "STUBBING",
        "code": "when(role.getName()).thenReturn(\"testuser\");",
        "line": 55,
        "locate": "Test Case",
        "locationContext": {
          "methodName": "testCreateRoleWithRoleType",
          "methodAnnotations": [
            "@Test"
          ]
        }
      },
      {
        "type": "STUBBING",
        "code": "when(role.getRoleType()).thenReturn(RoleType.User);",
        "line": 56,
        "locate": "Test Case",
        "locationContext": {
          "methodName": "testCreateRoleWithRoleType",
          "methodAnnotations": [
            "@Test"
          ]
        }
      }
    ],
    "pattern_id": 4
  },
  {
    "variableName": "role",
    "variableType": "Role",
    "mockedClass": "Role",
    "isReuseableMock": false,
    "mockPattern": "Creation:\n\u2014 Attribute Mock Creation\n\nStubbing:\n\u2014 Test Case\n\nVerification:\n\u2014 None",
    "classContext": {
      "packageName": "org.apache.cloudstack.api.command.test",
      "filePath": "C:\\java tool\\Apache\\cloudstack\\api\\src\\test\\java\\org\\apache\\cloudstack\\api\\command\\test\\ImportRoleCmdTest.java",
      "className": "ImportRoleCmdTest"
    },
    "statements": [
      {
        "type": "FIELD_DECLARATION",
        "code": "private Role role;",
        "line": 52,
        "locate": "Attribute",
        "locationContext": {
          "methodName": "[FieldDeclaration]",
          "methodAnnotations": []
        }
      },
      {
        "type": "ASSIGNMENT",
        "code": "role = Mockito.mock(Role.class);",
        "line": 62,
        "locate": "@Before",
        "locationContext": {
          "methodName": "setUp",
          "methodAnnotations": [
            "@Before"
          ]
        }
      },
      {
        "type": "STUBBING",
        "code": "when(role.getUuid()).thenReturn(\"12345-abcgdkajd\");",
        "line": 92,
        "locate": "Test Case",
        "locationContext": {
          "methodName": "testImportRoleSuccess",
          "methodAnnotations": [
            "@Test"
          ]
        }
      },
      {
        "type": "STUBBING",
        "code": "when(role.getDescription()).thenReturn(\"test user imported\");",
        "line": 93,
        "locate": "Test Case",
        "locationContext": {
          "methodName": "testImportRoleSuccess",
          "methodAnnotations": [
            "@Test"
          ]
        }
      },
      {
        "type": "STUBBING",
        "code": "when(role.getName()).thenReturn(\"Test User\");",
        "line": 94,
        "locate": "Test Case",
        "locationContext": {
          "methodName": "testImportRoleSuccess",
          "methodAnnotations": [
            "@Test"
          ]
        }
      },
      {
        "type": "STUBBING",
        "code": "when(role.getRoleType()).thenReturn(RoleType.User);",
        "line": 95,
        "locate": "Test Case",
        "locationContext": {
          "methodName": "testImportRoleSuccess",
          "methodAnnotations": [
            "@Test"
          ]
        }
      }
    ],
    "pattern_id": 4
  },
  {
    "variableName": "role",
    "variableType": "Role",
    "mockedClass": "Role",
    "isReuseableMock": false,
    "mockPattern": "Creation:\n\u2014 Attribute Mock Creation\n\nStubbing:\n\u2014 Test Case\n\nVerification:\n\u2014 None",
    "classContext": {
      "packageName": "org.apache.cloudstack.api.command.test",
      "filePath": "C:\\java tool\\Apache\\cloudstack\\api\\src\\test\\java\\org\\apache\\cloudstack\\api\\command\\test\\UpdateRoleCmdTest.java",
      "className": "UpdateRoleCmdTest"
    },
    "statements": [
      {
        "type": "FIELD_DECLARATION",
        "code": "private Role role;",
        "line": 38,
        "locate": "Attribute",
        "locationContext": {
          "methodName": "[FieldDeclaration]",
          "methodAnnotations": []
        }
      },
      {
        "type": "ASSIGNMENT",
        "code": "role = Mockito.mock(Role.class);",
        "line": 50,
        "locate": "@Before",
        "locationContext": {
          "methodName": "setUp",
          "methodAnnotations": [
            "@Override",
            "@Before"
          ]
        }
      },
      {
        "type": "STUBBING",
        "code": "when(role.getId()).thenReturn(1L);",
        "line": 56,
        "locate": "Test Case",
        "locationContext": {
          "methodName": "testUpdateSuccess",
          "methodAnnotations": [
            "@Test"
          ]
        }
      },
      {
        "type": "STUBBING",
        "code": "when(role.getUuid()).thenReturn(\"12345-abcgdkajd\");",
        "line": 57,
        "locate": "Test Case",
        "locationContext": {
          "methodName": "testUpdateSuccess",
          "methodAnnotations": [
            "@Test"
          ]
        }
      },
      {
        "type": "STUBBING",
        "code": "when(role.getDescription()).thenReturn(\"Default user\");",
        "line": 58,
        "locate": "Test Case",
        "locationContext": {
          "methodName": "testUpdateSuccess",
          "methodAnnotations": [
            "@Test"
          ]
        }
      },
      {
        "type": "STUBBING",
        "code": "when(role.getName()).thenReturn(\"User\");",
        "line": 59,
        "locate": "Test Case",
        "locationContext": {
          "methodName": "testUpdateSuccess",
          "methodAnnotations": [
            "@Test"
          ]
        }
      },
      {
        "type": "STUBBING",
        "code": "when(role.getRoleType()).thenReturn(RoleType.User);",
        "line": 60,
        "locate": "Test Case",
        "locationContext": {
          "methodName": "testUpdateSuccess",
          "methodAnnotations": [
            "@Test"
          ]
        }
      },
      {
        "type": "STUBBING",
        "code": "when(role.getId()).thenReturn(1L);",
        "line": 62,
        "locate": "Test Case",
        "locationContext": {
          "methodName": "testUpdateSuccess",
          "methodAnnotations": [
            "@Test"
          ]
        }
      },
      {
        "type": "STUBBING",
        "code": "when(role.getDescription()).thenReturn(\"Description Initial\");",
        "line": 63,
        "locate": "Test Case",
        "locationContext": {
          "methodName": "testUpdateSuccess",
          "methodAnnotations": [
            "@Test"
          ]
        }
      },
      {
        "type": "STUBBING",
        "code": "when(role.getName()).thenReturn(\"User\");",
        "line": 64,
        "locate": "Test Case",
        "locationContext": {
          "methodName": "testUpdateSuccess",
          "methodAnnotations": [
            "@Test"
          ]
        }
      }
    ],
    "pattern_id": 4
  }
]