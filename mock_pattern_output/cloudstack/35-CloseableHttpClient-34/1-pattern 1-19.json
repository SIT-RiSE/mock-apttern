[
  {
    "variableName": "httpClient",
    "variableType": "CloseableHttpClient",
    "mockedClass": "CloseableHttpClient",
    "isReuseableMock": false,
    "mockPattern": "Creation:\n\u2014 Local Mock Creation in Test Case\n\nStubbing:\n\u2014 Test Case\n\nVerification:\n\u2014 None",
    "classContext": {
      "packageName": "org.apache.cloudstack.network.tungsten.vrouter",
      "filePath": "C:\\java tool\\Apache\\cloudstack\\plugins\\network-elements\\tungsten\\src\\test\\java\\org\\apache\\cloudstack\\network\\tungsten\\vrouter\\IntrospectApiConnectorImplTest.java",
      "className": "IntrospectApiConnectorImplTest"
    },
    "statements": [
      {
        "type": "DECLARATION",
        "code": "CloseableHttpClient httpClient = mock(CloseableHttpClient.class);",
        "line": 62,
        "locate": "Test Case",
        "locationContext": {
          "methodName": "getSnhItfReqTest",
          "methodAnnotations": [
            "@Test"
          ]
        }
      },
      {
        "type": "STUBBING",
        "code": "when(httpClient.execute(any(HttpUriRequest.class))).thenReturn(closeableHttpResponse);",
        "line": 70,
        "locate": "Test Case",
        "locationContext": {
          "methodName": "getSnhItfReqTest",
          "methodAnnotations": [
            "@Test"
          ]
        }
      }
    ],
    "pattern_id": 1
  },
  {
    "variableName": "httpClient",
    "variableType": "CloseableHttpClient",
    "mockedClass": "CloseableHttpClient",
    "isReuseableMock": false,
    "mockPattern": "Creation:\n\u2014 Local Mock Creation in Test Case\n\nStubbing:\n\u2014 Test Case\n\nVerification:\n\u2014 None",
    "classContext": {
      "packageName": "org.apache.cloudstack.network.tungsten.vrouter",
      "filePath": "C:\\java tool\\Apache\\cloudstack\\plugins\\network-elements\\tungsten\\src\\test\\java\\org\\apache\\cloudstack\\network\\tungsten\\vrouter\\IntrospectApiConnectorImplTest.java",
      "className": "IntrospectApiConnectorImplTest"
    },
    "statements": [
      {
        "type": "DECLARATION",
        "code": "CloseableHttpClient httpClient = mock(CloseableHttpClient.class);",
        "line": 82,
        "locate": "Test Case",
        "locationContext": {
          "methodName": "getSnhItfReqWithIOExceptionTest",
          "methodAnnotations": [
            "@Test"
          ]
        }
      },
      {
        "type": "STUBBING",
        "code": "when(httpClient.execute(any(HttpUriRequest.class))).thenThrow(IOException.class);",
        "line": 85,
        "locate": "Test Case",
        "locationContext": {
          "methodName": "getSnhItfReqWithIOExceptionTest",
          "methodAnnotations": [
            "@Test"
          ]
        }
      }
    ],
    "pattern_id": 1
  },
  {
    "variableName": "httpClient",
    "variableType": "CloseableHttpClient",
    "mockedClass": "CloseableHttpClient",
    "isReuseableMock": false,
    "mockPattern": "Creation:\n\u2014 Local Mock Creation in Test Case\n\nStubbing:\n\u2014 Test Case\n\nVerification:\n\u2014 None",
    "classContext": {
      "packageName": "org.apache.cloudstack.network.tungsten.vrouter",
      "filePath": "C:\\java tool\\Apache\\cloudstack\\plugins\\network-elements\\tungsten\\src\\test\\java\\org\\apache\\cloudstack\\network\\tungsten\\vrouter\\IntrospectApiConnectorImplTest.java",
      "className": "IntrospectApiConnectorImplTest"
    },
    "statements": [
      {
        "type": "DECLARATION",
        "code": "CloseableHttpClient httpClient = mock(CloseableHttpClient.class);",
        "line": 92,
        "locate": "Test Case",
        "locationContext": {
          "methodName": "getSnhItfReqWithParserConfigurationExceptionTest",
          "methodAnnotations": [
            "@Test"
          ]
        }
      },
      {
        "type": "STUBBING",
        "code": "when(httpClient.execute(any(HttpUriRequest.class))).thenReturn(closeableHttpResponse);",
        "line": 99,
        "locate": "Test Case",
        "locationContext": {
          "methodName": "getSnhItfReqWithParserConfigurationExceptionTest",
          "methodAnnotations": [
            "@Test"
          ]
        }
      }
    ],
    "pattern_id": 1
  },
  {
    "variableName": "httpClient",
    "variableType": "CloseableHttpClient",
    "mockedClass": "CloseableHttpClient",
    "isReuseableMock": false,
    "mockPattern": "Creation:\n\u2014 Local Mock Creation in Test Case\n\nStubbing:\n\u2014 Test Case\n\nVerification:\n\u2014 None",
    "classContext": {
      "packageName": "org.apache.cloudstack.network.tungsten.vrouter",
      "filePath": "C:\\java tool\\Apache\\cloudstack\\plugins\\network-elements\\tungsten\\src\\test\\java\\org\\apache\\cloudstack\\network\\tungsten\\vrouter\\IntrospectApiConnectorImplTest.java",
      "className": "IntrospectApiConnectorImplTest"
    },
    "statements": [
      {
        "type": "DECLARATION",
        "code": "CloseableHttpClient httpClient = mock(CloseableHttpClient.class);",
        "line": 110,
        "locate": "Test Case",
        "locationContext": {
          "methodName": "getSnhItfReqWithSAXExceptionTest",
          "methodAnnotations": [
            "@Test"
          ]
        }
      },
      {
        "type": "STUBBING",
        "code": "when(httpClient.execute(any(HttpUriRequest.class))).thenReturn(closeableHttpResponse);",
        "line": 118,
        "locate": "Test Case",
        "locationContext": {
          "methodName": "getSnhItfReqWithSAXExceptionTest",
          "methodAnnotations": [
            "@Test"
          ]
        }
      }
    ],
    "pattern_id": 1
  },
  {
    "variableName": "httpClient",
    "variableType": "CloseableHttpClient",
    "mockedClass": "CloseableHttpClient",
    "isReuseableMock": false,
    "mockPattern": "Creation:\n\u2014 Local Mock Creation in Test Case\n\nStubbing:\n\u2014 Test Case\n\nVerification:\n\u2014 None",
    "classContext": {
      "packageName": "org.apache.cloudstack.network.tungsten.vrouter",
      "filePath": "C:\\java tool\\Apache\\cloudstack\\plugins\\network-elements\\tungsten\\src\\test\\java\\org\\apache\\cloudstack\\network\\tungsten\\vrouter\\VRouterApiConnectorImplTest.java",
      "className": "VRouterApiConnectorImplTest"
    },
    "statements": [
      {
        "type": "DECLARATION",
        "code": "CloseableHttpClient httpClient = mock(CloseableHttpClient.class);",
        "line": 57,
        "locate": "Test Case",
        "locationContext": {
          "methodName": "addPortTest",
          "methodAnnotations": [
            "@Test"
          ]
        }
      },
      {
        "type": "STUBBING",
        "code": "when(httpClient.execute(any(HttpUriRequest.class))).thenReturn(closeableHttpResponse);",
        "line": 62,
        "locate": "Test Case",
        "locationContext": {
          "methodName": "addPortTest",
          "methodAnnotations": [
            "@Test"
          ]
        }
      }
    ],
    "pattern_id": 1
  },
  {
    "variableName": "httpClient",
    "variableType": "CloseableHttpClient",
    "mockedClass": "CloseableHttpClient",
    "isReuseableMock": false,
    "mockPattern": "Creation:\n\u2014 Local Mock Creation in Test Case\n\nStubbing:\n\u2014 Test Case\n\nVerification:\n\u2014 None",
    "classContext": {
      "packageName": "org.apache.cloudstack.network.tungsten.vrouter",
      "filePath": "C:\\java tool\\Apache\\cloudstack\\plugins\\network-elements\\tungsten\\src\\test\\java\\org\\apache\\cloudstack\\network\\tungsten\\vrouter\\VRouterApiConnectorImplTest.java",
      "className": "VRouterApiConnectorImplTest"
    },
    "statements": [
      {
        "type": "DECLARATION",
        "code": "CloseableHttpClient httpClient = mock(CloseableHttpClient.class);",
        "line": 72,
        "locate": "Test Case",
        "locationContext": {
          "methodName": "addPortWithExceptionTest",
          "methodAnnotations": [
            "@Test"
          ]
        }
      },
      {
        "type": "STUBBING",
        "code": "when(httpClient.execute(any(HttpUriRequest.class))).thenThrow(IOException.class);",
        "line": 75,
        "locate": "Test Case",
        "locationContext": {
          "methodName": "addPortWithExceptionTest",
          "methodAnnotations": [
            "@Test"
          ]
        }
      }
    ],
    "pattern_id": 1
  },
  {
    "variableName": "httpClient",
    "variableType": "CloseableHttpClient",
    "mockedClass": "CloseableHttpClient",
    "isReuseableMock": false,
    "mockPattern": "Creation:\n\u2014 Local Mock Creation in Test Case\n\nStubbing:\n\u2014 Test Case\n\nVerification:\n\u2014 None",
    "classContext": {
      "packageName": "org.apache.cloudstack.network.tungsten.vrouter",
      "filePath": "C:\\java tool\\Apache\\cloudstack\\plugins\\network-elements\\tungsten\\src\\test\\java\\org\\apache\\cloudstack\\network\\tungsten\\vrouter\\VRouterApiConnectorImplTest.java",
      "className": "VRouterApiConnectorImplTest"
    },
    "statements": [
      {
        "type": "DECLARATION",
        "code": "CloseableHttpClient httpClient = mock(CloseableHttpClient.class);",
        "line": 83,
        "locate": "Test Case",
        "locationContext": {
          "methodName": "addPortWithFailTest",
          "methodAnnotations": [
            "@Test"
          ]
        }
      },
      {
        "type": "STUBBING",
        "code": "when(httpClient.execute(any(HttpUriRequest.class))).thenReturn(closeableHttpResponse);",
        "line": 88,
        "locate": "Test Case",
        "locationContext": {
          "methodName": "addPortWithFailTest",
          "methodAnnotations": [
            "@Test"
          ]
        }
      }
    ],
    "pattern_id": 1
  },
  {
    "variableName": "httpClient",
    "variableType": "CloseableHttpClient",
    "mockedClass": "CloseableHttpClient",
    "isReuseableMock": false,
    "mockPattern": "Creation:\n\u2014 Local Mock Creation in Test Case\n\nStubbing:\n\u2014 Test Case\n\nVerification:\n\u2014 None",
    "classContext": {
      "packageName": "org.apache.cloudstack.network.tungsten.vrouter",
      "filePath": "C:\\java tool\\Apache\\cloudstack\\plugins\\network-elements\\tungsten\\src\\test\\java\\org\\apache\\cloudstack\\network\\tungsten\\vrouter\\VRouterApiConnectorImplTest.java",
      "className": "VRouterApiConnectorImplTest"
    },
    "statements": [
      {
        "type": "DECLARATION",
        "code": "CloseableHttpClient httpClient = mock(CloseableHttpClient.class);",
        "line": 97,
        "locate": "Test Case",
        "locationContext": {
          "methodName": "deletePortTest",
          "methodAnnotations": [
            "@Test"
          ]
        }
      },
      {
        "type": "STUBBING",
        "code": "when(httpClient.execute(any(HttpUriRequest.class))).thenReturn(closeableHttpResponse);",
        "line": 102,
        "locate": "Test Case",
        "locationContext": {
          "methodName": "deletePortTest",
          "methodAnnotations": [
            "@Test"
          ]
        }
      }
    ],
    "pattern_id": 1
  },
  {
    "variableName": "httpClient",
    "variableType": "CloseableHttpClient",
    "mockedClass": "CloseableHttpClient",
    "isReuseableMock": false,
    "mockPattern": "Creation:\n\u2014 Local Mock Creation in Test Case\n\nStubbing:\n\u2014 Test Case\n\nVerification:\n\u2014 None",
    "classContext": {
      "packageName": "org.apache.cloudstack.network.tungsten.vrouter",
      "filePath": "C:\\java tool\\Apache\\cloudstack\\plugins\\network-elements\\tungsten\\src\\test\\java\\org\\apache\\cloudstack\\network\\tungsten\\vrouter\\VRouterApiConnectorImplTest.java",
      "className": "VRouterApiConnectorImplTest"
    },
    "statements": [
      {
        "type": "DECLARATION",
        "code": "CloseableHttpClient httpClient = mock(CloseableHttpClient.class);",
        "line": 111,
        "locate": "Test Case",
        "locationContext": {
          "methodName": "deletePortWithExceptionTest",
          "methodAnnotations": [
            "@Test"
          ]
        }
      },
      {
        "type": "STUBBING",
        "code": "when(httpClient.execute(any(HttpUriRequest.class))).thenThrow(IOException.class);",
        "line": 114,
        "locate": "Test Case",
        "locationContext": {
          "methodName": "deletePortWithExceptionTest",
          "methodAnnotations": [
            "@Test"
          ]
        }
      }
    ],
    "pattern_id": 1
  },
  {
    "variableName": "httpClient",
    "variableType": "CloseableHttpClient",
    "mockedClass": "CloseableHttpClient",
    "isReuseableMock": false,
    "mockPattern": "Creation:\n\u2014 Local Mock Creation in Test Case\n\nStubbing:\n\u2014 Test Case\n\nVerification:\n\u2014 None",
    "classContext": {
      "packageName": "org.apache.cloudstack.network.tungsten.vrouter",
      "filePath": "C:\\java tool\\Apache\\cloudstack\\plugins\\network-elements\\tungsten\\src\\test\\java\\org\\apache\\cloudstack\\network\\tungsten\\vrouter\\VRouterApiConnectorImplTest.java",
      "className": "VRouterApiConnectorImplTest"
    },
    "statements": [
      {
        "type": "DECLARATION",
        "code": "CloseableHttpClient httpClient = mock(CloseableHttpClient.class);",
        "line": 121,
        "locate": "Test Case",
        "locationContext": {
          "methodName": "enablePortTest",
          "methodAnnotations": [
            "@Test"
          ]
        }
      },
      {
        "type": "STUBBING",
        "code": "when(httpClient.execute(any(HttpUriRequest.class))).thenReturn(closeableHttpResponse);",
        "line": 126,
        "locate": "Test Case",
        "locationContext": {
          "methodName": "enablePortTest",
          "methodAnnotations": [
            "@Test"
          ]
        }
      }
    ],
    "pattern_id": 1
  },
  {
    "variableName": "httpClient",
    "variableType": "CloseableHttpClient",
    "mockedClass": "CloseableHttpClient",
    "isReuseableMock": false,
    "mockPattern": "Creation:\n\u2014 Local Mock Creation in Test Case\n\nStubbing:\n\u2014 Test Case\n\nVerification:\n\u2014 None",
    "classContext": {
      "packageName": "org.apache.cloudstack.network.tungsten.vrouter",
      "filePath": "C:\\java tool\\Apache\\cloudstack\\plugins\\network-elements\\tungsten\\src\\test\\java\\org\\apache\\cloudstack\\network\\tungsten\\vrouter\\VRouterApiConnectorImplTest.java",
      "className": "VRouterApiConnectorImplTest"
    },
    "statements": [
      {
        "type": "DECLARATION",
        "code": "CloseableHttpClient httpClient = mock(CloseableHttpClient.class);",
        "line": 135,
        "locate": "Test Case",
        "locationContext": {
          "methodName": "enablePortWithExceptionTest",
          "methodAnnotations": [
            "@Test"
          ]
        }
      },
      {
        "type": "STUBBING",
        "code": "when(httpClient.execute(any(HttpUriRequest.class))).thenThrow(IOException.class);",
        "line": 138,
        "locate": "Test Case",
        "locationContext": {
          "methodName": "enablePortWithExceptionTest",
          "methodAnnotations": [
            "@Test"
          ]
        }
      }
    ],
    "pattern_id": 1
  },
  {
    "variableName": "httpClient",
    "variableType": "CloseableHttpClient",
    "mockedClass": "CloseableHttpClient",
    "isReuseableMock": false,
    "mockPattern": "Creation:\n\u2014 Local Mock Creation in Test Case\n\nStubbing:\n\u2014 Test Case\n\nVerification:\n\u2014 None",
    "classContext": {
      "packageName": "org.apache.cloudstack.network.tungsten.vrouter",
      "filePath": "C:\\java tool\\Apache\\cloudstack\\plugins\\network-elements\\tungsten\\src\\test\\java\\org\\apache\\cloudstack\\network\\tungsten\\vrouter\\VRouterApiConnectorImplTest.java",
      "className": "VRouterApiConnectorImplTest"
    },
    "statements": [
      {
        "type": "DECLARATION",
        "code": "CloseableHttpClient httpClient = mock(CloseableHttpClient.class);",
        "line": 145,
        "locate": "Test Case",
        "locationContext": {
          "methodName": "disablePortTest",
          "methodAnnotations": [
            "@Test"
          ]
        }
      },
      {
        "type": "STUBBING",
        "code": "when(httpClient.execute(any(HttpUriRequest.class))).thenReturn(closeableHttpResponse);",
        "line": 150,
        "locate": "Test Case",
        "locationContext": {
          "methodName": "disablePortTest",
          "methodAnnotations": [
            "@Test"
          ]
        }
      }
    ],
    "pattern_id": 1
  },
  {
    "variableName": "httpClient",
    "variableType": "CloseableHttpClient",
    "mockedClass": "CloseableHttpClient",
    "isReuseableMock": false,
    "mockPattern": "Creation:\n\u2014 Local Mock Creation in Test Case\n\nStubbing:\n\u2014 Test Case\n\nVerification:\n\u2014 None",
    "classContext": {
      "packageName": "org.apache.cloudstack.network.tungsten.vrouter",
      "filePath": "C:\\java tool\\Apache\\cloudstack\\plugins\\network-elements\\tungsten\\src\\test\\java\\org\\apache\\cloudstack\\network\\tungsten\\vrouter\\VRouterApiConnectorImplTest.java",
      "className": "VRouterApiConnectorImplTest"
    },
    "statements": [
      {
        "type": "DECLARATION",
        "code": "CloseableHttpClient httpClient = mock(CloseableHttpClient.class);",
        "line": 159,
        "locate": "Test Case",
        "locationContext": {
          "methodName": "disablePortWithExceptionTest",
          "methodAnnotations": [
            "@Test"
          ]
        }
      },
      {
        "type": "STUBBING",
        "code": "when(httpClient.execute(any(HttpUriRequest.class))).thenThrow(IOException.class);",
        "line": 162,
        "locate": "Test Case",
        "locationContext": {
          "methodName": "disablePortWithExceptionTest",
          "methodAnnotations": [
            "@Test"
          ]
        }
      }
    ],
    "pattern_id": 1
  },
  {
    "variableName": "httpClient",
    "variableType": "CloseableHttpClient",
    "mockedClass": "CloseableHttpClient",
    "isReuseableMock": false,
    "mockPattern": "Creation:\n\u2014 Local Mock Creation in Test Case\n\nStubbing:\n\u2014 Test Case\n\nVerification:\n\u2014 None",
    "classContext": {
      "packageName": "org.apache.cloudstack.network.tungsten.vrouter",
      "filePath": "C:\\java tool\\Apache\\cloudstack\\plugins\\network-elements\\tungsten\\src\\test\\java\\org\\apache\\cloudstack\\network\\tungsten\\vrouter\\VRouterApiConnectorImplTest.java",
      "className": "VRouterApiConnectorImplTest"
    },
    "statements": [
      {
        "type": "DECLARATION",
        "code": "CloseableHttpClient httpClient = mock(CloseableHttpClient.class);",
        "line": 171,
        "locate": "Test Case",
        "locationContext": {
          "methodName": "addGatewayTest",
          "methodAnnotations": [
            "@Test"
          ]
        }
      },
      {
        "type": "STUBBING",
        "code": "when(httpClient.execute(any(HttpUriRequest.class))).thenReturn(closeableHttpResponse);",
        "line": 176,
        "locate": "Test Case",
        "locationContext": {
          "methodName": "addGatewayTest",
          "methodAnnotations": [
            "@Test"
          ]
        }
      }
    ],
    "pattern_id": 1
  },
  {
    "variableName": "httpClient",
    "variableType": "CloseableHttpClient",
    "mockedClass": "CloseableHttpClient",
    "isReuseableMock": false,
    "mockPattern": "Creation:\n\u2014 Local Mock Creation in Test Case\n\nStubbing:\n\u2014 Test Case\n\nVerification:\n\u2014 None",
    "classContext": {
      "packageName": "org.apache.cloudstack.network.tungsten.vrouter",
      "filePath": "C:\\java tool\\Apache\\cloudstack\\plugins\\network-elements\\tungsten\\src\\test\\java\\org\\apache\\cloudstack\\network\\tungsten\\vrouter\\VRouterApiConnectorImplTest.java",
      "className": "VRouterApiConnectorImplTest"
    },
    "statements": [
      {
        "type": "DECLARATION",
        "code": "CloseableHttpClient httpClient = mock(CloseableHttpClient.class);",
        "line": 187,
        "locate": "Test Case",
        "locationContext": {
          "methodName": "addGatewayWithExceptionTest",
          "methodAnnotations": [
            "@Test"
          ]
        }
      },
      {
        "type": "STUBBING",
        "code": "when(httpClient.execute(any(HttpUriRequest.class))).thenThrow(IOException.class);",
        "line": 190,
        "locate": "Test Case",
        "locationContext": {
          "methodName": "addGatewayWithExceptionTest",
          "methodAnnotations": [
            "@Test"
          ]
        }
      }
    ],
    "pattern_id": 1
  },
  {
    "variableName": "httpClient",
    "variableType": "CloseableHttpClient",
    "mockedClass": "CloseableHttpClient",
    "isReuseableMock": false,
    "mockPattern": "Creation:\n\u2014 Local Mock Creation in Test Case\n\nStubbing:\n\u2014 Test Case\n\nVerification:\n\u2014 None",
    "classContext": {
      "packageName": "org.apache.cloudstack.network.tungsten.vrouter",
      "filePath": "C:\\java tool\\Apache\\cloudstack\\plugins\\network-elements\\tungsten\\src\\test\\java\\org\\apache\\cloudstack\\network\\tungsten\\vrouter\\VRouterApiConnectorImplTest.java",
      "className": "VRouterApiConnectorImplTest"
    },
    "statements": [
      {
        "type": "DECLARATION",
        "code": "CloseableHttpClient httpClient = mock(CloseableHttpClient.class);",
        "line": 199,
        "locate": "Test Case",
        "locationContext": {
          "methodName": "deleteGatewayTest",
          "methodAnnotations": [
            "@Test"
          ]
        }
      },
      {
        "type": "STUBBING",
        "code": "when(httpClient.execute(any(HttpUriRequest.class))).thenReturn(closeableHttpResponse);",
        "line": 204,
        "locate": "Test Case",
        "locationContext": {
          "methodName": "deleteGatewayTest",
          "methodAnnotations": [
            "@Test"
          ]
        }
      }
    ],
    "pattern_id": 1
  },
  {
    "variableName": "httpClient",
    "variableType": "CloseableHttpClient",
    "mockedClass": "CloseableHttpClient",
    "isReuseableMock": false,
    "mockPattern": "Creation:\n\u2014 Local Mock Creation in Test Case\n\nStubbing:\n\u2014 Test Case\n\nVerification:\n\u2014 None",
    "classContext": {
      "packageName": "org.apache.cloudstack.network.tungsten.vrouter",
      "filePath": "C:\\java tool\\Apache\\cloudstack\\plugins\\network-elements\\tungsten\\src\\test\\java\\org\\apache\\cloudstack\\network\\tungsten\\vrouter\\VRouterApiConnectorImplTest.java",
      "className": "VRouterApiConnectorImplTest"
    },
    "statements": [
      {
        "type": "DECLARATION",
        "code": "CloseableHttpClient httpClient = mock(CloseableHttpClient.class);",
        "line": 215,
        "locate": "Test Case",
        "locationContext": {
          "methodName": "deleteGatewayWithExceptionTest",
          "methodAnnotations": [
            "@Test"
          ]
        }
      },
      {
        "type": "STUBBING",
        "code": "when(httpClient.execute(any(HttpUriRequest.class))).thenThrow(IOException.class);",
        "line": 218,
        "locate": "Test Case",
        "locationContext": {
          "methodName": "deleteGatewayWithExceptionTest",
          "methodAnnotations": [
            "@Test"
          ]
        }
      }
    ],
    "pattern_id": 1
  },
  {
    "variableName": "httpClient",
    "variableType": "CloseableHttpClient",
    "mockedClass": "CloseableHttpClient",
    "isReuseableMock": false,
    "mockPattern": "Creation:\n\u2014 Local Mock Creation in Test Case\n\nStubbing:\n\u2014 Test Case\n\nVerification:\n\u2014 None",
    "classContext": {
      "packageName": "com.cloud.utils.rest",
      "filePath": "C:\\java tool\\Apache\\cloudstack\\utils\\src\\test\\java\\com\\cloud\\utils\\rest\\RESTServiceConnectorTest.java",
      "className": "RESTServiceConnectorTest"
    },
    "statements": [
      {
        "type": "DECLARATION",
        "code": "final CloseableHttpClient httpClient = mock(CloseableHttpClient.class);",
        "line": 220,
        "locate": "Test Case",
        "locationContext": {
          "methodName": "testCustomDeserializerTypeMismatch",
          "methodAnnotations": [
            "@Test"
          ]
        }
      },
      {
        "type": "STUBBING",
        "code": "when(httpClient.execute(any(HttpHost.class), any(HttpRequest.class), any(HttpClientContext.class))).thenReturn(response);",
        "line": 221,
        "locate": "Test Case",
        "locationContext": {
          "methodName": "testCustomDeserializerTypeMismatch",
          "methodAnnotations": [
            "@Test"
          ]
        }
      }
    ],
    "pattern_id": 1
  },
  {
    "variableName": "httpClient",
    "variableType": "CloseableHttpClient",
    "mockedClass": "CloseableHttpClient",
    "isReuseableMock": false,
    "mockPattern": "Creation:\n\u2014 Local Mock Creation in Test Case\n\nStubbing:\n\u2014 Test Case\n\nVerification:\n\u2014 None",
    "classContext": {
      "packageName": "com.cloud.utils.rest",
      "filePath": "C:\\java tool\\Apache\\cloudstack\\utils\\src\\test\\java\\com\\cloud\\utils\\rest\\RESTServiceConnectorTest.java",
      "className": "RESTServiceConnectorTest"
    },
    "statements": [
      {
        "type": "DECLARATION",
        "code": "final CloseableHttpClient httpClient = mock(CloseableHttpClient.class);",
        "line": 236,
        "locate": "Test Case",
        "locationContext": {
          "methodName": "testCustomDeserializerForCustomLists",
          "methodAnnotations": [
            "@Test"
          ]
        }
      },
      {
        "type": "STUBBING",
        "code": "when(httpClient.execute(any(HttpHost.class), any(HttpRequest.class), any(HttpClientContext.class))).thenReturn(response);",
        "line": 237,
        "locate": "Test Case",
        "locationContext": {
          "methodName": "testCustomDeserializerForCustomLists",
          "methodAnnotations": [
            "@Test"
          ]
        }
      }
    ],
    "pattern_id": 1
  }
]