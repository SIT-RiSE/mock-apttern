[
  {
    "variableName": "nicDao",
    "variableType": "NicDao",
    "mockedClass": "NicDao",
    "isReuseableMock": null,
    "mockPattern": "Creation:\n\u2014 Attribute Mock Creation\n\nStubbing:\n\u2014 Test Case\n\u2014 Helper Method\n\nVerification:\n\u2014 None",
    "classContext": {
      "packageName": "com.cloud.network",
      "filePath": "C:\\java tool\\Apache\\cloudstack\\server\\src\\test\\java\\com\\cloud\\network\\Ipv6ServiceImplTest.java",
      "className": "Ipv6ServiceImplTest"
    },
    "statements": [
      {
        "type": "FIELD_MOCK_CREATION",
        "code": "@Mock\r\nNicDao nicDao;",
        "line": 117,
        "locate": "Attribute",
        "locationContext": {
          "methodName": "[FieldDeclaration]",
          "methodAnnotations": [
            "@Mock"
          ]
        }
      },
      {
        "type": "STUBBING",
        "code": "Mockito.when(nicDao.findNicsByIpv6GatewayIpv6CidrAndReserver(gateway, cidr, publicReserver)).thenReturn(nics);",
        "line": 378,
        "locate": "Test Case",
        "locationContext": {
          "methodName": "testGetAllocatedIpv6FromVlanRange",
          "methodAnnotations": [
            "@Test"
          ]
        }
      },
      {
        "type": "STUBBING",
        "code": "Mockito.when(nicDao.listPlaceholderNicsByNetworkIdAndVmType(networkId, VirtualMachine.Type.DomainRouter)).thenReturn(placeholderNics);",
        "line": 428,
        "locate": "Helper Method",
        "locationContext": {
          "methodName": "prepareMocksForPublicIpv6",
          "methodAnnotations": []
        }
      },
      {
        "type": "STUBBING",
        "code": "Mockito.when(nicDao.createForUpdate(nicId)).thenReturn(new NicVO(publicReserver, 100L, 1L, VirtualMachine.Type.DomainRouter));",
        "line": 429,
        "locate": "Helper Method",
        "locationContext": {
          "methodName": "prepareMocksForPublicIpv6",
          "methodAnnotations": []
        }
      },
      {
        "type": "STUBBING",
        "code": "Mockito.when(nicDao.listByVmId(Mockito.anyLong())).thenReturn(new ArrayList<>());",
        "line": 527,
        "locate": "Test Case",
        "locationContext": {
          "methodName": "testEmptyGetPublicIpv6AddressesForNetwork",
          "methodAnnotations": [
            "@Test"
          ]
        }
      },
      {
        "type": "STUBBING",
        "code": "Mockito.when(nicDao.listByVmId(Mockito.anyLong())).thenReturn(nics);",
        "line": 533,
        "locate": "Test Case",
        "locationContext": {
          "methodName": "testEmptyGetPublicIpv6AddressesForNetwork",
          "methodAnnotations": [
            "@Test"
          ]
        }
      },
      {
        "type": "STUBBING",
        "code": "Mockito.when(nicDao.listByVmId(Mockito.anyLong())).thenReturn(nics);",
        "line": 546,
        "locate": "Test Case",
        "locationContext": {
          "methodName": "testGetPublicIpv6AddressesForNetwork",
          "methodAnnotations": [
            "@Test"
          ]
        }
      },
      {
        "type": "STUBBING",
        "code": "Mockito.when(nicDao.listByVmId(Mockito.anyLong())).thenReturn(List.of(nic));",
        "line": 575,
        "locate": "Test Case",
        "locationContext": {
          "methodName": "testUpdateIpv6RoutesForVpcResponse",
          "methodAnnotations": [
            "@Test"
          ]
        }
      },
      {
        "type": "STUBBING",
        "code": "Mockito.when(nicDao.listPlaceholderNicsByNetworkId(Mockito.anyLong())).thenReturn(List.of(nic));",
        "line": 762,
        "locate": "Test Case",
        "locationContext": {
          "methodName": "testRemovePublicIpv6PlaceholderNics",
          "methodAnnotations": [
            "@Test"
          ]
        }
      },
      {
        "type": "STUBBING",
        "code": "Mockito.when(nicDao.remove(Mockito.anyLong())).thenAnswer((Answer<Boolean>) invocation -> {\r\n    removedNics.add((Long) invocation.getArguments()[0]);\r\n    return true;\r\n});",
        "line": 764,
        "locate": "Test Case",
        "locationContext": {
          "methodName": "testRemovePublicIpv6PlaceholderNics",
          "methodAnnotations": [
            "@Test"
          ]
        }
      },
      {
        "type": "STUBBING",
        "code": "Mockito.when(nicDao.listPlaceholderNicsByNetworkId(Mockito.anyLong())).thenReturn(List.of(nic1));",
        "line": 778,
        "locate": "Test Case",
        "locationContext": {
          "methodName": "testRemovePublicIpv6PlaceholderNics",
          "methodAnnotations": [
            "@Test"
          ]
        }
      }
    ],
    "pattern_id": 30
  }
]