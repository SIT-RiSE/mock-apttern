[
  {
    "variableName": "crlDao",
    "variableType": "CrlDao",
    "mockedClass": "CrlDao",
    "isReuseableMock": false,
    "mockPattern": "Creation:\n\u2014 Attribute Mock Creation\n\nStubbing:\n\u2014 Test Case\n\nVerification:\n\u2014 None",
    "classContext": {
      "packageName": "org.apache.cloudstack.ca.provider",
      "filePath": "C:\\java tool\\Apache\\cloudstack\\plugins\\ca\\root-ca\\src\\test\\java\\org\\apache\\cloudstack\\ca\\provider\\RootCACustomTrustManagerTest.java",
      "className": "RootCACustomTrustManagerTest"
    },
    "statements": [
      {
        "type": "FIELD_MOCK_CREATION",
        "code": "@Mock\r\nprivate CrlDao crlDao;",
        "line": 45,
        "locate": "Attribute",
        "locationContext": {
          "methodName": "[FieldDeclaration]",
          "methodAnnotations": [
            "@Mock"
          ]
        }
      },
      {
        "type": "STUBBING",
        "code": "Mockito.when(crlDao.findBySerial(Mockito.any(BigInteger.class))).thenReturn(new CrlVO());",
        "line": 72,
        "locate": "Test Case",
        "locationContext": {
          "methodName": "testAuthNotStrictWithRevokedCert",
          "methodAnnotations": [
            "@Test"
          ]
        }
      },
      {
        "type": "STUBBING",
        "code": "Mockito.when(crlDao.findBySerial(Mockito.any(BigInteger.class))).thenReturn(null);",
        "line": 81,
        "locate": "Test Case",
        "locationContext": {
          "methodName": "testAuthNotStrictWithInvalidCertOwnership",
          "methodAnnotations": [
            "@Test"
          ]
        }
      },
      {
        "type": "STUBBING",
        "code": "Mockito.when(crlDao.findBySerial(Mockito.any(BigInteger.class))).thenReturn(null);",
        "line": 90,
        "locate": "Test Case",
        "locationContext": {
          "methodName": "testAuthNotStrictWithDenyExpiredCertAndOwnership",
          "methodAnnotations": [
            "@Test"
          ]
        }
      },
      {
        "type": "STUBBING",
        "code": "Mockito.when(crlDao.findBySerial(Mockito.any(BigInteger.class))).thenReturn(null);",
        "line": 97,
        "locate": "Test Case",
        "locationContext": {
          "methodName": "testAuthNotStrictWithAllowExpiredCertAndOwnership",
          "methodAnnotations": [
            "@Test"
          ]
        }
      },
      {
        "type": "STUBBING",
        "code": "Mockito.when(crlDao.findBySerial(Mockito.any(BigInteger.class))).thenReturn(new CrlVO());",
        "line": 112,
        "locate": "Test Case",
        "locationContext": {
          "methodName": "testAuthStrictWithRevokedCert",
          "methodAnnotations": [
            "@Test"
          ]
        }
      },
      {
        "type": "STUBBING",
        "code": "Mockito.when(crlDao.findBySerial(Mockito.any(BigInteger.class))).thenReturn(null);",
        "line": 119,
        "locate": "Test Case",
        "locationContext": {
          "methodName": "testAuthStrictWithInvalidCertOwnership",
          "methodAnnotations": [
            "@Test"
          ]
        }
      },
      {
        "type": "STUBBING",
        "code": "Mockito.when(crlDao.findBySerial(Mockito.any(BigInteger.class))).thenReturn(null);",
        "line": 126,
        "locate": "Test Case",
        "locationContext": {
          "methodName": "testAuthStrictWithDenyExpiredCertAndOwnership",
          "methodAnnotations": [
            "@Test"
          ]
        }
      },
      {
        "type": "STUBBING",
        "code": "Mockito.when(crlDao.findBySerial(Mockito.any(BigInteger.class))).thenReturn(null);",
        "line": 133,
        "locate": "Test Case",
        "locationContext": {
          "methodName": "testAuthStrictWithAllowExpiredCertAndOwnership",
          "methodAnnotations": [
            "@Test"
          ]
        }
      }
    ],
    "pattern_id": 4
  },
  {
    "variableName": "crlDao",
    "variableType": "CrlDao",
    "mockedClass": "CrlDao",
    "isReuseableMock": false,
    "mockPattern": "Creation:\n\u2014 Attribute Mock Creation\n\nStubbing:\n\u2014 Test Case\n\nVerification:\n\u2014 None",
    "classContext": {
      "packageName": "org.apache.cloudstack.ca",
      "filePath": "C:\\java tool\\Apache\\cloudstack\\server\\src\\test\\java\\org\\apache\\cloudstack\\ca\\CAManagerImplTest.java",
      "className": "CAManagerImplTest"
    },
    "statements": [
      {
        "type": "FIELD_MOCK_CREATION",
        "code": "@Mock\r\nprivate CrlDao crlDao;",
        "line": 60,
        "locate": "Attribute",
        "locationContext": {
          "methodName": "[FieldDeclaration]",
          "methodAnnotations": [
            "@Mock"
          ]
        }
      },
      {
        "type": "STUBBING",
        "code": "Mockito.when(crlDao.revokeCertificate(Mockito.any(BigInteger.class), anyString())).thenReturn(crl);",
        "line": 109,
        "locate": "Test Case",
        "locationContext": {
          "methodName": "testRevokeCertificate",
          "methodAnnotations": [
            "@Test"
          ]
        }
      }
    ],
    "pattern_id": 4
  }
]