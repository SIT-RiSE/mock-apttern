[
  {
    "variableName": "domainMock",
    "variableType": "Domain",
    "mockedClass": "Domain",
    "isReuseableMock": false,
    "mockPattern": "Creation:\n\u2014 Attribute Mock Creation\n\nStubbing:\n\u2014 Test Case\n\nVerification:\n\u2014 Test Case",
    "classContext": {
      "packageName": "com.cloud.hypervisor.kvm.storage",
      "filePath": "C:\\java tool\\Apache\\cloudstack\\plugins\\hypervisors\\kvm\\src\\test\\java\\com\\cloud\\hypervisor\\kvm\\storage\\KVMStorageProcessorTest.java",
      "className": "KVMStorageProcessorTest"
    },
    "statements": [
      {
        "type": "FIELD_MOCK_CREATION",
        "code": "@Mock\r\nDomain domainMock;",
        "line": 82,
        "locate": "Attribute",
        "locationContext": {
          "methodName": "[FieldDeclaration]",
          "methodAnnotations": [
            "@Mock"
          ]
        }
      },
      {
        "type": "STUBBING",
        "code": "PowerMockito.when(domainMock.getXMLDesc(Mockito.anyInt())).thenReturn(\"test\");",
        "line": 391,
        "locate": "Test Case",
        "locationContext": {
          "methodName": "checkDetachSucessTest",
          "methodAnnotations": []
        }
      },
      {
        "type": "VERIFICATION",
        "code": "Mockito.verify(domainMock, Mockito.times(1)).attachDevice(Mockito.anyString());",
        "line": 430,
        "locate": "Test Case",
        "locationContext": {
          "methodName": "attachOrDetachDeviceTestAttachSuccess",
          "methodAnnotations": [
            "@PrepareForTest"
          ]
        }
      },
      {
        "type": "VERIFICATION",
        "code": "Mockito.verify(domainMock, Mockito.times(1)).detachDevice(Mockito.anyString());",
        "line": 459,
        "locate": "Test Case",
        "locationContext": {
          "methodName": "attachOrDetachDeviceTestDetachSuccess",
          "methodAnnotations": [
            "@Test",
            "@PrepareForTest"
          ]
        }
      },
      {
        "type": "VERIFICATION",
        "code": "Mockito.verify(domainMock, Mockito.times(1)).detachDevice(Mockito.anyString());",
        "line": 470,
        "locate": "Test Case",
        "locationContext": {
          "methodName": "attachOrDetachDeviceTestDetachThrowInternalErrorException",
          "methodAnnotations": [
            "@Test",
            "@PrepareForTest"
          ]
        }
      }
    ],
    "pattern_id": 8
  }
]