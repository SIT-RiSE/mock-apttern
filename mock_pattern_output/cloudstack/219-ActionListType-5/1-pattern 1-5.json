[
  {
    "variableName": "actionListType",
    "variableType": "ActionListType",
    "mockedClass": "ActionListType",
    "isReuseableMock": false,
    "mockPattern": "Creation:\n\u2014 Local Mock Creation in Test Case\n\nStubbing:\n\u2014 Test Case\n\nVerification:\n\u2014 None",
    "classContext": {
      "packageName": "org.apache.cloudstack.network.tungsten.service",
      "filePath": "C:\\java tool\\Apache\\cloudstack\\plugins\\network-elements\\tungsten\\src\\test\\java\\org\\apache\\cloudstack\\network\\tungsten\\service\\TungstenServiceImplTest.java",
      "className": "TungstenServiceImplTest"
    },
    "statements": [
      {
        "type": "DECLARATION",
        "code": "ActionListType actionListType = mock(ActionListType.class);",
        "line": 953,
        "locate": "Test Case",
        "locationContext": {
          "methodName": "addTungstenPolicyRuleTest",
          "methodAnnotations": [
            "@Test"
          ]
        }
      },
      {
        "type": "STUBBING",
        "code": "when(actionListType.getSimpleAction()).thenReturn(\"pass\");",
        "line": 969,
        "locate": "Test Case",
        "locationContext": {
          "methodName": "addTungstenPolicyRuleTest",
          "methodAnnotations": [
            "@Test"
          ]
        }
      }
    ],
    "pattern_id": 1
  },
  {
    "variableName": "actionListType",
    "variableType": "ActionListType",
    "mockedClass": "ActionListType",
    "isReuseableMock": false,
    "mockPattern": "Creation:\n\u2014 Local Mock Creation in Test Case\n\nStubbing:\n\u2014 Test Case\n\nVerification:\n\u2014 None",
    "classContext": {
      "packageName": "org.apache.cloudstack.network.tungsten.service",
      "filePath": "C:\\java tool\\Apache\\cloudstack\\plugins\\network-elements\\tungsten\\src\\test\\java\\org\\apache\\cloudstack\\network\\tungsten\\service\\TungstenServiceImplTest.java",
      "className": "TungstenServiceImplTest"
    },
    "statements": [
      {
        "type": "DECLARATION",
        "code": "ActionListType actionListType = mock(ActionListType.class);",
        "line": 1061,
        "locate": "Test Case",
        "locationContext": {
          "methodName": "listTungstenPolicyRuleWithRuleUuidTest",
          "methodAnnotations": [
            "@Test"
          ]
        }
      },
      {
        "type": "STUBBING",
        "code": "when(actionListType.getSimpleAction()).thenReturn(\"pass\");",
        "line": 1075,
        "locate": "Test Case",
        "locationContext": {
          "methodName": "listTungstenPolicyRuleWithRuleUuidTest",
          "methodAnnotations": [
            "@Test"
          ]
        }
      }
    ],
    "pattern_id": 1
  },
  {
    "variableName": "actionListType",
    "variableType": "ActionListType",
    "mockedClass": "ActionListType",
    "isReuseableMock": false,
    "mockPattern": "Creation:\n\u2014 Local Mock Creation in Test Case\n\nStubbing:\n\u2014 Test Case\n\nVerification:\n\u2014 None",
    "classContext": {
      "packageName": "org.apache.cloudstack.network.tungsten.service",
      "filePath": "C:\\java tool\\Apache\\cloudstack\\plugins\\network-elements\\tungsten\\src\\test\\java\\org\\apache\\cloudstack\\network\\tungsten\\service\\TungstenServiceImplTest.java",
      "className": "TungstenServiceImplTest"
    },
    "statements": [
      {
        "type": "DECLARATION",
        "code": "ActionListType actionListType = mock(ActionListType.class);",
        "line": 1091,
        "locate": "Test Case",
        "locationContext": {
          "methodName": "listTungstenPolicyRuleWithAllRuleTest",
          "methodAnnotations": [
            "@Test"
          ]
        }
      },
      {
        "type": "STUBBING",
        "code": "when(actionListType.getSimpleAction()).thenReturn(\"pass\");",
        "line": 1105,
        "locate": "Test Case",
        "locationContext": {
          "methodName": "listTungstenPolicyRuleWithAllRuleTest",
          "methodAnnotations": [
            "@Test"
          ]
        }
      }
    ],
    "pattern_id": 1
  },
  {
    "variableName": "actionListType",
    "variableType": "ActionListType",
    "mockedClass": "ActionListType",
    "isReuseableMock": false,
    "mockPattern": "Creation:\n\u2014 Local Mock Creation in Test Case\n\nStubbing:\n\u2014 Test Case\n\nVerification:\n\u2014 None",
    "classContext": {
      "packageName": "org.apache.cloudstack.network.tungsten.service",
      "filePath": "C:\\java tool\\Apache\\cloudstack\\plugins\\network-elements\\tungsten\\src\\test\\java\\org\\apache\\cloudstack\\network\\tungsten\\service\\TungstenServiceImplTest.java",
      "className": "TungstenServiceImplTest"
    },
    "statements": [
      {
        "type": "DECLARATION",
        "code": "ActionListType actionListType = mock(ActionListType.class);",
        "line": 1364,
        "locate": "Test Case",
        "locationContext": {
          "methodName": "createTungstenFirewallRuleTest",
          "methodAnnotations": [
            "@Test"
          ]
        }
      },
      {
        "type": "STUBBING",
        "code": "when(actionListType.getSimpleAction()).thenReturn(\"pass\");",
        "line": 1376,
        "locate": "Test Case",
        "locationContext": {
          "methodName": "createTungstenFirewallRuleTest",
          "methodAnnotations": [
            "@Test"
          ]
        }
      }
    ],
    "pattern_id": 1
  },
  {
    "variableName": "actionListType",
    "variableType": "ActionListType",
    "mockedClass": "ActionListType",
    "isReuseableMock": false,
    "mockPattern": "Creation:\n\u2014 Local Mock Creation in Test Case\n\nStubbing:\n\u2014 Test Case\n\nVerification:\n\u2014 None",
    "classContext": {
      "packageName": "org.apache.cloudstack.network.tungsten.service",
      "filePath": "C:\\java tool\\Apache\\cloudstack\\plugins\\network-elements\\tungsten\\src\\test\\java\\org\\apache\\cloudstack\\network\\tungsten\\service\\TungstenServiceImplTest.java",
      "className": "TungstenServiceImplTest"
    },
    "statements": [
      {
        "type": "DECLARATION",
        "code": "ActionListType actionListType = mock(ActionListType.class);",
        "line": 1469,
        "locate": "Test Case",
        "locationContext": {
          "methodName": "listTungstenFirewallRuleTest",
          "methodAnnotations": [
            "@Test"
          ]
        }
      },
      {
        "type": "STUBBING",
        "code": "when(actionListType.getSimpleAction()).thenReturn(\"pass\");",
        "line": 1481,
        "locate": "Test Case",
        "locationContext": {
          "methodName": "listTungstenFirewallRuleTest",
          "methodAnnotations": [
            "@Test"
          ]
        }
      }
    ],
    "pattern_id": 1
  }
]