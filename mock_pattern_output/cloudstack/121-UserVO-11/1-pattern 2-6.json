[
  {
    "variableName": "userVO",
    "variableType": "UserVO",
    "mockedClass": "UserVO",
    "isReuseableMock": "Fully Localized",
    "mockPattern": "Creation:\n\u2014 Local Mock Creation in Test Case\n\nStubbing:\n\u2014 None\n\nVerification:\n\u2014 None",
    "classContext": {
      "packageName": "com.cloud.network",
      "filePath": "C:\\java tool\\Apache\\cloudstack\\server\\src\\test\\java\\com\\cloud\\network\\NetworkServiceImplTest.java",
      "className": "NetworkServiceImplTest"
    },
    "statements": [
      {
        "type": "DECLARATION",
        "code": "UserVO userVO = mock(UserVO.class);",
        "line": 434,
        "locate": "Test Case",
        "locationContext": {
          "methodName": "testUpdateSharedNetworkMtus",
          "methodAnnotations": [
            "@Test"
          ]
        }
      }
    ],
    "pattern_id": 2
  },
  {
    "variableName": "userVoDuplicatedMock",
    "variableType": "UserVO",
    "mockedClass": "UserVO",
    "isReuseableMock": "Fully Localized",
    "mockPattern": "Creation:\n\u2014 Local Mock Creation in Test Case\n\nStubbing:\n\u2014 None\n\nVerification:\n\u2014 None",
    "classContext": {
      "packageName": "com.cloud.user",
      "filePath": "C:\\java tool\\Apache\\cloudstack\\server\\src\\test\\java\\com\\cloud\\user\\AccountManagerImplTest.java",
      "className": "AccountManagerImplTest"
    },
    "statements": [
      {
        "type": "DECLARATION",
        "code": "UserVO userVoDuplicatedMock = Mockito.mock(UserVO.class);",
        "line": 542,
        "locate": "Test Case",
        "locationContext": {
          "methodName": "validateAndUpdateUsernameIfNeededTestDuplicatedUserSameDomainThisUser",
          "methodAnnotations": [
            "@Test"
          ]
        }
      }
    ],
    "pattern_id": 2
  },
  {
    "variableName": "userVoDuplicatedMock",
    "variableType": "UserVO",
    "mockedClass": "UserVO",
    "isReuseableMock": "Fully Localized",
    "mockPattern": "Creation:\n\u2014 Local Mock Creation in Test Case\n\nStubbing:\n\u2014 None\n\nVerification:\n\u2014 None",
    "classContext": {
      "packageName": "com.cloud.user",
      "filePath": "C:\\java tool\\Apache\\cloudstack\\server\\src\\test\\java\\com\\cloud\\user\\AccountManagerImplTest.java",
      "className": "AccountManagerImplTest"
    },
    "statements": [
      {
        "type": "DECLARATION",
        "code": "UserVO userVoDuplicatedMock = Mockito.mock(UserVO.class);",
        "line": 578,
        "locate": "Test Case",
        "locationContext": {
          "methodName": "validateAndUpdateUsernameIfNeededTestDuplicatedUserButInDifferentDomains",
          "methodAnnotations": [
            "@Test"
          ]
        }
      }
    ],
    "pattern_id": 2
  },
  {
    "variableName": "userVO",
    "variableType": "UserVO",
    "mockedClass": "UserVO",
    "isReuseableMock": "Fully Localized",
    "mockPattern": "Creation:\n\u2014 Local Mock Creation in Test Case\n\nStubbing:\n\u2014 None\n\nVerification:\n\u2014 None",
    "classContext": {
      "packageName": "com.cloud.user",
      "filePath": "C:\\java tool\\Apache\\cloudstack\\server\\src\\test\\java\\com\\cloud\\user\\AccountManagerImplTest.java",
      "className": "AccountManagerImplTest"
    },
    "statements": [
      {
        "type": "DECLARATION",
        "code": "UserVO userVO = Mockito.mock(UserVO.class);",
        "line": 861,
        "locate": "Test Case",
        "locationContext": {
          "methodName": "testEnableUserTwoFactorAuthenticationWhenDomainlevelSettingisDisabled",
          "methodAnnotations": [
            "@Test"
          ]
        }
      }
    ],
    "pattern_id": 2
  },
  {
    "variableName": "userVO",
    "variableType": "UserVO",
    "mockedClass": "UserVO",
    "isReuseableMock": "Fully Localized",
    "mockPattern": "Creation:\n\u2014 Local Mock Creation in Test Case\n\nStubbing:\n\u2014 None\n\nVerification:\n\u2014 None",
    "classContext": {
      "packageName": "com.cloud.user",
      "filePath": "C:\\java tool\\Apache\\cloudstack\\server\\src\\test\\java\\com\\cloud\\user\\AccountManagerImplTest.java",
      "className": "AccountManagerImplTest"
    },
    "statements": [
      {
        "type": "DECLARATION",
        "code": "UserVO userVO = Mockito.mock(UserVO.class);",
        "line": 880,
        "locate": "Test Case",
        "locationContext": {
          "methodName": "testEnableUserTwoFactorAuthenticationWhenProviderNameIsNullExpectedDefaultProviderTOTP",
          "methodAnnotations": [
            "@Test"
          ]
        }
      }
    ],
    "pattern_id": 2
  },
  {
    "variableName": "userVO",
    "variableType": "UserVO",
    "mockedClass": "UserVO",
    "isReuseableMock": "Fully Localized",
    "mockPattern": "Creation:\n\u2014 Local Mock Creation in Test Case\n\nStubbing:\n\u2014 None\n\nVerification:\n\u2014 None",
    "classContext": {
      "packageName": "com.cloud.user",
      "filePath": "C:\\java tool\\Apache\\cloudstack\\server\\src\\test\\java\\com\\cloud\\user\\AccountManagerImplTest.java",
      "className": "AccountManagerImplTest"
    },
    "statements": [
      {
        "type": "DECLARATION",
        "code": "UserVO userVO = Mockito.mock(UserVO.class);",
        "line": 909,
        "locate": "Test Case",
        "locationContext": {
          "methodName": "testEnableUserTwoFactorAuthentication",
          "methodAnnotations": [
            "@Test"
          ]
        }
      }
    ],
    "pattern_id": 2
  }
]