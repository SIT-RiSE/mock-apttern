[
  {
    "variableName": "scriptMock",
    "variableType": "Script",
    "mockedClass": "Script",
    "isReuseableMock": "Fully Localized",
    "mockPattern": "Creation:\n\u2014 Local Mock Creation in Test Case\n\nStubbing:\n\u2014 None\n\nVerification:\n\u2014 Test Case",
    "classContext": {
      "packageName": "org.apache.cloudstack.storage.configdrive",
      "filePath": "C:\\java tool\\Apache\\cloudstack\\engine\\storage\\configdrive\\src\\test\\java\\org\\apache\\cloudstack\\storage\\configdrive\\ConfigDriveBuilderTest.java",
      "className": "ConfigDriveBuilderTest"
    },
    "statements": [
      {
        "type": "DECLARATION",
        "code": "Script scriptMock = Mockito.mock(Script.class);",
        "line": 265,
        "locate": "Test Case",
        "locationContext": {
          "methodName": "linkUserDataTestUserDataFilePathDoesNotExist",
          "methodAnnotations": [
            "@Test",
            "@PrepareForTest"
          ]
        }
      },
      {
        "type": "VERIFICATION",
        "code": "Mockito.verify(scriptMock, times(0)).execute();",
        "line": 270,
        "locate": "Test Case",
        "locationContext": {
          "methodName": "linkUserDataTestUserDataFilePathDoesNotExist",
          "methodAnnotations": [
            "@Test",
            "@PrepareForTest"
          ]
        }
      }
    ],
    "pattern_id": 5
  },
  {
    "variableName": "scriptMock",
    "variableType": "Script",
    "mockedClass": "Script",
    "isReuseableMock": "Fully Localized",
    "mockPattern": "Creation:\n\u2014 Local Mock Creation in Test Case\n\nStubbing:\n\u2014 None\n\nVerification:\n\u2014 Test Case",
    "classContext": {
      "packageName": "org.apache.cloudstack.storage.configdrive",
      "filePath": "C:\\java tool\\Apache\\cloudstack\\engine\\storage\\configdrive\\src\\test\\java\\org\\apache\\cloudstack\\storage\\configdrive\\ConfigDriveBuilderTest.java",
      "className": "ConfigDriveBuilderTest"
    },
    "statements": [
      {
        "type": "DECLARATION",
        "code": "Script scriptMock = Mockito.mock(Script.class);",
        "line": 298,
        "locate": "Test Case",
        "locationContext": {
          "methodName": "linkUserDataTest",
          "methodAnnotations": [
            "@Test",
            "@PrepareForTest"
          ]
        }
      },
      {
        "type": "VERIFICATION",
        "code": "Mockito.verify(scriptMock).add(tempDirName + ConfigDrive.cloudStackConfigDriveName + \"userdata/user_data.txt\");",
        "line": 305,
        "locate": "Test Case",
        "locationContext": {
          "methodName": "linkUserDataTest",
          "methodAnnotations": [
            "@Test",
            "@PrepareForTest"
          ]
        }
      },
      {
        "type": "VERIFICATION",
        "code": "Mockito.verify(scriptMock).add(tempDirName + ConfigDrive.openStackConfigDriveName + \"user_data\");",
        "line": 306,
        "locate": "Test Case",
        "locationContext": {
          "methodName": "linkUserDataTest",
          "methodAnnotations": [
            "@Test",
            "@PrepareForTest"
          ]
        }
      },
      {
        "type": "VERIFICATION",
        "code": "Mockito.verify(scriptMock).execute();",
        "line": 307,
        "locate": "Test Case",
        "locationContext": {
          "methodName": "linkUserDataTest",
          "methodAnnotations": [
            "@Test",
            "@PrepareForTest"
          ]
        }
      }
    ],
    "pattern_id": 5
  },
  {
    "variableName": "scriptMock",
    "variableType": "Script",
    "mockedClass": "Script",
    "isReuseableMock": "Fully Localized",
    "mockPattern": "Creation:\n\u2014 Local Mock Creation in Test Case\n\nStubbing:\n\u2014 None\n\nVerification:\n\u2014 Test Case",
    "classContext": {
      "packageName": "org.apache.cloudstack.storage.configdrive",
      "filePath": "C:\\java tool\\Apache\\cloudstack\\engine\\storage\\configdrive\\src\\test\\java\\org\\apache\\cloudstack\\storage\\configdrive\\ConfigDriveBuilderTest.java",
      "className": "ConfigDriveBuilderTest"
    },
    "statements": [
      {
        "type": "DECLARATION",
        "code": "Script scriptMock = Mockito.mock(Script.class);",
        "line": 363,
        "locate": "Test Case",
        "locationContext": {
          "methodName": "generateAndRetrieveIsoAsBase64IsoTest",
          "methodAnnotations": [
            "@Test",
            "@SuppressWarnings",
            "@PrepareForTest"
          ]
        }
      },
      {
        "type": "VERIFICATION",
        "code": "inOrder.verify(scriptMock).add(\"-o\", \"absolutePath\");",
        "line": 379,
        "locate": "Test Case",
        "locationContext": {
          "methodName": "generateAndRetrieveIsoAsBase64IsoTest",
          "methodAnnotations": [
            "@Test",
            "@SuppressWarnings",
            "@PrepareForTest"
          ]
        }
      },
      {
        "type": "VERIFICATION",
        "code": "inOrder.verify(scriptMock).add(\"-ldots\");",
        "line": 380,
        "locate": "Test Case",
        "locationContext": {
          "methodName": "generateAndRetrieveIsoAsBase64IsoTest",
          "methodAnnotations": [
            "@Test",
            "@SuppressWarnings",
            "@PrepareForTest"
          ]
        }
      },
      {
        "type": "VERIFICATION",
        "code": "inOrder.verify(scriptMock).add(\"-allow-lowercase\");",
        "line": 381,
        "locate": "Test Case",
        "locationContext": {
          "methodName": "generateAndRetrieveIsoAsBase64IsoTest",
          "methodAnnotations": [
            "@Test",
            "@SuppressWarnings",
            "@PrepareForTest"
          ]
        }
      },
      {
        "type": "VERIFICATION",
        "code": "inOrder.verify(scriptMock).add(\"-allow-multidot\");",
        "line": 382,
        "locate": "Test Case",
        "locationContext": {
          "methodName": "generateAndRetrieveIsoAsBase64IsoTest",
          "methodAnnotations": [
            "@Test",
            "@SuppressWarnings",
            "@PrepareForTest"
          ]
        }
      },
      {
        "type": "VERIFICATION",
        "code": "inOrder.verify(scriptMock).add(\"-cache-inodes\");",
        "line": 383,
        "locate": "Test Case",
        "locationContext": {
          "methodName": "generateAndRetrieveIsoAsBase64IsoTest",
          "methodAnnotations": [
            "@Test",
            "@SuppressWarnings",
            "@PrepareForTest"
          ]
        }
      },
      {
        "type": "VERIFICATION",
        "code": "inOrder.verify(scriptMock).add(\"-l\");",
        "line": 384,
        "locate": "Test Case",
        "locationContext": {
          "methodName": "generateAndRetrieveIsoAsBase64IsoTest",
          "methodAnnotations": [
            "@Test",
            "@SuppressWarnings",
            "@PrepareForTest"
          ]
        }
      },
      {
        "type": "VERIFICATION",
        "code": "inOrder.verify(scriptMock).add(\"-quiet\");",
        "line": 385,
        "locate": "Test Case",
        "locationContext": {
          "methodName": "generateAndRetrieveIsoAsBase64IsoTest",
          "methodAnnotations": [
            "@Test",
            "@SuppressWarnings",
            "@PrepareForTest"
          ]
        }
      },
      {
        "type": "VERIFICATION",
        "code": "inOrder.verify(scriptMock).add(\"-J\");",
        "line": 386,
        "locate": "Test Case",
        "locationContext": {
          "methodName": "generateAndRetrieveIsoAsBase64IsoTest",
          "methodAnnotations": [
            "@Test",
            "@SuppressWarnings",
            "@PrepareForTest"
          ]
        }
      },
      {
        "type": "VERIFICATION",
        "code": "inOrder.verify(scriptMock).add(\"-r\");",
        "line": 387,
        "locate": "Test Case",
        "locationContext": {
          "methodName": "generateAndRetrieveIsoAsBase64IsoTest",
          "methodAnnotations": [
            "@Test",
            "@SuppressWarnings",
            "@PrepareForTest"
          ]
        }
      },
      {
        "type": "VERIFICATION",
        "code": "inOrder.verify(scriptMock).add(\"-V\", \"driveLabel\");",
        "line": 388,
        "locate": "Test Case",
        "locationContext": {
          "methodName": "generateAndRetrieveIsoAsBase64IsoTest",
          "methodAnnotations": [
            "@Test",
            "@SuppressWarnings",
            "@PrepareForTest"
          ]
        }
      },
      {
        "type": "VERIFICATION",
        "code": "inOrder.verify(scriptMock).add(\"tempDirName\");",
        "line": 389,
        "locate": "Test Case",
        "locationContext": {
          "methodName": "generateAndRetrieveIsoAsBase64IsoTest",
          "methodAnnotations": [
            "@Test",
            "@SuppressWarnings",
            "@PrepareForTest"
          ]
        }
      },
      {
        "type": "VERIFICATION",
        "code": "inOrder.verify(scriptMock).execute();",
        "line": 390,
        "locate": "Test Case",
        "locationContext": {
          "methodName": "generateAndRetrieveIsoAsBase64IsoTest",
          "methodAnnotations": [
            "@Test",
            "@SuppressWarnings",
            "@PrepareForTest"
          ]
        }
      }
    ],
    "pattern_id": 5
  }
]