[
  {
    "variableName": "managementServer",
    "variableType": "ManagementService",
    "mockedClass": "ManagementService",
    "isReuseableMock": "Hybrid",
    "mockPattern": "Creation:\n\u2014 Attribute Mock Creation\n\nStubbing:\n\u2014 Test Case\n\nVerification:\n\u2014 Test Case",
    "classContext": {
      "packageName": "org.apache.cloudstack.api.command.test",
      "filePath": "C:\\java tool\\Apache\\cloudstack\\api\\src\\test\\java\\org\\apache\\cloudstack\\api\\command\\test\\UpdateHostPasswordCmdTest.java",
      "className": "UpdateHostPasswordCmdTest"
    },
    "statements": [
      {
        "type": "FIELD_DECLARATION",
        "code": "private ManagementService managementServer;",
        "line": 39,
        "locate": "Attribute",
        "locationContext": {
          "methodName": "[FieldDeclaration]",
          "methodAnnotations": []
        }
      },
      {
        "type": "ASSIGNMENT",
        "code": "managementServer = Mockito.mock(ManagementService.class);",
        "line": 47,
        "locate": "@Before",
        "locationContext": {
          "methodName": "setUp",
          "methodAnnotations": [
            "@Override",
            "@Before"
          ]
        }
      },
      {
        "type": "STUBBING",
        "code": "Mockito.when(managementServer.updateHostPassword(updateHostPasswordCmd)).thenReturn(false);",
        "line": 59,
        "locate": "Test Case",
        "locationContext": {
          "methodName": "testExecuteForNullResult",
          "methodAnnotations": [
            "@Test"
          ]
        }
      },
      {
        "type": "VERIFICATION",
        "code": "verify(managementServer, times(1)).updateHostPassword(updateHostPasswordCmd);",
        "line": 73,
        "locate": "Test Case",
        "locationContext": {
          "methodName": "testExecuteForNullResult",
          "methodAnnotations": [
            "@Test"
          ]
        }
      },
      {
        "type": "STUBBING",
        "code": "Mockito.when(managementServer.updateHostPassword(updateHostPasswordCmd)).thenReturn(true);",
        "line": 84,
        "locate": "Test Case",
        "locationContext": {
          "methodName": "testCreateSuccess",
          "methodAnnotations": [
            "@Test"
          ]
        }
      },
      {
        "type": "VERIFICATION",
        "code": "verify(managementServer, times(1)).updateHostPassword(updateHostPasswordCmd);",
        "line": 96,
        "locate": "Test Case",
        "locationContext": {
          "methodName": "testCreateSuccess",
          "methodAnnotations": [
            "@Test"
          ]
        }
      }
    ],
    "pattern_id": 8
  },
  {
    "variableName": "_mgrService",
    "variableType": "ManagementService",
    "mockedClass": "ManagementService",
    "isReuseableMock": "Hybrid",
    "mockPattern": "Creation:\n\u2014 Attribute Mock Creation\n\nStubbing:\n\u2014 Test Case\n\nVerification:\n\u2014 Test Case",
    "classContext": {
      "packageName": "com.cloud.server",
      "filePath": "C:\\java tool\\Apache\\cloudstack\\server\\src\\test\\java\\com\\cloud\\server\\ConfigurationServerImplTest.java",
      "className": "ConfigurationServerImplTest"
    },
    "statements": [
      {
        "type": "FIELD_MOCK_CREATION",
        "code": "@Mock\r\nprivate ManagementService _mgrService;",
        "line": 80,
        "locate": "Attribute",
        "locationContext": {
          "methodName": "[FieldDeclaration]",
          "methodAnnotations": [
            "@Mock"
          ]
        }
      },
      {
        "type": "STUBBING",
        "code": "Mockito.when(_mgrService.generateRandomPassword()).thenReturn(\"randomPassword\");",
        "line": 116,
        "locate": "Test Case",
        "locationContext": {
          "methodName": "testUpdateSystemvmPassword",
          "methodAnnotations": [
            "@Test"
          ]
        }
      },
      {
        "type": "VERIFICATION",
        "code": "//verify that generateRandomPassword() is called\r\nMockito.verify(_mgrService, Mockito.times(1)).generateRandomPassword();",
        "line": 122,
        "locate": "Test Case",
        "locationContext": {
          "methodName": "testUpdateSystemvmPassword",
          "methodAnnotations": [
            "@Test"
          ]
        }
      }
    ],
    "pattern_id": 8
  }
]