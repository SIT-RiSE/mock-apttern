[
  {
    "variableName": "socketChannel",
    "variableType": "SocketChannel",
    "mockedClass": "SocketChannel",
    "isReuseableMock": false,
    "mockPattern": "Creation:\n\u2014 Local Mock Creation in Test Case\n\nStubbing:\n\u2014 Test Case\n\nVerification:\n\u2014 None",
    "classContext": {
      "packageName": "org.springframework.integration.ip.tcp.connection",
      "filePath": "C:\\java tool\\Spring\\spring-integration\\spring-integration-ip\\src\\test\\java\\org\\springframework\\integration\\ip\\tcp\\connection\\TcpNetConnectionTests.java",
      "className": "TcpNetConnectionTests"
    },
    "statements": [
      {
        "type": "DECLARATION",
        "code": "SocketChannel socketChannel = mock(SocketChannel.class);",
        "line": 95,
        "locate": "Test Case",
        "locationContext": {
          "methodName": "testBinary",
          "methodAnnotations": [
            "@Test"
          ]
        }
      },
      {
        "type": "STUBBING",
        "code": "when(socketChannel.socket()).thenReturn(socket);",
        "line": 97,
        "locate": "Test Case",
        "locationContext": {
          "methodName": "testBinary",
          "methodAnnotations": [
            "@Test"
          ]
        }
      }
    ],
    "pattern_id": 1
  },
  {
    "variableName": "channel",
    "variableType": "SocketChannel",
    "mockedClass": "SocketChannel",
    "isReuseableMock": false,
    "mockPattern": "Creation:\n\u2014 Local Mock Creation in Test Case\n\nStubbing:\n\u2014 Test Case\n\nVerification:\n\u2014 None",
    "classContext": {
      "packageName": "org.springframework.integration.ip.tcp.connection",
      "filePath": "C:\\java tool\\Spring\\spring-integration\\spring-integration-ip\\src\\test\\java\\org\\springframework\\integration\\ip\\tcp\\connection\\TcpNioConnectionTests.java",
      "className": "TcpNioConnectionTests"
    },
    "statements": [
      {
        "type": "DECLARATION",
        "code": "SocketChannel channel = mock(SocketChannel.class);",
        "line": 309,
        "locate": "Test Case",
        "locationContext": {
          "methodName": "testInsufficientThreads",
          "methodAnnotations": [
            "@Test"
          ]
        }
      },
      {
        "type": "STUBBING",
        "code": "Mockito.when(channel.socket()).thenReturn(socket);",
        "line": 311,
        "locate": "Test Case",
        "locationContext": {
          "methodName": "testInsufficientThreads",
          "methodAnnotations": [
            "@Test"
          ]
        }
      }
    ],
    "pattern_id": 1
  },
  {
    "variableName": "channel",
    "variableType": "SocketChannel",
    "mockedClass": "SocketChannel",
    "isReuseableMock": false,
    "mockPattern": "Creation:\n\u2014 Local Mock Creation in Test Case\n\nStubbing:\n\u2014 Test Case\n\nVerification:\n\u2014 None",
    "classContext": {
      "packageName": "org.springframework.integration.ip.tcp.connection",
      "filePath": "C:\\java tool\\Spring\\spring-integration\\spring-integration-ip\\src\\test\\java\\org\\springframework\\integration\\ip\\tcp\\connection\\TcpNioConnectionTests.java",
      "className": "TcpNioConnectionTests"
    },
    "statements": [
      {
        "type": "DECLARATION",
        "code": "SocketChannel channel = mock(SocketChannel.class);",
        "line": 356,
        "locate": "Test Case",
        "locationContext": {
          "methodName": "testSufficientThreads",
          "methodAnnotations": [
            "@Test"
          ]
        }
      },
      {
        "type": "STUBBING",
        "code": "Mockito.when(channel.socket()).thenReturn(socket);",
        "line": 358,
        "locate": "Test Case",
        "locationContext": {
          "methodName": "testSufficientThreads",
          "methodAnnotations": [
            "@Test"
          ]
        }
      }
    ],
    "pattern_id": 1
  },
  {
    "variableName": "socketChannel",
    "variableType": "SocketChannel",
    "mockedClass": "SocketChannel",
    "isReuseableMock": false,
    "mockPattern": "Creation:\n\u2014 Local Mock Creation in Test Case\n\nStubbing:\n\u2014 Test Case\n\nVerification:\n\u2014 None",
    "classContext": {
      "packageName": "org.springframework.integration.ip.tcp.connection",
      "filePath": "C:\\java tool\\Spring\\spring-integration\\spring-integration-ip\\src\\test\\java\\org\\springframework\\integration\\ip\\tcp\\connection\\TcpNioConnectionTests.java",
      "className": "TcpNioConnectionTests"
    },
    "statements": [
      {
        "type": "DECLARATION",
        "code": "SocketChannel socketChannel = mock(SocketChannel.class);",
        "line": 396,
        "locate": "Test Case",
        "locationContext": {
          "methodName": "testByteArrayRead",
          "methodAnnotations": [
            "@Test"
          ]
        }
      },
      {
        "type": "STUBBING",
        "code": "when(socketChannel.socket()).thenReturn(socket);",
        "line": 398,
        "locate": "Test Case",
        "locationContext": {
          "methodName": "testByteArrayRead",
          "methodAnnotations": [
            "@Test"
          ]
        }
      }
    ],
    "pattern_id": 1
  },
  {
    "variableName": "socketChannel",
    "variableType": "SocketChannel",
    "mockedClass": "SocketChannel",
    "isReuseableMock": false,
    "mockPattern": "Creation:\n\u2014 Local Mock Creation in Test Case\n\nStubbing:\n\u2014 Test Case\n\nVerification:\n\u2014 None",
    "classContext": {
      "packageName": "org.springframework.integration.ip.tcp.connection",
      "filePath": "C:\\java tool\\Spring\\spring-integration\\spring-integration-ip\\src\\test\\java\\org\\springframework\\integration\\ip\\tcp\\connection\\TcpNioConnectionTests.java",
      "className": "TcpNioConnectionTests"
    },
    "statements": [
      {
        "type": "DECLARATION",
        "code": "SocketChannel socketChannel = mock(SocketChannel.class);",
        "line": 415,
        "locate": "Test Case",
        "locationContext": {
          "methodName": "testByteArrayReadMulti",
          "methodAnnotations": [
            "@Test"
          ]
        }
      },
      {
        "type": "STUBBING",
        "code": "when(socketChannel.socket()).thenReturn(socket);",
        "line": 417,
        "locate": "Test Case",
        "locationContext": {
          "methodName": "testByteArrayReadMulti",
          "methodAnnotations": [
            "@Test"
          ]
        }
      }
    ],
    "pattern_id": 1
  },
  {
    "variableName": "socketChannel",
    "variableType": "SocketChannel",
    "mockedClass": "SocketChannel",
    "isReuseableMock": false,
    "mockPattern": "Creation:\n\u2014 Local Mock Creation in Test Case\n\nStubbing:\n\u2014 Test Case\n\nVerification:\n\u2014 None",
    "classContext": {
      "packageName": "org.springframework.integration.ip.tcp.connection",
      "filePath": "C:\\java tool\\Spring\\spring-integration\\spring-integration-ip\\src\\test\\java\\org\\springframework\\integration\\ip\\tcp\\connection\\TcpNioConnectionTests.java",
      "className": "TcpNioConnectionTests"
    },
    "statements": [
      {
        "type": "DECLARATION",
        "code": "SocketChannel socketChannel = mock(SocketChannel.class);",
        "line": 431,
        "locate": "Test Case",
        "locationContext": {
          "methodName": "testByteArrayReadWithOffset",
          "methodAnnotations": [
            "@Test"
          ]
        }
      },
      {
        "type": "STUBBING",
        "code": "when(socketChannel.socket()).thenReturn(socket);",
        "line": 433,
        "locate": "Test Case",
        "locationContext": {
          "methodName": "testByteArrayReadWithOffset",
          "methodAnnotations": [
            "@Test"
          ]
        }
      }
    ],
    "pattern_id": 1
  },
  {
    "variableName": "socketChannel",
    "variableType": "SocketChannel",
    "mockedClass": "SocketChannel",
    "isReuseableMock": false,
    "mockPattern": "Creation:\n\u2014 Local Mock Creation in Test Case\n\nStubbing:\n\u2014 Test Case\n\nVerification:\n\u2014 None",
    "classContext": {
      "packageName": "org.springframework.integration.ip.tcp.connection",
      "filePath": "C:\\java tool\\Spring\\spring-integration\\spring-integration-ip\\src\\test\\java\\org\\springframework\\integration\\ip\\tcp\\connection\\TcpNioConnectionTests.java",
      "className": "TcpNioConnectionTests"
    },
    "statements": [
      {
        "type": "DECLARATION",
        "code": "SocketChannel socketChannel = mock(SocketChannel.class);",
        "line": 446,
        "locate": "Test Case",
        "locationContext": {
          "methodName": "testByteArrayReadWithBadArgs",
          "methodAnnotations": [
            "@Test"
          ]
        }
      },
      {
        "type": "STUBBING",
        "code": "when(socketChannel.socket()).thenReturn(socket);",
        "line": 448,
        "locate": "Test Case",
        "locationContext": {
          "methodName": "testByteArrayReadWithBadArgs",
          "methodAnnotations": [
            "@Test"
          ]
        }
      }
    ],
    "pattern_id": 1
  },
  {
    "variableName": "socketChannel",
    "variableType": "SocketChannel",
    "mockedClass": "SocketChannel",
    "isReuseableMock": false,
    "mockPattern": "Creation:\n\u2014 Local Mock Creation in Test Case\n\nStubbing:\n\u2014 Test Case\n\nVerification:\n\u2014 None",
    "classContext": {
      "packageName": "org.springframework.integration.ip.tcp.connection",
      "filePath": "C:\\java tool\\Spring\\spring-integration\\spring-integration-ip\\src\\test\\java\\org\\springframework\\integration\\ip\\tcp\\connection\\TcpNioConnectionTests.java",
      "className": "TcpNioConnectionTests"
    },
    "statements": [
      {
        "type": "DECLARATION",
        "code": "SocketChannel socketChannel = mock(SocketChannel.class);",
        "line": 472,
        "locate": "Test Case",
        "locationContext": {
          "methodName": "testByteArrayBlocksForZeroRead",
          "methodAnnotations": [
            "@Test"
          ]
        }
      },
      {
        "type": "STUBBING",
        "code": "when(socketChannel.socket()).thenReturn(socket);",
        "line": 474,
        "locate": "Test Case",
        "locationContext": {
          "methodName": "testByteArrayBlocksForZeroRead",
          "methodAnnotations": [
            "@Test"
          ]
        }
      }
    ],
    "pattern_id": 1
  },
  {
    "variableName": "inChannel",
    "variableType": "SocketChannel",
    "mockedClass": "SocketChannel",
    "isReuseableMock": false,
    "mockPattern": "Creation:\n\u2014 Local Mock Creation in Test Case\n\nStubbing:\n\u2014 Test Case\n\nVerification:\n\u2014 None",
    "classContext": {
      "packageName": "org.springframework.integration.ip.tcp.connection",
      "filePath": "C:\\java tool\\Spring\\spring-integration\\spring-integration-ip\\src\\test\\java\\org\\springframework\\integration\\ip\\tcp\\connection\\TcpNioConnectionTests.java",
      "className": "TcpNioConnectionTests"
    },
    "statements": [
      {
        "type": "DECLARATION",
        "code": "SocketChannel inChannel = mock(SocketChannel.class);",
        "line": 499,
        "locate": "Test Case",
        "locationContext": {
          "methodName": "transferHeaders",
          "methodAnnotations": [
            "@Test"
          ]
        }
      },
      {
        "type": "STUBBING",
        "code": "when(inChannel.socket()).thenReturn(inSocket);",
        "line": 500,
        "locate": "Test Case",
        "locationContext": {
          "methodName": "transferHeaders",
          "methodAnnotations": [
            "@Test"
          ]
        }
      }
    ],
    "pattern_id": 1
  },
  {
    "variableName": "outChannel",
    "variableType": "SocketChannel",
    "mockedClass": "SocketChannel",
    "isReuseableMock": false,
    "mockPattern": "Creation:\n\u2014 Local Mock Creation in Test Case\n\nStubbing:\n\u2014 Test Case\n\nVerification:\n\u2014 None",
    "classContext": {
      "packageName": "org.springframework.integration.ip.tcp.connection",
      "filePath": "C:\\java tool\\Spring\\spring-integration\\spring-integration-ip\\src\\test\\java\\org\\springframework\\integration\\ip\\tcp\\connection\\TcpNioConnectionTests.java",
      "className": "TcpNioConnectionTests"
    },
    "statements": [
      {
        "type": "DECLARATION",
        "code": "SocketChannel outChannel = mock(SocketChannel.class);",
        "line": 520,
        "locate": "Test Case",
        "locationContext": {
          "methodName": "transferHeaders",
          "methodAnnotations": [
            "@Test"
          ]
        }
      },
      {
        "type": "STUBBING",
        "code": "when(outChannel.socket()).thenReturn(outSocket);",
        "line": 521,
        "locate": "Test Case",
        "locationContext": {
          "methodName": "transferHeaders",
          "methodAnnotations": [
            "@Test"
          ]
        }
      }
    ],
    "pattern_id": 1
  }
]