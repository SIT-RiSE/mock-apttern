[
  {
    "variableName": "mock",
    "variableType": "AbstractClientConnectionFactory",
    "mockedClass": "AbstractClientConnectionFactory",
    "isReuseableMock": "Fully Shared",
    "mockPattern": "Creation:\n\u2014 Local Mock Creation in Helper\n\nStubbing:\n\u2014 Helper Method\n\nVerification:\n\u2014 None",
    "classContext": {
      "packageName": "org.springframework.integration.ip.config",
      "filePath": "C:\\java tool\\Spring\\spring-integration\\spring-integration-ip\\src\\test\\java\\org\\springframework\\integration\\ip\\config\\ParserUnitTests.java",
      "className": "Config"
    },
    "statements": [
      {
        "type": "DECLARATION",
        "code": "AbstractClientConnectionFactory mock = mock(AbstractClientConnectionFactory.class);",
        "line": 704,
        "locate": "Helper Method",
        "locationContext": {
          "methodName": "mockClientCf",
          "methodAnnotations": [
            "@Bean"
          ]
        }
      },
      {
        "type": "STUBBING",
        "code": "given(mock.isSingleUse()).willReturn(true);",
        "line": 705,
        "locate": "Helper Method",
        "locationContext": {
          "methodName": "mockClientCf",
          "methodAnnotations": [
            "@Bean"
          ]
        }
      }
    ],
    "pattern_id": 10
  },
  {
    "variableName": "factory",
    "variableType": "AbstractClientConnectionFactory",
    "mockedClass": "AbstractClientConnectionFactory",
    "isReuseableMock": "Fully Shared",
    "mockPattern": "Creation:\n\u2014 Local Mock Creation in Helper\n\nStubbing:\n\u2014 Helper Method\n\nVerification:\n\u2014 None",
    "classContext": {
      "packageName": "org.springframework.integration.ip.tcp.connection",
      "filePath": "C:\\java tool\\Spring\\spring-integration\\spring-integration-ip\\src\\test\\java\\org\\springframework\\integration\\ip\\tcp\\connection\\CachingClientConnectionFactoryTests.java",
      "className": "CachingClientConnectionFactoryTests"
    },
    "statements": [
      {
        "type": "DECLARATION",
        "code": "AbstractClientConnectionFactory factory = mock(AbstractClientConnectionFactory.class);",
        "line": 368,
        "locate": "Helper Method",
        "locationContext": {
          "methodName": "createCCCFWith2Connections",
          "methodAnnotations": []
        }
      },
      {
        "type": "STUBBING",
        "code": "when(factory.isRunning()).thenReturn(true);",
        "line": 369,
        "locate": "Helper Method",
        "locationContext": {
          "methodName": "createCCCFWith2Connections",
          "methodAnnotations": []
        }
      },
      {
        "type": "STUBBING",
        "code": "when(factory.getConnection()).thenReturn(conn1, conn2);",
        "line": 370,
        "locate": "Helper Method",
        "locationContext": {
          "methodName": "createCCCFWith2Connections",
          "methodAnnotations": []
        }
      }
    ],
    "pattern_id": 10
  }
]