[
  {
    "variableName": "processor",
    "variableType": "MessageGroupProcessor",
    "mockedClass": "MessageGroupProcessor",
    "isReuseableMock": false,
    "mockPattern": "Creation:\n\u2014 Attribute Mock Creation\n\nStubbing:\n\u2014 Test Case\n\nVerification:\n\u2014 Test Case",
    "classContext": {
      "packageName": "org.springframework.integration.aggregator",
      "filePath": "C:\\java tool\\Spring\\spring-integration\\spring-integration-core\\src\\test\\java\\org\\springframework\\integration\\aggregator\\CorrelatingMessageHandlerTests.java",
      "className": "CorrelatingMessageHandlerTests"
    },
    "statements": [
      {
        "type": "FIELD_DECLARATION",
        "code": "private MessageGroupProcessor processor;",
        "line": 60,
        "locate": "Attribute",
        "locationContext": {
          "methodName": "[FieldDeclaration]",
          "methodAnnotations": []
        }
      },
      {
        "type": "ASSIGNMENT",
        "code": "processor = mock(MessageGroupProcessor.class);",
        "line": 70,
        "locate": "@Before",
        "locationContext": {
          "methodName": "initializeSubject",
          "methodAnnotations": [
            "@BeforeEach"
          ]
        }
      },
      {
        "type": "STUBBING",
        "code": "when(processor.processMessageGroup(any(MessageGroup.class))).thenReturn(MessageBuilder.withPayload(\"grouped\").build());",
        "line": 85,
        "locate": "Test Case",
        "locationContext": {
          "methodName": "bufferCompletesNormally",
          "methodAnnotations": [
            "@Test"
          ]
        }
      },
      {
        "type": "VERIFICATION",
        "code": "verify(processor).processMessageGroup(isA(SimpleMessageGroup.class));",
        "line": 95,
        "locate": "Test Case",
        "locationContext": {
          "methodName": "bufferCompletesNormally",
          "methodAnnotations": [
            "@Test"
          ]
        }
      },
      {
        "type": "VERIFICATION",
        "code": "verify(processor).processMessageGroup(isA(SimpleMessageGroup.class));",
        "line": 124,
        "locate": "Test Case",
        "locationContext": {
          "methodName": "bufferCompletesWithException",
          "methodAnnotations": [
            "@Test"
          ]
        }
      },
      {
        "type": "STUBBING",
        "code": "when(processor.processMessageGroup(any(MessageGroup.class))).thenReturn(MessageBuilder.withPayload(\"grouped\").build());",
        "line": 141,
        "locate": "Test Case",
        "locationContext": {
          "methodName": "shouldNotPruneWhileCompleting",
          "methodAnnotations": [
            "@Test"
          ]
        }
      }
    ],
    "pattern_id": 8
  }
]