[
  {
    "variableName": "mockChannel",
    "variableType": "Channel",
    "mockedClass": "Channel",
    "isReuseableMock": "Fully Localized",
    "mockPattern": "Creation:\n\u2014 Local Mock Creation in Test Case\n\nStubbing:\n\u2014 None\n\nVerification:\n\u2014 Test Case",
    "classContext": {
      "packageName": "org.springframework.integration.amqp.config",
      "filePath": "C:\\java tool\\Spring\\spring-integration\\spring-integration-amqp\\src\\test\\java\\org\\springframework\\integration\\amqp\\config\\AmqpOutboundChannelAdapterParserTests.java",
      "className": "AmqpOutboundChannelAdapterParserTests"
    },
    "statements": [
      {
        "type": "DECLARATION",
        "code": "Channel mockChannel = mock(Channel.class);",
        "line": 248,
        "locate": "Test Case",
        "locationContext": {
          "methodName": "testInt2773UseDefaultAmqpTemplateExchangeAndRoutingLey",
          "methodAnnotations": [
            "@Test"
          ]
        }
      },
      {
        "type": "VERIFICATION",
        "code": "Mockito.verify(mockChannel, Mockito.times(1)).basicPublish(Mockito.eq(\"default.test.exchange\"), Mockito.eq(\"default.routing.key\"), Mockito.anyBoolean(), Mockito.any(BasicProperties.class), Mockito.any(byte[].class));",
        "line": 257,
        "locate": "Test Case",
        "locationContext": {
          "methodName": "testInt2773UseDefaultAmqpTemplateExchangeAndRoutingLey",
          "methodAnnotations": [
            "@Test"
          ]
        }
      }
    ],
    "pattern_id": 5
  },
  {
    "variableName": "mockChannel",
    "variableType": "Channel",
    "mockedClass": "Channel",
    "isReuseableMock": "Fully Localized",
    "mockPattern": "Creation:\n\u2014 Local Mock Creation in Test Case\n\nStubbing:\n\u2014 None\n\nVerification:\n\u2014 Test Case",
    "classContext": {
      "packageName": "org.springframework.integration.amqp.config",
      "filePath": "C:\\java tool\\Spring\\spring-integration\\spring-integration-amqp\\src\\test\\java\\org\\springframework\\integration\\amqp\\config\\AmqpOutboundChannelAdapterParserTests.java",
      "className": "AmqpOutboundChannelAdapterParserTests"
    },
    "statements": [
      {
        "type": "DECLARATION",
        "code": "Channel mockChannel = mock(Channel.class);",
        "line": 266,
        "locate": "Test Case",
        "locationContext": {
          "methodName": "testInt2773WithDefaultAmqpTemplateExchangeAndRoutingKey",
          "methodAnnotations": [
            "@Test"
          ]
        }
      },
      {
        "type": "VERIFICATION",
        "code": "Mockito.verify(mockChannel, Mockito.times(1)).basicPublish(Mockito.eq(\"\"), Mockito.eq(\"\"), Mockito.anyBoolean(), Mockito.any(BasicProperties.class), Mockito.any(byte[].class));",
        "line": 276,
        "locate": "Test Case",
        "locationContext": {
          "methodName": "testInt2773WithDefaultAmqpTemplateExchangeAndRoutingKey",
          "methodAnnotations": [
            "@Test"
          ]
        }
      }
    ],
    "pattern_id": 5
  },
  {
    "variableName": "mockChannel",
    "variableType": "Channel",
    "mockedClass": "Channel",
    "isReuseableMock": "Fully Localized",
    "mockPattern": "Creation:\n\u2014 Local Mock Creation in Test Case\n\nStubbing:\n\u2014 None\n\nVerification:\n\u2014 Test Case",
    "classContext": {
      "packageName": "org.springframework.integration.amqp.config",
      "filePath": "C:\\java tool\\Spring\\spring-integration\\spring-integration-amqp\\src\\test\\java\\org\\springframework\\integration\\amqp\\config\\AmqpOutboundChannelAdapterParserTests.java",
      "className": "AmqpOutboundChannelAdapterParserTests"
    },
    "statements": [
      {
        "type": "DECLARATION",
        "code": "Channel mockChannel = mock(Channel.class);",
        "line": 284,
        "locate": "Test Case",
        "locationContext": {
          "methodName": "testInt2773WithOverrideToDefaultAmqpTemplateExchangeAndRoutingLey",
          "methodAnnotations": [
            "@Test"
          ]
        }
      },
      {
        "type": "VERIFICATION",
        "code": "Mockito.verify(mockChannel, Mockito.times(1)).basicPublish(Mockito.eq(\"\"), Mockito.eq(\"\"), Mockito.anyBoolean(), Mockito.any(BasicProperties.class), Mockito.any(byte[].class));",
        "line": 293,
        "locate": "Test Case",
        "locationContext": {
          "methodName": "testInt2773WithOverrideToDefaultAmqpTemplateExchangeAndRoutingLey",
          "methodAnnotations": [
            "@Test"
          ]
        }
      }
    ],
    "pattern_id": 5
  },
  {
    "variableName": "channel",
    "variableType": "Channel",
    "mockedClass": "Channel",
    "isReuseableMock": "Fully Localized",
    "mockPattern": "Creation:\n\u2014 Local Mock Creation in Test Case\n\nStubbing:\n\u2014 None\n\nVerification:\n\u2014 Test Case",
    "classContext": {
      "packageName": "org.springframework.integration.amqp.inbound",
      "filePath": "C:\\java tool\\Spring\\spring-integration\\spring-integration-amqp\\src\\test\\java\\org\\springframework\\integration\\amqp\\inbound\\AmqpMessageSourceTests.java",
      "className": "AmqpMessageSourceTests"
    },
    "statements": [
      {
        "type": "DECLARATION",
        "code": "Channel channel = mock(Channel.class);",
        "line": 59,
        "locate": "Test Case",
        "locationContext": {
          "methodName": "testAck",
          "methodAnnotations": [
            "@Test"
          ]
        }
      },
      {
        "type": "VERIFICATION",
        "code": "verify(channel).basicAck(123L, false);",
        "line": 86,
        "locate": "Test Case",
        "locationContext": {
          "methodName": "testAck",
          "methodAnnotations": [
            "@Test"
          ]
        }
      },
      {
        "type": "VERIFICATION",
        "code": "verify(channel, times(2)).close();",
        "line": 92,
        "locate": "Test Case",
        "locationContext": {
          "methodName": "testAck",
          "methodAnnotations": [
            "@Test"
          ]
        }
      }
    ],
    "pattern_id": 5
  },
  {
    "variableName": "channel",
    "variableType": "Channel",
    "mockedClass": "Channel",
    "isReuseableMock": "Fully Localized",
    "mockPattern": "Creation:\n\u2014 Local Mock Creation in Test Case\n\nStubbing:\n\u2014 None\n\nVerification:\n\u2014 Test Case",
    "classContext": {
      "packageName": "org.springframework.integration.amqp.inbound",
      "filePath": "C:\\java tool\\Spring\\spring-integration\\spring-integration-amqp\\src\\test\\java\\org\\springframework\\integration\\amqp\\inbound\\AmqpMessageSourceTests.java",
      "className": "AmqpMessageSourceTests"
    },
    "statements": [
      {
        "type": "DECLARATION",
        "code": "Channel channel = mock(Channel.class);",
        "line": 107,
        "locate": "Test Case",
        "locationContext": {
          "methodName": "testNackOrRequeue",
          "methodAnnotations": []
        }
      },
      {
        "type": "VERIFICATION",
        "code": "verify(channel).basicReject(123L, requeue);",
        "line": 125,
        "locate": "Test Case",
        "locationContext": {
          "methodName": "testNackOrRequeue",
          "methodAnnotations": []
        }
      },
      {
        "type": "VERIFICATION",
        "code": "verify(channel).close();",
        "line": 128,
        "locate": "Test Case",
        "locationContext": {
          "methodName": "testNackOrRequeue",
          "methodAnnotations": []
        }
      }
    ],
    "pattern_id": 5
  }
]