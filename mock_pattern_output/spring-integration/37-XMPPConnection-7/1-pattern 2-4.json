[
  {
    "variableName": "xmppConnection",
    "variableType": "XMPPConnection",
    "mockedClass": "XMPPConnection",
    "isReuseableMock": "Fully Localized",
    "mockPattern": "Creation:\n\u2014 Local Mock Creation in Test Case\n\nStubbing:\n\u2014 None\n\nVerification:\n\u2014 None",
    "classContext": {
      "packageName": "org.springframework.integration.xmpp.config",
      "filePath": "C:\\java tool\\Spring\\spring-integration\\spring-integration-xmpp\\src\\test\\java\\org\\springframework\\integration\\xmpp\\config\\ChatMessageInboundChannelAdapterParserTests.java",
      "className": "ChatMessageInboundChannelAdapterParserTests"
    },
    "statements": [
      {
        "type": "DECLARATION",
        "code": "XMPPConnection xmppConnection = Mockito.mock(XMPPConnection.class);",
        "line": 93,
        "locate": "Test Case",
        "locationContext": {
          "methodName": "testInboundAdapterUsageWithHeaderMapper",
          "methodAnnotations": [
            "@Test"
          ]
        }
      }
    ],
    "pattern_id": 2
  },
  {
    "variableName": "connection",
    "variableType": "XMPPConnection",
    "mockedClass": "XMPPConnection",
    "isReuseableMock": "Fully Localized",
    "mockPattern": "Creation:\n\u2014 Local Mock Creation in Test Case\n\nStubbing:\n\u2014 None\n\nVerification:\n\u2014 None",
    "classContext": {
      "packageName": "org.springframework.integration.xmpp.inbound",
      "filePath": "C:\\java tool\\Spring\\spring-integration\\spring-integration-xmpp\\src\\test\\java\\org\\springframework\\integration\\xmpp\\inbound\\PresenceListeningEndpointTests.java",
      "className": "PresenceListeningEndpointTests"
    },
    "statements": [
      {
        "type": "DECLARATION",
        "code": "XMPPConnection connection = mock(XMPPConnection.class);",
        "line": 55,
        "locate": "Test Case",
        "locationContext": {
          "methodName": "testEndpointLifecycle",
          "methodAnnotations": [
            "@Test",
            "@SuppressWarnings"
          ]
        }
      }
    ],
    "pattern_id": 2
  },
  {
    "variableName": "connection",
    "variableType": "XMPPConnection",
    "mockedClass": "XMPPConnection",
    "isReuseableMock": "Fully Localized",
    "mockPattern": "Creation:\n\u2014 Local Mock Creation in Test Case\n\nStubbing:\n\u2014 None\n\nVerification:\n\u2014 None",
    "classContext": {
      "packageName": "org.springframework.integration.xmpp.inbound",
      "filePath": "C:\\java tool\\Spring\\spring-integration\\spring-integration-xmpp\\src\\test\\java\\org\\springframework\\integration\\xmpp\\inbound\\PresenceListeningEndpointTests.java",
      "className": "PresenceListeningEndpointTests"
    },
    "statements": [
      {
        "type": "DECLARATION",
        "code": "XMPPConnection connection = mock(XMPPConnection.class);",
        "line": 80,
        "locate": "Test Case",
        "locationContext": {
          "methodName": "testRosterPresenceChangeEvent",
          "methodAnnotations": [
            "@Test"
          ]
        }
      }
    ],
    "pattern_id": 2
  },
  {
    "variableName": "connection",
    "variableType": "XMPPConnection",
    "mockedClass": "XMPPConnection",
    "isReuseableMock": "Fully Localized",
    "mockPattern": "Creation:\n\u2014 Local Mock Creation in Test Case\n\nStubbing:\n\u2014 None\n\nVerification:\n\u2014 None",
    "classContext": {
      "packageName": "org.springframework.integration.xmpp.inbound",
      "filePath": "C:\\java tool\\Spring\\spring-integration\\spring-integration-xmpp\\src\\test\\java\\org\\springframework\\integration\\xmpp\\inbound\\PresenceListeningEndpointTests.java",
      "className": "PresenceListeningEndpointTests"
    },
    "statements": [
      {
        "type": "DECLARATION",
        "code": "XMPPConnection connection = mock(XMPPConnection.class);",
        "line": 120,
        "locate": "Test Case",
        "locationContext": {
          "methodName": "testWithErrorChannel",
          "methodAnnotations": [
            "@Test"
          ]
        }
      }
    ],
    "pattern_id": 2
  }
]