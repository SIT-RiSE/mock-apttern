[
  {
    "variableName": "exceptionRegistry",
    "variableType": "List<Exception>",
    "mockedClass": "List",
    "isReuseableMock": "Hybrid",
    "mockPattern": "Creation:\n\u2014 Attribute Mock Creation\n\nStubbing:\n\u2014 None\n\nVerification:\n\u2014 Test Case",
    "classContext": {
      "packageName": "org.springframework.integration.channel",
      "filePath": "C:\\java tool\\Spring\\spring-integration\\spring-integration-core\\src\\test\\java\\org\\springframework\\integration\\channel\\MixedDispatcherConfigurationScenarioTests.java",
      "className": "MixedDispatcherConfigurationScenarioTests"
    },
    "statements": [
      {
        "type": "FIELD_MOCK_CREATION",
        "code": "@SuppressWarnings(\"unchecked\")\r\nprivate final List<Exception> exceptionRegistry = mock(List.class);",
        "line": 69,
        "locate": "Attribute",
        "locationContext": {
          "methodName": "[FieldDeclaration]",
          "methodAnnotations": []
        }
      },
      {
        "type": "VERIFICATION",
        "code": "verify(exceptionRegistry, times(TOTAL_EXECUTIONS)).add(any(Exception.class));",
        "line": 142,
        "locate": "Test Case",
        "locationContext": {
          "methodName": "noFailoverNoLoadBalancingConcurrent",
          "methodAnnotations": [
            "@Test"
          ]
        }
      },
      {
        "type": "VERIFICATION",
        "code": "verify(exceptionRegistry, times(TOTAL_EXECUTIONS)).add(any(Exception.class));",
        "line": 179,
        "locate": "Test Case",
        "locationContext": {
          "methodName": "noFailoverNoLoadBalancingWithExecutorConcurrent",
          "methodAnnotations": [
            "@Test"
          ]
        }
      },
      {
        "type": "VERIFICATION",
        "code": "verify(exceptionRegistry, times(14)).add(any(Exception.class));",
        "line": 258,
        "locate": "Test Case",
        "locationContext": {
          "methodName": "noFailoverLoadBalancingConcurrent",
          "methodAnnotations": [
            "@Test"
          ]
        }
      },
      {
        "type": "VERIFICATION",
        "code": "verify(exceptionRegistry, times(14)).add(any(Exception.class));",
        "line": 308,
        "locate": "Test Case",
        "locationContext": {
          "methodName": "noFailoverLoadBalancingWithExecutorConcurrent",
          "methodAnnotations": [
            "@Test"
          ]
        }
      },
      {
        "type": "VERIFICATION",
        "code": "verify(exceptionRegistry, never()).add(any(Exception.class));",
        "line": 383,
        "locate": "Test Case",
        "locationContext": {
          "methodName": "failoverNoLoadBalancingConcurrent",
          "methodAnnotations": [
            "@Test"
          ]
        }
      }
    ],
    "pattern_id": 9
  }
]