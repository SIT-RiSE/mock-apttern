[
  {
    "variableName": "folder",
    "variableType": "IMAPFolder",
    "mockedClass": "IMAPFolder",
    "isReuseableMock": "Fully Localized",
    "mockPattern": "Creation:\n\u2014 Local Mock Creation in Test Case\n\nStubbing:\n\u2014 Test Case\n\nVerification:\n\u2014 None",
    "classContext": {
      "packageName": "org.springframework.integration.mail",
      "filePath": "C:\\java tool\\Spring\\spring-integration\\spring-integration-mail\\src\\test\\java\\org\\springframework\\integration\\mail\\ImapMailReceiverTests.java",
      "className": "ImapMailReceiverTests"
    },
    "statements": [
      {
        "type": "DECLARATION",
        "code": "IMAPFolder folder = mock(IMAPFolder.class);",
        "line": 580,
        "locate": "Test Case",
        "locationContext": {
          "methodName": "testMessageHistory",
          "methodAnnotations": [
            "@Test"
          ]
        }
      },
      {
        "type": "STUBBING",
        "code": "given(folder.isOpen()).willReturn(true);",
        "line": 581,
        "locate": "Test Case",
        "locationContext": {
          "methodName": "testMessageHistory",
          "methodAnnotations": [
            "@Test"
          ]
        }
      },
      {
        "type": "STUBBING",
        "code": "given(folder.hasNewMessages()).willReturn(true);",
        "line": 582,
        "locate": "Test Case",
        "locationContext": {
          "methodName": "testMessageHistory",
          "methodAnnotations": [
            "@Test"
          ]
        }
      },
      {
        "type": "STUBBING",
        "code": "given(folder.getPermanentFlags()).willReturn(new Flags(Flags.Flag.USER));",
        "line": 583,
        "locate": "Test Case",
        "locationContext": {
          "methodName": "testMessageHistory",
          "methodAnnotations": [
            "@Test"
          ]
        }
      }
    ],
    "pattern_id": 1
  },
  {
    "variableName": "folder",
    "variableType": "IMAPFolder",
    "mockedClass": "IMAPFolder",
    "isReuseableMock": "Fully Localized",
    "mockPattern": "Creation:\n\u2014 Local Mock Creation in Test Case\n\nStubbing:\n\u2014 Test Case\n\nVerification:\n\u2014 None",
    "classContext": {
      "packageName": "org.springframework.integration.mail",
      "filePath": "C:\\java tool\\Spring\\spring-integration\\spring-integration-mail\\src\\test\\java\\org\\springframework\\integration\\mail\\ImapMailReceiverTests.java",
      "className": "ImapMailReceiverTests"
    },
    "statements": [
      {
        "type": "DECLARATION",
        "code": "final IMAPFolder folder = mock(IMAPFolder.class);",
        "line": 673,
        "locate": "Test Case",
        "locationContext": {
          "methodName": "testNoInitialIdleDelayWhenRecentNotSupported",
          "methodAnnotations": [
            "@SuppressWarnings",
            "@Test"
          ]
        }
      },
      {
        "type": "STUBBING",
        "code": "given(folder.getPermanentFlags()).willReturn(new Flags(Flags.Flag.USER));",
        "line": 674,
        "locate": "Test Case",
        "locationContext": {
          "methodName": "testNoInitialIdleDelayWhenRecentNotSupported",
          "methodAnnotations": [
            "@SuppressWarnings",
            "@Test"
          ]
        }
      },
      {
        "type": "STUBBING",
        "code": "given(folder.isOpen()).willReturn(false).willReturn(true);",
        "line": 675,
        "locate": "Test Case",
        "locationContext": {
          "methodName": "testNoInitialIdleDelayWhenRecentNotSupported",
          "methodAnnotations": [
            "@SuppressWarnings",
            "@Test"
          ]
        }
      },
      {
        "type": "STUBBING",
        "code": "given(folder.exists()).willReturn(true);",
        "line": 676,
        "locate": "Test Case",
        "locationContext": {
          "methodName": "testNoInitialIdleDelayWhenRecentNotSupported",
          "methodAnnotations": [
            "@SuppressWarnings",
            "@Test"
          ]
        }
      }
    ],
    "pattern_id": 1
  },
  {
    "variableName": "folder",
    "variableType": "IMAPFolder",
    "mockedClass": "IMAPFolder",
    "isReuseableMock": "Fully Localized",
    "mockPattern": "Creation:\n\u2014 Local Mock Creation in Test Case\n\nStubbing:\n\u2014 Test Case\n\nVerification:\n\u2014 None",
    "classContext": {
      "packageName": "org.springframework.integration.mail",
      "filePath": "C:\\java tool\\Spring\\spring-integration\\spring-integration-mail\\src\\test\\java\\org\\springframework\\integration\\mail\\ImapMailReceiverTests.java",
      "className": "ImapMailReceiverTests"
    },
    "statements": [
      {
        "type": "DECLARATION",
        "code": "IMAPFolder folder = mock(IMAPFolder.class);",
        "line": 742,
        "locate": "Test Case",
        "locationContext": {
          "methodName": "testInitialIdleDelayWhenRecentIsSupported",
          "methodAnnotations": [
            "@Test"
          ]
        }
      },
      {
        "type": "STUBBING",
        "code": "given(folder.getPermanentFlags()).willReturn(new Flags(Flags.Flag.RECENT));",
        "line": 743,
        "locate": "Test Case",
        "locationContext": {
          "methodName": "testInitialIdleDelayWhenRecentIsSupported",
          "methodAnnotations": [
            "@Test"
          ]
        }
      },
      {
        "type": "STUBBING",
        "code": "given(folder.isOpen()).willReturn(false).willReturn(true);",
        "line": 744,
        "locate": "Test Case",
        "locationContext": {
          "methodName": "testInitialIdleDelayWhenRecentIsSupported",
          "methodAnnotations": [
            "@Test"
          ]
        }
      },
      {
        "type": "STUBBING",
        "code": "given(folder.exists()).willReturn(true);",
        "line": 745,
        "locate": "Test Case",
        "locationContext": {
          "methodName": "testInitialIdleDelayWhenRecentIsSupported",
          "methodAnnotations": [
            "@Test"
          ]
        }
      }
    ],
    "pattern_id": 1
  },
  {
    "variableName": "folder",
    "variableType": "IMAPFolder",
    "mockedClass": "IMAPFolder",
    "isReuseableMock": "Fully Localized",
    "mockPattern": "Creation:\n\u2014 Local Mock Creation in Test Case\n\nStubbing:\n\u2014 Test Case\n\nVerification:\n\u2014 None",
    "classContext": {
      "packageName": "org.springframework.integration.mail",
      "filePath": "C:\\java tool\\Spring\\spring-integration\\spring-integration-mail\\src\\test\\java\\org\\springframework\\integration\\mail\\ImapMailReceiverTests.java",
      "className": "ImapMailReceiverTests"
    },
    "statements": [
      {
        "type": "DECLARATION",
        "code": "IMAPFolder folder = mock(IMAPFolder.class);",
        "line": 957,
        "locate": "Test Case",
        "locationContext": {
          "methodName": "testIdleReconnects",
          "methodAnnotations": [
            "@Test"
          ]
        }
      },
      {
        "type": "STUBBING",
        "code": "given(folder.getPermanentFlags()).willReturn(new Flags(Flags.Flag.USER));",
        "line": 958,
        "locate": "Test Case",
        "locationContext": {
          "methodName": "testIdleReconnects",
          "methodAnnotations": [
            "@Test"
          ]
        }
      },
      {
        "type": "STUBBING",
        "code": "given(folder.isOpen()).willReturn(false).willReturn(true);",
        "line": 959,
        "locate": "Test Case",
        "locationContext": {
          "methodName": "testIdleReconnects",
          "methodAnnotations": [
            "@Test"
          ]
        }
      },
      {
        "type": "STUBBING",
        "code": "given(folder.exists()).willReturn(true);",
        "line": 960,
        "locate": "Test Case",
        "locationContext": {
          "methodName": "testIdleReconnects",
          "methodAnnotations": [
            "@Test"
          ]
        }
      },
      {
        "type": "STUBBING",
        "code": "given(folder.hasNewMessages()).willReturn(true);",
        "line": 961,
        "locate": "Test Case",
        "locationContext": {
          "methodName": "testIdleReconnects",
          "methodAnnotations": [
            "@Test"
          ]
        }
      }
    ],
    "pattern_id": 1
  }
]