[
  {
    "variableName": "folder",
    "variableType": "Folder",
    "mockedClass": "Folder",
    "isReuseableMock": "Fully Localized",
    "mockPattern": "Creation:\n\u2014 Local Mock Creation in Test Case\n\nStubbing:\n\u2014 Test Case\n\nVerification:\n\u2014 None",
    "classContext": {
      "packageName": "org.springframework.integration.mail.config",
      "filePath": "C:\\java tool\\Spring\\spring-integration\\spring-integration-mail\\src\\test\\java\\org\\springframework\\integration\\mail\\config\\ImapIdleIntegrationTests.java",
      "className": "ImapIdleIntegrationTests"
    },
    "statements": [
      {
        "type": "DECLARATION",
        "code": "Folder folder = mock(Folder.class);",
        "line": 75,
        "locate": "Test Case",
        "locationContext": {
          "methodName": "testWithTransactionSynchronization",
          "methodAnnotations": [
            "@SuppressWarnings",
            "@Test"
          ]
        }
      },
      {
        "type": "STUBBING",
        "code": "when(folder.isOpen()).thenReturn(true);",
        "line": 76,
        "locate": "Test Case",
        "locationContext": {
          "methodName": "testWithTransactionSynchronization",
          "methodAnnotations": [
            "@SuppressWarnings",
            "@Test"
          ]
        }
      }
    ],
    "pattern_id": 1
  },
  {
    "variableName": "folder",
    "variableType": "Folder",
    "mockedClass": "Folder",
    "isReuseableMock": "Fully Localized",
    "mockPattern": "Creation:\n\u2014 Local Mock Creation in Test Case\n\nStubbing:\n\u2014 Test Case\n\nVerification:\n\u2014 None",
    "classContext": {
      "packageName": "org.springframework.integration.mail",
      "filePath": "C:\\java tool\\Spring\\spring-integration\\spring-integration-mail\\src\\test\\java\\org\\springframework\\integration\\mail\\ImapMailReceiverTests.java",
      "className": "ImapMailReceiverTests"
    },
    "statements": [
      {
        "type": "DECLARATION",
        "code": "Folder folder = mock(Folder.class);",
        "line": 431,
        "locate": "Test Case",
        "locationContext": {
          "methodName": "receiveMarkAsReadAndDelete",
          "methodAnnotations": [
            "@Test"
          ]
        }
      },
      {
        "type": "STUBBING",
        "code": "given(folder.getPermanentFlags()).willReturn(new Flags(Flags.Flag.USER));",
        "line": 432,
        "locate": "Test Case",
        "locationContext": {
          "methodName": "receiveMarkAsReadAndDelete",
          "methodAnnotations": [
            "@Test"
          ]
        }
      },
      {
        "type": "STUBBING",
        "code": "given(folder.isOpen()).willReturn(true);",
        "line": 433,
        "locate": "Test Case",
        "locationContext": {
          "methodName": "receiveMarkAsReadAndDelete",
          "methodAnnotations": [
            "@Test"
          ]
        }
      }
    ],
    "pattern_id": 1
  },
  {
    "variableName": "folder",
    "variableType": "Folder",
    "mockedClass": "Folder",
    "isReuseableMock": "Fully Localized",
    "mockPattern": "Creation:\n\u2014 Local Mock Creation in Test Case\n\nStubbing:\n\u2014 Test Case\n\nVerification:\n\u2014 None",
    "classContext": {
      "packageName": "org.springframework.integration.mail",
      "filePath": "C:\\java tool\\Spring\\spring-integration\\spring-integration-mail\\src\\test\\java\\org\\springframework\\integration\\mail\\ImapMailReceiverTests.java",
      "className": "ImapMailReceiverTests"
    },
    "statements": [
      {
        "type": "DECLARATION",
        "code": "Folder folder = mock(Folder.class);",
        "line": 469,
        "locate": "Test Case",
        "locationContext": {
          "methodName": "receiveAndDontMarkAsRead",
          "methodAnnotations": [
            "@Test"
          ]
        }
      },
      {
        "type": "STUBBING",
        "code": "given(folder.getPermanentFlags()).willReturn(new Flags(Flags.Flag.USER));",
        "line": 470,
        "locate": "Test Case",
        "locationContext": {
          "methodName": "receiveAndDontMarkAsRead",
          "methodAnnotations": [
            "@Test"
          ]
        }
      },
      {
        "type": "STUBBING",
        "code": "given(folder.isOpen()).willReturn(true);",
        "line": 471,
        "locate": "Test Case",
        "locationContext": {
          "methodName": "receiveAndDontMarkAsRead",
          "methodAnnotations": [
            "@Test"
          ]
        }
      }
    ],
    "pattern_id": 1
  },
  {
    "variableName": "folder",
    "variableType": "Folder",
    "mockedClass": "Folder",
    "isReuseableMock": "Fully Localized",
    "mockPattern": "Creation:\n\u2014 Local Mock Creation in Test Case\n\nStubbing:\n\u2014 Test Case\n\nVerification:\n\u2014 None",
    "classContext": {
      "packageName": "org.springframework.integration.mail",
      "filePath": "C:\\java tool\\Spring\\spring-integration\\spring-integration-mail\\src\\test\\java\\org\\springframework\\integration\\mail\\ImapMailReceiverTests.java",
      "className": "ImapMailReceiverTests"
    },
    "statements": [
      {
        "type": "DECLARATION",
        "code": "Folder folder = mock(Folder.class);",
        "line": 500,
        "locate": "Test Case",
        "locationContext": {
          "methodName": "receiveAndDontMarkAsReadButDelete",
          "methodAnnotations": [
            "@Test"
          ]
        }
      },
      {
        "type": "STUBBING",
        "code": "given(folder.getPermanentFlags()).willReturn(new Flags(Flags.Flag.USER));",
        "line": 501,
        "locate": "Test Case",
        "locationContext": {
          "methodName": "receiveAndDontMarkAsReadButDelete",
          "methodAnnotations": [
            "@Test"
          ]
        }
      },
      {
        "type": "STUBBING",
        "code": "given(folder.isOpen()).willReturn(true);",
        "line": 502,
        "locate": "Test Case",
        "locationContext": {
          "methodName": "receiveAndDontMarkAsReadButDelete",
          "methodAnnotations": [
            "@Test"
          ]
        }
      }
    ],
    "pattern_id": 1
  },
  {
    "variableName": "folder",
    "variableType": "Folder",
    "mockedClass": "Folder",
    "isReuseableMock": "Fully Localized",
    "mockPattern": "Creation:\n\u2014 Local Mock Creation in Test Case\n\nStubbing:\n\u2014 Test Case\n\nVerification:\n\u2014 None",
    "classContext": {
      "packageName": "org.springframework.integration.mail",
      "filePath": "C:\\java tool\\Spring\\spring-integration\\spring-integration-mail\\src\\test\\java\\org\\springframework\\integration\\mail\\ImapMailReceiverTests.java",
      "className": "ImapMailReceiverTests"
    },
    "statements": [
      {
        "type": "DECLARATION",
        "code": "Folder folder = mock(Folder.class);",
        "line": 538,
        "locate": "Test Case",
        "locationContext": {
          "methodName": "receiveAndIgnoreMarkAsReadDontDelete",
          "methodAnnotations": [
            "@Test"
          ]
        }
      },
      {
        "type": "STUBBING",
        "code": "given(folder.getPermanentFlags()).willReturn(new Flags(Flags.Flag.USER));",
        "line": 539,
        "locate": "Test Case",
        "locationContext": {
          "methodName": "receiveAndIgnoreMarkAsReadDontDelete",
          "methodAnnotations": [
            "@Test"
          ]
        }
      },
      {
        "type": "STUBBING",
        "code": "given(folder.isOpen()).willReturn(true);",
        "line": 540,
        "locate": "Test Case",
        "locationContext": {
          "methodName": "receiveAndIgnoreMarkAsReadDontDelete",
          "methodAnnotations": [
            "@Test"
          ]
        }
      }
    ],
    "pattern_id": 1
  },
  {
    "variableName": "folder",
    "variableType": "Folder",
    "mockedClass": "IMAPFolder",
    "isReuseableMock": "Fully Localized",
    "mockPattern": "Creation:\n\u2014 Local Mock Creation in Test Case\n\nStubbing:\n\u2014 Test Case\n\nVerification:\n\u2014 None",
    "classContext": {
      "packageName": "org.springframework.integration.mail",
      "filePath": "C:\\java tool\\Spring\\spring-integration\\spring-integration-mail\\src\\test\\java\\org\\springframework\\integration\\mail\\ImapMailReceiverTests.java",
      "className": "ImapMailReceiverTests"
    },
    "statements": [
      {
        "type": "DECLARATION",
        "code": "Folder folder = mock(IMAPFolder.class);",
        "line": 633,
        "locate": "Test Case",
        "locationContext": {
          "methodName": "testIdleChannelAdapterException",
          "methodAnnotations": [
            "@Test"
          ]
        }
      },
      {
        "type": "STUBBING",
        "code": "given(folder.getPermanentFlags()).willReturn(new Flags(Flags.Flag.USER));",
        "line": 634,
        "locate": "Test Case",
        "locationContext": {
          "methodName": "testIdleChannelAdapterException",
          "methodAnnotations": [
            "@Test"
          ]
        }
      },
      {
        "type": "STUBBING",
        "code": "given(folder.isOpen()).willReturn(true);",
        "line": 635,
        "locate": "Test Case",
        "locationContext": {
          "methodName": "testIdleChannelAdapterException",
          "methodAnnotations": [
            "@Test"
          ]
        }
      },
      {
        "type": "STUBBING",
        "code": "given(folder.exists()).willReturn(true);",
        "line": 636,
        "locate": "Test Case",
        "locationContext": {
          "methodName": "testIdleChannelAdapterException",
          "methodAnnotations": [
            "@Test"
          ]
        }
      }
    ],
    "pattern_id": 1
  },
  {
    "variableName": "folder",
    "variableType": "Folder",
    "mockedClass": "Folder",
    "isReuseableMock": "Fully Localized",
    "mockPattern": "Creation:\n\u2014 Local Mock Creation in Test Case\n\nStubbing:\n\u2014 Test Case\n\nVerification:\n\u2014 None",
    "classContext": {
      "packageName": "org.springframework.integration.mail",
      "filePath": "C:\\java tool\\Spring\\spring-integration\\spring-integration-mail\\src\\test\\java\\org\\springframework\\integration\\mail\\ImapMailReceiverTests.java",
      "className": "ImapMailReceiverTests"
    },
    "statements": [
      {
        "type": "DECLARATION",
        "code": "Folder folder = mock(Folder.class);",
        "line": 810,
        "locate": "Test Case",
        "locationContext": {
          "methodName": "testImapLifecycleForRaceCondition",
          "methodAnnotations": [
            "@Test"
          ]
        }
      },
      {
        "type": "STUBBING",
        "code": "given(folder.exists()).willReturn(true);",
        "line": 811,
        "locate": "Test Case",
        "locationContext": {
          "methodName": "testImapLifecycleForRaceCondition",
          "methodAnnotations": [
            "@Test"
          ]
        }
      },
      {
        "type": "STUBBING",
        "code": "given(folder.isOpen()).willReturn(true);",
        "line": 812,
        "locate": "Test Case",
        "locationContext": {
          "methodName": "testImapLifecycleForRaceCondition",
          "methodAnnotations": [
            "@Test"
          ]
        }
      },
      {
        "type": "STUBBING",
        "code": "given(folder.search(Mockito.any())).willReturn(new Message[] {});",
        "line": 813,
        "locate": "Test Case",
        "locationContext": {
          "methodName": "testImapLifecycleForRaceCondition",
          "methodAnnotations": [
            "@Test"
          ]
        }
      },
      {
        "type": "STUBBING",
        "code": "given(folder.getPermanentFlags()).willReturn(new Flags(Flags.Flag.USER));",
        "line": 815,
        "locate": "Test Case",
        "locationContext": {
          "methodName": "testImapLifecycleForRaceCondition",
          "methodAnnotations": [
            "@Test"
          ]
        }
      }
    ],
    "pattern_id": 1
  },
  {
    "variableName": "folder",
    "variableType": "Folder",
    "mockedClass": "Folder",
    "isReuseableMock": "Fully Localized",
    "mockPattern": "Creation:\n\u2014 Local Mock Creation in Test Case\n\nStubbing:\n\u2014 Test Case\n\nVerification:\n\u2014 None",
    "classContext": {
      "packageName": "org.springframework.integration.mail",
      "filePath": "C:\\java tool\\Spring\\spring-integration\\spring-integration-mail\\src\\test\\java\\org\\springframework\\integration\\mail\\ImapMailReceiverTests.java",
      "className": "ImapMailReceiverTests"
    },
    "statements": [
      {
        "type": "DECLARATION",
        "code": "Folder folder = mock(Folder.class);",
        "line": 890,
        "locate": "Test Case",
        "locationContext": {
          "methodName": "testAttachmentsGuts",
          "methodAnnotations": []
        }
      },
      {
        "type": "STUBBING",
        "code": "given(folder.exists()).willReturn(true);",
        "line": 891,
        "locate": "Test Case",
        "locationContext": {
          "methodName": "testAttachmentsGuts",
          "methodAnnotations": []
        }
      },
      {
        "type": "STUBBING",
        "code": "given(folder.isOpen()).willReturn(true);",
        "line": 892,
        "locate": "Test Case",
        "locationContext": {
          "methodName": "testAttachmentsGuts",
          "methodAnnotations": []
        }
      },
      {
        "type": "STUBBING",
        "code": "given(folder.search(Mockito.any())).willReturn(new Message[] { message });",
        "line": 895,
        "locate": "Test Case",
        "locationContext": {
          "methodName": "testAttachmentsGuts",
          "methodAnnotations": []
        }
      },
      {
        "type": "STUBBING",
        "code": "given(folder.getPermanentFlags()).willReturn(new Flags(Flags.Flag.USER));",
        "line": 897,
        "locate": "Test Case",
        "locationContext": {
          "methodName": "testAttachmentsGuts",
          "methodAnnotations": []
        }
      }
    ],
    "pattern_id": 1
  },
  {
    "variableName": "folder",
    "variableType": "Folder",
    "mockedClass": "Folder",
    "isReuseableMock": "Fully Localized",
    "mockPattern": "Creation:\n\u2014 Local Mock Creation in Test Case\n\nStubbing:\n\u2014 Test Case\n\nVerification:\n\u2014 None",
    "classContext": {
      "packageName": "org.springframework.integration.mail",
      "filePath": "C:\\java tool\\Spring\\spring-integration\\spring-integration-mail\\src\\test\\java\\org\\springframework\\integration\\mail\\ImapMailSearchTermsTests.java",
      "className": "ImapMailSearchTermsTests"
    },
    "statements": [
      {
        "type": "DECLARATION",
        "code": "Folder folder = mock(Folder.class);",
        "line": 93,
        "locate": "Test Case",
        "locationContext": {
          "methodName": "validateSearchTermsWhenShouldMarkAsReadWithExistingFlags",
          "methodAnnotations": [
            "@Test"
          ]
        }
      },
      {
        "type": "STUBBING",
        "code": "when(folder.getPermanentFlags()).thenReturn(new Flags(Flags.Flag.USER));",
        "line": 94,
        "locate": "Test Case",
        "locationContext": {
          "methodName": "validateSearchTermsWhenShouldMarkAsReadWithExistingFlags",
          "methodAnnotations": [
            "@Test"
          ]
        }
      }
    ],
    "pattern_id": 1
  },
  {
    "variableName": "folder",
    "variableType": "Folder",
    "mockedClass": "Folder",
    "isReuseableMock": "Fully Localized",
    "mockPattern": "Creation:\n\u2014 Local Mock Creation in Test Case\n\nStubbing:\n\u2014 Test Case\n\nVerification:\n\u2014 None",
    "classContext": {
      "packageName": "org.springframework.integration.mail",
      "filePath": "C:\\java tool\\Spring\\spring-integration\\spring-integration-mail\\src\\test\\java\\org\\springframework\\integration\\mail\\ImapMailSearchTermsTests.java",
      "className": "ImapMailSearchTermsTests"
    },
    "statements": [
      {
        "type": "DECLARATION",
        "code": "Folder folder = mock(Folder.class);",
        "line": 123,
        "locate": "Test Case",
        "locationContext": {
          "methodName": "validateSearchTermsWhenShouldNotMarkAsReadNoExistingFlags",
          "methodAnnotations": [
            "@Test"
          ]
        }
      },
      {
        "type": "STUBBING",
        "code": "when(folder.getPermanentFlags()).thenReturn(new Flags(Flags.Flag.USER));",
        "line": 124,
        "locate": "Test Case",
        "locationContext": {
          "methodName": "validateSearchTermsWhenShouldNotMarkAsReadNoExistingFlags",
          "methodAnnotations": [
            "@Test"
          ]
        }
      }
    ],
    "pattern_id": 1
  },
  {
    "variableName": "folder",
    "variableType": "Folder",
    "mockedClass": "Folder",
    "isReuseableMock": "Fully Localized",
    "mockPattern": "Creation:\n\u2014 Local Mock Creation in Test Case\n\nStubbing:\n\u2014 Test Case\n\nVerification:\n\u2014 None",
    "classContext": {
      "packageName": "org.springframework.integration.mail",
      "filePath": "C:\\java tool\\Spring\\spring-integration\\spring-integration-mail\\src\\test\\java\\org\\springframework\\integration\\mail\\Pop3MailReceiverTests.java",
      "className": "Pop3MailReceiverTests"
    },
    "statements": [
      {
        "type": "DECLARATION",
        "code": "Folder folder = mock(Folder.class);",
        "line": 55,
        "locate": "Test Case",
        "locationContext": {
          "methodName": "receiveAndDelete",
          "methodAnnotations": [
            "@Test"
          ]
        }
      },
      {
        "type": "STUBBING",
        "code": "when(folder.getPermanentFlags()).thenReturn(new Flags(Flags.Flag.USER));",
        "line": 56,
        "locate": "Test Case",
        "locationContext": {
          "methodName": "receiveAndDelete",
          "methodAnnotations": [
            "@Test"
          ]
        }
      }
    ],
    "pattern_id": 1
  },
  {
    "variableName": "folder",
    "variableType": "Folder",
    "mockedClass": "Folder",
    "isReuseableMock": "Fully Localized",
    "mockPattern": "Creation:\n\u2014 Local Mock Creation in Test Case\n\nStubbing:\n\u2014 Test Case\n\nVerification:\n\u2014 None",
    "classContext": {
      "packageName": "org.springframework.integration.mail",
      "filePath": "C:\\java tool\\Spring\\spring-integration\\spring-integration-mail\\src\\test\\java\\org\\springframework\\integration\\mail\\Pop3MailReceiverTests.java",
      "className": "Pop3MailReceiverTests"
    },
    "statements": [
      {
        "type": "DECLARATION",
        "code": "Folder folder = mock(Folder.class);",
        "line": 91,
        "locate": "Test Case",
        "locationContext": {
          "methodName": "receiveAndDontDelete",
          "methodAnnotations": [
            "@Test"
          ]
        }
      },
      {
        "type": "STUBBING",
        "code": "when(folder.getPermanentFlags()).thenReturn(new Flags(Flags.Flag.USER));",
        "line": 92,
        "locate": "Test Case",
        "locationContext": {
          "methodName": "receiveAndDontDelete",
          "methodAnnotations": [
            "@Test"
          ]
        }
      }
    ],
    "pattern_id": 1
  },
  {
    "variableName": "folder",
    "variableType": "Folder",
    "mockedClass": "Folder",
    "isReuseableMock": "Fully Localized",
    "mockPattern": "Creation:\n\u2014 Local Mock Creation in Test Case\n\nStubbing:\n\u2014 Test Case\n\nVerification:\n\u2014 None",
    "classContext": {
      "packageName": "org.springframework.integration.mail",
      "filePath": "C:\\java tool\\Spring\\spring-integration\\spring-integration-mail\\src\\test\\java\\org\\springframework\\integration\\mail\\Pop3MailReceiverTests.java",
      "className": "Pop3MailReceiverTests"
    },
    "statements": [
      {
        "type": "DECLARATION",
        "code": "Folder folder = mock(Folder.class);",
        "line": 119,
        "locate": "Test Case",
        "locationContext": {
          "methodName": "receiveAndDontSetDeleteWithUrl",
          "methodAnnotations": [
            "@Test"
          ]
        }
      },
      {
        "type": "STUBBING",
        "code": "when(folder.getPermanentFlags()).thenReturn(new Flags(Flags.Flag.USER));",
        "line": 120,
        "locate": "Test Case",
        "locationContext": {
          "methodName": "receiveAndDontSetDeleteWithUrl",
          "methodAnnotations": [
            "@Test"
          ]
        }
      }
    ],
    "pattern_id": 1
  },
  {
    "variableName": "folder",
    "variableType": "Folder",
    "mockedClass": "Folder",
    "isReuseableMock": "Fully Localized",
    "mockPattern": "Creation:\n\u2014 Local Mock Creation in Test Case\n\nStubbing:\n\u2014 Test Case\n\nVerification:\n\u2014 None",
    "classContext": {
      "packageName": "org.springframework.integration.mail",
      "filePath": "C:\\java tool\\Spring\\spring-integration\\spring-integration-mail\\src\\test\\java\\org\\springframework\\integration\\mail\\Pop3MailReceiverTests.java",
      "className": "Pop3MailReceiverTests"
    },
    "statements": [
      {
        "type": "DECLARATION",
        "code": "Folder folder = mock(Folder.class);",
        "line": 147,
        "locate": "Test Case",
        "locationContext": {
          "methodName": "receiveAndDontSetDeleteWithoutUrl",
          "methodAnnotations": [
            "@Test"
          ]
        }
      },
      {
        "type": "STUBBING",
        "code": "when(folder.getPermanentFlags()).thenReturn(new Flags(Flags.Flag.USER));",
        "line": 148,
        "locate": "Test Case",
        "locationContext": {
          "methodName": "receiveAndDontSetDeleteWithoutUrl",
          "methodAnnotations": [
            "@Test"
          ]
        }
      }
    ],
    "pattern_id": 1
  }
]