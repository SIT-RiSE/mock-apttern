[
  {
    "variableName": "context",
    "variableType": "MessageContext",
    "mockedClass": "MessageContext",
    "isReuseableMock": "Hybrid",
    "mockPattern": "Creation:\n\u2014 Attribute Mock Creation\n\nStubbing:\n\u2014 Test Case\n\nVerification:\n\u2014 None",
    "classContext": {
      "packageName": "org.springframework.integration.ws",
      "filePath": "C:\\java tool\\Spring\\spring-integration\\spring-integration-ws\\src\\test\\java\\org\\springframework\\integration\\ws\\MarshallingWebServiceIntegrationTests.java",
      "className": "MarshallingWebServiceIntegrationTests"
    },
    "statements": [
      {
        "type": "FIELD_MOCK_CREATION",
        "code": "@Mock\r\nprivate MessageContext context;",
        "line": 64,
        "locate": "Attribute",
        "locationContext": {
          "methodName": "[FieldDeclaration]",
          "methodAnnotations": [
            "@Mock"
          ]
        }
      },
      {
        "type": "STUBBING",
        "code": "when(context.getResponse()).thenReturn(response);",
        "line": 91,
        "locate": "Test Case",
        "locationContext": {
          "methodName": "sendString",
          "methodAnnotations": [
            "@Test"
          ]
        }
      },
      {
        "type": "STUBBING",
        "code": "when(context.getRequest()).thenReturn(request);",
        "line": 92,
        "locate": "Test Case",
        "locationContext": {
          "methodName": "sendString",
          "methodAnnotations": [
            "@Test"
          ]
        }
      }
    ],
    "pattern_id": 4
  },
  {
    "variableName": "context",
    "variableType": "MessageContext",
    "mockedClass": "MessageContext",
    "isReuseableMock": "Hybrid",
    "mockPattern": "Creation:\n\u2014 Attribute Mock Creation\n\nStubbing:\n\u2014 Test Case\n\nVerification:\n\u2014 None",
    "classContext": {
      "packageName": "org.springframework.integration.ws",
      "filePath": "C:\\java tool\\Spring\\spring-integration\\spring-integration-ws\\src\\test\\java\\org\\springframework\\integration\\ws\\MarshallingWebServiceIntegrationTests.java",
      "className": "MarshallingWebServiceIntegrationTests"
    },
    "statements": [
      {
        "type": "FIELD_MOCK_CREATION",
        "code": "@Mock\r\nprivate MessageContext context;",
        "line": 64,
        "locate": "Attribute",
        "locationContext": {
          "methodName": "[FieldDeclaration]",
          "methodAnnotations": [
            "@Mock"
          ]
        }
      },
      {
        "type": "STUBBING",
        "code": "when(context.getResponse()).thenReturn(response);",
        "line": 91,
        "locate": "Test Case",
        "locationContext": {
          "methodName": "sendString",
          "methodAnnotations": [
            "@Test"
          ]
        }
      },
      {
        "type": "STUBBING",
        "code": "when(context.getRequest()).thenReturn(request);",
        "line": 92,
        "locate": "Test Case",
        "locationContext": {
          "methodName": "sendString",
          "methodAnnotations": [
            "@Test"
          ]
        }
      }
    ],
    "pattern_id": 4
  },
  {
    "variableName": "context",
    "variableType": "MessageContext",
    "mockedClass": "MessageContext",
    "isReuseableMock": "Hybrid",
    "mockPattern": "Creation:\n\u2014 Attribute Mock Creation\n\nStubbing:\n\u2014 Test Case\n\nVerification:\n\u2014 None",
    "classContext": {
      "packageName": "org.springframework.integration.ws",
      "filePath": "C:\\java tool\\Spring\\spring-integration\\spring-integration-ws\\src\\test\\java\\org\\springframework\\integration\\ws\\MarshallingWebServiceIntegrationTests.java",
      "className": "MarshallingWebServiceIntegrationTests"
    },
    "statements": [
      {
        "type": "FIELD_MOCK_CREATION",
        "code": "@Mock\r\nprivate MessageContext context;",
        "line": 64,
        "locate": "Attribute",
        "locationContext": {
          "methodName": "[FieldDeclaration]",
          "methodAnnotations": [
            "@Mock"
          ]
        }
      },
      {
        "type": "STUBBING",
        "code": "when(context.getResponse()).thenReturn(response);",
        "line": 91,
        "locate": "Test Case",
        "locationContext": {
          "methodName": "sendString",
          "methodAnnotations": [
            "@Test"
          ]
        }
      },
      {
        "type": "STUBBING",
        "code": "when(context.getRequest()).thenReturn(request);",
        "line": 92,
        "locate": "Test Case",
        "locationContext": {
          "methodName": "sendString",
          "methodAnnotations": [
            "@Test"
          ]
        }
      }
    ],
    "pattern_id": 4
  }
]