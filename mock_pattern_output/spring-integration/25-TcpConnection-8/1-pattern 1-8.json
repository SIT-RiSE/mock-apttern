[
  {
    "variableName": "connection",
    "variableType": "TcpConnection",
    "mockedClass": "TcpConnection",
    "isReuseableMock": "Fully Localized",
    "mockPattern": "Creation:\n\u2014 Local Mock Creation in Test Case\n\nStubbing:\n\u2014 Test Case\n\nVerification:\n\u2014 None",
    "classContext": {
      "packageName": "org.springframework.integration.ip.tcp.connection",
      "filePath": "C:\\java tool\\Spring\\spring-integration\\spring-integration-ip\\src\\test\\java\\org\\springframework\\integration\\ip\\tcp\\connection\\TcpMessageMapperTests.java",
      "className": "TcpMessageMapperTests"
    },
    "statements": [
      {
        "type": "DECLARATION",
        "code": "TcpConnection connection = mock(TcpConnection.class);",
        "line": 77,
        "locate": "Test Case",
        "locationContext": {
          "methodName": "testToMessage",
          "methodAnnotations": [
            "@Test"
          ]
        }
      },
      {
        "type": "STUBBING",
        "code": "when(connection.getPayload()).thenReturn(TEST_PAYLOAD.getBytes());",
        "line": 82,
        "locate": "Test Case",
        "locationContext": {
          "methodName": "testToMessage",
          "methodAnnotations": [
            "@Test"
          ]
        }
      },
      {
        "type": "STUBBING",
        "code": "when(connection.getHostName()).thenReturn(\"MyHost\");",
        "line": 83,
        "locate": "Test Case",
        "locationContext": {
          "methodName": "testToMessage",
          "methodAnnotations": [
            "@Test"
          ]
        }
      },
      {
        "type": "STUBBING",
        "code": "when(connection.getHostAddress()).thenReturn(\"1.1.1.1\");",
        "line": 84,
        "locate": "Test Case",
        "locationContext": {
          "methodName": "testToMessage",
          "methodAnnotations": [
            "@Test"
          ]
        }
      },
      {
        "type": "STUBBING",
        "code": "when(connection.getPort()).thenReturn(1234);",
        "line": 85,
        "locate": "Test Case",
        "locationContext": {
          "methodName": "testToMessage",
          "methodAnnotations": [
            "@Test"
          ]
        }
      },
      {
        "type": "STUBBING",
        "code": "when(connection.getSocketInfo()).thenReturn(info);",
        "line": 86,
        "locate": "Test Case",
        "locationContext": {
          "methodName": "testToMessage",
          "methodAnnotations": [
            "@Test"
          ]
        }
      }
    ],
    "pattern_id": 1
  },
  {
    "variableName": "connection",
    "variableType": "TcpConnection",
    "mockedClass": "TcpConnection",
    "isReuseableMock": "Fully Localized",
    "mockPattern": "Creation:\n\u2014 Local Mock Creation in Test Case\n\nStubbing:\n\u2014 Test Case\n\nVerification:\n\u2014 None",
    "classContext": {
      "packageName": "org.springframework.integration.ip.tcp.connection",
      "filePath": "C:\\java tool\\Spring\\spring-integration\\spring-integration-ip\\src\\test\\java\\org\\springframework\\integration\\ip\\tcp\\connection\\TcpMessageMapperTests.java",
      "className": "TcpMessageMapperTests"
    },
    "statements": [
      {
        "type": "DECLARATION",
        "code": "TcpConnection connection = mock(TcpConnection.class);",
        "line": 100,
        "locate": "Test Case",
        "locationContext": {
          "methodName": "testToMessageWithContentType",
          "methodAnnotations": [
            "@Test"
          ]
        }
      },
      {
        "type": "STUBBING",
        "code": "when(connection.getPayload()).thenReturn(TEST_PAYLOAD.getBytes());",
        "line": 105,
        "locate": "Test Case",
        "locationContext": {
          "methodName": "testToMessageWithContentType",
          "methodAnnotations": [
            "@Test"
          ]
        }
      },
      {
        "type": "STUBBING",
        "code": "when(connection.getHostName()).thenReturn(\"MyHost\");",
        "line": 106,
        "locate": "Test Case",
        "locationContext": {
          "methodName": "testToMessageWithContentType",
          "methodAnnotations": [
            "@Test"
          ]
        }
      },
      {
        "type": "STUBBING",
        "code": "when(connection.getHostAddress()).thenReturn(\"1.1.1.1\");",
        "line": 107,
        "locate": "Test Case",
        "locationContext": {
          "methodName": "testToMessageWithContentType",
          "methodAnnotations": [
            "@Test"
          ]
        }
      },
      {
        "type": "STUBBING",
        "code": "when(connection.getPort()).thenReturn(1234);",
        "line": 108,
        "locate": "Test Case",
        "locationContext": {
          "methodName": "testToMessageWithContentType",
          "methodAnnotations": [
            "@Test"
          ]
        }
      },
      {
        "type": "STUBBING",
        "code": "when(connection.getSocketInfo()).thenReturn(info);",
        "line": 109,
        "locate": "Test Case",
        "locationContext": {
          "methodName": "testToMessageWithContentType",
          "methodAnnotations": [
            "@Test"
          ]
        }
      }
    ],
    "pattern_id": 1
  },
  {
    "variableName": "connection",
    "variableType": "TcpConnection",
    "mockedClass": "TcpConnection",
    "isReuseableMock": "Fully Localized",
    "mockPattern": "Creation:\n\u2014 Local Mock Creation in Test Case\n\nStubbing:\n\u2014 Test Case\n\nVerification:\n\u2014 None",
    "classContext": {
      "packageName": "org.springframework.integration.ip.tcp.connection",
      "filePath": "C:\\java tool\\Spring\\spring-integration\\spring-integration-ip\\src\\test\\java\\org\\springframework\\integration\\ip\\tcp\\connection\\TcpMessageMapperTests.java",
      "className": "TcpMessageMapperTests"
    },
    "statements": [
      {
        "type": "DECLARATION",
        "code": "TcpConnection connection = mock(TcpConnection.class);",
        "line": 127,
        "locate": "Test Case",
        "locationContext": {
          "methodName": "testToMessageWithCustomContentType",
          "methodAnnotations": [
            "@Test"
          ]
        }
      },
      {
        "type": "STUBBING",
        "code": "when(connection.getPayload()).thenReturn(TEST_PAYLOAD.getBytes());",
        "line": 132,
        "locate": "Test Case",
        "locationContext": {
          "methodName": "testToMessageWithCustomContentType",
          "methodAnnotations": [
            "@Test"
          ]
        }
      },
      {
        "type": "STUBBING",
        "code": "when(connection.getHostName()).thenReturn(\"MyHost\");",
        "line": 133,
        "locate": "Test Case",
        "locationContext": {
          "methodName": "testToMessageWithCustomContentType",
          "methodAnnotations": [
            "@Test"
          ]
        }
      },
      {
        "type": "STUBBING",
        "code": "when(connection.getHostAddress()).thenReturn(\"1.1.1.1\");",
        "line": 134,
        "locate": "Test Case",
        "locationContext": {
          "methodName": "testToMessageWithCustomContentType",
          "methodAnnotations": [
            "@Test"
          ]
        }
      },
      {
        "type": "STUBBING",
        "code": "when(connection.getPort()).thenReturn(1234);",
        "line": 135,
        "locate": "Test Case",
        "locationContext": {
          "methodName": "testToMessageWithCustomContentType",
          "methodAnnotations": [
            "@Test"
          ]
        }
      },
      {
        "type": "STUBBING",
        "code": "when(connection.getSocketInfo()).thenReturn(info);",
        "line": 136,
        "locate": "Test Case",
        "locationContext": {
          "methodName": "testToMessageWithCustomContentType",
          "methodAnnotations": [
            "@Test"
          ]
        }
      }
    ],
    "pattern_id": 1
  },
  {
    "variableName": "connection",
    "variableType": "TcpConnection",
    "mockedClass": "TcpConnection",
    "isReuseableMock": "Fully Localized",
    "mockPattern": "Creation:\n\u2014 Local Mock Creation in Test Case\n\nStubbing:\n\u2014 Test Case\n\nVerification:\n\u2014 None",
    "classContext": {
      "packageName": "org.springframework.integration.ip.tcp.connection",
      "filePath": "C:\\java tool\\Spring\\spring-integration\\spring-integration-ip\\src\\test\\java\\org\\springframework\\integration\\ip\\tcp\\connection\\TcpMessageMapperTests.java",
      "className": "TcpMessageMapperTests"
    },
    "statements": [
      {
        "type": "DECLARATION",
        "code": "TcpConnection connection = mock(TcpConnection.class);",
        "line": 369,
        "locate": "Test Case",
        "locationContext": {
          "methodName": "testMapMessageConvertingInboundJson",
          "methodAnnotations": [
            "@Test"
          ]
        }
      },
      {
        "type": "STUBBING",
        "code": "when(connection.getPayload()).thenReturn(map);",
        "line": 370,
        "locate": "Test Case",
        "locationContext": {
          "methodName": "testMapMessageConvertingInboundJson",
          "methodAnnotations": [
            "@Test"
          ]
        }
      },
      {
        "type": "STUBBING",
        "code": "when(connection.getHostName()).thenReturn(\"someHost\");",
        "line": 371,
        "locate": "Test Case",
        "locationContext": {
          "methodName": "testMapMessageConvertingInboundJson",
          "methodAnnotations": [
            "@Test"
          ]
        }
      },
      {
        "type": "STUBBING",
        "code": "when(connection.getHostAddress()).thenReturn(\"1.1.1.1\");",
        "line": 372,
        "locate": "Test Case",
        "locationContext": {
          "methodName": "testMapMessageConvertingInboundJson",
          "methodAnnotations": [
            "@Test"
          ]
        }
      },
      {
        "type": "STUBBING",
        "code": "when(connection.getPort()).thenReturn(1234);",
        "line": 373,
        "locate": "Test Case",
        "locationContext": {
          "methodName": "testMapMessageConvertingInboundJson",
          "methodAnnotations": [
            "@Test"
          ]
        }
      },
      {
        "type": "STUBBING",
        "code": "when(connection.getConnectionId()).thenReturn(\"someId\");",
        "line": 374,
        "locate": "Test Case",
        "locationContext": {
          "methodName": "testMapMessageConvertingInboundJson",
          "methodAnnotations": [
            "@Test"
          ]
        }
      }
    ],
    "pattern_id": 1
  },
  {
    "variableName": "connection",
    "variableType": "TcpConnection",
    "mockedClass": "TcpConnection",
    "isReuseableMock": "Fully Localized",
    "mockPattern": "Creation:\n\u2014 Local Mock Creation in Test Case\n\nStubbing:\n\u2014 Test Case\n\nVerification:\n\u2014 None",
    "classContext": {
      "packageName": "org.springframework.integration.ip.tcp.connection",
      "filePath": "C:\\java tool\\Spring\\spring-integration\\spring-integration-ip\\src\\test\\java\\org\\springframework\\integration\\ip\\tcp\\connection\\TcpMessageMapperTests.java",
      "className": "TcpMessageMapperTests"
    },
    "statements": [
      {
        "type": "DECLARATION",
        "code": "TcpConnection connection = mock(TcpConnection.class);",
        "line": 399,
        "locate": "Test Case",
        "locationContext": {
          "methodName": "testMapMessageConvertingBothWaysJava",
          "methodAnnotations": [
            "@Test"
          ]
        }
      },
      {
        "type": "STUBBING",
        "code": "when(connection.getPayload()).thenReturn(map);",
        "line": 400,
        "locate": "Test Case",
        "locationContext": {
          "methodName": "testMapMessageConvertingBothWaysJava",
          "methodAnnotations": [
            "@Test"
          ]
        }
      },
      {
        "type": "STUBBING",
        "code": "when(connection.getHostName()).thenReturn(\"someHost\");",
        "line": 401,
        "locate": "Test Case",
        "locationContext": {
          "methodName": "testMapMessageConvertingBothWaysJava",
          "methodAnnotations": [
            "@Test"
          ]
        }
      },
      {
        "type": "STUBBING",
        "code": "when(connection.getHostAddress()).thenReturn(\"1.1.1.1\");",
        "line": 402,
        "locate": "Test Case",
        "locationContext": {
          "methodName": "testMapMessageConvertingBothWaysJava",
          "methodAnnotations": [
            "@Test"
          ]
        }
      },
      {
        "type": "STUBBING",
        "code": "when(connection.getPort()).thenReturn(1234);",
        "line": 403,
        "locate": "Test Case",
        "locationContext": {
          "methodName": "testMapMessageConvertingBothWaysJava",
          "methodAnnotations": [
            "@Test"
          ]
        }
      },
      {
        "type": "STUBBING",
        "code": "when(connection.getConnectionId()).thenReturn(\"someId\");",
        "line": 404,
        "locate": "Test Case",
        "locationContext": {
          "methodName": "testMapMessageConvertingBothWaysJava",
          "methodAnnotations": [
            "@Test"
          ]
        }
      }
    ],
    "pattern_id": 1
  },
  {
    "variableName": "connection",
    "variableType": "TcpConnection",
    "mockedClass": "TcpConnection",
    "isReuseableMock": "Fully Localized",
    "mockPattern": "Creation:\n\u2014 Local Mock Creation in Test Case\n\nStubbing:\n\u2014 Test Case\n\nVerification:\n\u2014 None",
    "classContext": {
      "packageName": "org.springframework.integration.ip.tcp.connection",
      "filePath": "C:\\java tool\\Spring\\spring-integration\\spring-integration-ip\\src\\test\\java\\org\\springframework\\integration\\ip\\tcp\\connection\\TcpMessageMapperTests.java",
      "className": "TcpMessageMapperTests"
    },
    "statements": [
      {
        "type": "DECLARATION",
        "code": "TcpConnection connection = mock(TcpConnection.class);",
        "line": 423,
        "locate": "Test Case",
        "locationContext": {
          "methodName": "testCodecMessageConvertingBothWaysJava",
          "methodAnnotations": [
            "@Test"
          ]
        }
      },
      {
        "type": "STUBBING",
        "code": "when(connection.getPayload()).thenReturn(bytes);",
        "line": 424,
        "locate": "Test Case",
        "locationContext": {
          "methodName": "testCodecMessageConvertingBothWaysJava",
          "methodAnnotations": [
            "@Test"
          ]
        }
      },
      {
        "type": "STUBBING",
        "code": "when(connection.getHostName()).thenReturn(\"someHost\");",
        "line": 425,
        "locate": "Test Case",
        "locationContext": {
          "methodName": "testCodecMessageConvertingBothWaysJava",
          "methodAnnotations": [
            "@Test"
          ]
        }
      },
      {
        "type": "STUBBING",
        "code": "when(connection.getHostAddress()).thenReturn(\"1.1.1.1\");",
        "line": 426,
        "locate": "Test Case",
        "locationContext": {
          "methodName": "testCodecMessageConvertingBothWaysJava",
          "methodAnnotations": [
            "@Test"
          ]
        }
      },
      {
        "type": "STUBBING",
        "code": "when(connection.getPort()).thenReturn(1234);",
        "line": 427,
        "locate": "Test Case",
        "locationContext": {
          "methodName": "testCodecMessageConvertingBothWaysJava",
          "methodAnnotations": [
            "@Test"
          ]
        }
      },
      {
        "type": "STUBBING",
        "code": "when(connection.getConnectionId()).thenReturn(\"someId\");",
        "line": 428,
        "locate": "Test Case",
        "locationContext": {
          "methodName": "testCodecMessageConvertingBothWaysJava",
          "methodAnnotations": [
            "@Test"
          ]
        }
      }
    ],
    "pattern_id": 1
  },
  {
    "variableName": "connection",
    "variableType": "TcpConnection",
    "mockedClass": "TcpConnection",
    "isReuseableMock": "Fully Localized",
    "mockPattern": "Creation:\n\u2014 Local Mock Creation in Test Case\n\nStubbing:\n\u2014 Test Case\n\nVerification:\n\u2014 None",
    "classContext": {
      "packageName": "org.springframework.integration.ip.tcp.connection",
      "filePath": "C:\\java tool\\Spring\\spring-integration\\spring-integration-ip\\src\\test\\java\\org\\springframework\\integration\\ip\\tcp\\connection\\TcpMessageMapperTests.java",
      "className": "TcpMessageMapperTests"
    },
    "statements": [
      {
        "type": "DECLARATION",
        "code": "TcpConnection connection = mock(TcpConnection.class);",
        "line": 447,
        "locate": "Test Case",
        "locationContext": {
          "methodName": "testWithBytesMapper",
          "methodAnnotations": [
            "@Test"
          ]
        }
      },
      {
        "type": "STUBBING",
        "code": "when(connection.getPayload()).thenReturn(bytes);",
        "line": 448,
        "locate": "Test Case",
        "locationContext": {
          "methodName": "testWithBytesMapper",
          "methodAnnotations": [
            "@Test"
          ]
        }
      },
      {
        "type": "STUBBING",
        "code": "when(connection.getHostName()).thenReturn(\"someHost\");",
        "line": 449,
        "locate": "Test Case",
        "locationContext": {
          "methodName": "testWithBytesMapper",
          "methodAnnotations": [
            "@Test"
          ]
        }
      },
      {
        "type": "STUBBING",
        "code": "when(connection.getHostAddress()).thenReturn(\"1.1.1.1\");",
        "line": 450,
        "locate": "Test Case",
        "locationContext": {
          "methodName": "testWithBytesMapper",
          "methodAnnotations": [
            "@Test"
          ]
        }
      },
      {
        "type": "STUBBING",
        "code": "when(connection.getPort()).thenReturn(1234);",
        "line": 451,
        "locate": "Test Case",
        "locationContext": {
          "methodName": "testWithBytesMapper",
          "methodAnnotations": [
            "@Test"
          ]
        }
      },
      {
        "type": "STUBBING",
        "code": "when(connection.getConnectionId()).thenReturn(\"someId\");",
        "line": 452,
        "locate": "Test Case",
        "locationContext": {
          "methodName": "testWithBytesMapper",
          "methodAnnotations": [
            "@Test"
          ]
        }
      }
    ],
    "pattern_id": 1
  },
  {
    "variableName": "connection",
    "variableType": "TcpConnection",
    "mockedClass": "TcpConnectionSupport",
    "isReuseableMock": "Fully Localized",
    "mockPattern": "Creation:\n\u2014 Local Mock Creation in Test Case\n\nStubbing:\n\u2014 Test Case\n\nVerification:\n\u2014 None",
    "classContext": {
      "packageName": "org.springframework.integration.ip.tcp",
      "filePath": "C:\\java tool\\Spring\\spring-integration\\spring-integration-ip\\src\\test\\java\\org\\springframework\\integration\\ip\\tcp\\TcpOutboundGatewayTests.java",
      "className": "TcpOutboundGatewayTests"
    },
    "statements": [
      {
        "type": "DECLARATION",
        "code": "TcpConnection connection = mock(TcpConnectionSupport.class);",
        "line": 1094,
        "locate": "Test Case",
        "locationContext": {
          "methodName": "semaphoreIsReleasedOnAsyncSendFailure",
          "methodAnnotations": [
            "@Test"
          ]
        }
      },
      {
        "type": "STUBBING",
        "code": "given(connection.getConnectionId()).willReturn(\"testId\");",
        "line": 1096,
        "locate": "Test Case",
        "locationContext": {
          "methodName": "semaphoreIsReleasedOnAsyncSendFailure",
          "methodAnnotations": [
            "@Test"
          ]
        }
      }
    ],
    "pattern_id": 1
  }
]