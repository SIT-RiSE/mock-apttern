[
  {
    "variableName": "consumerFactory",
    "variableType": "ConsumerFactory<String,String>",
    "mockedClass": "ConsumerFactory",
    "isReuseableMock": false,
    "mockPattern": "Creation:\n\u2014 Local Mock Creation in Test Case\n\nStubbing:\n\u2014 Test Case\n\nVerification:\n\u2014 None",
    "classContext": {
      "packageName": "org.springframework.integration.kafka.inbound",
      "filePath": "C:\\java tool\\Spring\\spring-integration\\spring-integration-kafka\\src\\test\\java\\org\\springframework\\integration\\kafka\\inbound\\MessageSourceTests.java",
      "className": "MessageSourceTests"
    },
    "statements": [
      {
        "type": "DECLARATION",
        "code": "ConsumerFactory<String, String> consumerFactory = mock(ConsumerFactory.class);",
        "line": 788,
        "locate": "Test Case",
        "locationContext": {
          "methodName": "testTopicPatternBasedMessageSource",
          "methodAnnotations": [
            "@SuppressWarnings",
            "@Test"
          ]
        }
      },
      {
        "type": "STUBBING",
        "code": "given(consumerFactory.createConsumer(isNull(), anyString(), isNull(), any())).willReturn(consumer);",
        "line": 791,
        "locate": "Test Case",
        "locationContext": {
          "methodName": "testTopicPatternBasedMessageSource",
          "methodAnnotations": [
            "@SuppressWarnings",
            "@Test"
          ]
        }
      }
    ],
    "pattern_id": 1
  }
]