[
  {
    "variableName": "amqpTemplate",
    "variableType": "RabbitTemplate",
    "mockedClass": "RabbitTemplate",
    "isReuseableMock": false,
    "mockPattern": "Creation:\n\u2014 Local Mock Creation in Test Case\n\u2014 Local Assignment in Test Case\n\nStubbing:\n\u2014 None\n\nVerification:\n\u2014 Test Case",
    "classContext": {
      "packageName": "org.springframework.integration.amqp.config",
      "filePath": "C:\\java tool\\Spring\\spring-integration\\spring-integration-amqp\\src\\test\\java\\org\\springframework\\integration\\amqp\\config\\AmqpInboundGatewayParserTests.java",
      "className": "AmqpInboundGatewayParserTests"
    },
    "statements": [
      {
        "type": "DECLARATION",
        "code": "RabbitTemplate amqpTemplate = TestUtils.getPropertyValue(gateway, \"amqpTemplate\", RabbitTemplate.class);",
        "line": 111,
        "locate": "Test Case",
        "locationContext": {
          "methodName": "verifyUsageWithHeaderMapper",
          "methodAnnotations": [
            "@Test"
          ]
        }
      },
      {
        "type": "ASSIGNMENT",
        "code": "amqpTemplate = Mockito.spy(amqpTemplate);",
        "line": 112,
        "locate": "Test Case",
        "locationContext": {
          "methodName": "verifyUsageWithHeaderMapper",
          "methodAnnotations": [
            "@Test"
          ]
        }
      },
      {
        "type": "VERIFICATION",
        "code": "Mockito.verify(amqpTemplate, Mockito.times(1)).send(Mockito.any(String.class), Mockito.any(String.class), Mockito.any(Message.class), isNull());",
        "line": 140,
        "locate": "Test Case",
        "locationContext": {
          "methodName": "verifyUsageWithHeaderMapper",
          "methodAnnotations": [
            "@Test"
          ]
        }
      }
    ],
    "pattern_id": 16
  },
  {
    "variableName": "amqpTemplate",
    "variableType": "RabbitTemplate",
    "mockedClass": "RabbitTemplate",
    "isReuseableMock": false,
    "mockPattern": "Creation:\n\u2014 Local Mock Creation in Test Case\n\u2014 Local Assignment in Test Case\n\nStubbing:\n\u2014 None\n\nVerification:\n\u2014 Test Case",
    "classContext": {
      "packageName": "org.springframework.integration.amqp.config",
      "filePath": "C:\\java tool\\Spring\\spring-integration\\spring-integration-amqp\\src\\test\\java\\org\\springframework\\integration\\amqp\\config\\AmqpOutboundChannelAdapterParserTests.java",
      "className": "AmqpOutboundChannelAdapterParserTests"
    },
    "statements": [
      {
        "type": "DECLARATION",
        "code": "RabbitTemplate amqpTemplate = TestUtils.getPropertyValue(endpoint, \"rabbitTemplate\", RabbitTemplate.class);",
        "line": 128,
        "locate": "Test Case",
        "locationContext": {
          "methodName": "withHeaderMapperCustomHeaders",
          "methodAnnotations": [
            "@Test"
          ]
        }
      },
      {
        "type": "ASSIGNMENT",
        "code": "amqpTemplate = Mockito.spy(amqpTemplate);",
        "line": 129,
        "locate": "Test Case",
        "locationContext": {
          "methodName": "withHeaderMapperCustomHeaders",
          "methodAnnotations": [
            "@Test"
          ]
        }
      },
      {
        "type": "VERIFICATION",
        "code": "Mockito.verify(amqpTemplate, Mockito.times(1)).send(anyString(), isNull(), Mockito.any(org.springframework.amqp.core.Message.class), isNull());",
        "line": 155,
        "locate": "Test Case",
        "locationContext": {
          "methodName": "withHeaderMapperCustomHeaders",
          "methodAnnotations": [
            "@Test"
          ]
        }
      }
    ],
    "pattern_id": 16
  },
  {
    "variableName": "amqpTemplate",
    "variableType": "RabbitTemplate",
    "mockedClass": "RabbitTemplate",
    "isReuseableMock": false,
    "mockPattern": "Creation:\n\u2014 Local Mock Creation in Test Case\n\u2014 Local Assignment in Test Case\n\nStubbing:\n\u2014 None\n\nVerification:\n\u2014 Test Case",
    "classContext": {
      "packageName": "org.springframework.integration.amqp.config",
      "filePath": "C:\\java tool\\Spring\\spring-integration\\spring-integration-amqp\\src\\test\\java\\org\\springframework\\integration\\amqp\\config\\AmqpOutboundChannelAdapterParserTests.java",
      "className": "AmqpOutboundChannelAdapterParserTests"
    },
    "statements": [
      {
        "type": "DECLARATION",
        "code": "RabbitTemplate amqpTemplate = TestUtils.getPropertyValue(endpoint, \"rabbitTemplate\", RabbitTemplate.class);",
        "line": 207,
        "locate": "Test Case",
        "locationContext": {
          "methodName": "amqpOutboundChannelAdapterWithinChain",
          "methodAnnotations": [
            "@SuppressWarnings",
            "@Test"
          ]
        }
      },
      {
        "type": "ASSIGNMENT",
        "code": "amqpTemplate = Mockito.spy(amqpTemplate);",
        "line": 208,
        "locate": "Test Case",
        "locationContext": {
          "methodName": "amqpOutboundChannelAdapterWithinChain",
          "methodAnnotations": [
            "@SuppressWarnings",
            "@Test"
          ]
        }
      },
      {
        "type": "VERIFICATION",
        "code": "Mockito.verify(amqpTemplate, Mockito.times(1)).send(Mockito.any(String.class), isNull(), Mockito.any(org.springframework.amqp.core.Message.class), isNull());",
        "line": 226,
        "locate": "Test Case",
        "locationContext": {
          "methodName": "amqpOutboundChannelAdapterWithinChain",
          "methodAnnotations": [
            "@SuppressWarnings",
            "@Test"
          ]
        }
      }
    ],
    "pattern_id": 16
  },
  {
    "variableName": "amqpTemplate",
    "variableType": "RabbitTemplate",
    "mockedClass": "RabbitTemplate",
    "isReuseableMock": false,
    "mockPattern": "Creation:\n\u2014 Local Mock Creation in Test Case\n\u2014 Local Assignment in Test Case\n\nStubbing:\n\u2014 None\n\nVerification:\n\u2014 Test Case",
    "classContext": {
      "packageName": "org.springframework.integration.amqp.config",
      "filePath": "C:\\java tool\\Spring\\spring-integration\\spring-integration-amqp\\src\\test\\java\\org\\springframework\\integration\\amqp\\config\\AmqpOutboundGatewayParserTests.java",
      "className": "AmqpOutboundGatewayParserTests"
    },
    "statements": [
      {
        "type": "DECLARATION",
        "code": "RabbitTemplate amqpTemplate = TestUtils.getPropertyValue(endpoint, \"rabbitTemplate\", RabbitTemplate.class);",
        "line": 114,
        "locate": "Test Case",
        "locationContext": {
          "methodName": "withHeaderMapperCustomRequestResponse",
          "methodAnnotations": [
            "@Test"
          ]
        }
      },
      {
        "type": "ASSIGNMENT",
        "code": "amqpTemplate = Mockito.spy(amqpTemplate);",
        "line": 115,
        "locate": "Test Case",
        "locationContext": {
          "methodName": "withHeaderMapperCustomRequestResponse",
          "methodAnnotations": [
            "@Test"
          ]
        }
      },
      {
        "type": "VERIFICATION",
        "code": "Mockito.verify(amqpTemplate, Mockito.times(1)).sendAndReceive(Mockito.any(String.class), Mockito.any(String.class), Mockito.any(org.springframework.amqp.core.Message.class), isNull());",
        "line": 141,
        "locate": "Test Case",
        "locationContext": {
          "methodName": "withHeaderMapperCustomRequestResponse",
          "methodAnnotations": [
            "@Test"
          ]
        }
      }
    ],
    "pattern_id": 16
  },
  {
    "variableName": "amqpTemplate",
    "variableType": "RabbitTemplate",
    "mockedClass": "RabbitTemplate",
    "isReuseableMock": false,
    "mockPattern": "Creation:\n\u2014 Local Mock Creation in Test Case\n\u2014 Local Assignment in Test Case\n\nStubbing:\n\u2014 None\n\nVerification:\n\u2014 Test Case",
    "classContext": {
      "packageName": "org.springframework.integration.amqp.config",
      "filePath": "C:\\java tool\\Spring\\spring-integration\\spring-integration-amqp\\src\\test\\java\\org\\springframework\\integration\\amqp\\config\\AmqpOutboundGatewayParserTests.java",
      "className": "AmqpOutboundGatewayParserTests"
    },
    "statements": [
      {
        "type": "DECLARATION",
        "code": "RabbitTemplate amqpTemplate = TestUtils.getPropertyValue(endpoint, \"rabbitTemplate\", RabbitTemplate.class);",
        "line": 177,
        "locate": "Test Case",
        "locationContext": {
          "methodName": "withHeaderMapperCustomAndStandardResponse",
          "methodAnnotations": [
            "@Test"
          ]
        }
      },
      {
        "type": "ASSIGNMENT",
        "code": "amqpTemplate = Mockito.spy(amqpTemplate);",
        "line": 178,
        "locate": "Test Case",
        "locationContext": {
          "methodName": "withHeaderMapperCustomAndStandardResponse",
          "methodAnnotations": [
            "@Test"
          ]
        }
      },
      {
        "type": "VERIFICATION",
        "code": "Mockito.verify(amqpTemplate, Mockito.times(1)).sendAndReceive(Mockito.any(String.class), Mockito.any(String.class), Mockito.any(org.springframework.amqp.core.Message.class), isNull());",
        "line": 202,
        "locate": "Test Case",
        "locationContext": {
          "methodName": "withHeaderMapperCustomAndStandardResponse",
          "methodAnnotations": [
            "@Test"
          ]
        }
      }
    ],
    "pattern_id": 16
  },
  {
    "variableName": "amqpTemplate",
    "variableType": "RabbitTemplate",
    "mockedClass": "RabbitTemplate",
    "isReuseableMock": false,
    "mockPattern": "Creation:\n\u2014 Local Mock Creation in Test Case\n\u2014 Local Assignment in Test Case\n\nStubbing:\n\u2014 None\n\nVerification:\n\u2014 Test Case",
    "classContext": {
      "packageName": "org.springframework.integration.amqp.config",
      "filePath": "C:\\java tool\\Spring\\spring-integration\\spring-integration-amqp\\src\\test\\java\\org\\springframework\\integration\\amqp\\config\\AmqpOutboundGatewayParserTests.java",
      "className": "AmqpOutboundGatewayParserTests"
    },
    "statements": [
      {
        "type": "DECLARATION",
        "code": "RabbitTemplate amqpTemplate = TestUtils.getPropertyValue(endpoint, \"rabbitTemplate\", RabbitTemplate.class);",
        "line": 226,
        "locate": "Test Case",
        "locationContext": {
          "methodName": "withHeaderMapperNothingToMap",
          "methodAnnotations": [
            "@Test"
          ]
        }
      },
      {
        "type": "ASSIGNMENT",
        "code": "amqpTemplate = Mockito.spy(amqpTemplate);",
        "line": 227,
        "locate": "Test Case",
        "locationContext": {
          "methodName": "withHeaderMapperNothingToMap",
          "methodAnnotations": [
            "@Test"
          ]
        }
      },
      {
        "type": "VERIFICATION",
        "code": "Mockito.verify(amqpTemplate, Mockito.times(1)).sendAndReceive(Mockito.any(String.class), Mockito.any(String.class), Mockito.any(org.springframework.amqp.core.Message.class), isNull());",
        "line": 249,
        "locate": "Test Case",
        "locationContext": {
          "methodName": "withHeaderMapperNothingToMap",
          "methodAnnotations": [
            "@Test"
          ]
        }
      }
    ],
    "pattern_id": 16
  },
  {
    "variableName": "amqpTemplate",
    "variableType": "RabbitTemplate",
    "mockedClass": "RabbitTemplate",
    "isReuseableMock": false,
    "mockPattern": "Creation:\n\u2014 Local Mock Creation in Test Case\n\u2014 Local Assignment in Test Case\n\nStubbing:\n\u2014 None\n\nVerification:\n\u2014 Test Case",
    "classContext": {
      "packageName": "org.springframework.integration.amqp.config",
      "filePath": "C:\\java tool\\Spring\\spring-integration\\spring-integration-amqp\\src\\test\\java\\org\\springframework\\integration\\amqp\\config\\AmqpOutboundGatewayParserTests.java",
      "className": "AmqpOutboundGatewayParserTests"
    },
    "statements": [
      {
        "type": "DECLARATION",
        "code": "RabbitTemplate amqpTemplate = TestUtils.getPropertyValue(endpoint, \"rabbitTemplate\", RabbitTemplate.class);",
        "line": 275,
        "locate": "Test Case",
        "locationContext": {
          "methodName": "amqpOutboundGatewayWithinChain",
          "methodAnnotations": [
            "@Test"
          ]
        }
      },
      {
        "type": "ASSIGNMENT",
        "code": "amqpTemplate = Mockito.spy(amqpTemplate);",
        "line": 276,
        "locate": "Test Case",
        "locationContext": {
          "methodName": "amqpOutboundGatewayWithinChain",
          "methodAnnotations": [
            "@Test"
          ]
        }
      },
      {
        "type": "VERIFICATION",
        "code": "Mockito.verify(amqpTemplate, Mockito.times(1)).sendAndReceive(Mockito.any(String.class), Mockito.any(String.class), Mockito.any(org.springframework.amqp.core.Message.class), isNull());",
        "line": 299,
        "locate": "Test Case",
        "locationContext": {
          "methodName": "amqpOutboundGatewayWithinChain",
          "methodAnnotations": [
            "@Test"
          ]
        }
      }
    ],
    "pattern_id": 16
  }
]