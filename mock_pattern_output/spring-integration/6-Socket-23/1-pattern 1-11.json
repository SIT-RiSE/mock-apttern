[
  {
    "variableName": "socket",
    "variableType": "Socket",
    "mockedClass": "Socket",
    "isReuseableMock": "Fully Localized",
    "mockPattern": "Creation:\n\u2014 Local Mock Creation in Test Case\n\nStubbing:\n\u2014 Test Case\n\nVerification:\n\u2014 None",
    "classContext": {
      "packageName": "org.springframework.integration.ip.tcp.connection",
      "filePath": "C:\\java tool\\Spring\\spring-integration\\spring-integration-ip\\src\\test\\java\\org\\springframework\\integration\\ip\\tcp\\connection\\SocketSupportTests.java",
      "className": "SocketSupportTests"
    },
    "statements": [
      {
        "type": "DECLARATION",
        "code": "Socket socket = mock(Socket.class);",
        "line": 76,
        "locate": "Test Case",
        "locationContext": {
          "methodName": "testNetClient",
          "methodAnnotations": [
            "@Test"
          ]
        }
      },
      {
        "type": "STUBBING",
        "code": "when(socket.getInputStream()).thenReturn(is);",
        "line": 79,
        "locate": "Test Case",
        "locationContext": {
          "methodName": "testNetClient",
          "methodAnnotations": [
            "@Test"
          ]
        }
      },
      {
        "type": "STUBBING",
        "code": "when(socket.getInetAddress()).thenReturn(inetAddress);",
        "line": 81,
        "locate": "Test Case",
        "locationContext": {
          "methodName": "testNetClient",
          "methodAnnotations": [
            "@Test"
          ]
        }
      }
    ],
    "pattern_id": 1
  },
  {
    "variableName": "socket",
    "variableType": "Socket",
    "mockedClass": "Socket",
    "isReuseableMock": "Fully Localized",
    "mockPattern": "Creation:\n\u2014 Local Mock Creation in Test Case\n\nStubbing:\n\u2014 Test Case\n\nVerification:\n\u2014 None",
    "classContext": {
      "packageName": "org.springframework.integration.ip.tcp.connection",
      "filePath": "C:\\java tool\\Spring\\spring-integration\\spring-integration-ip\\src\\test\\java\\org\\springframework\\integration\\ip\\tcp\\connection\\SocketSupportTests.java",
      "className": "SocketSupportTests"
    },
    "statements": [
      {
        "type": "DECLARATION",
        "code": "Socket socket = mock(Socket.class);",
        "line": 100,
        "locate": "Test Case",
        "locationContext": {
          "methodName": "testNetClientSocketTimeout",
          "methodAnnotations": [
            "@Test"
          ]
        }
      },
      {
        "type": "STUBBING",
        "code": "when(socket.getInputStream()).thenReturn(is);",
        "line": 103,
        "locate": "Test Case",
        "locationContext": {
          "methodName": "testNetClientSocketTimeout",
          "methodAnnotations": [
            "@Test"
          ]
        }
      },
      {
        "type": "STUBBING",
        "code": "when(socket.getInetAddress()).thenReturn(inetAddress);",
        "line": 105,
        "locate": "Test Case",
        "locationContext": {
          "methodName": "testNetClientSocketTimeout",
          "methodAnnotations": [
            "@Test"
          ]
        }
      }
    ],
    "pattern_id": 1
  },
  {
    "variableName": "socket1",
    "variableType": "Socket",
    "mockedClass": "Socket",
    "isReuseableMock": "Fully Localized",
    "mockPattern": "Creation:\n\u2014 Local Mock Creation in Test Case\n\nStubbing:\n\u2014 Test Case\n\nVerification:\n\u2014 None",
    "classContext": {
      "packageName": "org.springframework.integration.ip.tcp.connection",
      "filePath": "C:\\java tool\\Spring\\spring-integration\\spring-integration-ip\\src\\test\\java\\org\\springframework\\integration\\ip\\tcp\\connection\\SocketSupportTests.java",
      "className": "SocketSupportTests"
    },
    "statements": [
      {
        "type": "DECLARATION",
        "code": "Socket socket1 = mock(Socket.class);",
        "line": 128,
        "locate": "Test Case",
        "locationContext": {
          "methodName": "testNetServer",
          "methodAnnotations": [
            "@Test"
          ]
        }
      },
      {
        "type": "STUBBING",
        "code": "when(socket1.getInputStream()).thenReturn(is);",
        "line": 132,
        "locate": "Test Case",
        "locationContext": {
          "methodName": "testNetServer",
          "methodAnnotations": [
            "@Test"
          ]
        }
      },
      {
        "type": "STUBBING",
        "code": "when(socket1.getInetAddress()).thenReturn(inetAddress);",
        "line": 135,
        "locate": "Test Case",
        "locationContext": {
          "methodName": "testNetServer",
          "methodAnnotations": [
            "@Test"
          ]
        }
      }
    ],
    "pattern_id": 1
  },
  {
    "variableName": "socket",
    "variableType": "Socket",
    "mockedClass": "Socket",
    "isReuseableMock": "Fully Localized",
    "mockPattern": "Creation:\n\u2014 Local Mock Creation in Test Case\n\nStubbing:\n\u2014 Test Case\n\nVerification:\n\u2014 None",
    "classContext": {
      "packageName": "org.springframework.integration.ip.tcp.connection",
      "filePath": "C:\\java tool\\Spring\\spring-integration\\spring-integration-ip\\src\\test\\java\\org\\springframework\\integration\\ip\\tcp\\connection\\SocketSupportTests.java",
      "className": "SocketSupportTests"
    },
    "statements": [
      {
        "type": "DECLARATION",
        "code": "Socket socket = mock(Socket.class);",
        "line": 127,
        "locate": "Test Case",
        "locationContext": {
          "methodName": "testNetServer",
          "methodAnnotations": [
            "@Test"
          ]
        }
      },
      {
        "type": "STUBBING",
        "code": "when(socket.getInputStream()).thenReturn(is);",
        "line": 131,
        "locate": "Test Case",
        "locationContext": {
          "methodName": "testNetServer",
          "methodAnnotations": [
            "@Test"
          ]
        }
      },
      {
        "type": "STUBBING",
        "code": "when(socket.getInetAddress()).thenReturn(inetAddress);",
        "line": 134,
        "locate": "Test Case",
        "locationContext": {
          "methodName": "testNetServer",
          "methodAnnotations": [
            "@Test"
          ]
        }
      }
    ],
    "pattern_id": 1
  },
  {
    "variableName": "socket",
    "variableType": "Socket",
    "mockedClass": "Socket",
    "isReuseableMock": "Fully Localized",
    "mockPattern": "Creation:\n\u2014 Local Mock Creation in Test Case\n\nStubbing:\n\u2014 Test Case\n\nVerification:\n\u2014 None",
    "classContext": {
      "packageName": "org.springframework.integration.ip.tcp.connection",
      "filePath": "C:\\java tool\\Spring\\spring-integration\\spring-integration-ip\\src\\test\\java\\org\\springframework\\integration\\ip\\tcp\\connection\\TcpMessageMapperTests.java",
      "className": "TcpMessageMapperTests"
    },
    "statements": [
      {
        "type": "DECLARATION",
        "code": "Socket socket = mock(Socket.class);",
        "line": 78,
        "locate": "Test Case",
        "locationContext": {
          "methodName": "testToMessage",
          "methodAnnotations": [
            "@Test"
          ]
        }
      },
      {
        "type": "STUBBING",
        "code": "when(socket.getLocalAddress()).thenReturn(local);",
        "line": 81,
        "locate": "Test Case",
        "locationContext": {
          "methodName": "testToMessage",
          "methodAnnotations": [
            "@Test"
          ]
        }
      }
    ],
    "pattern_id": 1
  },
  {
    "variableName": "socket",
    "variableType": "Socket",
    "mockedClass": "Socket",
    "isReuseableMock": "Fully Localized",
    "mockPattern": "Creation:\n\u2014 Local Mock Creation in Test Case\n\nStubbing:\n\u2014 Test Case\n\nVerification:\n\u2014 None",
    "classContext": {
      "packageName": "org.springframework.integration.ip.tcp.connection",
      "filePath": "C:\\java tool\\Spring\\spring-integration\\spring-integration-ip\\src\\test\\java\\org\\springframework\\integration\\ip\\tcp\\connection\\TcpMessageMapperTests.java",
      "className": "TcpMessageMapperTests"
    },
    "statements": [
      {
        "type": "DECLARATION",
        "code": "Socket socket = mock(Socket.class);",
        "line": 101,
        "locate": "Test Case",
        "locationContext": {
          "methodName": "testToMessageWithContentType",
          "methodAnnotations": [
            "@Test"
          ]
        }
      },
      {
        "type": "STUBBING",
        "code": "when(socket.getLocalAddress()).thenReturn(local);",
        "line": 104,
        "locate": "Test Case",
        "locationContext": {
          "methodName": "testToMessageWithContentType",
          "methodAnnotations": [
            "@Test"
          ]
        }
      }
    ],
    "pattern_id": 1
  },
  {
    "variableName": "socket",
    "variableType": "Socket",
    "mockedClass": "Socket",
    "isReuseableMock": "Fully Localized",
    "mockPattern": "Creation:\n\u2014 Local Mock Creation in Test Case\n\nStubbing:\n\u2014 Test Case\n\nVerification:\n\u2014 None",
    "classContext": {
      "packageName": "org.springframework.integration.ip.tcp.connection",
      "filePath": "C:\\java tool\\Spring\\spring-integration\\spring-integration-ip\\src\\test\\java\\org\\springframework\\integration\\ip\\tcp\\connection\\TcpMessageMapperTests.java",
      "className": "TcpMessageMapperTests"
    },
    "statements": [
      {
        "type": "DECLARATION",
        "code": "Socket socket = mock(Socket.class);",
        "line": 128,
        "locate": "Test Case",
        "locationContext": {
          "methodName": "testToMessageWithCustomContentType",
          "methodAnnotations": [
            "@Test"
          ]
        }
      },
      {
        "type": "STUBBING",
        "code": "when(socket.getLocalAddress()).thenReturn(local);",
        "line": 131,
        "locate": "Test Case",
        "locationContext": {
          "methodName": "testToMessageWithCustomContentType",
          "methodAnnotations": [
            "@Test"
          ]
        }
      }
    ],
    "pattern_id": 1
  },
  {
    "variableName": "socket",
    "variableType": "Socket",
    "mockedClass": "Socket",
    "isReuseableMock": "Fully Localized",
    "mockPattern": "Creation:\n\u2014 Local Mock Creation in Test Case\n\nStubbing:\n\u2014 Test Case\n\nVerification:\n\u2014 None",
    "classContext": {
      "packageName": "org.springframework.integration.ip.tcp.connection",
      "filePath": "C:\\java tool\\Spring\\spring-integration\\spring-integration-ip\\src\\test\\java\\org\\springframework\\integration\\ip\\tcp\\connection\\TcpNetConnectionTests.java",
      "className": "TcpNetConnectionTests"
    },
    "statements": [
      {
        "type": "DECLARATION",
        "code": "Socket socket = mock(Socket.class);",
        "line": 68,
        "locate": "Test Case",
        "locationContext": {
          "methodName": "testErrorLog",
          "methodAnnotations": [
            "@Test"
          ]
        }
      },
      {
        "type": "STUBBING",
        "code": "when(socket.getInputStream()).thenReturn(stream);",
        "line": 70,
        "locate": "Test Case",
        "locationContext": {
          "methodName": "testErrorLog",
          "methodAnnotations": [
            "@Test"
          ]
        }
      }
    ],
    "pattern_id": 1
  },
  {
    "variableName": "inSocket",
    "variableType": "Socket",
    "mockedClass": "Socket",
    "isReuseableMock": "Fully Localized",
    "mockPattern": "Creation:\n\u2014 Local Mock Creation in Test Case\n\nStubbing:\n\u2014 Test Case\n\nVerification:\n\u2014 None",
    "classContext": {
      "packageName": "org.springframework.integration.ip.tcp.connection",
      "filePath": "C:\\java tool\\Spring\\spring-integration\\spring-integration-ip\\src\\test\\java\\org\\springframework\\integration\\ip\\tcp\\connection\\TcpNetConnectionTests.java",
      "className": "TcpNetConnectionTests"
    },
    "statements": [
      {
        "type": "DECLARATION",
        "code": "Socket inSocket = mock(Socket.class);",
        "line": 108,
        "locate": "Test Case",
        "locationContext": {
          "methodName": "transferHeaders",
          "methodAnnotations": [
            "@Test"
          ]
        }
      },
      {
        "type": "STUBBING",
        "code": "when(inSocket.getInputStream()).thenReturn(pipe);",
        "line": 110,
        "locate": "Test Case",
        "locationContext": {
          "methodName": "transferHeaders",
          "methodAnnotations": [
            "@Test"
          ]
        }
      }
    ],
    "pattern_id": 1
  },
  {
    "variableName": "outSocket",
    "variableType": "Socket",
    "mockedClass": "Socket",
    "isReuseableMock": "Fully Localized",
    "mockPattern": "Creation:\n\u2014 Local Mock Creation in Test Case\n\nStubbing:\n\u2014 Test Case\n\nVerification:\n\u2014 None",
    "classContext": {
      "packageName": "org.springframework.integration.ip.tcp.connection",
      "filePath": "C:\\java tool\\Spring\\spring-integration\\spring-integration-ip\\src\\test\\java\\org\\springframework\\integration\\ip\\tcp\\connection\\TcpNetConnectionTests.java",
      "className": "TcpNetConnectionTests"
    },
    "statements": [
      {
        "type": "DECLARATION",
        "code": "Socket outSocket = mock(Socket.class);",
        "line": 120,
        "locate": "Test Case",
        "locationContext": {
          "methodName": "transferHeaders",
          "methodAnnotations": [
            "@Test"
          ]
        }
      },
      {
        "type": "STUBBING",
        "code": "when(outSocket.getOutputStream()).thenReturn(baos);",
        "line": 123,
        "locate": "Test Case",
        "locationContext": {
          "methodName": "transferHeaders",
          "methodAnnotations": [
            "@Test"
          ]
        }
      }
    ],
    "pattern_id": 1
  },
  {
    "variableName": "socket",
    "variableType": "Socket",
    "mockedClass": "Socket",
    "isReuseableMock": "Fully Localized",
    "mockPattern": "Creation:\n\u2014 Local Mock Creation in Test Case\n\nStubbing:\n\u2014 Test Case\n\nVerification:\n\u2014 None",
    "classContext": {
      "packageName": "org.springframework.integration.ip.tcp.connection",
      "filePath": "C:\\java tool\\Spring\\spring-integration\\spring-integration-ip\\src\\test\\java\\org\\springframework\\integration\\ip\\tcp\\connection\\TcpNioConnectionTests.java",
      "className": "TcpNioConnectionTests"
    },
    "statements": [
      {
        "type": "DECLARATION",
        "code": "Socket socket = mock(Socket.class);",
        "line": 310,
        "locate": "Test Case",
        "locationContext": {
          "methodName": "testInsufficientThreads",
          "methodAnnotations": [
            "@Test"
          ]
        }
      },
      {
        "type": "STUBBING",
        "code": "when(socket.getReceiveBufferSize()).thenReturn(1024);",
        "line": 317,
        "locate": "Test Case",
        "locationContext": {
          "methodName": "testInsufficientThreads",
          "methodAnnotations": [
            "@Test"
          ]
        }
      }
    ],
    "pattern_id": 1
  }
]