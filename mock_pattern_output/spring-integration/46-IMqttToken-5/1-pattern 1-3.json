[
  {
    "variableName": "token",
    "variableType": "IMqttToken",
    "mockedClass": "IMqttToken",
    "isReuseableMock": "Fully Localized",
    "mockPattern": "Creation:\n\u2014 Local Mock Creation in Test Case\n\nStubbing:\n\u2014 Test Case\n\nVerification:\n\u2014 None",
    "classContext": {
      "packageName": "org.springframework.integration.mqtt",
      "filePath": "C:\\java tool\\Spring\\spring-integration\\spring-integration-mqtt\\src\\test\\java\\org\\springframework\\integration\\mqtt\\MqttAdapterTests.java",
      "className": "MqttAdapterTests"
    },
    "statements": [
      {
        "type": "DECLARATION",
        "code": "IMqttToken token = mock(IMqttToken.class);",
        "line": 281,
        "locate": "Test Case",
        "locationContext": {
          "methodName": "testInboundOptionsApplied",
          "methodAnnotations": [
            "@Test"
          ]
        }
      },
      {
        "type": "STUBBING",
        "code": "given(token.getGrantedQos()).willReturn(new int[] { 2 });",
        "line": 297,
        "locate": "Test Case",
        "locationContext": {
          "methodName": "testInboundOptionsApplied",
          "methodAnnotations": [
            "@Test"
          ]
        }
      }
    ],
    "pattern_id": 1
  },
  {
    "variableName": "token",
    "variableType": "IMqttToken",
    "mockedClass": "IMqttToken",
    "isReuseableMock": "Fully Localized",
    "mockPattern": "Creation:\n\u2014 Local Mock Creation in Test Case\n\nStubbing:\n\u2014 Test Case\n\nVerification:\n\u2014 None",
    "classContext": {
      "packageName": "org.springframework.integration.mqtt",
      "filePath": "C:\\java tool\\Spring\\spring-integration\\spring-integration-mqtt\\src\\test\\java\\org\\springframework\\integration\\mqtt\\MqttAdapterTests.java",
      "className": "MqttAdapterTests"
    },
    "statements": [
      {
        "type": "DECLARATION",
        "code": "IMqttToken token = mock(IMqttToken.class);",
        "line": 440,
        "locate": "Test Case",
        "locationContext": {
          "methodName": "testSubscribeFailure",
          "methodAnnotations": [
            "@Test"
          ]
        }
      },
      {
        "type": "STUBBING",
        "code": "given(token.getGrantedQos()).willReturn(new int[] { 0x80 });",
        "line": 441,
        "locate": "Test Case",
        "locationContext": {
          "methodName": "testSubscribeFailure",
          "methodAnnotations": [
            "@Test"
          ]
        }
      }
    ],
    "pattern_id": 1
  },
  {
    "variableName": "token",
    "variableType": "IMqttToken",
    "mockedClass": "IMqttToken",
    "isReuseableMock": "Fully Localized",
    "mockPattern": "Creation:\n\u2014 Local Mock Creation in Test Case\n\nStubbing:\n\u2014 Test Case\n\nVerification:\n\u2014 None",
    "classContext": {
      "packageName": "org.springframework.integration.mqtt",
      "filePath": "C:\\java tool\\Spring\\spring-integration\\spring-integration-mqtt\\src\\test\\java\\org\\springframework\\integration\\mqtt\\MqttAdapterTests.java",
      "className": "MqttAdapterTests"
    },
    "statements": [
      {
        "type": "DECLARATION",
        "code": "IMqttToken token = mock(IMqttToken.class);",
        "line": 487,
        "locate": "Test Case",
        "locationContext": {
          "methodName": "testDifferentQos",
          "methodAnnotations": [
            "@Test"
          ]
        }
      },
      {
        "type": "STUBBING",
        "code": "given(token.getGrantedQos()).willReturn(new int[] { 2, 0 });",
        "line": 488,
        "locate": "Test Case",
        "locationContext": {
          "methodName": "testDifferentQos",
          "methodAnnotations": [
            "@Test"
          ]
        }
      }
    ],
    "pattern_id": 1
  }
]