[
  {
    "variableName": "mockConnection",
    "variableType": "Connection",
    "mockedClass": "Connection",
    "isReuseableMock": "Fully Localized",
    "mockPattern": "Creation:\n\u2014 Local Mock Creation in Test Case\n\nStubbing:\n\u2014 Test Case\n\nVerification:\n\u2014 None",
    "classContext": {
      "packageName": "org.springframework.integration.amqp.config",
      "filePath": "C:\\java tool\\Spring\\spring-integration\\spring-integration-amqp\\src\\test\\java\\org\\springframework\\integration\\amqp\\config\\AmqpOutboundChannelAdapterParserTests.java",
      "className": "AmqpOutboundChannelAdapterParserTests"
    },
    "statements": [
      {
        "type": "DECLARATION",
        "code": "Connection mockConnection = mock(Connection.class);",
        "line": 247,
        "locate": "Test Case",
        "locationContext": {
          "methodName": "testInt2773UseDefaultAmqpTemplateExchangeAndRoutingLey",
          "methodAnnotations": [
            "@Test"
          ]
        }
      },
      {
        "type": "STUBBING",
        "code": "when(mockConnection.createChannel(false)).thenReturn(publisherCallbackChannel);",
        "line": 253,
        "locate": "Test Case",
        "locationContext": {
          "methodName": "testInt2773UseDefaultAmqpTemplateExchangeAndRoutingLey",
          "methodAnnotations": [
            "@Test"
          ]
        }
      }
    ],
    "pattern_id": 1
  },
  {
    "variableName": "mockConnection",
    "variableType": "Connection",
    "mockedClass": "Connection",
    "isReuseableMock": "Fully Localized",
    "mockPattern": "Creation:\n\u2014 Local Mock Creation in Test Case\n\nStubbing:\n\u2014 Test Case\n\nVerification:\n\u2014 None",
    "classContext": {
      "packageName": "org.springframework.integration.amqp.config",
      "filePath": "C:\\java tool\\Spring\\spring-integration\\spring-integration-amqp\\src\\test\\java\\org\\springframework\\integration\\amqp\\config\\AmqpOutboundChannelAdapterParserTests.java",
      "className": "AmqpOutboundChannelAdapterParserTests"
    },
    "statements": [
      {
        "type": "DECLARATION",
        "code": "Connection mockConnection = mock(Connection.class);",
        "line": 265,
        "locate": "Test Case",
        "locationContext": {
          "methodName": "testInt2773WithDefaultAmqpTemplateExchangeAndRoutingKey",
          "methodAnnotations": [
            "@Test"
          ]
        }
      },
      {
        "type": "STUBBING",
        "code": "when(mockConnection.createChannel(false)).thenReturn(publisherCallbackChannel);",
        "line": 271,
        "locate": "Test Case",
        "locationContext": {
          "methodName": "testInt2773WithDefaultAmqpTemplateExchangeAndRoutingKey",
          "methodAnnotations": [
            "@Test"
          ]
        }
      }
    ],
    "pattern_id": 1
  },
  {
    "variableName": "mockConnection",
    "variableType": "Connection",
    "mockedClass": "Connection",
    "isReuseableMock": "Fully Localized",
    "mockPattern": "Creation:\n\u2014 Local Mock Creation in Test Case\n\nStubbing:\n\u2014 Test Case\n\nVerification:\n\u2014 None",
    "classContext": {
      "packageName": "org.springframework.integration.amqp.config",
      "filePath": "C:\\java tool\\Spring\\spring-integration\\spring-integration-amqp\\src\\test\\java\\org\\springframework\\integration\\amqp\\config\\AmqpOutboundChannelAdapterParserTests.java",
      "className": "AmqpOutboundChannelAdapterParserTests"
    },
    "statements": [
      {
        "type": "DECLARATION",
        "code": "Connection mockConnection = mock(Connection.class);",
        "line": 283,
        "locate": "Test Case",
        "locationContext": {
          "methodName": "testInt2773WithOverrideToDefaultAmqpTemplateExchangeAndRoutingLey",
          "methodAnnotations": [
            "@Test"
          ]
        }
      },
      {
        "type": "STUBBING",
        "code": "when(mockConnection.createChannel(false)).thenReturn(publisherCallbackChannel);",
        "line": 289,
        "locate": "Test Case",
        "locationContext": {
          "methodName": "testInt2773WithOverrideToDefaultAmqpTemplateExchangeAndRoutingLey",
          "methodAnnotations": [
            "@Test"
          ]
        }
      }
    ],
    "pattern_id": 1
  },
  {
    "variableName": "connection",
    "variableType": "Connection",
    "mockedClass": "Connection",
    "isReuseableMock": "Fully Localized",
    "mockPattern": "Creation:\n\u2014 Local Mock Creation in Test Case\n\nStubbing:\n\u2014 Test Case\n\nVerification:\n\u2014 None",
    "classContext": {
      "packageName": "org.springframework.integration.jms",
      "filePath": "C:\\java tool\\Spring\\spring-integration\\spring-integration-jms\\src\\test\\java\\org\\springframework\\integration\\jms\\JmsOutboundGatewayTests.java",
      "className": "JmsOutboundGatewayTests"
    },
    "statements": [
      {
        "type": "DECLARATION",
        "code": "final Connection connection = mock(Connection.class);",
        "line": 102,
        "locate": "Test Case",
        "locationContext": {
          "methodName": "testReplyContainerRecovery",
          "methodAnnotations": [
            "@Test"
          ]
        }
      },
      {
        "type": "STUBBING",
        "code": "when(connection.createSession(false, 1)).thenReturn(session);",
        "line": 114,
        "locate": "Test Case",
        "locationContext": {
          "methodName": "testReplyContainerRecovery",
          "methodAnnotations": [
            "@Test"
          ]
        }
      }
    ],
    "pattern_id": 1
  },
  {
    "variableName": "connection",
    "variableType": "Connection",
    "mockedClass": "Connection",
    "isReuseableMock": "Fully Localized",
    "mockPattern": "Creation:\n\u2014 Local Mock Creation in Test Case\n\nStubbing:\n\u2014 Test Case\n\nVerification:\n\u2014 None",
    "classContext": {
      "packageName": "org.springframework.integration.ws.config",
      "filePath": "C:\\java tool\\Spring\\spring-integration\\spring-integration-ws\\src\\test\\java\\org\\springframework\\integration\\ws\\config\\UriVariableTests.java",
      "className": "UriVariableTests"
    },
    "statements": [
      {
        "type": "DECLARATION",
        "code": "Connection connection = Mockito.mock(Connection.class);",
        "line": 153,
        "locate": "Test Case",
        "locationContext": {
          "methodName": "testInt2720JmsUriVariables",
          "methodAnnotations": [
            "@Test"
          ]
        }
      },
      {
        "type": "STUBBING",
        "code": "Mockito.when(connection.createSession(Mockito.anyBoolean(), Mockito.anyInt())).thenReturn(session);",
        "line": 154,
        "locate": "Test Case",
        "locationContext": {
          "methodName": "testInt2720JmsUriVariables",
          "methodAnnotations": [
            "@Test"
          ]
        }
      }
    ],
    "pattern_id": 1
  }
]